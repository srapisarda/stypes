WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, s_4.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT r_0.x AS X0, s_5.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN b AS b_4 ON s_2.y = b_4.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 8e286bea_f421_4457_8ec7_447aeaece7b0

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, s_4.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT r_0.x AS X0, s_5.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN b AS b_4 ON s_2.y = b_4.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :  :     :  :  :  :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$10])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :     +- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :        :  :  :  :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :        :  :  :  :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$10])
   :        :  :  :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :     +- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 2939.1359665790064, cumulative cost = {3.5612606359572224E7 rows, 1.105561713593124E9 cpu, 4.86735276E8 io, 1.34941633820564E8 network, 9.271941197704911E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 2939.1359665790064, cumulative cost = {3.560966722360565E7 rows, 1.1055146874176586E9 cpu, 4.86735276E8 io, 1.34941633820564E8 network, 9.253130727518806E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 2939.1359665790064, cumulative cost = {3.560672808763907E7 rows, 1.1049973994875407E9 cpu, 4.86735276E8 io, 1.348710945573661E8 network, 9.253130727518806E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 16214.200789632117, cumulative cost = {3.5603788951672494E7 rows, 1.1047379722749066E9 cpu, 4.86735276E8 io, 1.348710945573661E8 network, 9.2343202573327E7 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 14570.620242111163, cumulative cost = {2.661617352552437E7 rows, 8.891522511811488E8 cpu, 3.57347124E8 io, 1.1002459754072925E8 network, 7.032745573003131E7 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 10265.790232687988, cumulative cost = {1.528322980713588E7 rows, 4.6691594409815603E8 cpu, 2.09479788E8 io, 5.68338466658583E7 network, 4.037633808710392E7 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 10265.790232687988, cumulative cost = {1.5272964016903192E7 rows, 4.6691594409815603E8 cpu, 2.09479788E8 io, 5.68338466658583E7 network, 4.037633808710392E7 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 28691.66672948783, cumulative cost = {1.1338384504857022E7 rows, 4.268339974728523E8 cpu, 1.47866748E8 io, 5.3879154076378666E7 network, 2.995088804292739E7 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 28691.66672948783, cumulative cost = {1.1309692838127535E7 rows, 4.2201379746229833E8 cpu, 1.47866748E8 io, 5.319055407487096E7 network, 2.995088804292739E7 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 28691.66672948783, cumulative cost = {1.1281001171398047E7 rows, 4.2155473079462653E8 cpu, 1.47866748E8 io, 5.319055407487096E7 network, 2.811462137224017E7 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 28691.66672948783, cumulative cost = {1.125230950466856E7 rows, 4.165049974502367E8 cpu, 1.47866748E8 io, 5.250195407336325E7 network, 2.811462137224017E7 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 158282.04296468972, cumulative cost = {1.1223617837939072E7 rows, 4.1397248476280165E8 cpu, 1.47866748E8 io, 5.250195407336325E7 network, 2.627835470155295E7 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 114001.24878968974, cumulative cost = {1.0091001833124382E7 rows, 3.59801091647837E8 cpu, 1.35543924E8 io, 4.5416599085363254E7 network, 2.412123332955295E7 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 69720.47553968972, cumulative cost = {9002738.472834691 rows, 3.056757125190473E8 cpu, 1.23221664E8 io, 3.833144256536326E7 network, 2.196437344955295E7 memory}
         :  :     :              :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 25309.91430218972, cumulative cost = {7604858.385070001 rows, 2.4990688535150763E8 cpu, 1.04738604E8 io, 3.1086846647363257E7 network, 1.943551630755295E7 memory}
         :  :     :              :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 17282.864683321044, cumulative cost = {5778897.475026909 rows, 1.866394284119206E8 cpu, 8.0094324E7 io, 2.328079460932528E7 network, 1.451586362840737E7 memory}
         :  :     :              :  :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 9255.781314452364, cumulative cost = {3960948.597102686 rows, 1.2317431792195246E8 cpu, 5.5449924E7 io, 1.54747065712873E7 network, 9595925.349261792 memory}
         :  :     :              :  :  :  :  :  :- Calc(select=[X0, X00 AS X1]): rowcount = 2275.994796622063, cumulative cost = {1795415.0758928033 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :  :     :              :  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2275.994796622063, cumulative cost = {1793139.0810961812 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :  :     :              :  :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :     :              :  :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :     :              :  :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :     :              :  :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :     :              :  :  :  :  :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :  :  :  :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 165.56451835589723, cumulative cost = {355055.38392218563 rows, 917640.6140781399 cpu, 6162492.0 io, 30487.87137748509 network, 138677.72233036565 memory}
         :  :     :              :  :  :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 165.56451835589723, cumulative cost = {354889.81940382975 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :  :     :              :  :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 165.56451835589723, cumulative cost = {354724.25488547387 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :  :     :              :  :  :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {354464.690367118 rows, 874800.1834955486 cpu, 6161928.0 io, 25950.322936943558 network, 136985.72233036565 memory}
         :  :     :              :  :  :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1056.7634557059816, cumulative cost = {353407.926911412 rows, 857891.9682042529 cpu, 6161928.0 io, 25950.322936943558 network, 69352.86116518283 memory}
         :  :     :              :  :  :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {352351.163455706 rows, 671901.6000000001 cpu, 6161928.0 io, 588.0 network, 69352.86116518283 memory}
         :  :     :              :  :  :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5829.8, cumulative cost = {351294.39999999997 rows, 578624.8 cpu, 6161928.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :  :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :  :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 6979.786517830301, cumulative cost = {2156277.7398954304 rows, 6.356282668525477E7 cpu, 3.0804516E7 io, 7998549.080890826 network, 5368986.045802224 memory}
         :  :     :              :  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], isBroadcast=[true], build=[right]): rowcount = 6979.786517830301, cumulative cost = {2149297.9533776003 rows, 6.356282668525477E7 cpu, 3.0804516E7 io, 7998549.080890826 network, 5368986.045802224 memory}
         :  :     :              :  :  :  :  :        :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 8026.910118868678, cumulative cost = {1808607.1668597702 rows, 6.293371240430382E7 cpu, 2.4643716E7 io, 7998525.080890826 network, 4919451.079145579 memory}
         :  :     :              :  :  :  :  :           +- Calc(select=[X0, y0]): rowcount = 8026.910118868678, cumulative cost = {1800580.2567409016 rows, 6.164940678528483E7 cpu, 2.4643716E7 io, 7805879.238037977 network, 4919451.079145579 memory}
         :  :     :              :  :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8026.910118868678, cumulative cost = {1792553.346622033 rows, 6.164940678528483E7 cpu, 2.4643716E7 io, 7805879.238037977 network, 4919451.079145579 memory}
         :  :     :              :  :  :  :  :                 :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :  :     :              :  :  :  :  :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :     :              :  :  :  :  :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :     :              :  :  :  :  :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :     :              :  :  :  :  :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :     :              :  :  :  :  :                 :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :  :  :  :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :  :  :  :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :  :  :  :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :  :  :  :                 :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 8027.083368868678, cumulative cost = {1800666.0132409018 rows, 6.3447827625284836E7 cpu, 2.46444E7 io, 7806088.038037977 network, 4919938.279145579 memory}
         :  :     :              :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8027.083368868678, cumulative cost = {1792638.9298720332 rows, 6.3447827625284836E7 cpu, 2.46444E7 io, 7806088.038037977 network, 4919938.279145579 memory}
         :  :     :              :  :  :  :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :  :     :              :  :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :     :              :  :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :     :              :  :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :     :              :  :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :     :              :  :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :              :  :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        +- Calc(select=[x, y0]): rowcount = 38506.155, cumulative cost = {333796.41000000003 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :  :     :              :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 38506.155, cumulative cost = {295290.255 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :  :     :              :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
         :  :     :              :  :  :  :                 +- Calc(select=[x, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 8027.049618868678, cumulative cost = {1800650.9957409017 rows, 6.324214702528483E7 cpu, 2.464428E7 io, 7806052.038037977 network, 4919652.679145578 memory}
         :  :     :              :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8027.049618868678, cumulative cost = {1792623.946122033 rows, 6.324214702528483E7 cpu, 2.464428E7 io, 7806052.038037977 network, 4919652.679145578 memory}
         :  :     :              :  :  :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :  :     :              :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :     :              :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :     :              :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :     :              :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :     :              :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :              :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        +- Calc(select=[x, y0]): rowcount = 38505.93, cumulative cost = {333781.45999999996 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :  :     :              :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.93, cumulative cost = {295275.52999999997 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :  :     :              :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :  :     :              :  :  :                 +- Calc(select=[x0, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[x AS X0, y00 AS X1]): rowcount = 44410.5612375, cumulative cost = {1328159.612225 rows, 5.5699106692E7 cpu, 1.848306E7 io, 7244595.918 network, 2528857.142 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 44410.5612375, cumulative cost = {1283749.0509875 rows, 5.5699106692E7 cpu, 1.848306E7 io, 7244595.918 network, 2528857.142 memory}
         :  :     :              :  :        :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[hash[x]]): rowcount = 39371.40825, cumulative cost = {725940.48975 rows, 1.0205111425999999E7 cpu, 1.2322284E7 io, 1083819.9179999998 network, 324058.27999999997 memory}
         :  :     :              :  :           +- Calc(select=[x, y0 AS y00]): rowcount = 39371.40825, cumulative cost = {686569.0815 rows, 3590714.84 cpu, 1.2322284E7 io, 138906.11999999997 network, 324058.27999999997 memory}
         :  :     :              :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x1)], select=[x, y, y0, x1], isBroadcast=[true], build=[right]): rowcount = 39371.40825, cumulative cost = {647197.67325 rows, 3590714.84 cpu, 1.2322284E7 io, 138906.11999999997 network, 324058.27999999997 memory}
         :  :     :              :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                 +- Exchange(distribution=[broadcast]): rowcount = 5777.054999999999, cumulative cost = {351127.26499999996 rows, 1490906.4 cpu, 6161508.0 io, 138906.11999999997 network, 543.2 memory}
         :  :     :              :  :                    +- Calc(select=[y0, x0 AS x1]): rowcount = 5777.054999999999, cumulative cost = {345350.20999999996 rows, 566577.6 cpu, 6161508.0 io, 256.79999999999995 network, 543.2 memory}
         :  :     :              :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right]): rowcount = 5777.054999999999, cumulative cost = {339573.15499999997 rows, 566577.6 cpu, 6161508.0 io, 256.79999999999995 network, 543.2 memory}
         :  :     :              :  :                          :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                          :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                          +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
         :  :     :              :  :                             +- Calc(select=[x, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.773250000006, cumulative cost = {974262.1115 rows, 5.401137788E7 cpu, 1.232226E7 io, 7085156.52 network, 2156859.8800000004 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.773250000006, cumulative cost = {929981.33825 rows, 5.401137788E7 cpu, 1.232226E7 io, 7085156.52 network, 2156859.8800000004 memory}
         :  :     :              :        :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 38506.155, cumulative cost = {372302.56500000006 rows, 8524304.64 cpu, 6161484.0 io, 924380.52 network, 515.2 memory}
         :  :     :              :           +- Calc(select=[x, y0]): rowcount = 38506.155, cumulative cost = {333796.41000000003 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 38506.155, cumulative cost = {295290.255 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
         :  :     :              :                    +- Calc(select=[x, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.794175, cumulative cost = {974333.9618500002 rows, 5.4013111072E7 cpu, 1.2322824E7 io, 7085354.988 network, 2157121.3719999995 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.794175, cumulative cost = {930053.1676750001 rows, 5.4013111072E7 cpu, 1.2322824E7 io, 7085354.988 network, 2157121.3719999995 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 38506.294499999996, cumulative cost = {372374.37350000005 rows, 8526036.716 cpu, 6162048.0 io, 924578.988 network, 768.8800000000001 memory}
         :  :     :                       +- Calc(select=[x, y0]): rowcount = 38506.294499999996, cumulative cost = {333868.079 rows, 2056979.24 cpu, 6162048.0 io, 427.91999999999996 network, 768.8800000000001 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 38506.294499999996, cumulative cost = {295361.7845 rows, 2056979.24 cpu, 6162048.0 io, 427.91999999999996 network, 768.8800000000001 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 9.63, cumulative cost = {156.49 rows, 3310.2000000000003 cpu, 1272.0 io, 427.91999999999996 network, 229.59999999999997 memory}
         :  :     :                                +- Calc(select=[x, y]): rowcount = 9.63, cumulative cost = {146.86 rows, 1769.4 cpu, 1272.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :  :     :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 9.63, cumulative cost = {137.23000000000002 rows, 1769.4 cpu, 1272.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :  :     :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :  :     :                                         +- Calc(select=[x0, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                                            +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                                               :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :                                               +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                                  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 39746.934821765426, cumulative cost = {3924313.7218134813 rows, 3.9534437812893756E7 cpu, 6.161304E7 io, 2954692.589479629 network, 8818716.707325213 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 39746.934821765426, cumulative cost = {3884566.786991716 rows, 3.2856952762837164E7 cpu, 6.161304E7 io, 2000766.1537572588 network, 8818716.707325213 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39746.934821765426, cumulative cost = {3844819.8521699505 rows, 3.2856952762837164E7 cpu, 6.161304E7 io, 2000766.1537572588 network, 8818716.707325213 memory}
         :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[broadcast]): rowcount = 8280.565478436212, cumulative cost = {3548373.917348185 rows, 3.0737116239009675E7 cpu, 5.5452264E7 io, 2000766.1537572588 network, 8355005.040532785 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3540093.351869749 rows, 2.941222576245988E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 8355005.040532785 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8280.565478436212, cumulative cost = {3531812.7863913127 rows, 2.9279736714804903E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 7825048.849912867 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3523532.2209128765 rows, 2.782235719060013E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7825048.849912867 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 45681.027637294166, cumulative cost = {3515251.6554344404 rows, 2.7091460748403423E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7295092.659292949 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 7012.904128538202, cumulative cost = {1944748.3374411485 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left]): rowcount = 7012.904128538202, cumulative cost = {1937735.4333126103 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :  :                             :     :- Exchange(distribution=[broadcast]): rowcount = 7199.600389154035, cumulative cost = {1194607.17355252 rows, 1.0019221486973636E7 cpu, 1.8484332E7 io, 706909.821189428 network, 2771516.9324406516 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                             :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :                             :        +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :                             :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                             :           +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
         :  :                             :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
         :  :                             :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
         :  :                             :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
         :  :                             :                       +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
         :  :                             :                          :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                             :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                             :                          +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                             :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 38668.12350875596, cumulative cost = {1524822.2903559976 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38668.12350875596, cumulative cost = {1486154.1668472416 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1088.4900583731053, cumulative cost = {1190787.0433384858 rows, 9108616.637161918 cpu, 1.8485016E7 io, 560927.1732506857 network, 2773568.9324406516 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 1088.4900583731053, cumulative cost = {1189698.5532801126 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1088.4900583731053, cumulative cost = {1188610.0632217394 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                                            :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 4304.8300094231745, cumulative cost = {1.131837309814638E7 rows, 4.222217364627507E8 cpu, 1.47867336E8 io, 5.3190750874870956E7 network, 2.9951117642927393E7 memory}
         :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], build=[right]): rowcount = 4304.8300094231745, cumulative cost = {1.1314068268136958E7 rows, 4.222217364627507E8 cpu, 1.47867336E8 io, 5.3190750874870956E7 network, 2.9951117642927393E7 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 28691.66672948783, cumulative cost = {1.1309692838127535E7 rows, 4.2201379746229833E8 cpu, 1.47866748E8 io, 5.319055407487096E7 network, 2.995088804292739E7 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 28691.66672948783, cumulative cost = {1.1281001171398047E7 rows, 4.2155473079462653E8 cpu, 1.47866748E8 io, 5.319055407487096E7 network, 2.811462137224017E7 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 28691.66672948783, cumulative cost = {1.125230950466856E7 rows, 4.165049974502367E8 cpu, 1.47866748E8 io, 5.250195407336325E7 network, 2.811462137224017E7 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 158282.04296468972, cumulative cost = {1.1223617837939072E7 rows, 4.1397248476280165E8 cpu, 1.47866748E8 io, 5.250195407336325E7 network, 2.627835470155295E7 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 114001.24878968974, cumulative cost = {1.0091001833124382E7 rows, 3.59801091647837E8 cpu, 1.35543924E8 io, 4.5416599085363254E7 network, 2.412123332955295E7 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 69720.47553968972, cumulative cost = {9002738.472834691 rows, 3.056757125190473E8 cpu, 1.23221664E8 io, 3.833144256536326E7 network, 2.196437344955295E7 memory}
         :        :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 25309.91430218972, cumulative cost = {7604858.385070001 rows, 2.4990688535150763E8 cpu, 1.04738604E8 io, 3.1086846647363257E7 network, 1.943551630755295E7 memory}
         :        :           :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 17282.864683321044, cumulative cost = {5778897.475026909 rows, 1.866394284119206E8 cpu, 8.0094324E7 io, 2.328079460932528E7 network, 1.451586362840737E7 memory}
         :        :           :  :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 9255.781314452364, cumulative cost = {3960948.597102686 rows, 1.2317431792195246E8 cpu, 5.5449924E7 io, 1.54747065712873E7 network, 9595925.349261792 memory}
         :        :           :  :  :  :  :  :- Calc(select=[X0, X00 AS X1]): rowcount = 2275.994796622063, cumulative cost = {1795415.0758928033 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :        :           :  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2275.994796622063, cumulative cost = {1793139.0810961812 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :        :           :  :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :           :  :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :           :  :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :           :  :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :           :  :  :  :  :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :  :  :  :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 165.56451835589723, cumulative cost = {355055.38392218563 rows, 917640.6140781399 cpu, 6162492.0 io, 30487.87137748509 network, 138677.72233036565 memory}
         :        :           :  :  :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 165.56451835589723, cumulative cost = {354889.81940382975 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :        :           :  :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 165.56451835589723, cumulative cost = {354724.25488547387 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :        :           :  :  :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {354464.690367118 rows, 874800.1834955486 cpu, 6161928.0 io, 25950.322936943558 network, 136985.72233036565 memory}
         :        :           :  :  :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1056.7634557059816, cumulative cost = {353407.926911412 rows, 857891.9682042529 cpu, 6161928.0 io, 25950.322936943558 network, 69352.86116518283 memory}
         :        :           :  :  :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {352351.163455706 rows, 671901.6000000001 cpu, 6161928.0 io, 588.0 network, 69352.86116518283 memory}
         :        :           :  :  :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5829.8, cumulative cost = {351294.39999999997 rows, 578624.8 cpu, 6161928.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :  :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :  :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :  :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 6979.786517830301, cumulative cost = {2156277.7398954304 rows, 6.356282668525477E7 cpu, 3.0804516E7 io, 7998549.080890826 network, 5368986.045802224 memory}
         :        :           :  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], isBroadcast=[true], build=[right]): rowcount = 6979.786517830301, cumulative cost = {2149297.9533776003 rows, 6.356282668525477E7 cpu, 3.0804516E7 io, 7998549.080890826 network, 5368986.045802224 memory}
         :        :           :  :  :  :  :        :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 8026.910118868678, cumulative cost = {1808607.1668597702 rows, 6.293371240430382E7 cpu, 2.4643716E7 io, 7998525.080890826 network, 4919451.079145579 memory}
         :        :           :  :  :  :  :           +- Calc(select=[X0, y0]): rowcount = 8026.910118868678, cumulative cost = {1800580.2567409016 rows, 6.164940678528483E7 cpu, 2.4643716E7 io, 7805879.238037977 network, 4919451.079145579 memory}
         :        :           :  :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8026.910118868678, cumulative cost = {1792553.346622033 rows, 6.164940678528483E7 cpu, 2.4643716E7 io, 7805879.238037977 network, 4919451.079145579 memory}
         :        :           :  :  :  :  :                 :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :        :           :  :  :  :  :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :           :  :  :  :  :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :           :  :  :  :  :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :           :  :  :  :  :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :           :  :  :  :  :                 :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :  :  :  :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :  :  :  :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :  :  :  :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :  :  :  :                 :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 8027.083368868678, cumulative cost = {1800666.0132409018 rows, 6.3447827625284836E7 cpu, 2.46444E7 io, 7806088.038037977 network, 4919938.279145579 memory}
         :        :           :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8027.083368868678, cumulative cost = {1792638.9298720332 rows, 6.3447827625284836E7 cpu, 2.46444E7 io, 7806088.038037977 network, 4919938.279145579 memory}
         :        :           :  :  :  :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :        :           :  :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :           :  :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :           :  :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :           :  :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :           :  :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :  :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :           :  :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        +- Calc(select=[x, y0]): rowcount = 38506.155, cumulative cost = {333796.41000000003 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :        :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 38506.155, cumulative cost = {295290.255 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :        :           :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
         :        :           :  :  :  :                 +- Calc(select=[x, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 8027.049618868678, cumulative cost = {1800650.9957409017 rows, 6.324214702528483E7 cpu, 2.464428E7 io, 7806052.038037977 network, 4919652.679145578 memory}
         :        :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8027.049618868678, cumulative cost = {1792623.946122033 rows, 6.324214702528483E7 cpu, 2.464428E7 io, 7806052.038037977 network, 4919652.679145578 memory}
         :        :           :  :  :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :        :           :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :           :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :           :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :           :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :           :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :           :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        +- Calc(select=[x, y0]): rowcount = 38505.93, cumulative cost = {333781.45999999996 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :        :           :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.93, cumulative cost = {295275.52999999997 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :        :           :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :        :           :  :  :                 +- Calc(select=[x0, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[x AS X0, y00 AS X1]): rowcount = 44410.5612375, cumulative cost = {1328159.612225 rows, 5.5699106692E7 cpu, 1.848306E7 io, 7244595.918 network, 2528857.142 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 44410.5612375, cumulative cost = {1283749.0509875 rows, 5.5699106692E7 cpu, 1.848306E7 io, 7244595.918 network, 2528857.142 memory}
         :        :           :  :        :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[hash[x]]): rowcount = 39371.40825, cumulative cost = {725940.48975 rows, 1.0205111425999999E7 cpu, 1.2322284E7 io, 1083819.9179999998 network, 324058.27999999997 memory}
         :        :           :  :           +- Calc(select=[x, y0 AS y00]): rowcount = 39371.40825, cumulative cost = {686569.0815 rows, 3590714.84 cpu, 1.2322284E7 io, 138906.11999999997 network, 324058.27999999997 memory}
         :        :           :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x1)], select=[x, y, y0, x1], isBroadcast=[true], build=[right]): rowcount = 39371.40825, cumulative cost = {647197.67325 rows, 3590714.84 cpu, 1.2322284E7 io, 138906.11999999997 network, 324058.27999999997 memory}
         :        :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 5777.054999999999, cumulative cost = {351127.26499999996 rows, 1490906.4 cpu, 6161508.0 io, 138906.11999999997 network, 543.2 memory}
         :        :           :  :                    +- Calc(select=[y0, x0 AS x1]): rowcount = 5777.054999999999, cumulative cost = {345350.20999999996 rows, 566577.6 cpu, 6161508.0 io, 256.79999999999995 network, 543.2 memory}
         :        :           :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right]): rowcount = 5777.054999999999, cumulative cost = {339573.15499999997 rows, 566577.6 cpu, 6161508.0 io, 256.79999999999995 network, 543.2 memory}
         :        :           :  :                          :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                          :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                          :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                          :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                          +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
         :        :           :  :                             +- Calc(select=[x, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.773250000006, cumulative cost = {974262.1115 rows, 5.401137788E7 cpu, 1.232226E7 io, 7085156.52 network, 2156859.8800000004 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.773250000006, cumulative cost = {929981.33825 rows, 5.401137788E7 cpu, 1.232226E7 io, 7085156.52 network, 2156859.8800000004 memory}
         :        :           :        :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 38506.155, cumulative cost = {372302.56500000006 rows, 8524304.64 cpu, 6161484.0 io, 924380.52 network, 515.2 memory}
         :        :           :           +- Calc(select=[x, y0]): rowcount = 38506.155, cumulative cost = {333796.41000000003 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 38506.155, cumulative cost = {295290.255 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
         :        :           :                    +- Calc(select=[x, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :           :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.794175, cumulative cost = {974333.9618500002 rows, 5.4013111072E7 cpu, 1.2322824E7 io, 7085354.988 network, 2157121.3719999995 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.794175, cumulative cost = {930053.1676750001 rows, 5.4013111072E7 cpu, 1.2322824E7 io, 7085354.988 network, 2157121.3719999995 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 38506.294499999996, cumulative cost = {372374.37350000005 rows, 8526036.716 cpu, 6162048.0 io, 924578.988 network, 768.8800000000001 memory}
         :        :                    +- Calc(select=[x, y0]): rowcount = 38506.294499999996, cumulative cost = {333868.079 rows, 2056979.24 cpu, 6162048.0 io, 427.91999999999996 network, 768.8800000000001 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 38506.294499999996, cumulative cost = {295361.7845 rows, 2056979.24 cpu, 6162048.0 io, 427.91999999999996 network, 768.8800000000001 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 9.63, cumulative cost = {156.49 rows, 3310.2000000000003 cpu, 1272.0 io, 427.91999999999996 network, 229.59999999999997 memory}
         :        :                             +- Calc(select=[x, y]): rowcount = 9.63, cumulative cost = {146.86 rows, 1769.4 cpu, 1272.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :        :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 9.63, cumulative cost = {137.23000000000002 rows, 1769.4 cpu, 1272.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :        :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :        :                                      +- Calc(select=[x0, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                         +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                            :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                                            +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 1643.5805475209547, cumulative cost = {8971401.225358495 rows, 2.155695068929681E8 cpu, 1.29388152E8 io, 2.484649701663685E7 network, 2.2015746843295693E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1643.5805475209547, cumulative cost = {8969757.644810975 rows, 2.155695068929681E8 cpu, 1.29388152E8 io, 2.484649701663685E7 network, 2.2015746843295693E7 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9706.568828374266, cumulative cost = {5424154.807928408 rows, 1.8579370140599713E8 cpu, 7.3935204E7 io, 2.3013765198639687E7 network, 1.3588654252744045E7 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9706.568828374266, cumulative cost = {5414448.239100033 rows, 1.8563839630474314E8 cpu, 7.3935204E7 io, 2.3013765198639687E7 network, 1.2967433847728092E7 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9706.568828374266, cumulative cost = {5404741.670271659 rows, 1.8393004019094926E8 cpu, 7.3935204E7 io, 2.2780807546758704E7 network, 1.2967433847728092E7 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 53547.79695504566, cumulative cost = {5395035.101443285 rows, 1.8307327543966854E8 cpu, 7.3935204E7 io, 2.2780807546758704E7 network, 1.234621344271214E7 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 52335.05518721536, cumulative cost = {3538259.6942116767 rows, 1.1949183709647769E8 cpu, 4.9290264E7 io, 1.4973704308720727E7 network, 7423046.363566561 memory}
               :           :  :- Calc(select=[x AS X0, X1]): rowcount = 44284.343487175654, cumulative cost = {1329397.1324974215 rows, 5.493713043960676E7 cpu, 1.8484404E7 io, 7116316.364184562 network, 2306715.2428445946 memory}
               :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 44284.343487175654, cumulative cost = {1285112.7890102458 rows, 5.493713043960676E7 cpu, 1.8484404E7 io, 7116316.364184562 network, 2306715.2428445946 memory}
               :           :  :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :     +- Exchange(distribution=[hash[x]]): rowcount = 38529.95658117102, cumulative cost = {727430.4455230703 rows, 9449866.786957398 cpu, 1.2323628E7 io, 955540.3641845626 network, 149037.67429901776 memory}
               :           :  :        +- Calc(select=[x, X1]): rowcount = 38529.95658117102, cumulative cost = {688900.4889418993 rows, 2976834.081320666 cpu, 1.2323628E7 io, 30821.40623645814 network, 149037.67429901776 memory}
               :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.95658117102, cumulative cost = {650370.5323607282 rows, 2976834.081320666 cpu, 1.2323628E7 io, 30821.40623645814 network, 149037.67429901776 memory}
               :           :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 167.37720780683773, cumulative cost = {355141.5757795572 rows, 921903.063658211 cpu, 6162852.0 io, 30821.40623645814 network, 139664.55066183486 memory}
               :           :  :                 +- Calc(select=[X0, X1]): rowcount = 167.37720780683773, cumulative cost = {354974.19857175037 rows, 895122.710409117 cpu, 6162852.0 io, 26804.353249094034 network, 139664.55066183486 memory}
               :           :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 167.37720780683773, cumulative cost = {354806.8213639435 rows, 895122.710409117 cpu, 6162852.0 io, 26804.353249094034 network, 139664.55066183486 memory}
               :           :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :           :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :           :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :           :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :           :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :                       +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[X0, X10 AS X1]): rowcount = 8050.711700039704, cumulative cost = {2156527.50652704 rows, 6.45023716016837E7 cpu, 3.080586E7 io, 7857387.944536165 network, 5116331.120721966 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left]): rowcount = 8050.711700039704, cumulative cost = {2148476.7948270002 rows, 6.45023716016837E7 cpu, 3.080586E7 io, 7857387.944536165 network, 5116331.120721966 memory}
               :           :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
               :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
               :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
               :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
               :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
               :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :           :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :        +- Calc(select=[x, X1]): rowcount = 38663.67720780684, cumulative cost = {689610.6466237959 rows, 3108554.398736411 cpu, 1.2322944E7 io, 51532.70649818807 network, 196908.0415763876 memory}
               :           :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38663.67720780684, cumulative cost = {650946.969415989 rows, 3108554.398736411 cpu, 1.2322944E7 io, 51532.70649818807 network, 196908.0415763876 memory}
               :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :              +- Exchange(distribution=[broadcast]): rowcount = 1058.8480520455848, cumulative cost = {355584.2922081822 rows, 1046491.614320046 cpu, 6162168.0 io, 51532.70649818807 network, 137612.55066183486 memory}
               :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :           :                             :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :                             :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :                             :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :                             :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :                             :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                             :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :                             :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :                             :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :                             +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, y AS X1]): rowcount = 1212.7417678303016, cumulative cost = {1803227.6102765624 rows, 6.3527890546235785E7 cpu, 2.464494E7 io, 7807103.238037977 network, 4923167.079145579 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[X0, y, x], isBroadcast=[true], build=[right]): rowcount = 1212.7417678303016, cumulative cost = {1802014.8685087322 rows, 6.3527890546235785E7 cpu, 2.464494E7 io, 7807103.238037977 network, 4923167.079145579 memory}
               :                 :- Calc(select=[X0, y]): rowcount = 8027.945118868678, cumulative cost = {1800688.126740902 rows, 6.3454090985284835E7 cpu, 2.4644256E7 io, 7806419.238037977 network, 4921115.079145579 memory}
               :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[left]): rowcount = 8027.945118868678, cumulative cost = {1792660.1816220332 rows, 6.3454090985284835E7 cpu, 2.4644256E7 io, 7806419.238037977 network, 4921115.079145579 memory}
               :                 :     :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
               :                 :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
               :                 :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
               :                 :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
               :                 :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
               :                 :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                 :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                 :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                 :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                 :     :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :     +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :        +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :           +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 1250.6348217654318, cumulative cost = {3543959.2563350457 rows, 2.968814785776984E7 cpu, 5.5452948E7 io, 1832731.8179971601 network, 8357057.040532785 memory}
                  +- Calc(select=[X0, X1]): rowcount = 1250.6348217654318, cumulative cost = {3542708.62151328 rows, 2.948804628628737E7 cpu, 5.5452948E7 io, 1802716.5822747897 network, 8357057.040532785 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1250.6348217654318, cumulative cost = {3541457.9866915145 rows, 2.948804628628737E7 cpu, 5.5452948E7 io, 1802716.5822747897 network, 8357057.040532785 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3540093.351869749 rows, 2.941222576245988E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 8355005.040532785 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8280.565478436212, cumulative cost = {3531812.7863913127 rows, 2.9279736714804903E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 7825048.849912867 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3523532.2209128765 rows, 2.782235719060013E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7825048.849912867 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 45681.027637294166, cumulative cost = {3515251.6554344404 rows, 2.7091460748403423E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7295092.659292949 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 7012.904128538202, cumulative cost = {1944748.3374411485 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left]): rowcount = 7012.904128538202, cumulative cost = {1937735.4333126103 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
                        :           :     :- Exchange(distribution=[broadcast]): rowcount = 7199.600389154035, cumulative cost = {1194607.17355252 rows, 1.0019221486973636E7 cpu, 1.8484332E7 io, 706909.821189428 network, 2771516.9324406516 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
                        :           :        +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
                        :           :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :           +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
                        :           :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
                        :           :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
                        :           :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
                        :           :                       +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
                        :           :                          :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :                          +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 38668.12350875596, cumulative cost = {1524822.2903559976 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38668.12350875596, cumulative cost = {1486154.1668472416 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
                        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 1088.4900583731053, cumulative cost = {1190787.0433384858 rows, 9108616.637161918 cpu, 1.8485016E7 io, 560927.1732506857 network, 2773568.9324406516 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 1088.4900583731053, cumulative cost = {1189698.5532801126 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1088.4900583731053, cumulative cost = {1188610.0632217394 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,2,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#2] Exchange(distribution=[hash[X1]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], build=[right])\n:        :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left])\n:     :- [#1] Exchange(distribution=[broadcast])\n:     +- Calc(select=[y, X1])\n:        +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:           :- [#4] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:           +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#2] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#3] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[broadcast])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[4])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[21])
         :        :           :              :        :           :     :- Reused(reference_id=[1])
         :        :           :              :        :           :     +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :              :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[22])
         :        :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[5])
         :        :           :              :        +- Reused(reference_id=[2])
         :        :           :              :- Reused(reference_id=[3])
         :        :           :              +- Exchange(distribution=[broadcast])(reuse_id=[11])
         :        :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           :- Exchange(distribution=[broadcast])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :           :        :- Reused(reference_id=[4])
         :        :           :        +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :           :           +- Reused(reference_id=[5])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :                 +- Exchange(distribution=[hash[X0, X1]])
         :        :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :                       +- Union(all=[true], union=[X0, X1])
         :        :                          :- Calc(select=[x AS X0, x AS X1])(reuse_id=[17])
         :        :                          :  +- Reused(reference_id=[6])
         :        :                          +- Calc(select=[y0 AS X0, x AS X1])
         :        :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[9])
         :        :                                :- Reused(reference_id=[1])
         :        :                                +- Reused(reference_id=[2])
         :        +- Reused(reference_id=[7])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,0,1,2,1,2,1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :  :- Calc(select=[X0, X00 AS X1])\n:  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :  :  :  :     :- [#11] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :  :  :     +- [#12] Exchange(distribution=[broadcast])\n:  :  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, X0, y00], isBroadcast=[true], build=[right])\n:  :  :  :  :        :- [#13] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  :  :        +- [#14] Exchange(distribution=[broadcast])\n:  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left])\n:  :  :  :        :- [#7] Exchange(distribution=[broadcast])\n:  :  :  :        +- [#10] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left])\n:  :  :        :- [#7] Exchange(distribution=[broadcast])\n:  :  :        +- [#8] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  +- Calc(select=[x AS X0, y00 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])\n:  :        :- [#1] Exchange(distribution=[hash[y]])\n:  :        +- [#6] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[x AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:        :- [#1] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[8])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[x, y])
         :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])
         :              :                 :- Reused(reference_id=[5])
         :              :                 +- Exchange(distribution=[broadcast])(reuse_id=[13])
         :              :                    +- Calc(select=[x0, y])
         :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[20])
         :              :                          :- Reused(reference_id=[6])
         :              :                          +- Reused(reference_id=[2])
         :              :- Reused(reference_id=[8])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0])(reuse_id=[15])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])(reuse_id=[10])
         :              :           +- Calc(select=[x, y])
         :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])
         :              :                 :- Reused(reference_id=[5])
         :              :                 +- Reused(reference_id=[2])
         :              :- Reused(reference_id=[8])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0 AS y00])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x1)], select=[x, y, y0, x1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[y0, x0 AS x1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right])
         :              :                 :- Calc(select=[x, y0])(reuse_id=[12])
         :              :                 :  +- Reused(reference_id=[9])
         :              :                 +- Reused(reference_id=[10])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[14])
         :              :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :              :     +- Exchange(distribution=[hash[X0, X1]])
         :              :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :              :- Reused(reference_id=[1])
         :              :              :- Reused(reference_id=[11])
         :              :              :- Reused(reference_id=[8])
         :              :              +- Exchange(distribution=[hash[x]])
         :              :                 +- Reused(reference_id=[12])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Calc(select=[x, y0])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[13])
         :              :- Reused(reference_id=[14])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[15])
         :              :- Reused(reference_id=[16])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[11])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[12])
         :              :                 :     +- Reused(reference_id=[11])
         :              :                 +- Reused(reference_id=[17])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[12])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, y0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left])
         :                       :- Reused(reference_id=[14])
         :                       +- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                          +- Reused(reference_id=[12])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Reused(reference_id=[18])
         :- Reused(reference_id=[19])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[x, x0])
         :     +- Reused(reference_id=[20])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[0,1,0,1,1,2,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#2] Exchange(distribution=[hash[y]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left])\n:        :- [#4] Exchange(distribution=[broadcast])\n:        +- Calc(select=[x, X1])\n:           +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:              :- [#7] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:              +- [#8] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[X0, y, x], isBroadcast=[true], build=[right])\n      :- Calc(select=[X0, y])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], isBroadcast=[true], build=[left])\n      :     :- [#4] Exchange(distribution=[broadcast])\n      :     +- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#1] Exchange(distribution=[broadcast])\n])
                  :- Reused(reference_id=[7])
                  :- Reused(reference_id=[8])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Calc(select=[X0, X1])
                  :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                  :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[23])
                  :                 :  +- Exchange(distribution=[hash[X0, X1]])
                  :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :                 :        +- Union(all=[true], union=[X0, X1])
                  :                 :           :- Calc(select=[x0 AS X0, y AS X1])
                  :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :                 :           :     :- Calc(select=[y, x0])
                  :                 :           :     :  +- Reused(reference_id=[21])
                  :                 :           :     +- Reused(reference_id=[7])
                  :                 :           +- Reused(reference_id=[22])
                  :                 +- Reused(reference_id=[7])
                  :- Reused(reference_id=[14])
                  :- Reused(reference_id=[14])
                  :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :  +- Calc(select=[x, y])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :        :- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[11])
                  :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :  +- Reused(reference_id=[1])
                  +- Exchange(distribution=[broadcast])
                     +- Reused(reference_id=[23])

Job has been submitted with JobID 967a35c0fe9b17fbf29c16b8e51b3d5b
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, s_4.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT r_0.x AS X0, s_5.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN b AS b_4 ON s_2.y = b_4.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 8ab24b11_3659_49c5_b3b0_a8190e6c581b

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, s_4.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT r_0.x AS X0, s_5.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN b AS b_4 ON s_2.y = b_4.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :  :     :  :  :  :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$10])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :     +- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :        :  :  :  :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :        :  :  :  :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$10])
   :        :  :  :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :     +- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 2939.1359665790064, cumulative cost = {3.5612606359572224E7 rows, 1.105561713593124E9 cpu, 4.86735276E8 io, 1.34941633820564E8 network, 9.271941197704911E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 2939.1359665790064, cumulative cost = {3.560966722360565E7 rows, 1.1055146874176586E9 cpu, 4.86735276E8 io, 1.34941633820564E8 network, 9.253130727518806E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 2939.1359665790064, cumulative cost = {3.560672808763907E7 rows, 1.1049973994875407E9 cpu, 4.86735276E8 io, 1.348710945573661E8 network, 9.253130727518806E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 16214.200789632117, cumulative cost = {3.5603788951672494E7 rows, 1.1047379722749066E9 cpu, 4.86735276E8 io, 1.348710945573661E8 network, 9.2343202573327E7 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 14570.620242111163, cumulative cost = {2.661617352552437E7 rows, 8.891522511811488E8 cpu, 3.57347124E8 io, 1.1002459754072925E8 network, 7.032745573003131E7 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 10265.790232687988, cumulative cost = {1.528322980713588E7 rows, 4.6691594409815603E8 cpu, 2.09479788E8 io, 5.68338466658583E7 network, 4.037633808710392E7 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 10265.790232687988, cumulative cost = {1.5272964016903192E7 rows, 4.6691594409815603E8 cpu, 2.09479788E8 io, 5.68338466658583E7 network, 4.037633808710392E7 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 28691.66672948783, cumulative cost = {1.1338384504857022E7 rows, 4.268339974728523E8 cpu, 1.47866748E8 io, 5.3879154076378666E7 network, 2.995088804292739E7 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 28691.66672948783, cumulative cost = {1.1309692838127535E7 rows, 4.2201379746229833E8 cpu, 1.47866748E8 io, 5.319055407487096E7 network, 2.995088804292739E7 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 28691.66672948783, cumulative cost = {1.1281001171398047E7 rows, 4.2155473079462653E8 cpu, 1.47866748E8 io, 5.319055407487096E7 network, 2.811462137224017E7 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 28691.66672948783, cumulative cost = {1.125230950466856E7 rows, 4.165049974502367E8 cpu, 1.47866748E8 io, 5.250195407336325E7 network, 2.811462137224017E7 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 158282.04296468972, cumulative cost = {1.1223617837939072E7 rows, 4.1397248476280165E8 cpu, 1.47866748E8 io, 5.250195407336325E7 network, 2.627835470155295E7 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 114001.24878968974, cumulative cost = {1.0091001833124382E7 rows, 3.59801091647837E8 cpu, 1.35543924E8 io, 4.5416599085363254E7 network, 2.412123332955295E7 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 69720.47553968972, cumulative cost = {9002738.472834691 rows, 3.056757125190473E8 cpu, 1.23221664E8 io, 3.833144256536326E7 network, 2.196437344955295E7 memory}
         :  :     :              :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 25309.91430218972, cumulative cost = {7604858.385070001 rows, 2.4990688535150763E8 cpu, 1.04738604E8 io, 3.1086846647363257E7 network, 1.943551630755295E7 memory}
         :  :     :              :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 17282.864683321044, cumulative cost = {5778897.475026909 rows, 1.866394284119206E8 cpu, 8.0094324E7 io, 2.328079460932528E7 network, 1.451586362840737E7 memory}
         :  :     :              :  :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 9255.781314452364, cumulative cost = {3960948.597102686 rows, 1.2317431792195246E8 cpu, 5.5449924E7 io, 1.54747065712873E7 network, 9595925.349261792 memory}
         :  :     :              :  :  :  :  :  :- Calc(select=[X0, X00 AS X1]): rowcount = 2275.994796622063, cumulative cost = {1795415.0758928033 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :  :     :              :  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2275.994796622063, cumulative cost = {1793139.0810961812 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :  :     :              :  :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :     :              :  :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :     :              :  :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :     :              :  :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :     :              :  :  :  :  :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :  :  :  :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 165.56451835589723, cumulative cost = {355055.38392218563 rows, 917640.6140781399 cpu, 6162492.0 io, 30487.87137748509 network, 138677.72233036565 memory}
         :  :     :              :  :  :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 165.56451835589723, cumulative cost = {354889.81940382975 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :  :     :              :  :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 165.56451835589723, cumulative cost = {354724.25488547387 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :  :     :              :  :  :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {354464.690367118 rows, 874800.1834955486 cpu, 6161928.0 io, 25950.322936943558 network, 136985.72233036565 memory}
         :  :     :              :  :  :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1056.7634557059816, cumulative cost = {353407.926911412 rows, 857891.9682042529 cpu, 6161928.0 io, 25950.322936943558 network, 69352.86116518283 memory}
         :  :     :              :  :  :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {352351.163455706 rows, 671901.6000000001 cpu, 6161928.0 io, 588.0 network, 69352.86116518283 memory}
         :  :     :              :  :  :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5829.8, cumulative cost = {351294.39999999997 rows, 578624.8 cpu, 6161928.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :  :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :  :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 6979.786517830301, cumulative cost = {2156277.7398954304 rows, 6.356282668525477E7 cpu, 3.0804516E7 io, 7998549.080890826 network, 5368986.045802224 memory}
         :  :     :              :  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], isBroadcast=[true], build=[right]): rowcount = 6979.786517830301, cumulative cost = {2149297.9533776003 rows, 6.356282668525477E7 cpu, 3.0804516E7 io, 7998549.080890826 network, 5368986.045802224 memory}
         :  :     :              :  :  :  :  :        :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 8026.910118868678, cumulative cost = {1808607.1668597702 rows, 6.293371240430382E7 cpu, 2.4643716E7 io, 7998525.080890826 network, 4919451.079145579 memory}
         :  :     :              :  :  :  :  :           +- Calc(select=[X0, y0]): rowcount = 8026.910118868678, cumulative cost = {1800580.2567409016 rows, 6.164940678528483E7 cpu, 2.4643716E7 io, 7805879.238037977 network, 4919451.079145579 memory}
         :  :     :              :  :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8026.910118868678, cumulative cost = {1792553.346622033 rows, 6.164940678528483E7 cpu, 2.4643716E7 io, 7805879.238037977 network, 4919451.079145579 memory}
         :  :     :              :  :  :  :  :                 :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :  :     :              :  :  :  :  :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :     :              :  :  :  :  :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :     :              :  :  :  :  :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :     :              :  :  :  :  :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :     :              :  :  :  :  :                 :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :  :  :  :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :  :  :  :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :  :  :  :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :  :  :  :                 :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 8027.083368868678, cumulative cost = {1800666.0132409018 rows, 6.3447827625284836E7 cpu, 2.46444E7 io, 7806088.038037977 network, 4919938.279145579 memory}
         :  :     :              :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8027.083368868678, cumulative cost = {1792638.9298720332 rows, 6.3447827625284836E7 cpu, 2.46444E7 io, 7806088.038037977 network, 4919938.279145579 memory}
         :  :     :              :  :  :  :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :  :     :              :  :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :     :              :  :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :     :              :  :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :     :              :  :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :     :              :  :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :              :  :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        +- Calc(select=[x, y0]): rowcount = 38506.155, cumulative cost = {333796.41000000003 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :  :     :              :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 38506.155, cumulative cost = {295290.255 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :  :     :              :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
         :  :     :              :  :  :  :                 +- Calc(select=[x, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 8027.049618868678, cumulative cost = {1800650.9957409017 rows, 6.324214702528483E7 cpu, 2.464428E7 io, 7806052.038037977 network, 4919652.679145578 memory}
         :  :     :              :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8027.049618868678, cumulative cost = {1792623.946122033 rows, 6.324214702528483E7 cpu, 2.464428E7 io, 7806052.038037977 network, 4919652.679145578 memory}
         :  :     :              :  :  :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :  :     :              :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :     :              :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :     :              :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :     :              :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :     :              :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :              :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        +- Calc(select=[x, y0]): rowcount = 38505.93, cumulative cost = {333781.45999999996 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :  :     :              :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.93, cumulative cost = {295275.52999999997 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :  :     :              :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :  :     :              :  :  :                 +- Calc(select=[x0, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[x AS X0, y00 AS X1]): rowcount = 44410.5612375, cumulative cost = {1328159.612225 rows, 5.5699106692E7 cpu, 1.848306E7 io, 7244595.918 network, 2528857.142 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 44410.5612375, cumulative cost = {1283749.0509875 rows, 5.5699106692E7 cpu, 1.848306E7 io, 7244595.918 network, 2528857.142 memory}
         :  :     :              :  :        :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[hash[x]]): rowcount = 39371.40825, cumulative cost = {725940.48975 rows, 1.0205111425999999E7 cpu, 1.2322284E7 io, 1083819.9179999998 network, 324058.27999999997 memory}
         :  :     :              :  :           +- Calc(select=[x, y0 AS y00]): rowcount = 39371.40825, cumulative cost = {686569.0815 rows, 3590714.84 cpu, 1.2322284E7 io, 138906.11999999997 network, 324058.27999999997 memory}
         :  :     :              :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x1)], select=[x, y, y0, x1], isBroadcast=[true], build=[right]): rowcount = 39371.40825, cumulative cost = {647197.67325 rows, 3590714.84 cpu, 1.2322284E7 io, 138906.11999999997 network, 324058.27999999997 memory}
         :  :     :              :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                 +- Exchange(distribution=[broadcast]): rowcount = 5777.054999999999, cumulative cost = {351127.26499999996 rows, 1490906.4 cpu, 6161508.0 io, 138906.11999999997 network, 543.2 memory}
         :  :     :              :  :                    +- Calc(select=[y0, x0 AS x1]): rowcount = 5777.054999999999, cumulative cost = {345350.20999999996 rows, 566577.6 cpu, 6161508.0 io, 256.79999999999995 network, 543.2 memory}
         :  :     :              :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right]): rowcount = 5777.054999999999, cumulative cost = {339573.15499999997 rows, 566577.6 cpu, 6161508.0 io, 256.79999999999995 network, 543.2 memory}
         :  :     :              :  :                          :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                          :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                          +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
         :  :     :              :  :                             +- Calc(select=[x, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.773250000006, cumulative cost = {974262.1115 rows, 5.401137788E7 cpu, 1.232226E7 io, 7085156.52 network, 2156859.8800000004 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.773250000006, cumulative cost = {929981.33825 rows, 5.401137788E7 cpu, 1.232226E7 io, 7085156.52 network, 2156859.8800000004 memory}
         :  :     :              :        :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 38506.155, cumulative cost = {372302.56500000006 rows, 8524304.64 cpu, 6161484.0 io, 924380.52 network, 515.2 memory}
         :  :     :              :           +- Calc(select=[x, y0]): rowcount = 38506.155, cumulative cost = {333796.41000000003 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 38506.155, cumulative cost = {295290.255 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
         :  :     :              :                    +- Calc(select=[x, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.794175, cumulative cost = {974333.9618500002 rows, 5.4013111072E7 cpu, 1.2322824E7 io, 7085354.988 network, 2157121.3719999995 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.794175, cumulative cost = {930053.1676750001 rows, 5.4013111072E7 cpu, 1.2322824E7 io, 7085354.988 network, 2157121.3719999995 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 38506.294499999996, cumulative cost = {372374.37350000005 rows, 8526036.716 cpu, 6162048.0 io, 924578.988 network, 768.8800000000001 memory}
         :  :     :                       +- Calc(select=[x, y0]): rowcount = 38506.294499999996, cumulative cost = {333868.079 rows, 2056979.24 cpu, 6162048.0 io, 427.91999999999996 network, 768.8800000000001 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 38506.294499999996, cumulative cost = {295361.7845 rows, 2056979.24 cpu, 6162048.0 io, 427.91999999999996 network, 768.8800000000001 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 9.63, cumulative cost = {156.49 rows, 3310.2000000000003 cpu, 1272.0 io, 427.91999999999996 network, 229.59999999999997 memory}
         :  :     :                                +- Calc(select=[x, y]): rowcount = 9.63, cumulative cost = {146.86 rows, 1769.4 cpu, 1272.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :  :     :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 9.63, cumulative cost = {137.23000000000002 rows, 1769.4 cpu, 1272.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :  :     :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :  :     :                                         +- Calc(select=[x0, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                                            +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                                               :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :                                               +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                                  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 39746.934821765426, cumulative cost = {3924313.7218134813 rows, 3.9534437812893756E7 cpu, 6.161304E7 io, 2954692.589479629 network, 8818716.707325213 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 39746.934821765426, cumulative cost = {3884566.786991716 rows, 3.2856952762837164E7 cpu, 6.161304E7 io, 2000766.1537572588 network, 8818716.707325213 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39746.934821765426, cumulative cost = {3844819.8521699505 rows, 3.2856952762837164E7 cpu, 6.161304E7 io, 2000766.1537572588 network, 8818716.707325213 memory}
         :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[broadcast]): rowcount = 8280.565478436212, cumulative cost = {3548373.917348185 rows, 3.0737116239009675E7 cpu, 5.5452264E7 io, 2000766.1537572588 network, 8355005.040532785 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3540093.351869749 rows, 2.941222576245988E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 8355005.040532785 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8280.565478436212, cumulative cost = {3531812.7863913127 rows, 2.9279736714804903E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 7825048.849912867 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3523532.2209128765 rows, 2.782235719060013E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7825048.849912867 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 45681.027637294166, cumulative cost = {3515251.6554344404 rows, 2.7091460748403423E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7295092.659292949 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 7012.904128538202, cumulative cost = {1944748.3374411485 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left]): rowcount = 7012.904128538202, cumulative cost = {1937735.4333126103 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :  :                             :     :- Exchange(distribution=[broadcast]): rowcount = 7199.600389154035, cumulative cost = {1194607.17355252 rows, 1.0019221486973636E7 cpu, 1.8484332E7 io, 706909.821189428 network, 2771516.9324406516 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                             :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :                             :        +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :                             :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                             :           +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
         :  :                             :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
         :  :                             :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
         :  :                             :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
         :  :                             :                       +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
         :  :                             :                          :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                             :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                             :                          +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                             :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 38668.12350875596, cumulative cost = {1524822.2903559976 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38668.12350875596, cumulative cost = {1486154.1668472416 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1088.4900583731053, cumulative cost = {1190787.0433384858 rows, 9108616.637161918 cpu, 1.8485016E7 io, 560927.1732506857 network, 2773568.9324406516 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 1088.4900583731053, cumulative cost = {1189698.5532801126 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1088.4900583731053, cumulative cost = {1188610.0632217394 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                                            :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 4304.8300094231745, cumulative cost = {1.131837309814638E7 rows, 4.222217364627507E8 cpu, 1.47867336E8 io, 5.3190750874870956E7 network, 2.9951117642927393E7 memory}
         :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], build=[right]): rowcount = 4304.8300094231745, cumulative cost = {1.1314068268136958E7 rows, 4.222217364627507E8 cpu, 1.47867336E8 io, 5.3190750874870956E7 network, 2.9951117642927393E7 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 28691.66672948783, cumulative cost = {1.1309692838127535E7 rows, 4.2201379746229833E8 cpu, 1.47866748E8 io, 5.319055407487096E7 network, 2.995088804292739E7 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 28691.66672948783, cumulative cost = {1.1281001171398047E7 rows, 4.2155473079462653E8 cpu, 1.47866748E8 io, 5.319055407487096E7 network, 2.811462137224017E7 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 28691.66672948783, cumulative cost = {1.125230950466856E7 rows, 4.165049974502367E8 cpu, 1.47866748E8 io, 5.250195407336325E7 network, 2.811462137224017E7 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 158282.04296468972, cumulative cost = {1.1223617837939072E7 rows, 4.1397248476280165E8 cpu, 1.47866748E8 io, 5.250195407336325E7 network, 2.627835470155295E7 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 114001.24878968974, cumulative cost = {1.0091001833124382E7 rows, 3.59801091647837E8 cpu, 1.35543924E8 io, 4.5416599085363254E7 network, 2.412123332955295E7 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 69720.47553968972, cumulative cost = {9002738.472834691 rows, 3.056757125190473E8 cpu, 1.23221664E8 io, 3.833144256536326E7 network, 2.196437344955295E7 memory}
         :        :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 25309.91430218972, cumulative cost = {7604858.385070001 rows, 2.4990688535150763E8 cpu, 1.04738604E8 io, 3.1086846647363257E7 network, 1.943551630755295E7 memory}
         :        :           :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 17282.864683321044, cumulative cost = {5778897.475026909 rows, 1.866394284119206E8 cpu, 8.0094324E7 io, 2.328079460932528E7 network, 1.451586362840737E7 memory}
         :        :           :  :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 9255.781314452364, cumulative cost = {3960948.597102686 rows, 1.2317431792195246E8 cpu, 5.5449924E7 io, 1.54747065712873E7 network, 9595925.349261792 memory}
         :        :           :  :  :  :  :  :- Calc(select=[X0, X00 AS X1]): rowcount = 2275.994796622063, cumulative cost = {1795415.0758928033 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :        :           :  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2275.994796622063, cumulative cost = {1793139.0810961812 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :        :           :  :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :           :  :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :           :  :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :           :  :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :           :  :  :  :  :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :  :  :  :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 165.56451835589723, cumulative cost = {355055.38392218563 rows, 917640.6140781399 cpu, 6162492.0 io, 30487.87137748509 network, 138677.72233036565 memory}
         :        :           :  :  :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 165.56451835589723, cumulative cost = {354889.81940382975 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :        :           :  :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 165.56451835589723, cumulative cost = {354724.25488547387 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :        :           :  :  :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {354464.690367118 rows, 874800.1834955486 cpu, 6161928.0 io, 25950.322936943558 network, 136985.72233036565 memory}
         :        :           :  :  :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1056.7634557059816, cumulative cost = {353407.926911412 rows, 857891.9682042529 cpu, 6161928.0 io, 25950.322936943558 network, 69352.86116518283 memory}
         :        :           :  :  :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {352351.163455706 rows, 671901.6000000001 cpu, 6161928.0 io, 588.0 network, 69352.86116518283 memory}
         :        :           :  :  :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5829.8, cumulative cost = {351294.39999999997 rows, 578624.8 cpu, 6161928.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :  :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :  :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :  :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 6979.786517830301, cumulative cost = {2156277.7398954304 rows, 6.356282668525477E7 cpu, 3.0804516E7 io, 7998549.080890826 network, 5368986.045802224 memory}
         :        :           :  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], isBroadcast=[true], build=[right]): rowcount = 6979.786517830301, cumulative cost = {2149297.9533776003 rows, 6.356282668525477E7 cpu, 3.0804516E7 io, 7998549.080890826 network, 5368986.045802224 memory}
         :        :           :  :  :  :  :        :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 8026.910118868678, cumulative cost = {1808607.1668597702 rows, 6.293371240430382E7 cpu, 2.4643716E7 io, 7998525.080890826 network, 4919451.079145579 memory}
         :        :           :  :  :  :  :           +- Calc(select=[X0, y0]): rowcount = 8026.910118868678, cumulative cost = {1800580.2567409016 rows, 6.164940678528483E7 cpu, 2.4643716E7 io, 7805879.238037977 network, 4919451.079145579 memory}
         :        :           :  :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8026.910118868678, cumulative cost = {1792553.346622033 rows, 6.164940678528483E7 cpu, 2.4643716E7 io, 7805879.238037977 network, 4919451.079145579 memory}
         :        :           :  :  :  :  :                 :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :        :           :  :  :  :  :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :           :  :  :  :  :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :           :  :  :  :  :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :           :  :  :  :  :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :           :  :  :  :  :                 :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :  :  :  :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :  :  :  :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :  :  :  :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :  :  :  :                 :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 8027.083368868678, cumulative cost = {1800666.0132409018 rows, 6.3447827625284836E7 cpu, 2.46444E7 io, 7806088.038037977 network, 4919938.279145579 memory}
         :        :           :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8027.083368868678, cumulative cost = {1792638.9298720332 rows, 6.3447827625284836E7 cpu, 2.46444E7 io, 7806088.038037977 network, 4919938.279145579 memory}
         :        :           :  :  :  :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :        :           :  :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :           :  :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :           :  :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :           :  :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :           :  :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :  :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :           :  :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        +- Calc(select=[x, y0]): rowcount = 38506.155, cumulative cost = {333796.41000000003 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :        :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 38506.155, cumulative cost = {295290.255 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :        :           :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
         :        :           :  :  :  :                 +- Calc(select=[x, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 8027.049618868678, cumulative cost = {1800650.9957409017 rows, 6.324214702528483E7 cpu, 2.464428E7 io, 7806052.038037977 network, 4919652.679145578 memory}
         :        :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8027.049618868678, cumulative cost = {1792623.946122033 rows, 6.324214702528483E7 cpu, 2.464428E7 io, 7806052.038037977 network, 4919652.679145578 memory}
         :        :           :  :  :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :        :           :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :           :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :           :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :           :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :           :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :           :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        +- Calc(select=[x, y0]): rowcount = 38505.93, cumulative cost = {333781.45999999996 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :        :           :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.93, cumulative cost = {295275.52999999997 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :        :           :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :        :           :  :  :                 +- Calc(select=[x0, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[x AS X0, y00 AS X1]): rowcount = 44410.5612375, cumulative cost = {1328159.612225 rows, 5.5699106692E7 cpu, 1.848306E7 io, 7244595.918 network, 2528857.142 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 44410.5612375, cumulative cost = {1283749.0509875 rows, 5.5699106692E7 cpu, 1.848306E7 io, 7244595.918 network, 2528857.142 memory}
         :        :           :  :        :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[hash[x]]): rowcount = 39371.40825, cumulative cost = {725940.48975 rows, 1.0205111425999999E7 cpu, 1.2322284E7 io, 1083819.9179999998 network, 324058.27999999997 memory}
         :        :           :  :           +- Calc(select=[x, y0 AS y00]): rowcount = 39371.40825, cumulative cost = {686569.0815 rows, 3590714.84 cpu, 1.2322284E7 io, 138906.11999999997 network, 324058.27999999997 memory}
         :        :           :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x1)], select=[x, y, y0, x1], isBroadcast=[true], build=[right]): rowcount = 39371.40825, cumulative cost = {647197.67325 rows, 3590714.84 cpu, 1.2322284E7 io, 138906.11999999997 network, 324058.27999999997 memory}
         :        :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 5777.054999999999, cumulative cost = {351127.26499999996 rows, 1490906.4 cpu, 6161508.0 io, 138906.11999999997 network, 543.2 memory}
         :        :           :  :                    +- Calc(select=[y0, x0 AS x1]): rowcount = 5777.054999999999, cumulative cost = {345350.20999999996 rows, 566577.6 cpu, 6161508.0 io, 256.79999999999995 network, 543.2 memory}
         :        :           :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right]): rowcount = 5777.054999999999, cumulative cost = {339573.15499999997 rows, 566577.6 cpu, 6161508.0 io, 256.79999999999995 network, 543.2 memory}
         :        :           :  :                          :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                          :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                          :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                          :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                          +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
         :        :           :  :                             +- Calc(select=[x, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.773250000006, cumulative cost = {974262.1115 rows, 5.401137788E7 cpu, 1.232226E7 io, 7085156.52 network, 2156859.8800000004 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.773250000006, cumulative cost = {929981.33825 rows, 5.401137788E7 cpu, 1.232226E7 io, 7085156.52 network, 2156859.8800000004 memory}
         :        :           :        :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 38506.155, cumulative cost = {372302.56500000006 rows, 8524304.64 cpu, 6161484.0 io, 924380.52 network, 515.2 memory}
         :        :           :           +- Calc(select=[x, y0]): rowcount = 38506.155, cumulative cost = {333796.41000000003 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 38506.155, cumulative cost = {295290.255 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
         :        :           :                    +- Calc(select=[x, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :           :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.794175, cumulative cost = {974333.9618500002 rows, 5.4013111072E7 cpu, 1.2322824E7 io, 7085354.988 network, 2157121.3719999995 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.794175, cumulative cost = {930053.1676750001 rows, 5.4013111072E7 cpu, 1.2322824E7 io, 7085354.988 network, 2157121.3719999995 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 38506.294499999996, cumulative cost = {372374.37350000005 rows, 8526036.716 cpu, 6162048.0 io, 924578.988 network, 768.8800000000001 memory}
         :        :                    +- Calc(select=[x, y0]): rowcount = 38506.294499999996, cumulative cost = {333868.079 rows, 2056979.24 cpu, 6162048.0 io, 427.91999999999996 network, 768.8800000000001 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 38506.294499999996, cumulative cost = {295361.7845 rows, 2056979.24 cpu, 6162048.0 io, 427.91999999999996 network, 768.8800000000001 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 9.63, cumulative cost = {156.49 rows, 3310.2000000000003 cpu, 1272.0 io, 427.91999999999996 network, 229.59999999999997 memory}
         :        :                             +- Calc(select=[x, y]): rowcount = 9.63, cumulative cost = {146.86 rows, 1769.4 cpu, 1272.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :        :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 9.63, cumulative cost = {137.23000000000002 rows, 1769.4 cpu, 1272.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :        :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :        :                                      +- Calc(select=[x0, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                         +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                            :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                                            +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 1643.5805475209547, cumulative cost = {8971401.225358495 rows, 2.155695068929681E8 cpu, 1.29388152E8 io, 2.484649701663685E7 network, 2.2015746843295693E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1643.5805475209547, cumulative cost = {8969757.644810975 rows, 2.155695068929681E8 cpu, 1.29388152E8 io, 2.484649701663685E7 network, 2.2015746843295693E7 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9706.568828374266, cumulative cost = {5424154.807928408 rows, 1.8579370140599713E8 cpu, 7.3935204E7 io, 2.3013765198639687E7 network, 1.3588654252744045E7 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9706.568828374266, cumulative cost = {5414448.239100033 rows, 1.8563839630474314E8 cpu, 7.3935204E7 io, 2.3013765198639687E7 network, 1.2967433847728092E7 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9706.568828374266, cumulative cost = {5404741.670271659 rows, 1.8393004019094926E8 cpu, 7.3935204E7 io, 2.2780807546758704E7 network, 1.2967433847728092E7 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 53547.79695504566, cumulative cost = {5395035.101443285 rows, 1.8307327543966854E8 cpu, 7.3935204E7 io, 2.2780807546758704E7 network, 1.234621344271214E7 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 52335.05518721536, cumulative cost = {3538259.6942116767 rows, 1.1949183709647769E8 cpu, 4.9290264E7 io, 1.4973704308720727E7 network, 7423046.363566561 memory}
               :           :  :- Calc(select=[x AS X0, X1]): rowcount = 44284.343487175654, cumulative cost = {1329397.1324974215 rows, 5.493713043960676E7 cpu, 1.8484404E7 io, 7116316.364184562 network, 2306715.2428445946 memory}
               :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 44284.343487175654, cumulative cost = {1285112.7890102458 rows, 5.493713043960676E7 cpu, 1.8484404E7 io, 7116316.364184562 network, 2306715.2428445946 memory}
               :           :  :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :     +- Exchange(distribution=[hash[x]]): rowcount = 38529.95658117102, cumulative cost = {727430.4455230703 rows, 9449866.786957398 cpu, 1.2323628E7 io, 955540.3641845626 network, 149037.67429901776 memory}
               :           :  :        +- Calc(select=[x, X1]): rowcount = 38529.95658117102, cumulative cost = {688900.4889418993 rows, 2976834.081320666 cpu, 1.2323628E7 io, 30821.40623645814 network, 149037.67429901776 memory}
               :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.95658117102, cumulative cost = {650370.5323607282 rows, 2976834.081320666 cpu, 1.2323628E7 io, 30821.40623645814 network, 149037.67429901776 memory}
               :           :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 167.37720780683773, cumulative cost = {355141.5757795572 rows, 921903.063658211 cpu, 6162852.0 io, 30821.40623645814 network, 139664.55066183486 memory}
               :           :  :                 +- Calc(select=[X0, X1]): rowcount = 167.37720780683773, cumulative cost = {354974.19857175037 rows, 895122.710409117 cpu, 6162852.0 io, 26804.353249094034 network, 139664.55066183486 memory}
               :           :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 167.37720780683773, cumulative cost = {354806.8213639435 rows, 895122.710409117 cpu, 6162852.0 io, 26804.353249094034 network, 139664.55066183486 memory}
               :           :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :           :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :           :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :           :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :           :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :                       +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[X0, X10 AS X1]): rowcount = 8050.711700039704, cumulative cost = {2156527.50652704 rows, 6.45023716016837E7 cpu, 3.080586E7 io, 7857387.944536165 network, 5116331.120721966 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left]): rowcount = 8050.711700039704, cumulative cost = {2148476.7948270002 rows, 6.45023716016837E7 cpu, 3.080586E7 io, 7857387.944536165 network, 5116331.120721966 memory}
               :           :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
               :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
               :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
               :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
               :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
               :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :           :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :        +- Calc(select=[x, X1]): rowcount = 38663.67720780684, cumulative cost = {689610.6466237959 rows, 3108554.398736411 cpu, 1.2322944E7 io, 51532.70649818807 network, 196908.0415763876 memory}
               :           :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38663.67720780684, cumulative cost = {650946.969415989 rows, 3108554.398736411 cpu, 1.2322944E7 io, 51532.70649818807 network, 196908.0415763876 memory}
               :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :              +- Exchange(distribution=[broadcast]): rowcount = 1058.8480520455848, cumulative cost = {355584.2922081822 rows, 1046491.614320046 cpu, 6162168.0 io, 51532.70649818807 network, 137612.55066183486 memory}
               :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :           :                             :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :                             :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :                             :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :                             :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :                             :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                             :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :                             :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :                             :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :                             +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, y AS X1]): rowcount = 1212.7417678303016, cumulative cost = {1803227.6102765624 rows, 6.3527890546235785E7 cpu, 2.464494E7 io, 7807103.238037977 network, 4923167.079145579 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[X0, y, x], isBroadcast=[true], build=[right]): rowcount = 1212.7417678303016, cumulative cost = {1802014.8685087322 rows, 6.3527890546235785E7 cpu, 2.464494E7 io, 7807103.238037977 network, 4923167.079145579 memory}
               :                 :- Calc(select=[X0, y]): rowcount = 8027.945118868678, cumulative cost = {1800688.126740902 rows, 6.3454090985284835E7 cpu, 2.4644256E7 io, 7806419.238037977 network, 4921115.079145579 memory}
               :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[left]): rowcount = 8027.945118868678, cumulative cost = {1792660.1816220332 rows, 6.3454090985284835E7 cpu, 2.4644256E7 io, 7806419.238037977 network, 4921115.079145579 memory}
               :                 :     :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
               :                 :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
               :                 :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
               :                 :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
               :                 :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
               :                 :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                 :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                 :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                 :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                 :     :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :     +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :        +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :           +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 1250.6348217654318, cumulative cost = {3543959.2563350457 rows, 2.968814785776984E7 cpu, 5.5452948E7 io, 1832731.8179971601 network, 8357057.040532785 memory}
                  +- Calc(select=[X0, X1]): rowcount = 1250.6348217654318, cumulative cost = {3542708.62151328 rows, 2.948804628628737E7 cpu, 5.5452948E7 io, 1802716.5822747897 network, 8357057.040532785 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1250.6348217654318, cumulative cost = {3541457.9866915145 rows, 2.948804628628737E7 cpu, 5.5452948E7 io, 1802716.5822747897 network, 8357057.040532785 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3540093.351869749 rows, 2.941222576245988E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 8355005.040532785 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8280.565478436212, cumulative cost = {3531812.7863913127 rows, 2.9279736714804903E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 7825048.849912867 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3523532.2209128765 rows, 2.782235719060013E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7825048.849912867 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 45681.027637294166, cumulative cost = {3515251.6554344404 rows, 2.7091460748403423E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7295092.659292949 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 7012.904128538202, cumulative cost = {1944748.3374411485 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left]): rowcount = 7012.904128538202, cumulative cost = {1937735.4333126103 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
                        :           :     :- Exchange(distribution=[broadcast]): rowcount = 7199.600389154035, cumulative cost = {1194607.17355252 rows, 1.0019221486973636E7 cpu, 1.8484332E7 io, 706909.821189428 network, 2771516.9324406516 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
                        :           :        +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
                        :           :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :           +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
                        :           :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
                        :           :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
                        :           :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
                        :           :                       +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
                        :           :                          :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :                          +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 38668.12350875596, cumulative cost = {1524822.2903559976 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38668.12350875596, cumulative cost = {1486154.1668472416 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
                        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 1088.4900583731053, cumulative cost = {1190787.0433384858 rows, 9108616.637161918 cpu, 1.8485016E7 io, 560927.1732506857 network, 2773568.9324406516 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 1088.4900583731053, cumulative cost = {1189698.5532801126 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1088.4900583731053, cumulative cost = {1188610.0632217394 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,2,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#2] Exchange(distribution=[hash[X1]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], build=[right])\n:        :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left])\n:     :- [#1] Exchange(distribution=[broadcast])\n:     +- Calc(select=[y, X1])\n:        +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:           :- [#4] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:           +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#2] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#3] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[broadcast])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[4])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[21])
         :        :           :              :        :           :     :- Reused(reference_id=[1])
         :        :           :              :        :           :     +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :              :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[22])
         :        :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[5])
         :        :           :              :        +- Reused(reference_id=[2])
         :        :           :              :- Reused(reference_id=[3])
         :        :           :              +- Exchange(distribution=[broadcast])(reuse_id=[11])
         :        :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           :- Exchange(distribution=[broadcast])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :           :        :- Reused(reference_id=[4])
         :        :           :        +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :           :           +- Reused(reference_id=[5])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :                 +- Exchange(distribution=[hash[X0, X1]])
         :        :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :                       +- Union(all=[true], union=[X0, X1])
         :        :                          :- Calc(select=[x AS X0, x AS X1])(reuse_id=[17])
         :        :                          :  +- Reused(reference_id=[6])
         :        :                          +- Calc(select=[y0 AS X0, x AS X1])
         :        :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[9])
         :        :                                :- Reused(reference_id=[1])
         :        :                                +- Reused(reference_id=[2])
         :        +- Reused(reference_id=[7])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,0,1,2,1,2,1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :  :- Calc(select=[X0, X00 AS X1])\n:  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :  :  :  :     :- [#11] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :  :  :     +- [#12] Exchange(distribution=[broadcast])\n:  :  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, X0, y00], isBroadcast=[true], build=[right])\n:  :  :  :  :        :- [#13] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  :  :        +- [#14] Exchange(distribution=[broadcast])\n:  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left])\n:  :  :  :        :- [#7] Exchange(distribution=[broadcast])\n:  :  :  :        +- [#10] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left])\n:  :  :        :- [#7] Exchange(distribution=[broadcast])\n:  :  :        +- [#8] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  +- Calc(select=[x AS X0, y00 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])\n:  :        :- [#1] Exchange(distribution=[hash[y]])\n:  :        +- [#6] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[x AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:        :- [#1] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[8])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[x, y])
         :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])
         :              :                 :- Reused(reference_id=[5])
         :              :                 +- Exchange(distribution=[broadcast])(reuse_id=[13])
         :              :                    +- Calc(select=[x0, y])
         :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[20])
         :              :                          :- Reused(reference_id=[6])
         :              :                          +- Reused(reference_id=[2])
         :              :- Reused(reference_id=[8])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0])(reuse_id=[15])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])(reuse_id=[10])
         :              :           +- Calc(select=[x, y])
         :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])
         :              :                 :- Reused(reference_id=[5])
         :              :                 +- Reused(reference_id=[2])
         :              :- Reused(reference_id=[8])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0 AS y00])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x1)], select=[x, y, y0, x1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[y0, x0 AS x1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right])
         :              :                 :- Calc(select=[x, y0])(reuse_id=[12])
         :              :                 :  +- Reused(reference_id=[9])
         :              :                 +- Reused(reference_id=[10])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[14])
         :              :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :              :     +- Exchange(distribution=[hash[X0, X1]])
         :              :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :              :- Reused(reference_id=[1])
         :              :              :- Reused(reference_id=[11])
         :              :              :- Reused(reference_id=[8])
         :              :              +- Exchange(distribution=[hash[x]])
         :              :                 +- Reused(reference_id=[12])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Calc(select=[x, y0])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[13])
         :              :- Reused(reference_id=[14])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[15])
         :              :- Reused(reference_id=[16])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[11])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[12])
         :              :                 :     +- Reused(reference_id=[11])
         :              :                 +- Reused(reference_id=[17])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[12])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, y0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left])
         :                       :- Reused(reference_id=[14])
         :                       +- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                          +- Reused(reference_id=[12])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Reused(reference_id=[18])
         :- Reused(reference_id=[19])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[x, x0])
         :     +- Reused(reference_id=[20])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[0,1,0,1,1,2,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#2] Exchange(distribution=[hash[y]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left])\n:        :- [#4] Exchange(distribution=[broadcast])\n:        +- Calc(select=[x, X1])\n:           +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:              :- [#7] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:              +- [#8] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[X0, y, x], isBroadcast=[true], build=[right])\n      :- Calc(select=[X0, y])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], isBroadcast=[true], build=[left])\n      :     :- [#4] Exchange(distribution=[broadcast])\n      :     +- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#1] Exchange(distribution=[broadcast])\n])
                  :- Reused(reference_id=[7])
                  :- Reused(reference_id=[8])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Calc(select=[X0, X1])
                  :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                  :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[23])
                  :                 :  +- Exchange(distribution=[hash[X0, X1]])
                  :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :                 :        +- Union(all=[true], union=[X0, X1])
                  :                 :           :- Calc(select=[x0 AS X0, y AS X1])
                  :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :                 :           :     :- Calc(select=[y, x0])
                  :                 :           :     :  +- Reused(reference_id=[21])
                  :                 :           :     +- Reused(reference_id=[7])
                  :                 :           +- Reused(reference_id=[22])
                  :                 +- Reused(reference_id=[7])
                  :- Reused(reference_id=[14])
                  :- Reused(reference_id=[14])
                  :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :  +- Calc(select=[x, y])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :        :- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[11])
                  :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :  +- Reused(reference_id=[1])
                  +- Exchange(distribution=[broadcast])
                     +- Reused(reference_id=[23])

Job has been submitted with JobID a061c05cbc0f36719fa71d34e33b78a6
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, s_4.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT r_0.x AS X0, s_5.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN b AS b_4 ON s_2.y = b_4.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 6c73c2d2_f2b0_4fcd_911c_82c85fbbf9d4

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, s_4.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT r_0.x AS X0, s_5.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN b AS b_4 ON s_2.y = b_4.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :  :     :  :  :  :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$10])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :     +- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :        :  :  :  :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :        :  :  :  :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$10])
   :        :  :  :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :     +- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 2939.1359665790064, cumulative cost = {3.5612606359572224E7 rows, 1.105561713593124E9 cpu, 4.86735276E8 io, 1.34941633820564E8 network, 9.271941197704911E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 2939.1359665790064, cumulative cost = {3.560966722360565E7 rows, 1.1055146874176586E9 cpu, 4.86735276E8 io, 1.34941633820564E8 network, 9.253130727518806E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 2939.1359665790064, cumulative cost = {3.560672808763907E7 rows, 1.1049973994875407E9 cpu, 4.86735276E8 io, 1.348710945573661E8 network, 9.253130727518806E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 16214.200789632117, cumulative cost = {3.5603788951672494E7 rows, 1.1047379722749066E9 cpu, 4.86735276E8 io, 1.348710945573661E8 network, 9.2343202573327E7 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 14570.620242111163, cumulative cost = {2.661617352552437E7 rows, 8.891522511811488E8 cpu, 3.57347124E8 io, 1.1002459754072925E8 network, 7.032745573003131E7 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 10265.790232687988, cumulative cost = {1.528322980713588E7 rows, 4.6691594409815603E8 cpu, 2.09479788E8 io, 5.68338466658583E7 network, 4.037633808710392E7 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 10265.790232687988, cumulative cost = {1.5272964016903192E7 rows, 4.6691594409815603E8 cpu, 2.09479788E8 io, 5.68338466658583E7 network, 4.037633808710392E7 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 28691.66672948783, cumulative cost = {1.1338384504857022E7 rows, 4.268339974728523E8 cpu, 1.47866748E8 io, 5.3879154076378666E7 network, 2.995088804292739E7 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 28691.66672948783, cumulative cost = {1.1309692838127535E7 rows, 4.2201379746229833E8 cpu, 1.47866748E8 io, 5.319055407487096E7 network, 2.995088804292739E7 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 28691.66672948783, cumulative cost = {1.1281001171398047E7 rows, 4.2155473079462653E8 cpu, 1.47866748E8 io, 5.319055407487096E7 network, 2.811462137224017E7 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 28691.66672948783, cumulative cost = {1.125230950466856E7 rows, 4.165049974502367E8 cpu, 1.47866748E8 io, 5.250195407336325E7 network, 2.811462137224017E7 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 158282.04296468972, cumulative cost = {1.1223617837939072E7 rows, 4.1397248476280165E8 cpu, 1.47866748E8 io, 5.250195407336325E7 network, 2.627835470155295E7 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 114001.24878968974, cumulative cost = {1.0091001833124382E7 rows, 3.59801091647837E8 cpu, 1.35543924E8 io, 4.5416599085363254E7 network, 2.412123332955295E7 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 69720.47553968972, cumulative cost = {9002738.472834691 rows, 3.056757125190473E8 cpu, 1.23221664E8 io, 3.833144256536326E7 network, 2.196437344955295E7 memory}
         :  :     :              :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 25309.91430218972, cumulative cost = {7604858.385070001 rows, 2.4990688535150763E8 cpu, 1.04738604E8 io, 3.1086846647363257E7 network, 1.943551630755295E7 memory}
         :  :     :              :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 17282.864683321044, cumulative cost = {5778897.475026909 rows, 1.866394284119206E8 cpu, 8.0094324E7 io, 2.328079460932528E7 network, 1.451586362840737E7 memory}
         :  :     :              :  :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 9255.781314452364, cumulative cost = {3960948.597102686 rows, 1.2317431792195246E8 cpu, 5.5449924E7 io, 1.54747065712873E7 network, 9595925.349261792 memory}
         :  :     :              :  :  :  :  :  :- Calc(select=[X0, X00 AS X1]): rowcount = 2275.994796622063, cumulative cost = {1795415.0758928033 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :  :     :              :  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2275.994796622063, cumulative cost = {1793139.0810961812 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :  :     :              :  :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :     :              :  :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :     :              :  :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :     :              :  :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :     :              :  :  :  :  :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :  :  :  :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 165.56451835589723, cumulative cost = {355055.38392218563 rows, 917640.6140781399 cpu, 6162492.0 io, 30487.87137748509 network, 138677.72233036565 memory}
         :  :     :              :  :  :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 165.56451835589723, cumulative cost = {354889.81940382975 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :  :     :              :  :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 165.56451835589723, cumulative cost = {354724.25488547387 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :  :     :              :  :  :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {354464.690367118 rows, 874800.1834955486 cpu, 6161928.0 io, 25950.322936943558 network, 136985.72233036565 memory}
         :  :     :              :  :  :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1056.7634557059816, cumulative cost = {353407.926911412 rows, 857891.9682042529 cpu, 6161928.0 io, 25950.322936943558 network, 69352.86116518283 memory}
         :  :     :              :  :  :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {352351.163455706 rows, 671901.6000000001 cpu, 6161928.0 io, 588.0 network, 69352.86116518283 memory}
         :  :     :              :  :  :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5829.8, cumulative cost = {351294.39999999997 rows, 578624.8 cpu, 6161928.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :  :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :  :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 6979.786517830301, cumulative cost = {2156277.7398954304 rows, 6.356282668525477E7 cpu, 3.0804516E7 io, 7998549.080890826 network, 5368986.045802224 memory}
         :  :     :              :  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], isBroadcast=[true], build=[right]): rowcount = 6979.786517830301, cumulative cost = {2149297.9533776003 rows, 6.356282668525477E7 cpu, 3.0804516E7 io, 7998549.080890826 network, 5368986.045802224 memory}
         :  :     :              :  :  :  :  :        :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 8026.910118868678, cumulative cost = {1808607.1668597702 rows, 6.293371240430382E7 cpu, 2.4643716E7 io, 7998525.080890826 network, 4919451.079145579 memory}
         :  :     :              :  :  :  :  :           +- Calc(select=[X0, y0]): rowcount = 8026.910118868678, cumulative cost = {1800580.2567409016 rows, 6.164940678528483E7 cpu, 2.4643716E7 io, 7805879.238037977 network, 4919451.079145579 memory}
         :  :     :              :  :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8026.910118868678, cumulative cost = {1792553.346622033 rows, 6.164940678528483E7 cpu, 2.4643716E7 io, 7805879.238037977 network, 4919451.079145579 memory}
         :  :     :              :  :  :  :  :                 :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :  :     :              :  :  :  :  :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :     :              :  :  :  :  :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :     :              :  :  :  :  :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :     :              :  :  :  :  :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :     :              :  :  :  :  :                 :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :  :  :  :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :  :  :  :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :  :  :  :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :  :  :  :                 :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 8027.083368868678, cumulative cost = {1800666.0132409018 rows, 6.3447827625284836E7 cpu, 2.46444E7 io, 7806088.038037977 network, 4919938.279145579 memory}
         :  :     :              :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8027.083368868678, cumulative cost = {1792638.9298720332 rows, 6.3447827625284836E7 cpu, 2.46444E7 io, 7806088.038037977 network, 4919938.279145579 memory}
         :  :     :              :  :  :  :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :  :     :              :  :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :     :              :  :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :     :              :  :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :     :              :  :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :     :              :  :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :              :  :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        +- Calc(select=[x, y0]): rowcount = 38506.155, cumulative cost = {333796.41000000003 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :  :     :              :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 38506.155, cumulative cost = {295290.255 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :  :     :              :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
         :  :     :              :  :  :  :                 +- Calc(select=[x, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 8027.049618868678, cumulative cost = {1800650.9957409017 rows, 6.324214702528483E7 cpu, 2.464428E7 io, 7806052.038037977 network, 4919652.679145578 memory}
         :  :     :              :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8027.049618868678, cumulative cost = {1792623.946122033 rows, 6.324214702528483E7 cpu, 2.464428E7 io, 7806052.038037977 network, 4919652.679145578 memory}
         :  :     :              :  :  :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :  :     :              :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :     :              :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :     :              :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :     :              :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :     :              :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :              :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        +- Calc(select=[x, y0]): rowcount = 38505.93, cumulative cost = {333781.45999999996 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :  :     :              :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.93, cumulative cost = {295275.52999999997 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :  :     :              :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :  :     :              :  :  :                 +- Calc(select=[x0, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[x AS X0, y00 AS X1]): rowcount = 44410.5612375, cumulative cost = {1328159.612225 rows, 5.5699106692E7 cpu, 1.848306E7 io, 7244595.918 network, 2528857.142 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 44410.5612375, cumulative cost = {1283749.0509875 rows, 5.5699106692E7 cpu, 1.848306E7 io, 7244595.918 network, 2528857.142 memory}
         :  :     :              :  :        :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[hash[x]]): rowcount = 39371.40825, cumulative cost = {725940.48975 rows, 1.0205111425999999E7 cpu, 1.2322284E7 io, 1083819.9179999998 network, 324058.27999999997 memory}
         :  :     :              :  :           +- Calc(select=[x, y0 AS y00]): rowcount = 39371.40825, cumulative cost = {686569.0815 rows, 3590714.84 cpu, 1.2322284E7 io, 138906.11999999997 network, 324058.27999999997 memory}
         :  :     :              :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x1)], select=[x, y, y0, x1], isBroadcast=[true], build=[right]): rowcount = 39371.40825, cumulative cost = {647197.67325 rows, 3590714.84 cpu, 1.2322284E7 io, 138906.11999999997 network, 324058.27999999997 memory}
         :  :     :              :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                 +- Exchange(distribution=[broadcast]): rowcount = 5777.054999999999, cumulative cost = {351127.26499999996 rows, 1490906.4 cpu, 6161508.0 io, 138906.11999999997 network, 543.2 memory}
         :  :     :              :  :                    +- Calc(select=[y0, x0 AS x1]): rowcount = 5777.054999999999, cumulative cost = {345350.20999999996 rows, 566577.6 cpu, 6161508.0 io, 256.79999999999995 network, 543.2 memory}
         :  :     :              :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right]): rowcount = 5777.054999999999, cumulative cost = {339573.15499999997 rows, 566577.6 cpu, 6161508.0 io, 256.79999999999995 network, 543.2 memory}
         :  :     :              :  :                          :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                          :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                          +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
         :  :     :              :  :                             +- Calc(select=[x, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.773250000006, cumulative cost = {974262.1115 rows, 5.401137788E7 cpu, 1.232226E7 io, 7085156.52 network, 2156859.8800000004 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.773250000006, cumulative cost = {929981.33825 rows, 5.401137788E7 cpu, 1.232226E7 io, 7085156.52 network, 2156859.8800000004 memory}
         :  :     :              :        :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 38506.155, cumulative cost = {372302.56500000006 rows, 8524304.64 cpu, 6161484.0 io, 924380.52 network, 515.2 memory}
         :  :     :              :           +- Calc(select=[x, y0]): rowcount = 38506.155, cumulative cost = {333796.41000000003 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 38506.155, cumulative cost = {295290.255 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
         :  :     :              :                    +- Calc(select=[x, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.794175, cumulative cost = {974333.9618500002 rows, 5.4013111072E7 cpu, 1.2322824E7 io, 7085354.988 network, 2157121.3719999995 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.794175, cumulative cost = {930053.1676750001 rows, 5.4013111072E7 cpu, 1.2322824E7 io, 7085354.988 network, 2157121.3719999995 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 38506.294499999996, cumulative cost = {372374.37350000005 rows, 8526036.716 cpu, 6162048.0 io, 924578.988 network, 768.8800000000001 memory}
         :  :     :                       +- Calc(select=[x, y0]): rowcount = 38506.294499999996, cumulative cost = {333868.079 rows, 2056979.24 cpu, 6162048.0 io, 427.91999999999996 network, 768.8800000000001 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 38506.294499999996, cumulative cost = {295361.7845 rows, 2056979.24 cpu, 6162048.0 io, 427.91999999999996 network, 768.8800000000001 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 9.63, cumulative cost = {156.49 rows, 3310.2000000000003 cpu, 1272.0 io, 427.91999999999996 network, 229.59999999999997 memory}
         :  :     :                                +- Calc(select=[x, y]): rowcount = 9.63, cumulative cost = {146.86 rows, 1769.4 cpu, 1272.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :  :     :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 9.63, cumulative cost = {137.23000000000002 rows, 1769.4 cpu, 1272.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :  :     :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :  :     :                                         +- Calc(select=[x0, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                                            +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                                               :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :                                               +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                                  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 39746.934821765426, cumulative cost = {3924313.7218134813 rows, 3.9534437812893756E7 cpu, 6.161304E7 io, 2954692.589479629 network, 8818716.707325213 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 39746.934821765426, cumulative cost = {3884566.786991716 rows, 3.2856952762837164E7 cpu, 6.161304E7 io, 2000766.1537572588 network, 8818716.707325213 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39746.934821765426, cumulative cost = {3844819.8521699505 rows, 3.2856952762837164E7 cpu, 6.161304E7 io, 2000766.1537572588 network, 8818716.707325213 memory}
         :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[broadcast]): rowcount = 8280.565478436212, cumulative cost = {3548373.917348185 rows, 3.0737116239009675E7 cpu, 5.5452264E7 io, 2000766.1537572588 network, 8355005.040532785 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3540093.351869749 rows, 2.941222576245988E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 8355005.040532785 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8280.565478436212, cumulative cost = {3531812.7863913127 rows, 2.9279736714804903E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 7825048.849912867 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3523532.2209128765 rows, 2.782235719060013E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7825048.849912867 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 45681.027637294166, cumulative cost = {3515251.6554344404 rows, 2.7091460748403423E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7295092.659292949 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 7012.904128538202, cumulative cost = {1944748.3374411485 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left]): rowcount = 7012.904128538202, cumulative cost = {1937735.4333126103 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :  :                             :     :- Exchange(distribution=[broadcast]): rowcount = 7199.600389154035, cumulative cost = {1194607.17355252 rows, 1.0019221486973636E7 cpu, 1.8484332E7 io, 706909.821189428 network, 2771516.9324406516 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                             :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :                             :        +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :                             :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                             :           +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
         :  :                             :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
         :  :                             :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
         :  :                             :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
         :  :                             :                       +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
         :  :                             :                          :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                             :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                             :                          +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                             :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 38668.12350875596, cumulative cost = {1524822.2903559976 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38668.12350875596, cumulative cost = {1486154.1668472416 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1088.4900583731053, cumulative cost = {1190787.0433384858 rows, 9108616.637161918 cpu, 1.8485016E7 io, 560927.1732506857 network, 2773568.9324406516 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 1088.4900583731053, cumulative cost = {1189698.5532801126 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1088.4900583731053, cumulative cost = {1188610.0632217394 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                                            :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 4304.8300094231745, cumulative cost = {1.131837309814638E7 rows, 4.222217364627507E8 cpu, 1.47867336E8 io, 5.3190750874870956E7 network, 2.9951117642927393E7 memory}
         :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], build=[right]): rowcount = 4304.8300094231745, cumulative cost = {1.1314068268136958E7 rows, 4.222217364627507E8 cpu, 1.47867336E8 io, 5.3190750874870956E7 network, 2.9951117642927393E7 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 28691.66672948783, cumulative cost = {1.1309692838127535E7 rows, 4.2201379746229833E8 cpu, 1.47866748E8 io, 5.319055407487096E7 network, 2.995088804292739E7 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 28691.66672948783, cumulative cost = {1.1281001171398047E7 rows, 4.2155473079462653E8 cpu, 1.47866748E8 io, 5.319055407487096E7 network, 2.811462137224017E7 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 28691.66672948783, cumulative cost = {1.125230950466856E7 rows, 4.165049974502367E8 cpu, 1.47866748E8 io, 5.250195407336325E7 network, 2.811462137224017E7 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 158282.04296468972, cumulative cost = {1.1223617837939072E7 rows, 4.1397248476280165E8 cpu, 1.47866748E8 io, 5.250195407336325E7 network, 2.627835470155295E7 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 114001.24878968974, cumulative cost = {1.0091001833124382E7 rows, 3.59801091647837E8 cpu, 1.35543924E8 io, 4.5416599085363254E7 network, 2.412123332955295E7 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 69720.47553968972, cumulative cost = {9002738.472834691 rows, 3.056757125190473E8 cpu, 1.23221664E8 io, 3.833144256536326E7 network, 2.196437344955295E7 memory}
         :        :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 25309.91430218972, cumulative cost = {7604858.385070001 rows, 2.4990688535150763E8 cpu, 1.04738604E8 io, 3.1086846647363257E7 network, 1.943551630755295E7 memory}
         :        :           :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 17282.864683321044, cumulative cost = {5778897.475026909 rows, 1.866394284119206E8 cpu, 8.0094324E7 io, 2.328079460932528E7 network, 1.451586362840737E7 memory}
         :        :           :  :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 9255.781314452364, cumulative cost = {3960948.597102686 rows, 1.2317431792195246E8 cpu, 5.5449924E7 io, 1.54747065712873E7 network, 9595925.349261792 memory}
         :        :           :  :  :  :  :  :- Calc(select=[X0, X00 AS X1]): rowcount = 2275.994796622063, cumulative cost = {1795415.0758928033 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :        :           :  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2275.994796622063, cumulative cost = {1793139.0810961812 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :        :           :  :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :           :  :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :           :  :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :           :  :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :           :  :  :  :  :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :  :  :  :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 165.56451835589723, cumulative cost = {355055.38392218563 rows, 917640.6140781399 cpu, 6162492.0 io, 30487.87137748509 network, 138677.72233036565 memory}
         :        :           :  :  :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 165.56451835589723, cumulative cost = {354889.81940382975 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :        :           :  :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 165.56451835589723, cumulative cost = {354724.25488547387 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :        :           :  :  :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {354464.690367118 rows, 874800.1834955486 cpu, 6161928.0 io, 25950.322936943558 network, 136985.72233036565 memory}
         :        :           :  :  :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1056.7634557059816, cumulative cost = {353407.926911412 rows, 857891.9682042529 cpu, 6161928.0 io, 25950.322936943558 network, 69352.86116518283 memory}
         :        :           :  :  :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {352351.163455706 rows, 671901.6000000001 cpu, 6161928.0 io, 588.0 network, 69352.86116518283 memory}
         :        :           :  :  :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5829.8, cumulative cost = {351294.39999999997 rows, 578624.8 cpu, 6161928.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :  :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :  :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :  :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 6979.786517830301, cumulative cost = {2156277.7398954304 rows, 6.356282668525477E7 cpu, 3.0804516E7 io, 7998549.080890826 network, 5368986.045802224 memory}
         :        :           :  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], isBroadcast=[true], build=[right]): rowcount = 6979.786517830301, cumulative cost = {2149297.9533776003 rows, 6.356282668525477E7 cpu, 3.0804516E7 io, 7998549.080890826 network, 5368986.045802224 memory}
         :        :           :  :  :  :  :        :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 8026.910118868678, cumulative cost = {1808607.1668597702 rows, 6.293371240430382E7 cpu, 2.4643716E7 io, 7998525.080890826 network, 4919451.079145579 memory}
         :        :           :  :  :  :  :           +- Calc(select=[X0, y0]): rowcount = 8026.910118868678, cumulative cost = {1800580.2567409016 rows, 6.164940678528483E7 cpu, 2.4643716E7 io, 7805879.238037977 network, 4919451.079145579 memory}
         :        :           :  :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8026.910118868678, cumulative cost = {1792553.346622033 rows, 6.164940678528483E7 cpu, 2.4643716E7 io, 7805879.238037977 network, 4919451.079145579 memory}
         :        :           :  :  :  :  :                 :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :        :           :  :  :  :  :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :           :  :  :  :  :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :           :  :  :  :  :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :           :  :  :  :  :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :           :  :  :  :  :                 :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :  :  :  :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :  :  :  :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :  :  :  :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :  :  :  :                 :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 8027.083368868678, cumulative cost = {1800666.0132409018 rows, 6.3447827625284836E7 cpu, 2.46444E7 io, 7806088.038037977 network, 4919938.279145579 memory}
         :        :           :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8027.083368868678, cumulative cost = {1792638.9298720332 rows, 6.3447827625284836E7 cpu, 2.46444E7 io, 7806088.038037977 network, 4919938.279145579 memory}
         :        :           :  :  :  :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :        :           :  :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :           :  :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :           :  :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :           :  :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :           :  :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :  :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :           :  :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        +- Calc(select=[x, y0]): rowcount = 38506.155, cumulative cost = {333796.41000000003 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :        :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 38506.155, cumulative cost = {295290.255 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :        :           :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
         :        :           :  :  :  :                 +- Calc(select=[x, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 8027.049618868678, cumulative cost = {1800650.9957409017 rows, 6.324214702528483E7 cpu, 2.464428E7 io, 7806052.038037977 network, 4919652.679145578 memory}
         :        :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8027.049618868678, cumulative cost = {1792623.946122033 rows, 6.324214702528483E7 cpu, 2.464428E7 io, 7806052.038037977 network, 4919652.679145578 memory}
         :        :           :  :  :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :        :           :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :           :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :           :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :           :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :           :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :           :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        +- Calc(select=[x, y0]): rowcount = 38505.93, cumulative cost = {333781.45999999996 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :        :           :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.93, cumulative cost = {295275.52999999997 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :        :           :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :        :           :  :  :                 +- Calc(select=[x0, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[x AS X0, y00 AS X1]): rowcount = 44410.5612375, cumulative cost = {1328159.612225 rows, 5.5699106692E7 cpu, 1.848306E7 io, 7244595.918 network, 2528857.142 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 44410.5612375, cumulative cost = {1283749.0509875 rows, 5.5699106692E7 cpu, 1.848306E7 io, 7244595.918 network, 2528857.142 memory}
         :        :           :  :        :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[hash[x]]): rowcount = 39371.40825, cumulative cost = {725940.48975 rows, 1.0205111425999999E7 cpu, 1.2322284E7 io, 1083819.9179999998 network, 324058.27999999997 memory}
         :        :           :  :           +- Calc(select=[x, y0 AS y00]): rowcount = 39371.40825, cumulative cost = {686569.0815 rows, 3590714.84 cpu, 1.2322284E7 io, 138906.11999999997 network, 324058.27999999997 memory}
         :        :           :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x1)], select=[x, y, y0, x1], isBroadcast=[true], build=[right]): rowcount = 39371.40825, cumulative cost = {647197.67325 rows, 3590714.84 cpu, 1.2322284E7 io, 138906.11999999997 network, 324058.27999999997 memory}
         :        :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 5777.054999999999, cumulative cost = {351127.26499999996 rows, 1490906.4 cpu, 6161508.0 io, 138906.11999999997 network, 543.2 memory}
         :        :           :  :                    +- Calc(select=[y0, x0 AS x1]): rowcount = 5777.054999999999, cumulative cost = {345350.20999999996 rows, 566577.6 cpu, 6161508.0 io, 256.79999999999995 network, 543.2 memory}
         :        :           :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right]): rowcount = 5777.054999999999, cumulative cost = {339573.15499999997 rows, 566577.6 cpu, 6161508.0 io, 256.79999999999995 network, 543.2 memory}
         :        :           :  :                          :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                          :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                          :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                          :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                          +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
         :        :           :  :                             +- Calc(select=[x, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.773250000006, cumulative cost = {974262.1115 rows, 5.401137788E7 cpu, 1.232226E7 io, 7085156.52 network, 2156859.8800000004 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.773250000006, cumulative cost = {929981.33825 rows, 5.401137788E7 cpu, 1.232226E7 io, 7085156.52 network, 2156859.8800000004 memory}
         :        :           :        :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 38506.155, cumulative cost = {372302.56500000006 rows, 8524304.64 cpu, 6161484.0 io, 924380.52 network, 515.2 memory}
         :        :           :           +- Calc(select=[x, y0]): rowcount = 38506.155, cumulative cost = {333796.41000000003 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 38506.155, cumulative cost = {295290.255 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
         :        :           :                    +- Calc(select=[x, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :           :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.794175, cumulative cost = {974333.9618500002 rows, 5.4013111072E7 cpu, 1.2322824E7 io, 7085354.988 network, 2157121.3719999995 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.794175, cumulative cost = {930053.1676750001 rows, 5.4013111072E7 cpu, 1.2322824E7 io, 7085354.988 network, 2157121.3719999995 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 38506.294499999996, cumulative cost = {372374.37350000005 rows, 8526036.716 cpu, 6162048.0 io, 924578.988 network, 768.8800000000001 memory}
         :        :                    +- Calc(select=[x, y0]): rowcount = 38506.294499999996, cumulative cost = {333868.079 rows, 2056979.24 cpu, 6162048.0 io, 427.91999999999996 network, 768.8800000000001 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 38506.294499999996, cumulative cost = {295361.7845 rows, 2056979.24 cpu, 6162048.0 io, 427.91999999999996 network, 768.8800000000001 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 9.63, cumulative cost = {156.49 rows, 3310.2000000000003 cpu, 1272.0 io, 427.91999999999996 network, 229.59999999999997 memory}
         :        :                             +- Calc(select=[x, y]): rowcount = 9.63, cumulative cost = {146.86 rows, 1769.4 cpu, 1272.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :        :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 9.63, cumulative cost = {137.23000000000002 rows, 1769.4 cpu, 1272.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :        :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :        :                                      +- Calc(select=[x0, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                         +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                            :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                                            +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 1643.5805475209547, cumulative cost = {8971401.225358495 rows, 2.155695068929681E8 cpu, 1.29388152E8 io, 2.484649701663685E7 network, 2.2015746843295693E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1643.5805475209547, cumulative cost = {8969757.644810975 rows, 2.155695068929681E8 cpu, 1.29388152E8 io, 2.484649701663685E7 network, 2.2015746843295693E7 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9706.568828374266, cumulative cost = {5424154.807928408 rows, 1.8579370140599713E8 cpu, 7.3935204E7 io, 2.3013765198639687E7 network, 1.3588654252744045E7 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9706.568828374266, cumulative cost = {5414448.239100033 rows, 1.8563839630474314E8 cpu, 7.3935204E7 io, 2.3013765198639687E7 network, 1.2967433847728092E7 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9706.568828374266, cumulative cost = {5404741.670271659 rows, 1.8393004019094926E8 cpu, 7.3935204E7 io, 2.2780807546758704E7 network, 1.2967433847728092E7 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 53547.79695504566, cumulative cost = {5395035.101443285 rows, 1.8307327543966854E8 cpu, 7.3935204E7 io, 2.2780807546758704E7 network, 1.234621344271214E7 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 52335.05518721536, cumulative cost = {3538259.6942116767 rows, 1.1949183709647769E8 cpu, 4.9290264E7 io, 1.4973704308720727E7 network, 7423046.363566561 memory}
               :           :  :- Calc(select=[x AS X0, X1]): rowcount = 44284.343487175654, cumulative cost = {1329397.1324974215 rows, 5.493713043960676E7 cpu, 1.8484404E7 io, 7116316.364184562 network, 2306715.2428445946 memory}
               :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 44284.343487175654, cumulative cost = {1285112.7890102458 rows, 5.493713043960676E7 cpu, 1.8484404E7 io, 7116316.364184562 network, 2306715.2428445946 memory}
               :           :  :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :     +- Exchange(distribution=[hash[x]]): rowcount = 38529.95658117102, cumulative cost = {727430.4455230703 rows, 9449866.786957398 cpu, 1.2323628E7 io, 955540.3641845626 network, 149037.67429901776 memory}
               :           :  :        +- Calc(select=[x, X1]): rowcount = 38529.95658117102, cumulative cost = {688900.4889418993 rows, 2976834.081320666 cpu, 1.2323628E7 io, 30821.40623645814 network, 149037.67429901776 memory}
               :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.95658117102, cumulative cost = {650370.5323607282 rows, 2976834.081320666 cpu, 1.2323628E7 io, 30821.40623645814 network, 149037.67429901776 memory}
               :           :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 167.37720780683773, cumulative cost = {355141.5757795572 rows, 921903.063658211 cpu, 6162852.0 io, 30821.40623645814 network, 139664.55066183486 memory}
               :           :  :                 +- Calc(select=[X0, X1]): rowcount = 167.37720780683773, cumulative cost = {354974.19857175037 rows, 895122.710409117 cpu, 6162852.0 io, 26804.353249094034 network, 139664.55066183486 memory}
               :           :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 167.37720780683773, cumulative cost = {354806.8213639435 rows, 895122.710409117 cpu, 6162852.0 io, 26804.353249094034 network, 139664.55066183486 memory}
               :           :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :           :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :           :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :           :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :           :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :                       +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[X0, X10 AS X1]): rowcount = 8050.711700039704, cumulative cost = {2156527.50652704 rows, 6.45023716016837E7 cpu, 3.080586E7 io, 7857387.944536165 network, 5116331.120721966 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left]): rowcount = 8050.711700039704, cumulative cost = {2148476.7948270002 rows, 6.45023716016837E7 cpu, 3.080586E7 io, 7857387.944536165 network, 5116331.120721966 memory}
               :           :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
               :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
               :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
               :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
               :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
               :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :           :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :        +- Calc(select=[x, X1]): rowcount = 38663.67720780684, cumulative cost = {689610.6466237959 rows, 3108554.398736411 cpu, 1.2322944E7 io, 51532.70649818807 network, 196908.0415763876 memory}
               :           :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38663.67720780684, cumulative cost = {650946.969415989 rows, 3108554.398736411 cpu, 1.2322944E7 io, 51532.70649818807 network, 196908.0415763876 memory}
               :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :              +- Exchange(distribution=[broadcast]): rowcount = 1058.8480520455848, cumulative cost = {355584.2922081822 rows, 1046491.614320046 cpu, 6162168.0 io, 51532.70649818807 network, 137612.55066183486 memory}
               :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :           :                             :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :                             :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :                             :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :                             :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :                             :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                             :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :                             :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :                             :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :                             +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, y AS X1]): rowcount = 1212.7417678303016, cumulative cost = {1803227.6102765624 rows, 6.3527890546235785E7 cpu, 2.464494E7 io, 7807103.238037977 network, 4923167.079145579 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[X0, y, x], isBroadcast=[true], build=[right]): rowcount = 1212.7417678303016, cumulative cost = {1802014.8685087322 rows, 6.3527890546235785E7 cpu, 2.464494E7 io, 7807103.238037977 network, 4923167.079145579 memory}
               :                 :- Calc(select=[X0, y]): rowcount = 8027.945118868678, cumulative cost = {1800688.126740902 rows, 6.3454090985284835E7 cpu, 2.4644256E7 io, 7806419.238037977 network, 4921115.079145579 memory}
               :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[left]): rowcount = 8027.945118868678, cumulative cost = {1792660.1816220332 rows, 6.3454090985284835E7 cpu, 2.4644256E7 io, 7806419.238037977 network, 4921115.079145579 memory}
               :                 :     :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
               :                 :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
               :                 :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
               :                 :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
               :                 :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
               :                 :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                 :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                 :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                 :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                 :     :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :     +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :        +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :           +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 1250.6348217654318, cumulative cost = {3543959.2563350457 rows, 2.968814785776984E7 cpu, 5.5452948E7 io, 1832731.8179971601 network, 8357057.040532785 memory}
                  +- Calc(select=[X0, X1]): rowcount = 1250.6348217654318, cumulative cost = {3542708.62151328 rows, 2.948804628628737E7 cpu, 5.5452948E7 io, 1802716.5822747897 network, 8357057.040532785 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1250.6348217654318, cumulative cost = {3541457.9866915145 rows, 2.948804628628737E7 cpu, 5.5452948E7 io, 1802716.5822747897 network, 8357057.040532785 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3540093.351869749 rows, 2.941222576245988E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 8355005.040532785 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8280.565478436212, cumulative cost = {3531812.7863913127 rows, 2.9279736714804903E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 7825048.849912867 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3523532.2209128765 rows, 2.782235719060013E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7825048.849912867 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 45681.027637294166, cumulative cost = {3515251.6554344404 rows, 2.7091460748403423E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7295092.659292949 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 7012.904128538202, cumulative cost = {1944748.3374411485 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left]): rowcount = 7012.904128538202, cumulative cost = {1937735.4333126103 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
                        :           :     :- Exchange(distribution=[broadcast]): rowcount = 7199.600389154035, cumulative cost = {1194607.17355252 rows, 1.0019221486973636E7 cpu, 1.8484332E7 io, 706909.821189428 network, 2771516.9324406516 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
                        :           :        +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
                        :           :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :           +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
                        :           :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
                        :           :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
                        :           :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
                        :           :                       +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
                        :           :                          :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :                          +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 38668.12350875596, cumulative cost = {1524822.2903559976 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38668.12350875596, cumulative cost = {1486154.1668472416 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
                        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 1088.4900583731053, cumulative cost = {1190787.0433384858 rows, 9108616.637161918 cpu, 1.8485016E7 io, 560927.1732506857 network, 2773568.9324406516 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 1088.4900583731053, cumulative cost = {1189698.5532801126 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1088.4900583731053, cumulative cost = {1188610.0632217394 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,2,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#2] Exchange(distribution=[hash[X1]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], build=[right])\n:        :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left])\n:     :- [#1] Exchange(distribution=[broadcast])\n:     +- Calc(select=[y, X1])\n:        +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:           :- [#4] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:           +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#2] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#3] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[broadcast])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[4])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[21])
         :        :           :              :        :           :     :- Reused(reference_id=[1])
         :        :           :              :        :           :     +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :              :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[22])
         :        :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[5])
         :        :           :              :        +- Reused(reference_id=[2])
         :        :           :              :- Reused(reference_id=[3])
         :        :           :              +- Exchange(distribution=[broadcast])(reuse_id=[11])
         :        :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           :- Exchange(distribution=[broadcast])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :           :        :- Reused(reference_id=[4])
         :        :           :        +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :           :           +- Reused(reference_id=[5])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :                 +- Exchange(distribution=[hash[X0, X1]])
         :        :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :                       +- Union(all=[true], union=[X0, X1])
         :        :                          :- Calc(select=[x AS X0, x AS X1])(reuse_id=[17])
         :        :                          :  +- Reused(reference_id=[6])
         :        :                          +- Calc(select=[y0 AS X0, x AS X1])
         :        :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[9])
         :        :                                :- Reused(reference_id=[1])
         :        :                                +- Reused(reference_id=[2])
         :        +- Reused(reference_id=[7])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,0,1,2,1,2,1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :  :- Calc(select=[X0, X00 AS X1])\n:  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :  :  :  :     :- [#11] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :  :  :     +- [#12] Exchange(distribution=[broadcast])\n:  :  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, X0, y00], isBroadcast=[true], build=[right])\n:  :  :  :  :        :- [#13] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  :  :        +- [#14] Exchange(distribution=[broadcast])\n:  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left])\n:  :  :  :        :- [#7] Exchange(distribution=[broadcast])\n:  :  :  :        +- [#10] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left])\n:  :  :        :- [#7] Exchange(distribution=[broadcast])\n:  :  :        +- [#8] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  +- Calc(select=[x AS X0, y00 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])\n:  :        :- [#1] Exchange(distribution=[hash[y]])\n:  :        +- [#6] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[x AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:        :- [#1] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[8])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[x, y])
         :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])
         :              :                 :- Reused(reference_id=[5])
         :              :                 +- Exchange(distribution=[broadcast])(reuse_id=[13])
         :              :                    +- Calc(select=[x0, y])
         :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[20])
         :              :                          :- Reused(reference_id=[6])
         :              :                          +- Reused(reference_id=[2])
         :              :- Reused(reference_id=[8])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0])(reuse_id=[15])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])(reuse_id=[10])
         :              :           +- Calc(select=[x, y])
         :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])
         :              :                 :- Reused(reference_id=[5])
         :              :                 +- Reused(reference_id=[2])
         :              :- Reused(reference_id=[8])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0 AS y00])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x1)], select=[x, y, y0, x1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[y0, x0 AS x1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right])
         :              :                 :- Calc(select=[x, y0])(reuse_id=[12])
         :              :                 :  +- Reused(reference_id=[9])
         :              :                 +- Reused(reference_id=[10])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[14])
         :              :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :              :     +- Exchange(distribution=[hash[X0, X1]])
         :              :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :              :- Reused(reference_id=[1])
         :              :              :- Reused(reference_id=[11])
         :              :              :- Reused(reference_id=[8])
         :              :              +- Exchange(distribution=[hash[x]])
         :              :                 +- Reused(reference_id=[12])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Calc(select=[x, y0])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[13])
         :              :- Reused(reference_id=[14])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[15])
         :              :- Reused(reference_id=[16])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[11])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[12])
         :              :                 :     +- Reused(reference_id=[11])
         :              :                 +- Reused(reference_id=[17])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[12])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, y0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left])
         :                       :- Reused(reference_id=[14])
         :                       +- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                          +- Reused(reference_id=[12])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Reused(reference_id=[18])
         :- Reused(reference_id=[19])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[x, x0])
         :     +- Reused(reference_id=[20])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[0,1,0,1,1,2,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#2] Exchange(distribution=[hash[y]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left])\n:        :- [#4] Exchange(distribution=[broadcast])\n:        +- Calc(select=[x, X1])\n:           +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:              :- [#7] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:              +- [#8] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[X0, y, x], isBroadcast=[true], build=[right])\n      :- Calc(select=[X0, y])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], isBroadcast=[true], build=[left])\n      :     :- [#4] Exchange(distribution=[broadcast])\n      :     +- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#1] Exchange(distribution=[broadcast])\n])
                  :- Reused(reference_id=[7])
                  :- Reused(reference_id=[8])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Calc(select=[X0, X1])
                  :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                  :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[23])
                  :                 :  +- Exchange(distribution=[hash[X0, X1]])
                  :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :                 :        +- Union(all=[true], union=[X0, X1])
                  :                 :           :- Calc(select=[x0 AS X0, y AS X1])
                  :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :                 :           :     :- Calc(select=[y, x0])
                  :                 :           :     :  +- Reused(reference_id=[21])
                  :                 :           :     +- Reused(reference_id=[7])
                  :                 :           +- Reused(reference_id=[22])
                  :                 +- Reused(reference_id=[7])
                  :- Reused(reference_id=[14])
                  :- Reused(reference_id=[14])
                  :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :  +- Calc(select=[x, y])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :        :- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[11])
                  :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :  +- Reused(reference_id=[1])
                  +- Exchange(distribution=[broadcast])
                     +- Reused(reference_id=[23])

Job has been submitted with JobID 4cce9727e0f983e65dacf59923b3b056
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, s_4.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT r_0.x AS X0, s_5.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN b AS b_4 ON s_2.y = b_4.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 2e51a6dc_e3b7_4fcd_a501_81181b92ec15

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, s_4.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT r_0.x AS X0, s_5.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN b AS b_4 ON s_2.y = b_4.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :  :     :  :  :  :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$10])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :     +- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :        :  :  :  :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :        :  :  :  :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$10])
   :        :  :  :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :     +- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26498.49685970449, cumulative cost = {3.354833223875653E8 rows, 1.2542929260717901E10 cpu, 4.374396216E9 io, 1.5827278240545146E9 network, 8.288957155017964E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 26498.49685970449, cumulative cost = {3.354568238907056E8 rows, 1.2542505284768147E10 cpu, 4.374396216E9 io, 1.5827278240545146E9 network, 8.271998117027752E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26498.49685970449, cumulative cost = {3.3543032539384586E8 rows, 1.2537841549320839E10 cpu, 4.374396216E9 io, 1.5820918601298816E9 network, 8.271998117027752E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 146183.08019508744, cumulative cost = {3.354038268969861E8 rows, 1.2535502620037718E10 cpu, 4.374396216E9 io, 1.5820918601298816E9 network, 8.255039079037541E8 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 130949.90252859009, cumulative cost = {2.5155267722502458E8 rows, 1.0079946622618855E10 cpu, 3.211566648E9 io, 1.285252600717146E9 network, 6.319753221667068E8 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 92262.50417459429, cumulative cost = {1.46010700628776E8 rows, 5.658844697600057E9 cpu, 1.88264424E9 io, 7.186275638040671E8 network, 3.6281764536241925E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 92262.50417459429, cumulative cost = {1.4591843812460142E8 rows, 5.658844697600057E9 cpu, 1.88264424E9 io, 7.186275638040671E8 network, 3.6281764536241925E8 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 257862.2890266386, cumulative cost = {1.0559099408603865E8 rows, 4.46221940276053E9 cpu, 1.3289181E9 io, 5.72812419049718E8 network, 2.691546416042876E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 257862.2890266386, cumulative cost = {1.0533313179701202E8 rows, 4.418898538204055E9 cpu, 1.3289181E9 io, 5.666237241130787E8 network, 2.691546416042876E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 257862.2890266386, cumulative cost = {1.0507526950798538E8 rows, 4.414772741579629E9 cpu, 1.3289181E9 io, 5.666237241130787E8 network, 2.5265145510658273E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 257862.2890266386, cumulative cost = {1.0481740721895875E8 rows, 4.36938897871094E9 cpu, 1.3289181E9 io, 5.604350291764394E8 network, 2.5265145510658273E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1422537.4320530535, cumulative cost = {1.0455954492993212E8 rows, 4.346628379798092E9 cpu, 1.3289181E9 io, 5.604350291764394E8 network, 2.3614826860887787E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 1024569.2415718036, cumulative cost = {9.438067725979155E7 rows, 3.8597779522080383E9 cpu, 1.218171168E9 io, 4.967574143194394E8 network, 2.1676221927587786E8 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 626601.2891968036, cumulative cost = {8.460032341596976E7 rows, 3.3733388984464664E9 cpu, 1.10742852E9 io, 4.330813047394394E8 network, 1.9737968225587785E8 memory}
         :  :     :              :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 227466.35699680363, cumulative cost = {6.973028850837296E7 rows, 2.4841305319892693E9 cpu, 9.41316552E8 io, 3.126031667074394E8 network, 1.7465413084787786E8 memory}
         :  :     :              :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 155324.65168480374, cumulative cost = {5.297390977493215E7 rows, 1.8544734341393328E9 cpu, 7.19830752E8 io, 2.3414309392759946E8 network, 1.30441300985158E8 memory}
         :  :     :              :  :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 83183.01724780386, cumulative cost = {3.628970475605335E7 rows, 1.2248891113547082E9 cpu, 4.98345204E8 io, 1.556831080877595E8 network, 8.622864752243814E7 memory}
         :  :     :              :  :  :  :  :  :- Calc(select=[X0, X00 AS X1]): rowcount = 20453.201813503878, cumulative cost = {1.6135322648430951E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :  :     :              :  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20453.201813503878, cumulative cost = {1.6114869446617447E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :  :     :              :  :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :     :              :  :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :     :              :  :  :  :  :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :  :  :  :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                    +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 1476.1316766932337, cumulative cost = {3190438.391063945 rows, 8218016.524695228 cpu, 5.5382172E7 io, 271632.228511555 network, 1239668.3641115595 memory}
         :  :     :              :  :  :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 1476.1316766932337, cumulative cost = {3188962.2593872515 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :  :     :              :  :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1476.1316766932337, cumulative cost = {3187486.127710558 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :  :     :              :  :  :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3185295.9960338646 rows, 7845988.433667338 cpu, 5.5377888E7 io, 231921.0682709174 network, 1226816.3641115595 memory}
         :  :     :              :  :  :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9483.877844621558, cumulative cost = {3175812.118189243 rows, 7694246.388153394 cpu, 5.5377888E7 io, 231921.0682709174 network, 619848.1820557797 memory}
         :  :     :              :  :  :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3166328.2403446217 rows, 6025083.887499999 cpu, 5.5377888E7 io, 4308.0 network, 619848.1820557797 memory}
         :  :     :              :  :  :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52319.2875, cumulative cost = {3156844.3625000003 rows, 5187975.2875 cpu, 5.5377888E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :  :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :  :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 62729.81543429998, cumulative cost = {2.0071199090374596E7 rows, 6.891796810558517E8 cpu, 2.76850836E8 io, 8.849538872932796E7 network, 4.824971975819186E7 memory}
         :  :     :              :  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], build=[right]): rowcount = 62729.81543429998, cumulative cost = {2.0008469274940297E7 rows, 6.891796810558517E8 cpu, 2.76850836E8 io, 8.849538872932796E7 network, 4.824971975819186E7 memory}
         :  :     :              :  :  :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :        :  +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        +- Exchange(distribution=[hash[y0]]): rowcount = 72140.51956199988, cumulative cost = {1.6600508709505998E7 rows, 6.253890908993556E8 cpu, 2.21481516E8 io, 8.018996672932796E7 network, 4.420982266271987E7 memory}
         :  :     :              :  :  :  :  :           +- Calc(select=[X0, y0]): rowcount = 72140.51956199988, cumulative cost = {1.6528368189943997E7 rows, 6.132694836129397E8 cpu, 2.21481516E8 io, 7.845859425983997E7 network, 4.420982266271987E7 memory}
         :  :     :              :  :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 72140.51956199988, cumulative cost = {1.6456227670381997E7 rows, 6.132694836129397E8 cpu, 2.21481516E8 io, 7.845859425983997E7 network, 4.420982266271987E7 memory}
         :  :     :              :  :  :  :  :                 :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :  :     :              :  :  :  :  :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :     :              :  :  :  :  :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :  :  :  :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :  :  :  :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :     :              :  :  :  :  :                 :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :  :  :  :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :  :  :  :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :  :  :  :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :  :  :  :                 :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                    +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 72141.63443699988, cumulative cost = {1.6528880367193997E7 rows, 6.294289981329397E8 cpu, 2.21485548E8 io, 7.845998583983997E7 network, 4.4212653462719865E7 memory}
         :  :     :              :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 72141.63443699988, cumulative cost = {1.6456738732756997E7 rows, 6.294289981329397E8 cpu, 2.21485548E8 io, 7.845998583983997E7 network, 4.4212653462719865E7 memory}
         :  :     :              :  :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :  :     :              :  :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :     :              :  :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :     :              :  :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :  :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :  :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 346065.68249999994, cumulative cost = {3345740.6975000002 rows, 7.660445505999999E7 cpu, 5.5373352E7 io, 8306813.579999999 network, 2858.7999999999997 memory}
         :  :     :              :  :  :  :           +- Calc(select=[x, y0]): rowcount = 346065.68249999994, cumulative cost = {2999675.015 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :     :              :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346065.68249999994, cumulative cost = {2653609.3325 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :     :              :  :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :  :     :              :  :  :  :                    +- Calc(select=[x, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 72141.70531199989, cumulative cost = {1.6528912376443999E7 rows, 6.294296314929397E8 cpu, 2.214858E8 io, 7.846007277983996E7 network, 4.421282986271987E7 memory}
         :  :     :              :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 72141.70531199989, cumulative cost = {1.6456770671131998E7 rows, 6.294296314929397E8 cpu, 2.214858E8 io, 7.846007277983996E7 network, 4.421282986271987E7 memory}
         :  :     :              :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :  :     :              :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :     :              :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :     :              :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 346066.155, cumulative cost = {3345772.5650000004 rows, 7.660508464000002E7 cpu, 5.5373604E7 io, 8306900.5200000005 network, 3035.2 memory}
         :  :     :              :  :  :           +- Calc(select=[x, y0]): rowcount = 346066.155, cumulative cost = {2999706.41 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
         :  :     :              :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346066.155, cumulative cost = {2653640.2550000004 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
         :  :     :              :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :  :     :              :  :  :                    +- Calc(select=[x0, y]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[x AS X0, y00 AS X1]): rowcount = 399134.9322, cumulative cost = {1.42434336184E7 rows, 8.88581765168E8 cpu, 1.66111968E8 io, 1.20478138032E8 network, 2.2725551408E7 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 399134.9322, cumulative cost = {1.38442986862E7 rows, 8.88581765168E8 cpu, 1.66111968E8 io, 1.20478138032E8 network, 2.2725551408E7 memory}
         :  :     :              :  :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[hash[x]]): rowcount = 353845.54799999995, cumulative cost = {8831055.754 rows, 4.7970949678400004E8 cpu, 1.10742672E8 io, 6.5108842032000005E7 network, 2910200.7199999997 memory}
         :  :     :              :  :           +- Calc(select=[x, y0 AS y00]): rowcount = 353845.54799999995, cumulative cost = {8477210.206 rows, 4.2026344472E8 cpu, 1.10742672E8 io, 5.661654888E7 network, 2910200.7199999997 memory}
         :  :     :              :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x1)], select=[x, y, y0, x1], build=[right]): rowcount = 353845.54799999995, cumulative cost = {8123364.658 rows, 4.2026344472E8 cpu, 1.10742672E8 io, 5.661654888E7 network, 2910200.7199999997 memory}
         :  :     :              :  :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :  :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                 +- Exchange(distribution=[hash[x1]]): rowcount = 51916.32, cumulative cost = {3155411.1099999994 rows, 1.380661016E7 cpu, 5.5373376E7 io, 1247252.88 network, 2886.7999999999997 memory}
         :  :     :              :  :                    +- Calc(select=[y0, x0 AS x1]): rowcount = 51916.32, cumulative cost = {3103494.7899999996 rows, 5084668.4 cpu, 5.5373376E7 io, 1261.1999999999998 network, 2886.7999999999997 memory}
         :  :     :              :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right]): rowcount = 51916.32, cumulative cost = {3051578.4699999997 rows, 5084668.4 cpu, 5.5373376E7 io, 1261.1999999999998 network, 2886.7999999999997 memory}
         :  :     :              :  :                          :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                          :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                          +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :  :     :              :  :                             +- Calc(select=[x, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397967.952375, cumulative cost = {8755784.60225 rows, 4.8541448452E8 cpu, 1.10742648E8 io, 6.367610958E7 network, 1.938253702E7 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397967.952375, cumulative cost = {8357816.649875 rows, 4.8541448452E8 cpu, 1.10742648E8 io, 6.367610958E7 network, 1.938253702E7 memory}
         :  :     :              :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 346065.68249999994, cumulative cost = {3345740.6975000002 rows, 7.660445505999999E7 cpu, 5.5373352E7 io, 8306813.579999999 network, 2858.7999999999997 memory}
         :  :     :              :           +- Calc(select=[x, y0]): rowcount = 346065.68249999994, cumulative cost = {2999675.015 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346065.68249999994, cumulative cost = {2653609.3325 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :  :     :              :                    +- Calc(select=[x, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397968.19048124994, cumulative cost = {8756330.2380875 rows, 4.85427890158E8 cpu, 1.10746932E8 io, 6.3677614857E7 network, 1.9386049332999997E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397968.19048124994, cumulative cost = {8358362.047606249 rows, 4.85427890158E8 cpu, 1.10746932E8 io, 6.3677614857E7 network, 1.9386049332999997E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 346067.26987499994, cumulative cost = {3346285.857124999 rows, 7.661784799899998E7 cpu, 5.5377636E7 io, 8308318.856999998 network, 6282.219999999999 memory}
         :  :     :                       +- Calc(select=[x, y0]): rowcount = 346067.26987499994, cumulative cost = {3000218.5872499994 rows, 1.847854666E7 cpu, 5.5377636E7 io, 2704.38 network, 6282.219999999999 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346067.26987499994, cumulative cost = {2654151.3173749996 rows, 1.847854666E7 cpu, 5.5377636E7 io, 2704.38 network, 6282.219999999999 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 61.1325, cumulative cost = {1030.0475000000001 rows, 21625.6 cpu, 8340.0 io, 2704.38 network, 2858.7999999999997 memory}
         :  :     :                                +- Calc(select=[x0, y]): rowcount = 61.1325, cumulative cost = {968.9150000000001 rows, 11844.4 cpu, 8340.0 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 61.1325, cumulative cost = {907.7825 rows, 11844.4 cpu, 8340.0 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :     :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :  :     :                                         +- Calc(select=[x, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                                            +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                                               :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :                                               +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                                  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 357221.0721373233, cumulative cost = {4.023518153438817E7 rows, 1.1917046279502146E9 cpu, 5.5372614E8 io, 1.4581514475434905E8 network, 7.92227155726399E7 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 357221.0721373233, cumulative cost = {3.987796046225084E7 rows, 1.1316914878311443E9 cpu, 5.5372614E8 io, 1.372418390230533E8 network, 7.92227155726399E7 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 357221.0721373233, cumulative cost = {3.952073939011352E7 rows, 1.1316914878311443E9 cpu, 5.5372614E8 io, 1.372418390230533E8 network, 7.92227155726399E7 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 74419.81424882227, cumulative cost = {3.454941031797619E7 rows, 7.250546253171537E8 cpu, 4.98356844E8 io, 8.18725430230533E7 network, 7.505520597470585E7 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.447499050372737E7 rows, 7.125520965233516E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.505520597470585E7 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 74419.81424882227, cumulative cost = {3.440057068947855E7 rows, 7.113613794953704E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.029233786278123E7 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.4326150875229724E7 rows, 6.982634921875777E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 7.029233786278123E7 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 410548.4825059023, cumulative cost = {3.42517310609809E7 rows, 6.916947164674833E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 6.552946975085661E7 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 63027.00953233071, cumulative cost = {2.0138961130538054E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 63027.00953233071, cumulative cost = {2.007593412100572E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 64702.79882540108, cumulative cost = {1.0734887841343772E7 rows, 9.052850452322999E7 cpu, 1.66120308E8 io, 6350090.185137104 network, 2.4896743856188547E7 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                             :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 347521.47297357157, cumulative cost = {1.3702221447936947E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347521.47297357157, cumulative cost = {1.3354699974963374E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 9755.819823810161, cumulative cost = {1.0700124501989802E7 rows, 8.179343588297544E7 cpu, 1.6612434E8 io, 5035394.689098923 network, 2.4908839856188547E7 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 9755.819823810161, cumulative cost = {1.0690368682165992E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9755.819823810161, cumulative cost = {1.068061286234218E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                                            :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 38687.39835399579, cumulative cost = {1.0541102669372E8 rows, 4.420970975116268E9 cpu, 1.328922408E9 io, 5.666250369130787E8 network, 2.691576768042876E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 38687.39835399579, cumulative cost = {1.05372339295366E8 rows, 4.420970975116268E9 cpu, 1.328922408E9 io, 5.666250369130787E8 network, 2.691576768042876E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 257862.2890266386, cumulative cost = {1.0533313179701202E8 rows, 4.418898538204055E9 cpu, 1.3289181E9 io, 5.666237241130787E8 network, 2.691546416042876E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 257862.2890266386, cumulative cost = {1.0507526950798538E8 rows, 4.414772741579629E9 cpu, 1.3289181E9 io, 5.666237241130787E8 network, 2.5265145510658273E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 257862.2890266386, cumulative cost = {1.0481740721895875E8 rows, 4.36938897871094E9 cpu, 1.3289181E9 io, 5.604350291764394E8 network, 2.5265145510658273E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1422537.4320530535, cumulative cost = {1.0455954492993212E8 rows, 4.346628379798092E9 cpu, 1.3289181E9 io, 5.604350291764394E8 network, 2.3614826860887787E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 1024569.2415718036, cumulative cost = {9.438067725979155E7 rows, 3.8597779522080383E9 cpu, 1.218171168E9 io, 4.967574143194394E8 network, 2.1676221927587786E8 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 626601.2891968036, cumulative cost = {8.460032341596976E7 rows, 3.3733388984464664E9 cpu, 1.10742852E9 io, 4.330813047394394E8 network, 1.9737968225587785E8 memory}
         :        :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 227466.35699680363, cumulative cost = {6.973028850837296E7 rows, 2.4841305319892693E9 cpu, 9.41316552E8 io, 3.126031667074394E8 network, 1.7465413084787786E8 memory}
         :        :           :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 155324.65168480374, cumulative cost = {5.297390977493215E7 rows, 1.8544734341393328E9 cpu, 7.19830752E8 io, 2.3414309392759946E8 network, 1.30441300985158E8 memory}
         :        :           :  :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 83183.01724780386, cumulative cost = {3.628970475605335E7 rows, 1.2248891113547082E9 cpu, 4.98345204E8 io, 1.556831080877595E8 network, 8.622864752243814E7 memory}
         :        :           :  :  :  :  :  :- Calc(select=[X0, X00 AS X1]): rowcount = 20453.201813503878, cumulative cost = {1.6135322648430951E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :        :           :  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20453.201813503878, cumulative cost = {1.6114869446617447E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :        :           :  :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :           :  :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :           :  :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :           :  :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :           :  :  :  :  :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :  :  :  :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                    +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 1476.1316766932337, cumulative cost = {3190438.391063945 rows, 8218016.524695228 cpu, 5.5382172E7 io, 271632.228511555 network, 1239668.3641115595 memory}
         :        :           :  :  :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 1476.1316766932337, cumulative cost = {3188962.2593872515 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :        :           :  :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1476.1316766932337, cumulative cost = {3187486.127710558 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :        :           :  :  :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3185295.9960338646 rows, 7845988.433667338 cpu, 5.5377888E7 io, 231921.0682709174 network, 1226816.3641115595 memory}
         :        :           :  :  :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9483.877844621558, cumulative cost = {3175812.118189243 rows, 7694246.388153394 cpu, 5.5377888E7 io, 231921.0682709174 network, 619848.1820557797 memory}
         :        :           :  :  :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3166328.2403446217 rows, 6025083.887499999 cpu, 5.5377888E7 io, 4308.0 network, 619848.1820557797 memory}
         :        :           :  :  :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52319.2875, cumulative cost = {3156844.3625000003 rows, 5187975.2875 cpu, 5.5377888E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :  :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :  :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :  :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 62729.81543429998, cumulative cost = {2.0071199090374596E7 rows, 6.891796810558517E8 cpu, 2.76850836E8 io, 8.849538872932796E7 network, 4.824971975819186E7 memory}
         :        :           :  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], build=[right]): rowcount = 62729.81543429998, cumulative cost = {2.0008469274940297E7 rows, 6.891796810558517E8 cpu, 2.76850836E8 io, 8.849538872932796E7 network, 4.824971975819186E7 memory}
         :        :           :  :  :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :  :  :  :  :        :  +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :        +- Exchange(distribution=[hash[y0]]): rowcount = 72140.51956199988, cumulative cost = {1.6600508709505998E7 rows, 6.253890908993556E8 cpu, 2.21481516E8 io, 8.018996672932796E7 network, 4.420982266271987E7 memory}
         :        :           :  :  :  :  :           +- Calc(select=[X0, y0]): rowcount = 72140.51956199988, cumulative cost = {1.6528368189943997E7 rows, 6.132694836129397E8 cpu, 2.21481516E8 io, 7.845859425983997E7 network, 4.420982266271987E7 memory}
         :        :           :  :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 72140.51956199988, cumulative cost = {1.6456227670381997E7 rows, 6.132694836129397E8 cpu, 2.21481516E8 io, 7.845859425983997E7 network, 4.420982266271987E7 memory}
         :        :           :  :  :  :  :                 :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :        :           :  :  :  :  :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :           :  :  :  :  :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :           :  :  :  :  :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :           :  :  :  :  :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :           :  :  :  :  :                 :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :  :  :  :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :  :  :  :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :  :  :  :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :  :  :  :                 :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :  :  :  :  :                    +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 72141.63443699988, cumulative cost = {1.6528880367193997E7 rows, 6.294289981329397E8 cpu, 2.21485548E8 io, 7.845998583983997E7 network, 4.4212653462719865E7 memory}
         :        :           :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 72141.63443699988, cumulative cost = {1.6456738732756997E7 rows, 6.294289981329397E8 cpu, 2.21485548E8 io, 7.845998583983997E7 network, 4.4212653462719865E7 memory}
         :        :           :  :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :        :           :  :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :           :  :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :           :  :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :           :  :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :           :  :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :  :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :  :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 346065.68249999994, cumulative cost = {3345740.6975000002 rows, 7.660445505999999E7 cpu, 5.5373352E7 io, 8306813.579999999 network, 2858.7999999999997 memory}
         :        :           :  :  :  :           +- Calc(select=[x, y0]): rowcount = 346065.68249999994, cumulative cost = {2999675.015 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :        :           :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346065.68249999994, cumulative cost = {2653609.3325 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :        :           :  :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :        :           :  :  :  :                    +- Calc(select=[x, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 72141.70531199989, cumulative cost = {1.6528912376443999E7 rows, 6.294296314929397E8 cpu, 2.214858E8 io, 7.846007277983996E7 network, 4.421282986271987E7 memory}
         :        :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 72141.70531199989, cumulative cost = {1.6456770671131998E7 rows, 6.294296314929397E8 cpu, 2.214858E8 io, 7.846007277983996E7 network, 4.421282986271987E7 memory}
         :        :           :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :        :           :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :           :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :           :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :           :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :           :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 346066.155, cumulative cost = {3345772.5650000004 rows, 7.660508464000002E7 cpu, 5.5373604E7 io, 8306900.5200000005 network, 3035.2 memory}
         :        :           :  :  :           +- Calc(select=[x, y0]): rowcount = 346066.155, cumulative cost = {2999706.41 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
         :        :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346066.155, cumulative cost = {2653640.2550000004 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
         :        :           :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :        :           :  :  :                    +- Calc(select=[x0, y]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[x AS X0, y00 AS X1]): rowcount = 399134.9322, cumulative cost = {1.42434336184E7 rows, 8.88581765168E8 cpu, 1.66111968E8 io, 1.20478138032E8 network, 2.2725551408E7 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 399134.9322, cumulative cost = {1.38442986862E7 rows, 8.88581765168E8 cpu, 1.66111968E8 io, 1.20478138032E8 network, 2.2725551408E7 memory}
         :        :           :  :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[hash[x]]): rowcount = 353845.54799999995, cumulative cost = {8831055.754 rows, 4.7970949678400004E8 cpu, 1.10742672E8 io, 6.5108842032000005E7 network, 2910200.7199999997 memory}
         :        :           :  :           +- Calc(select=[x, y0 AS y00]): rowcount = 353845.54799999995, cumulative cost = {8477210.206 rows, 4.2026344472E8 cpu, 1.10742672E8 io, 5.661654888E7 network, 2910200.7199999997 memory}
         :        :           :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x1)], select=[x, y, y0, x1], build=[right]): rowcount = 353845.54799999995, cumulative cost = {8123364.658 rows, 4.2026344472E8 cpu, 1.10742672E8 io, 5.661654888E7 network, 2910200.7199999997 memory}
         :        :           :  :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :  :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :                 +- Exchange(distribution=[hash[x1]]): rowcount = 51916.32, cumulative cost = {3155411.1099999994 rows, 1.380661016E7 cpu, 5.5373376E7 io, 1247252.88 network, 2886.7999999999997 memory}
         :        :           :  :                    +- Calc(select=[y0, x0 AS x1]): rowcount = 51916.32, cumulative cost = {3103494.7899999996 rows, 5084668.4 cpu, 5.5373376E7 io, 1261.1999999999998 network, 2886.7999999999997 memory}
         :        :           :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right]): rowcount = 51916.32, cumulative cost = {3051578.4699999997 rows, 5084668.4 cpu, 5.5373376E7 io, 1261.1999999999998 network, 2886.7999999999997 memory}
         :        :           :  :                          :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :                          :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :                          :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                          :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                          +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :        :           :  :                             +- Calc(select=[x, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397967.952375, cumulative cost = {8755784.60225 rows, 4.8541448452E8 cpu, 1.10742648E8 io, 6.367610958E7 network, 1.938253702E7 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397967.952375, cumulative cost = {8357816.649875 rows, 4.8541448452E8 cpu, 1.10742648E8 io, 6.367610958E7 network, 1.938253702E7 memory}
         :        :           :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 346065.68249999994, cumulative cost = {3345740.6975000002 rows, 7.660445505999999E7 cpu, 5.5373352E7 io, 8306813.579999999 network, 2858.7999999999997 memory}
         :        :           :           +- Calc(select=[x, y0]): rowcount = 346065.68249999994, cumulative cost = {2999675.015 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346065.68249999994, cumulative cost = {2653609.3325 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :        :           :                    +- Calc(select=[x, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :           :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397968.19048124994, cumulative cost = {8756330.2380875 rows, 4.85427890158E8 cpu, 1.10746932E8 io, 6.3677614857E7 network, 1.9386049332999997E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397968.19048124994, cumulative cost = {8358362.047606249 rows, 4.85427890158E8 cpu, 1.10746932E8 io, 6.3677614857E7 network, 1.9386049332999997E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 346067.26987499994, cumulative cost = {3346285.857124999 rows, 7.661784799899998E7 cpu, 5.5377636E7 io, 8308318.856999998 network, 6282.219999999999 memory}
         :        :                    +- Calc(select=[x, y0]): rowcount = 346067.26987499994, cumulative cost = {3000218.5872499994 rows, 1.847854666E7 cpu, 5.5377636E7 io, 2704.38 network, 6282.219999999999 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346067.26987499994, cumulative cost = {2654151.3173749996 rows, 1.847854666E7 cpu, 5.5377636E7 io, 2704.38 network, 6282.219999999999 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 61.1325, cumulative cost = {1030.0475000000001 rows, 21625.6 cpu, 8340.0 io, 2704.38 network, 2858.7999999999997 memory}
         :        :                             +- Calc(select=[x0, y]): rowcount = 61.1325, cumulative cost = {968.9150000000001 rows, 11844.4 cpu, 8340.0 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 61.1325, cumulative cost = {907.7825 rows, 11844.4 cpu, 8340.0 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :        :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :        :                                      +- Calc(select=[x, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                         +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                            :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                                            +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 15233.177666497362, cumulative cost = {8.370496659176642E7 rows, 2.455409814338669E9 cpu, 1.162829568E9 io, 2.9683925941273576E8 network, 1.935285857370473E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 15233.177666497362, cumulative cost = {8.368973341409992E7 rows, 2.455409814338669E9 cpu, 1.162829568E9 io, 2.9683925941273576E8 network, 1.935285857370473E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 90341.14563932574, cumulative cost = {4.916519761629408E7 rows, 1.7395993356171422E9 cpu, 6.64468692E8 io, 2.164796390003584E8 network, 1.1783333492265138E8 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 90341.14563932574, cumulative cost = {4.9074856470654756E7 rows, 1.738153877286913E9 cpu, 6.64468692E8 io, 2.164796390003584E8 network, 1.1205150160173453E8 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 90341.14563932574, cumulative cost = {4.898451532501543E7 rows, 1.7222538356543915E9 cpu, 6.64468692E8 io, 2.143114515050146E8 network, 1.1205150160173453E8 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 498380.98394147574, cumulative cost = {4.889417417937611E7 rows, 1.7142797399113278E9 cpu, 6.64468692E8 io, 2.143114515050146E8 network, 1.0626966828081769E8 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 470353.72812947584, cumulative cost = {3.214431580799064E7 rows, 1.1332369281144466E9 cpu, 4.42978884E8 io, 1.4290268744517463E8 network, 6.667781405457778E7 memory}
               :           :  :- Calc(select=[x AS X0, X1]): rowcount = 397999.94231314905, cumulative cost = {1.1946256119052742E7 rows, 4.9366387496156937E8 cpu, 1.66120008E8 io, 6.395092257541156E7 network, 2.0711667356473174E7 memory}
               :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 397999.94231314905, cumulative cost = {1.1548256176739592E7 rows, 4.9366387496156937E8 cpu, 1.66120008E8 io, 6.395092257541156E7 network, 2.0711667356473174E7 memory}
               :           :  :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :     +- Exchange(distribution=[hash[x]]): rowcount = 346278.9487543269, cumulative cost = {6536148.234426444 rows, 8.485213937153476E7 cpu, 1.10750712E8 io, 8581626.575411558 network, 1320046.2262308649 memory}
               :           :  :        +- Calc(select=[x, X1]): rowcount = 346278.9487543269, cumulative cost = {6189869.285672117 rows, 2.667727598080785E7 cpu, 1.10750712E8 io, 270931.80530771165 network, 1320046.2262308649 memory}
               :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346278.9487543269, cumulative cost = {5843590.336917791 rows, 2.667727598080785E7 cpu, 1.10750712E8 io, 270931.80530771165 network, 1320046.2262308649 memory}
               :           :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 1472.3250288462589, cumulative cost = {3190257.3881634637 rows, 8209065.380577081 cpu, 5.5381416E7 io, 270931.80530771165 network, 1237596.0246154743 memory}
               :           :  :                 +- Calc(select=[X0, X1]): rowcount = 1472.3250288462589, cumulative cost = {3188785.0631346176 rows, 7973493.375961679 cpu, 5.5381416E7 io, 235596.00461540144 network, 1237596.0246154743 memory}
               :           :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1472.3250288462589, cumulative cost = {3187312.7381057716 rows, 7973493.375961679 cpu, 5.5381416E7 io, 235596.00461540144 network, 1237596.0246154743 memory}
               :           :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :           :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :           :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :           :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :                       +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[X0, X10 AS X1]): rowcount = 72353.78581632682, cumulative cost = {1.9727705960808422E7 rows, 6.391026994247477E8 cpu, 2.76858876E8 io, 7.895176486976308E7 network, 4.596614669810461E7 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 72353.78581632682, cumulative cost = {1.9655352174992096E7 rows, 6.391026994247477E8 cpu, 2.76858876E8 io, 7.895176486976308E7 network, 4.596614669810461E7 memory}
               :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
               :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
               :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
               :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
               :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
               :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :           :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :        +- Exchange(distribution=[hash[x]]): rowcount = 347480.0250288462, cumulative cost = {6544141.988355773 rows, 8.626684161157718E7 cpu, 1.1074668E8 io, 8798592.609923113 network, 1756352.0353847444 memory}
               :           :           +- Calc(select=[x, X1]): rowcount = 347480.0250288462, cumulative cost = {6196661.963326926 rows, 2.789019740673102E7 cpu, 1.1074668E8 io, 459072.0092308029 network, 1756352.0353847444 memory}
               :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347480.0250288462, cumulative cost = {5849181.93829808 rows, 2.789019740673102E7 cpu, 1.1074668E8 io, 459072.0092308029 network, 1756352.0353847444 memory}
               :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :                 +- Exchange(distribution=[broadcast]): rowcount = 9479.500192308393, cumulative cost = {3194647.913269234 rows, 9357929.405192554 cpu, 5.5377384E7 io, 459072.0092308029 network, 1225500.0246154743 memory}
               :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :           :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :                                :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :                                :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, y AS X1]): rowcount = 28027.255811999894, cumulative cost = {1.6251477387443997E7 rows, 5.805444308129398E8 cpu, 2.21489808E8 io, 7.140876405983996E7 network, 3.959185422623991E7 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x1)], select=[X0, X1, y, x1], build=[right]): rowcount = 28027.255811999894, cumulative cost = {1.6223450131631996E7 rows, 5.805444308129398E8 cpu, 2.21489808E8 io, 7.140876405983996E7 network, 3.959185422623991E7 memory}
               :                 :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
               :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
               :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
               :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
               :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
               :                 :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :                 :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                 :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[hash[x1]]): rowcount = 51969.825, cumulative cost = {3156566.4750000006 rows, 3.00726546E7 cpu, 5.5377612E7 io, 1255591.7999999998 network, 24948.0 memory}
               :                    +- Calc(select=[y, x0 AS x1]): rowcount = 51969.825, cumulative cost = {3104596.6500000004 rows, 2.1341724E7 cpu, 5.5377612E7 io, 8316.0 network, 24948.0 memory}
               :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 51969.825, cumulative cost = {3052626.825 rows, 2.1341724E7 cpu, 5.5377612E7 io, 8316.0 network, 24948.0 memory}
               :                          :- Calc(select=[x, y]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :                          :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :                          :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                          :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :                          :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 11213.37213732334, cumulative cost = {3.450930262013934E7 rows, 7.149980425793138E8 cpu, 4.98360876E8 io, 8.035962041237734E7 network, 7.506730197470585E7 memory}
                  +- Calc(select=[X0, X1]): rowcount = 11213.37213732334, cumulative cost = {3.4498089248002015E7 rows, 7.132039030373421E8 cpu, 4.98360876E8 io, 8.009049948108158E7 network, 7.506730197470585E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 11213.37213732334, cumulative cost = {3.448687587586469E7 rows, 7.132039030373421E8 cpu, 4.98360876E8 io, 8.009049948108158E7 network, 7.506730197470585E7 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.447499050372737E7 rows, 7.125520965233516E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.505520597470585E7 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 74419.81424882227, cumulative cost = {3.440057068947855E7 rows, 7.113613794953704E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.029233786278123E7 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.4326150875229724E7 rows, 6.982634921875777E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 7.029233786278123E7 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 410548.4825059023, cumulative cost = {3.42517310609809E7 rows, 6.916947164674833E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 6.552946975085661E7 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 63027.00953233071, cumulative cost = {2.0138961130538054E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 63027.00953233071, cumulative cost = {2.007593412100572E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 64702.79882540108, cumulative cost = {1.0734887841343772E7 rows, 9.052850452322999E7 cpu, 1.66120308E8 io, 6350090.185137104 network, 2.4896743856188547E7 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 347521.47297357157, cumulative cost = {1.3702221447936947E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347521.47297357157, cumulative cost = {1.3354699974963374E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
                        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 9755.819823810161, cumulative cost = {1.0700124501989802E7 rows, 8.179343588297544E7 cpu, 1.6612434E8 io, 5035394.689098923 network, 2.4908839856188547E7 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 9755.819823810161, cumulative cost = {1.0690368682165992E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9755.819823810161, cumulative cost = {1.068061286234218E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,2,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#2] Exchange(distribution=[hash[X1]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[17])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[5])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[20])
         :        :           :              :        :           :     :- Reused(reference_id=[1])
         :        :           :              :        :           :     +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :              :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[21])
         :        :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :              :        +- Reused(reference_id=[2])
         :        :           :              :- Reused(reference_id=[3])
         :        :           :              +- Exchange(distribution=[broadcast])(reuse_id=[11])
         :        :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[4])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Exchange(distribution=[hash[x]])
         :        :           :        :  +- Reused(reference_id=[1])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[16])
         :        :           :                       :  +- Reused(reference_id=[4])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[10])
         :        :           :                             :- Reused(reference_id=[1])
         :        :           :                             +- Reused(reference_id=[2])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[5])
         :        :                    +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :                       +- Reused(reference_id=[6])
         :        +- Reused(reference_id=[7])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,3,2,2,1,1,2,1,2,1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :  :- Calc(select=[X0, X00 AS X1])\n:  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :  :  :  :     :- [#11] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :  :  :     +- [#12] Exchange(distribution=[broadcast])\n:  :  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, X0, y00], build=[right])\n:  :  :  :  :        :- [#13] Exchange(distribution=[hash[x]], shuffle_mode=[BATCH])\n:  :  :  :  :        +- [#14] Exchange(distribution=[hash[y0]])\n:  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n:  :  :  :        :- [#7] Exchange(distribution=[hash[X1]])\n:  :  :  :        +- [#4] Exchange(distribution=[hash[x]])\n:  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n:  :  :        :- [#7] Exchange(distribution=[hash[X1]])\n:  :  :        +- [#8] Exchange(distribution=[hash[x]])\n:  :  +- Calc(select=[x AS X0, y00 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])\n:  :        :- [#5] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:  :        +- [#6] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[x AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[9])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[x0, y])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], isBroadcast=[true], build=[right])
         :              :                 :- Reused(reference_id=[4])
         :              :                 +- Exchange(distribution=[broadcast])(reuse_id=[8])
         :              :                    +- Calc(select=[x, y])
         :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])
         :              :                          :- Reused(reference_id=[6])
         :              :                          +- Reused(reference_id=[2])
         :              :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])(reuse_id=[14])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[8])
         :              :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0 AS y00])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x1)], select=[x, y, y0, x1], build=[right])
         :              :        :- Reused(reference_id=[9])
         :              :        +- Exchange(distribution=[hash[x1]])
         :              :           +- Calc(select=[y0, x0 AS x1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right])
         :              :                 :- Calc(select=[x, y0])(reuse_id=[12])
         :              :                 :  +- Reused(reference_id=[10])
         :              :                 +- Reused(reference_id=[8])
         :              :- Exchange(distribution=[hash[X1]])(reuse_id=[13])
         :              :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :              :     +- Exchange(distribution=[hash[X0, X1]])
         :              :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :              :- Reused(reference_id=[1])
         :              :              :- Reused(reference_id=[11])
         :              :              :- Reused(reference_id=[9])
         :              :              +- Exchange(distribution=[hash[x]])
         :              :                 +- Reused(reference_id=[12])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[x0, y])
         :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[19])
         :              :                 :- Reused(reference_id=[4])
         :              :                 +- Reused(reference_id=[2])
         :              :- Reused(reference_id=[13])
         :              :- Reused(reference_id=[14])
         :              :- Reused(reference_id=[15])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[11])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[12])
         :              :                 :     +- Reused(reference_id=[11])
         :              :                 +- Reused(reference_id=[16])
         :              :- Exchange(distribution=[hash[x]], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[12])
         :              +- Exchange(distribution=[hash[y0]])
         :                 +- Calc(select=[X0, y0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])
         :                       :- Reused(reference_id=[13])
         :                       +- Exchange(distribution=[hash[x]], shuffle_mode=[BATCH])
         :                          +- Reused(reference_id=[12])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Reused(reference_id=[9])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[17])
         :- Reused(reference_id=[18])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[x, x0])
         :     +- Reused(reference_id=[19])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[1,0,1,0,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#3] Exchange(distribution=[hash[y]])\n:  :     +- [#4] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#1] Exchange(distribution=[hash[X1]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x1)], select=[X0, X1, y, x1], build=[right])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#2] Exchange(distribution=[hash[x1]])\n])
                  :- Reused(reference_id=[13])
                  :- Exchange(distribution=[hash[x1]])
                  :  +- Calc(select=[y, x0 AS x1])
                  :     +- MultipleInput(readOrder=[0,1,0], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:- Calc(select=[x, y])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#2] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#3] Exchange(distribution=[broadcast])\n+- [#1] Exchange(distribution=[broadcast])\n])
                  :        :- Reused(reference_id=[11])
                  :        :- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[7])
                  :- Reused(reference_id=[9])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Calc(select=[X0, X1])
                  :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                  :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[22])
                  :                 :  +- Exchange(distribution=[hash[X0, X1]])
                  :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :                 :        +- Union(all=[true], union=[X0, X1])
                  :                 :           :- Calc(select=[x0 AS X0, y AS X1])
                  :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :                 :           :     :- Calc(select=[y, x0])
                  :                 :           :     :  +- Reused(reference_id=[20])
                  :                 :           :     +- Reused(reference_id=[7])
                  :                 :           +- Reused(reference_id=[21])
                  :                 +- Reused(reference_id=[7])
                  :- Reused(reference_id=[13])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, X1])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                           :  +- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- Reused(reference_id=[22])

Job has been submitted with JobID 763d3eaa10ea8f4d83f94b797296aabf
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, s_4.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT r_0.x AS X0, s_5.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN b AS b_4 ON s_2.y = b_4.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...

------------> using sink uuid: 915e8238_d89e_4870_910e_5a1891c62135

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, s_4.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT r_0.x AS X0, s_5.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN b AS b_4 ON s_2.y = b_4.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :  :     :  :  :  :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$10])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :     +- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :        :  :  :  :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :        :  :  :  :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$10])
   :        :  :  :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :     +- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26498.49685970449, cumulative cost = {3.354833223875653E8 rows, 1.2542929260717901E10 cpu, 4.374396216E9 io, 1.5827278240545146E9 network, 8.288957155017964E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 26498.49685970449, cumulative cost = {3.354568238907056E8 rows, 1.2542505284768147E10 cpu, 4.374396216E9 io, 1.5827278240545146E9 network, 8.271998117027752E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26498.49685970449, cumulative cost = {3.3543032539384586E8 rows, 1.2537841549320839E10 cpu, 4.374396216E9 io, 1.5820918601298816E9 network, 8.271998117027752E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 146183.08019508744, cumulative cost = {3.354038268969861E8 rows, 1.2535502620037718E10 cpu, 4.374396216E9 io, 1.5820918601298816E9 network, 8.255039079037541E8 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 130949.90252859009, cumulative cost = {2.5155267722502458E8 rows, 1.0079946622618855E10 cpu, 3.211566648E9 io, 1.285252600717146E9 network, 6.319753221667068E8 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 92262.50417459429, cumulative cost = {1.46010700628776E8 rows, 5.658844697600057E9 cpu, 1.88264424E9 io, 7.186275638040671E8 network, 3.6281764536241925E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 92262.50417459429, cumulative cost = {1.4591843812460142E8 rows, 5.658844697600057E9 cpu, 1.88264424E9 io, 7.186275638040671E8 network, 3.6281764536241925E8 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 257862.2890266386, cumulative cost = {1.0559099408603865E8 rows, 4.46221940276053E9 cpu, 1.3289181E9 io, 5.72812419049718E8 network, 2.691546416042876E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 257862.2890266386, cumulative cost = {1.0533313179701202E8 rows, 4.418898538204055E9 cpu, 1.3289181E9 io, 5.666237241130787E8 network, 2.691546416042876E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 257862.2890266386, cumulative cost = {1.0507526950798538E8 rows, 4.414772741579629E9 cpu, 1.3289181E9 io, 5.666237241130787E8 network, 2.5265145510658273E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 257862.2890266386, cumulative cost = {1.0481740721895875E8 rows, 4.36938897871094E9 cpu, 1.3289181E9 io, 5.604350291764394E8 network, 2.5265145510658273E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1422537.4320530535, cumulative cost = {1.0455954492993212E8 rows, 4.346628379798092E9 cpu, 1.3289181E9 io, 5.604350291764394E8 network, 2.3614826860887787E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 1024569.2415718036, cumulative cost = {9.438067725979155E7 rows, 3.8597779522080383E9 cpu, 1.218171168E9 io, 4.967574143194394E8 network, 2.1676221927587786E8 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 626601.2891968036, cumulative cost = {8.460032341596976E7 rows, 3.3733388984464664E9 cpu, 1.10742852E9 io, 4.330813047394394E8 network, 1.9737968225587785E8 memory}
         :  :     :              :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 227466.35699680363, cumulative cost = {6.973028850837296E7 rows, 2.4841305319892693E9 cpu, 9.41316552E8 io, 3.126031667074394E8 network, 1.7465413084787786E8 memory}
         :  :     :              :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 155324.65168480374, cumulative cost = {5.297390977493215E7 rows, 1.8544734341393328E9 cpu, 7.19830752E8 io, 2.3414309392759946E8 network, 1.30441300985158E8 memory}
         :  :     :              :  :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 83183.01724780386, cumulative cost = {3.628970475605335E7 rows, 1.2248891113547082E9 cpu, 4.98345204E8 io, 1.556831080877595E8 network, 8.622864752243814E7 memory}
         :  :     :              :  :  :  :  :  :- Calc(select=[X0, X00 AS X1]): rowcount = 20453.201813503878, cumulative cost = {1.6135322648430951E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :  :     :              :  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20453.201813503878, cumulative cost = {1.6114869446617447E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :  :     :              :  :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :     :              :  :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :     :              :  :  :  :  :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :  :  :  :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                    +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 1476.1316766932337, cumulative cost = {3190438.391063945 rows, 8218016.524695228 cpu, 5.5382172E7 io, 271632.228511555 network, 1239668.3641115595 memory}
         :  :     :              :  :  :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 1476.1316766932337, cumulative cost = {3188962.2593872515 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :  :     :              :  :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1476.1316766932337, cumulative cost = {3187486.127710558 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :  :     :              :  :  :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3185295.9960338646 rows, 7845988.433667338 cpu, 5.5377888E7 io, 231921.0682709174 network, 1226816.3641115595 memory}
         :  :     :              :  :  :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9483.877844621558, cumulative cost = {3175812.118189243 rows, 7694246.388153394 cpu, 5.5377888E7 io, 231921.0682709174 network, 619848.1820557797 memory}
         :  :     :              :  :  :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3166328.2403446217 rows, 6025083.887499999 cpu, 5.5377888E7 io, 4308.0 network, 619848.1820557797 memory}
         :  :     :              :  :  :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52319.2875, cumulative cost = {3156844.3625000003 rows, 5187975.2875 cpu, 5.5377888E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :  :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :  :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 62729.81543429998, cumulative cost = {2.0071199090374596E7 rows, 6.891796810558517E8 cpu, 2.76850836E8 io, 8.849538872932796E7 network, 4.824971975819186E7 memory}
         :  :     :              :  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], build=[right]): rowcount = 62729.81543429998, cumulative cost = {2.0008469274940297E7 rows, 6.891796810558517E8 cpu, 2.76850836E8 io, 8.849538872932796E7 network, 4.824971975819186E7 memory}
         :  :     :              :  :  :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :        :  +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        +- Exchange(distribution=[hash[y0]]): rowcount = 72140.51956199988, cumulative cost = {1.6600508709505998E7 rows, 6.253890908993556E8 cpu, 2.21481516E8 io, 8.018996672932796E7 network, 4.420982266271987E7 memory}
         :  :     :              :  :  :  :  :           +- Calc(select=[X0, y0]): rowcount = 72140.51956199988, cumulative cost = {1.6528368189943997E7 rows, 6.132694836129397E8 cpu, 2.21481516E8 io, 7.845859425983997E7 network, 4.420982266271987E7 memory}
         :  :     :              :  :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 72140.51956199988, cumulative cost = {1.6456227670381997E7 rows, 6.132694836129397E8 cpu, 2.21481516E8 io, 7.845859425983997E7 network, 4.420982266271987E7 memory}
         :  :     :              :  :  :  :  :                 :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :  :     :              :  :  :  :  :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :     :              :  :  :  :  :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :  :  :  :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :  :  :  :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :     :              :  :  :  :  :                 :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :  :  :  :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :  :  :  :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :  :  :  :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :  :  :  :                 :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                    +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 72141.63443699988, cumulative cost = {1.6528880367193997E7 rows, 6.294289981329397E8 cpu, 2.21485548E8 io, 7.845998583983997E7 network, 4.4212653462719865E7 memory}
         :  :     :              :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 72141.63443699988, cumulative cost = {1.6456738732756997E7 rows, 6.294289981329397E8 cpu, 2.21485548E8 io, 7.845998583983997E7 network, 4.4212653462719865E7 memory}
         :  :     :              :  :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :  :     :              :  :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :     :              :  :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :     :              :  :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :  :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :  :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 346065.68249999994, cumulative cost = {3345740.6975000002 rows, 7.660445505999999E7 cpu, 5.5373352E7 io, 8306813.579999999 network, 2858.7999999999997 memory}
         :  :     :              :  :  :  :           +- Calc(select=[x, y0]): rowcount = 346065.68249999994, cumulative cost = {2999675.015 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :     :              :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346065.68249999994, cumulative cost = {2653609.3325 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :     :              :  :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :  :     :              :  :  :  :                    +- Calc(select=[x, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 72141.70531199989, cumulative cost = {1.6528912376443999E7 rows, 6.294296314929397E8 cpu, 2.214858E8 io, 7.846007277983996E7 network, 4.421282986271987E7 memory}
         :  :     :              :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 72141.70531199989, cumulative cost = {1.6456770671131998E7 rows, 6.294296314929397E8 cpu, 2.214858E8 io, 7.846007277983996E7 network, 4.421282986271987E7 memory}
         :  :     :              :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :  :     :              :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :     :              :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :     :              :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 346066.155, cumulative cost = {3345772.5650000004 rows, 7.660508464000002E7 cpu, 5.5373604E7 io, 8306900.5200000005 network, 3035.2 memory}
         :  :     :              :  :  :           +- Calc(select=[x, y0]): rowcount = 346066.155, cumulative cost = {2999706.41 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
         :  :     :              :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346066.155, cumulative cost = {2653640.2550000004 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
         :  :     :              :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :  :     :              :  :  :                    +- Calc(select=[x0, y]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[x AS X0, y00 AS X1]): rowcount = 399134.9322, cumulative cost = {1.42434336184E7 rows, 8.88581765168E8 cpu, 1.66111968E8 io, 1.20478138032E8 network, 2.2725551408E7 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 399134.9322, cumulative cost = {1.38442986862E7 rows, 8.88581765168E8 cpu, 1.66111968E8 io, 1.20478138032E8 network, 2.2725551408E7 memory}
         :  :     :              :  :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[hash[x]]): rowcount = 353845.54799999995, cumulative cost = {8831055.754 rows, 4.7970949678400004E8 cpu, 1.10742672E8 io, 6.5108842032000005E7 network, 2910200.7199999997 memory}
         :  :     :              :  :           +- Calc(select=[x, y0 AS y00]): rowcount = 353845.54799999995, cumulative cost = {8477210.206 rows, 4.2026344472E8 cpu, 1.10742672E8 io, 5.661654888E7 network, 2910200.7199999997 memory}
         :  :     :              :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x1)], select=[x, y, y0, x1], build=[right]): rowcount = 353845.54799999995, cumulative cost = {8123364.658 rows, 4.2026344472E8 cpu, 1.10742672E8 io, 5.661654888E7 network, 2910200.7199999997 memory}
         :  :     :              :  :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :  :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                 +- Exchange(distribution=[hash[x1]]): rowcount = 51916.32, cumulative cost = {3155411.1099999994 rows, 1.380661016E7 cpu, 5.5373376E7 io, 1247252.88 network, 2886.7999999999997 memory}
         :  :     :              :  :                    +- Calc(select=[y0, x0 AS x1]): rowcount = 51916.32, cumulative cost = {3103494.7899999996 rows, 5084668.4 cpu, 5.5373376E7 io, 1261.1999999999998 network, 2886.7999999999997 memory}
         :  :     :              :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right]): rowcount = 51916.32, cumulative cost = {3051578.4699999997 rows, 5084668.4 cpu, 5.5373376E7 io, 1261.1999999999998 network, 2886.7999999999997 memory}
         :  :     :              :  :                          :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                          :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                          +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :  :     :              :  :                             +- Calc(select=[x, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397967.952375, cumulative cost = {8755784.60225 rows, 4.8541448452E8 cpu, 1.10742648E8 io, 6.367610958E7 network, 1.938253702E7 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397967.952375, cumulative cost = {8357816.649875 rows, 4.8541448452E8 cpu, 1.10742648E8 io, 6.367610958E7 network, 1.938253702E7 memory}
         :  :     :              :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 346065.68249999994, cumulative cost = {3345740.6975000002 rows, 7.660445505999999E7 cpu, 5.5373352E7 io, 8306813.579999999 network, 2858.7999999999997 memory}
         :  :     :              :           +- Calc(select=[x, y0]): rowcount = 346065.68249999994, cumulative cost = {2999675.015 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346065.68249999994, cumulative cost = {2653609.3325 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :  :     :              :                    +- Calc(select=[x, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397968.19048124994, cumulative cost = {8756330.2380875 rows, 4.85427890158E8 cpu, 1.10746932E8 io, 6.3677614857E7 network, 1.9386049332999997E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397968.19048124994, cumulative cost = {8358362.047606249 rows, 4.85427890158E8 cpu, 1.10746932E8 io, 6.3677614857E7 network, 1.9386049332999997E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 346067.26987499994, cumulative cost = {3346285.857124999 rows, 7.661784799899998E7 cpu, 5.5377636E7 io, 8308318.856999998 network, 6282.219999999999 memory}
         :  :     :                       +- Calc(select=[x, y0]): rowcount = 346067.26987499994, cumulative cost = {3000218.5872499994 rows, 1.847854666E7 cpu, 5.5377636E7 io, 2704.38 network, 6282.219999999999 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346067.26987499994, cumulative cost = {2654151.3173749996 rows, 1.847854666E7 cpu, 5.5377636E7 io, 2704.38 network, 6282.219999999999 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 61.1325, cumulative cost = {1030.0475000000001 rows, 21625.6 cpu, 8340.0 io, 2704.38 network, 2858.7999999999997 memory}
         :  :     :                                +- Calc(select=[x0, y]): rowcount = 61.1325, cumulative cost = {968.9150000000001 rows, 11844.4 cpu, 8340.0 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 61.1325, cumulative cost = {907.7825 rows, 11844.4 cpu, 8340.0 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :     :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :  :     :                                         +- Calc(select=[x, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                                            +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                                               :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :                                               +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                                  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 357221.0721373233, cumulative cost = {4.023518153438817E7 rows, 1.1917046279502146E9 cpu, 5.5372614E8 io, 1.4581514475434905E8 network, 7.92227155726399E7 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 357221.0721373233, cumulative cost = {3.987796046225084E7 rows, 1.1316914878311443E9 cpu, 5.5372614E8 io, 1.372418390230533E8 network, 7.92227155726399E7 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 357221.0721373233, cumulative cost = {3.952073939011352E7 rows, 1.1316914878311443E9 cpu, 5.5372614E8 io, 1.372418390230533E8 network, 7.92227155726399E7 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 74419.81424882227, cumulative cost = {3.454941031797619E7 rows, 7.250546253171537E8 cpu, 4.98356844E8 io, 8.18725430230533E7 network, 7.505520597470585E7 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.447499050372737E7 rows, 7.125520965233516E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.505520597470585E7 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 74419.81424882227, cumulative cost = {3.440057068947855E7 rows, 7.113613794953704E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.029233786278123E7 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.4326150875229724E7 rows, 6.982634921875777E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 7.029233786278123E7 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 410548.4825059023, cumulative cost = {3.42517310609809E7 rows, 6.916947164674833E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 6.552946975085661E7 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 63027.00953233071, cumulative cost = {2.0138961130538054E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 63027.00953233071, cumulative cost = {2.007593412100572E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 64702.79882540108, cumulative cost = {1.0734887841343772E7 rows, 9.052850452322999E7 cpu, 1.66120308E8 io, 6350090.185137104 network, 2.4896743856188547E7 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                             :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 347521.47297357157, cumulative cost = {1.3702221447936947E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347521.47297357157, cumulative cost = {1.3354699974963374E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 9755.819823810161, cumulative cost = {1.0700124501989802E7 rows, 8.179343588297544E7 cpu, 1.6612434E8 io, 5035394.689098923 network, 2.4908839856188547E7 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 9755.819823810161, cumulative cost = {1.0690368682165992E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9755.819823810161, cumulative cost = {1.068061286234218E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                                            :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 38687.39835399579, cumulative cost = {1.0541102669372E8 rows, 4.420970975116268E9 cpu, 1.328922408E9 io, 5.666250369130787E8 network, 2.691576768042876E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 38687.39835399579, cumulative cost = {1.05372339295366E8 rows, 4.420970975116268E9 cpu, 1.328922408E9 io, 5.666250369130787E8 network, 2.691576768042876E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 257862.2890266386, cumulative cost = {1.0533313179701202E8 rows, 4.418898538204055E9 cpu, 1.3289181E9 io, 5.666237241130787E8 network, 2.691546416042876E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 257862.2890266386, cumulative cost = {1.0507526950798538E8 rows, 4.414772741579629E9 cpu, 1.3289181E9 io, 5.666237241130787E8 network, 2.5265145510658273E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 257862.2890266386, cumulative cost = {1.0481740721895875E8 rows, 4.36938897871094E9 cpu, 1.3289181E9 io, 5.604350291764394E8 network, 2.5265145510658273E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1422537.4320530535, cumulative cost = {1.0455954492993212E8 rows, 4.346628379798092E9 cpu, 1.3289181E9 io, 5.604350291764394E8 network, 2.3614826860887787E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 1024569.2415718036, cumulative cost = {9.438067725979155E7 rows, 3.8597779522080383E9 cpu, 1.218171168E9 io, 4.967574143194394E8 network, 2.1676221927587786E8 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 626601.2891968036, cumulative cost = {8.460032341596976E7 rows, 3.3733388984464664E9 cpu, 1.10742852E9 io, 4.330813047394394E8 network, 1.9737968225587785E8 memory}
         :        :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 227466.35699680363, cumulative cost = {6.973028850837296E7 rows, 2.4841305319892693E9 cpu, 9.41316552E8 io, 3.126031667074394E8 network, 1.7465413084787786E8 memory}
         :        :           :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 155324.65168480374, cumulative cost = {5.297390977493215E7 rows, 1.8544734341393328E9 cpu, 7.19830752E8 io, 2.3414309392759946E8 network, 1.30441300985158E8 memory}
         :        :           :  :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 83183.01724780386, cumulative cost = {3.628970475605335E7 rows, 1.2248891113547082E9 cpu, 4.98345204E8 io, 1.556831080877595E8 network, 8.622864752243814E7 memory}
         :        :           :  :  :  :  :  :- Calc(select=[X0, X00 AS X1]): rowcount = 20453.201813503878, cumulative cost = {1.6135322648430951E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :        :           :  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20453.201813503878, cumulative cost = {1.6114869446617447E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :        :           :  :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :           :  :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :           :  :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :           :  :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :           :  :  :  :  :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :  :  :  :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                    +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 1476.1316766932337, cumulative cost = {3190438.391063945 rows, 8218016.524695228 cpu, 5.5382172E7 io, 271632.228511555 network, 1239668.3641115595 memory}
         :        :           :  :  :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 1476.1316766932337, cumulative cost = {3188962.2593872515 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :        :           :  :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1476.1316766932337, cumulative cost = {3187486.127710558 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :        :           :  :  :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3185295.9960338646 rows, 7845988.433667338 cpu, 5.5377888E7 io, 231921.0682709174 network, 1226816.3641115595 memory}
         :        :           :  :  :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9483.877844621558, cumulative cost = {3175812.118189243 rows, 7694246.388153394 cpu, 5.5377888E7 io, 231921.0682709174 network, 619848.1820557797 memory}
         :        :           :  :  :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3166328.2403446217 rows, 6025083.887499999 cpu, 5.5377888E7 io, 4308.0 network, 619848.1820557797 memory}
         :        :           :  :  :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52319.2875, cumulative cost = {3156844.3625000003 rows, 5187975.2875 cpu, 5.5377888E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :  :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :  :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :  :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 62729.81543429998, cumulative cost = {2.0071199090374596E7 rows, 6.891796810558517E8 cpu, 2.76850836E8 io, 8.849538872932796E7 network, 4.824971975819186E7 memory}
         :        :           :  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], build=[right]): rowcount = 62729.81543429998, cumulative cost = {2.0008469274940297E7 rows, 6.891796810558517E8 cpu, 2.76850836E8 io, 8.849538872932796E7 network, 4.824971975819186E7 memory}
         :        :           :  :  :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :  :  :  :  :        :  +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :        +- Exchange(distribution=[hash[y0]]): rowcount = 72140.51956199988, cumulative cost = {1.6600508709505998E7 rows, 6.253890908993556E8 cpu, 2.21481516E8 io, 8.018996672932796E7 network, 4.420982266271987E7 memory}
         :        :           :  :  :  :  :           +- Calc(select=[X0, y0]): rowcount = 72140.51956199988, cumulative cost = {1.6528368189943997E7 rows, 6.132694836129397E8 cpu, 2.21481516E8 io, 7.845859425983997E7 network, 4.420982266271987E7 memory}
         :        :           :  :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 72140.51956199988, cumulative cost = {1.6456227670381997E7 rows, 6.132694836129397E8 cpu, 2.21481516E8 io, 7.845859425983997E7 network, 4.420982266271987E7 memory}
         :        :           :  :  :  :  :                 :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :        :           :  :  :  :  :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :           :  :  :  :  :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :           :  :  :  :  :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :           :  :  :  :  :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :           :  :  :  :  :                 :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :  :  :  :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :  :  :  :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :  :  :  :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :  :  :  :                 :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :  :  :  :  :                    +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 72141.63443699988, cumulative cost = {1.6528880367193997E7 rows, 6.294289981329397E8 cpu, 2.21485548E8 io, 7.845998583983997E7 network, 4.4212653462719865E7 memory}
         :        :           :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 72141.63443699988, cumulative cost = {1.6456738732756997E7 rows, 6.294289981329397E8 cpu, 2.21485548E8 io, 7.845998583983997E7 network, 4.4212653462719865E7 memory}
         :        :           :  :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :        :           :  :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :           :  :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :           :  :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :           :  :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :           :  :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :  :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :  :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 346065.68249999994, cumulative cost = {3345740.6975000002 rows, 7.660445505999999E7 cpu, 5.5373352E7 io, 8306813.579999999 network, 2858.7999999999997 memory}
         :        :           :  :  :  :           +- Calc(select=[x, y0]): rowcount = 346065.68249999994, cumulative cost = {2999675.015 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :        :           :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346065.68249999994, cumulative cost = {2653609.3325 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :        :           :  :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :        :           :  :  :  :                    +- Calc(select=[x, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 72141.70531199989, cumulative cost = {1.6528912376443999E7 rows, 6.294296314929397E8 cpu, 2.214858E8 io, 7.846007277983996E7 network, 4.421282986271987E7 memory}
         :        :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 72141.70531199989, cumulative cost = {1.6456770671131998E7 rows, 6.294296314929397E8 cpu, 2.214858E8 io, 7.846007277983996E7 network, 4.421282986271987E7 memory}
         :        :           :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :        :           :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :           :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :           :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :           :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :           :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 346066.155, cumulative cost = {3345772.5650000004 rows, 7.660508464000002E7 cpu, 5.5373604E7 io, 8306900.5200000005 network, 3035.2 memory}
         :        :           :  :  :           +- Calc(select=[x, y0]): rowcount = 346066.155, cumulative cost = {2999706.41 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
         :        :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346066.155, cumulative cost = {2653640.2550000004 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
         :        :           :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :        :           :  :  :                    +- Calc(select=[x0, y]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[x AS X0, y00 AS X1]): rowcount = 399134.9322, cumulative cost = {1.42434336184E7 rows, 8.88581765168E8 cpu, 1.66111968E8 io, 1.20478138032E8 network, 2.2725551408E7 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 399134.9322, cumulative cost = {1.38442986862E7 rows, 8.88581765168E8 cpu, 1.66111968E8 io, 1.20478138032E8 network, 2.2725551408E7 memory}
         :        :           :  :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[hash[x]]): rowcount = 353845.54799999995, cumulative cost = {8831055.754 rows, 4.7970949678400004E8 cpu, 1.10742672E8 io, 6.5108842032000005E7 network, 2910200.7199999997 memory}
         :        :           :  :           +- Calc(select=[x, y0 AS y00]): rowcount = 353845.54799999995, cumulative cost = {8477210.206 rows, 4.2026344472E8 cpu, 1.10742672E8 io, 5.661654888E7 network, 2910200.7199999997 memory}
         :        :           :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x1)], select=[x, y, y0, x1], build=[right]): rowcount = 353845.54799999995, cumulative cost = {8123364.658 rows, 4.2026344472E8 cpu, 1.10742672E8 io, 5.661654888E7 network, 2910200.7199999997 memory}
         :        :           :  :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :  :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :                 +- Exchange(distribution=[hash[x1]]): rowcount = 51916.32, cumulative cost = {3155411.1099999994 rows, 1.380661016E7 cpu, 5.5373376E7 io, 1247252.88 network, 2886.7999999999997 memory}
         :        :           :  :                    +- Calc(select=[y0, x0 AS x1]): rowcount = 51916.32, cumulative cost = {3103494.7899999996 rows, 5084668.4 cpu, 5.5373376E7 io, 1261.1999999999998 network, 2886.7999999999997 memory}
         :        :           :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right]): rowcount = 51916.32, cumulative cost = {3051578.4699999997 rows, 5084668.4 cpu, 5.5373376E7 io, 1261.1999999999998 network, 2886.7999999999997 memory}
         :        :           :  :                          :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :                          :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :                          :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                          :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                          +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :        :           :  :                             +- Calc(select=[x, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397967.952375, cumulative cost = {8755784.60225 rows, 4.8541448452E8 cpu, 1.10742648E8 io, 6.367610958E7 network, 1.938253702E7 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397967.952375, cumulative cost = {8357816.649875 rows, 4.8541448452E8 cpu, 1.10742648E8 io, 6.367610958E7 network, 1.938253702E7 memory}
         :        :           :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 346065.68249999994, cumulative cost = {3345740.6975000002 rows, 7.660445505999999E7 cpu, 5.5373352E7 io, 8306813.579999999 network, 2858.7999999999997 memory}
         :        :           :           +- Calc(select=[x, y0]): rowcount = 346065.68249999994, cumulative cost = {2999675.015 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346065.68249999994, cumulative cost = {2653609.3325 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :        :           :                    +- Calc(select=[x, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :           :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397968.19048124994, cumulative cost = {8756330.2380875 rows, 4.85427890158E8 cpu, 1.10746932E8 io, 6.3677614857E7 network, 1.9386049332999997E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397968.19048124994, cumulative cost = {8358362.047606249 rows, 4.85427890158E8 cpu, 1.10746932E8 io, 6.3677614857E7 network, 1.9386049332999997E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 346067.26987499994, cumulative cost = {3346285.857124999 rows, 7.661784799899998E7 cpu, 5.5377636E7 io, 8308318.856999998 network, 6282.219999999999 memory}
         :        :                    +- Calc(select=[x, y0]): rowcount = 346067.26987499994, cumulative cost = {3000218.5872499994 rows, 1.847854666E7 cpu, 5.5377636E7 io, 2704.38 network, 6282.219999999999 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346067.26987499994, cumulative cost = {2654151.3173749996 rows, 1.847854666E7 cpu, 5.5377636E7 io, 2704.38 network, 6282.219999999999 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 61.1325, cumulative cost = {1030.0475000000001 rows, 21625.6 cpu, 8340.0 io, 2704.38 network, 2858.7999999999997 memory}
         :        :                             +- Calc(select=[x0, y]): rowcount = 61.1325, cumulative cost = {968.9150000000001 rows, 11844.4 cpu, 8340.0 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 61.1325, cumulative cost = {907.7825 rows, 11844.4 cpu, 8340.0 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :        :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :        :                                      +- Calc(select=[x, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                         +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                            :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                                            +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 15233.177666497362, cumulative cost = {8.370496659176642E7 rows, 2.455409814338669E9 cpu, 1.162829568E9 io, 2.9683925941273576E8 network, 1.935285857370473E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 15233.177666497362, cumulative cost = {8.368973341409992E7 rows, 2.455409814338669E9 cpu, 1.162829568E9 io, 2.9683925941273576E8 network, 1.935285857370473E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 90341.14563932574, cumulative cost = {4.916519761629408E7 rows, 1.7395993356171422E9 cpu, 6.64468692E8 io, 2.164796390003584E8 network, 1.1783333492265138E8 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 90341.14563932574, cumulative cost = {4.9074856470654756E7 rows, 1.738153877286913E9 cpu, 6.64468692E8 io, 2.164796390003584E8 network, 1.1205150160173453E8 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 90341.14563932574, cumulative cost = {4.898451532501543E7 rows, 1.7222538356543915E9 cpu, 6.64468692E8 io, 2.143114515050146E8 network, 1.1205150160173453E8 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 498380.98394147574, cumulative cost = {4.889417417937611E7 rows, 1.7142797399113278E9 cpu, 6.64468692E8 io, 2.143114515050146E8 network, 1.0626966828081769E8 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 470353.72812947584, cumulative cost = {3.214431580799064E7 rows, 1.1332369281144466E9 cpu, 4.42978884E8 io, 1.4290268744517463E8 network, 6.667781405457778E7 memory}
               :           :  :- Calc(select=[x AS X0, X1]): rowcount = 397999.94231314905, cumulative cost = {1.1946256119052742E7 rows, 4.9366387496156937E8 cpu, 1.66120008E8 io, 6.395092257541156E7 network, 2.0711667356473174E7 memory}
               :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 397999.94231314905, cumulative cost = {1.1548256176739592E7 rows, 4.9366387496156937E8 cpu, 1.66120008E8 io, 6.395092257541156E7 network, 2.0711667356473174E7 memory}
               :           :  :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :     +- Exchange(distribution=[hash[x]]): rowcount = 346278.9487543269, cumulative cost = {6536148.234426444 rows, 8.485213937153476E7 cpu, 1.10750712E8 io, 8581626.575411558 network, 1320046.2262308649 memory}
               :           :  :        +- Calc(select=[x, X1]): rowcount = 346278.9487543269, cumulative cost = {6189869.285672117 rows, 2.667727598080785E7 cpu, 1.10750712E8 io, 270931.80530771165 network, 1320046.2262308649 memory}
               :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346278.9487543269, cumulative cost = {5843590.336917791 rows, 2.667727598080785E7 cpu, 1.10750712E8 io, 270931.80530771165 network, 1320046.2262308649 memory}
               :           :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 1472.3250288462589, cumulative cost = {3190257.3881634637 rows, 8209065.380577081 cpu, 5.5381416E7 io, 270931.80530771165 network, 1237596.0246154743 memory}
               :           :  :                 +- Calc(select=[X0, X1]): rowcount = 1472.3250288462589, cumulative cost = {3188785.0631346176 rows, 7973493.375961679 cpu, 5.5381416E7 io, 235596.00461540144 network, 1237596.0246154743 memory}
               :           :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1472.3250288462589, cumulative cost = {3187312.7381057716 rows, 7973493.375961679 cpu, 5.5381416E7 io, 235596.00461540144 network, 1237596.0246154743 memory}
               :           :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :           :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :           :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :           :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :                       +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[X0, X10 AS X1]): rowcount = 72353.78581632682, cumulative cost = {1.9727705960808422E7 rows, 6.391026994247477E8 cpu, 2.76858876E8 io, 7.895176486976308E7 network, 4.596614669810461E7 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 72353.78581632682, cumulative cost = {1.9655352174992096E7 rows, 6.391026994247477E8 cpu, 2.76858876E8 io, 7.895176486976308E7 network, 4.596614669810461E7 memory}
               :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
               :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
               :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
               :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
               :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
               :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :           :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :        +- Exchange(distribution=[hash[x]]): rowcount = 347480.0250288462, cumulative cost = {6544141.988355773 rows, 8.626684161157718E7 cpu, 1.1074668E8 io, 8798592.609923113 network, 1756352.0353847444 memory}
               :           :           +- Calc(select=[x, X1]): rowcount = 347480.0250288462, cumulative cost = {6196661.963326926 rows, 2.789019740673102E7 cpu, 1.1074668E8 io, 459072.0092308029 network, 1756352.0353847444 memory}
               :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347480.0250288462, cumulative cost = {5849181.93829808 rows, 2.789019740673102E7 cpu, 1.1074668E8 io, 459072.0092308029 network, 1756352.0353847444 memory}
               :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :                 +- Exchange(distribution=[broadcast]): rowcount = 9479.500192308393, cumulative cost = {3194647.913269234 rows, 9357929.405192554 cpu, 5.5377384E7 io, 459072.0092308029 network, 1225500.0246154743 memory}
               :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :           :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :                                :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :                                :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, y AS X1]): rowcount = 28027.255811999894, cumulative cost = {1.6251477387443997E7 rows, 5.805444308129398E8 cpu, 2.21489808E8 io, 7.140876405983996E7 network, 3.959185422623991E7 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x1)], select=[X0, X1, y, x1], build=[right]): rowcount = 28027.255811999894, cumulative cost = {1.6223450131631996E7 rows, 5.805444308129398E8 cpu, 2.21489808E8 io, 7.140876405983996E7 network, 3.959185422623991E7 memory}
               :                 :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
               :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
               :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
               :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
               :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
               :                 :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :                 :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                 :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[hash[x1]]): rowcount = 51969.825, cumulative cost = {3156566.4750000006 rows, 3.00726546E7 cpu, 5.5377612E7 io, 1255591.7999999998 network, 24948.0 memory}
               :                    +- Calc(select=[y, x0 AS x1]): rowcount = 51969.825, cumulative cost = {3104596.6500000004 rows, 2.1341724E7 cpu, 5.5377612E7 io, 8316.0 network, 24948.0 memory}
               :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 51969.825, cumulative cost = {3052626.825 rows, 2.1341724E7 cpu, 5.5377612E7 io, 8316.0 network, 24948.0 memory}
               :                          :- Calc(select=[x, y]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :                          :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :                          :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                          :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :                          :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 11213.37213732334, cumulative cost = {3.450930262013934E7 rows, 7.149980425793138E8 cpu, 4.98360876E8 io, 8.035962041237734E7 network, 7.506730197470585E7 memory}
                  +- Calc(select=[X0, X1]): rowcount = 11213.37213732334, cumulative cost = {3.4498089248002015E7 rows, 7.132039030373421E8 cpu, 4.98360876E8 io, 8.009049948108158E7 network, 7.506730197470585E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 11213.37213732334, cumulative cost = {3.448687587586469E7 rows, 7.132039030373421E8 cpu, 4.98360876E8 io, 8.009049948108158E7 network, 7.506730197470585E7 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.447499050372737E7 rows, 7.125520965233516E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.505520597470585E7 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 74419.81424882227, cumulative cost = {3.440057068947855E7 rows, 7.113613794953704E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.029233786278123E7 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.4326150875229724E7 rows, 6.982634921875777E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 7.029233786278123E7 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 410548.4825059023, cumulative cost = {3.42517310609809E7 rows, 6.916947164674833E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 6.552946975085661E7 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 63027.00953233071, cumulative cost = {2.0138961130538054E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 63027.00953233071, cumulative cost = {2.007593412100572E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 64702.79882540108, cumulative cost = {1.0734887841343772E7 rows, 9.052850452322999E7 cpu, 1.66120308E8 io, 6350090.185137104 network, 2.4896743856188547E7 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 347521.47297357157, cumulative cost = {1.3702221447936947E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347521.47297357157, cumulative cost = {1.3354699974963374E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
                        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 9755.819823810161, cumulative cost = {1.0700124501989802E7 rows, 8.179343588297544E7 cpu, 1.6612434E8 io, 5035394.689098923 network, 2.4908839856188547E7 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 9755.819823810161, cumulative cost = {1.0690368682165992E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9755.819823810161, cumulative cost = {1.068061286234218E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,2,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#2] Exchange(distribution=[hash[X1]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[17])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[5])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[20])
         :        :           :              :        :           :     :- Reused(reference_id=[1])
         :        :           :              :        :           :     +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :              :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[21])
         :        :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :              :        +- Reused(reference_id=[2])
         :        :           :              :- Reused(reference_id=[3])
         :        :           :              +- Exchange(distribution=[broadcast])(reuse_id=[11])
         :        :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[4])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Exchange(distribution=[hash[x]])
         :        :           :        :  +- Reused(reference_id=[1])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[16])
         :        :           :                       :  +- Reused(reference_id=[4])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[10])
         :        :           :                             :- Reused(reference_id=[1])
         :        :           :                             +- Reused(reference_id=[2])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[5])
         :        :                    +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :                       +- Reused(reference_id=[6])
         :        +- Reused(reference_id=[7])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,3,2,2,1,1,2,1,2,1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :  :- Calc(select=[X0, X00 AS X1])\n:  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :  :  :  :     :- [#11] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :  :  :     +- [#12] Exchange(distribution=[broadcast])\n:  :  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, X0, y00], build=[right])\n:  :  :  :  :        :- [#13] Exchange(distribution=[hash[x]], shuffle_mode=[BATCH])\n:  :  :  :  :        +- [#14] Exchange(distribution=[hash[y0]])\n:  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n:  :  :  :        :- [#7] Exchange(distribution=[hash[X1]])\n:  :  :  :        +- [#4] Exchange(distribution=[hash[x]])\n:  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n:  :  :        :- [#7] Exchange(distribution=[hash[X1]])\n:  :  :        +- [#8] Exchange(distribution=[hash[x]])\n:  :  +- Calc(select=[x AS X0, y00 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])\n:  :        :- [#5] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:  :        +- [#6] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[x AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[9])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[x0, y])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], isBroadcast=[true], build=[right])
         :              :                 :- Reused(reference_id=[4])
         :              :                 +- Exchange(distribution=[broadcast])(reuse_id=[8])
         :              :                    +- Calc(select=[x, y])
         :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])
         :              :                          :- Reused(reference_id=[6])
         :              :                          +- Reused(reference_id=[2])
         :              :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])(reuse_id=[14])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[8])
         :              :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0 AS y00])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x1)], select=[x, y, y0, x1], build=[right])
         :              :        :- Reused(reference_id=[9])
         :              :        +- Exchange(distribution=[hash[x1]])
         :              :           +- Calc(select=[y0, x0 AS x1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right])
         :              :                 :- Calc(select=[x, y0])(reuse_id=[12])
         :              :                 :  +- Reused(reference_id=[10])
         :              :                 +- Reused(reference_id=[8])
         :              :- Exchange(distribution=[hash[X1]])(reuse_id=[13])
         :              :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :              :     +- Exchange(distribution=[hash[X0, X1]])
         :              :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :              :- Reused(reference_id=[1])
         :              :              :- Reused(reference_id=[11])
         :              :              :- Reused(reference_id=[9])
         :              :              +- Exchange(distribution=[hash[x]])
         :              :                 +- Reused(reference_id=[12])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[x0, y])
         :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[19])
         :              :                 :- Reused(reference_id=[4])
         :              :                 +- Reused(reference_id=[2])
         :              :- Reused(reference_id=[13])
         :              :- Reused(reference_id=[14])
         :              :- Reused(reference_id=[15])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[11])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[12])
         :              :                 :     +- Reused(reference_id=[11])
         :              :                 +- Reused(reference_id=[16])
         :              :- Exchange(distribution=[hash[x]], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[12])
         :              +- Exchange(distribution=[hash[y0]])
         :                 +- Calc(select=[X0, y0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])
         :                       :- Reused(reference_id=[13])
         :                       +- Exchange(distribution=[hash[x]], shuffle_mode=[BATCH])
         :                          +- Reused(reference_id=[12])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Reused(reference_id=[9])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[17])
         :- Reused(reference_id=[18])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[x, x0])
         :     +- Reused(reference_id=[19])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[1,0,1,0,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#3] Exchange(distribution=[hash[y]])\n:  :     +- [#4] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#1] Exchange(distribution=[hash[X1]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x1)], select=[X0, X1, y, x1], build=[right])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#2] Exchange(distribution=[hash[x1]])\n])
                  :- Reused(reference_id=[13])
                  :- Exchange(distribution=[hash[x1]])
                  :  +- Calc(select=[y, x0 AS x1])
                  :     +- MultipleInput(readOrder=[0,1,0], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:- Calc(select=[x, y])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#2] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#3] Exchange(distribution=[broadcast])\n+- [#1] Exchange(distribution=[broadcast])\n])
                  :        :- Reused(reference_id=[11])
                  :        :- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[7])
                  :- Reused(reference_id=[9])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Calc(select=[X0, X1])
                  :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                  :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[22])
                  :                 :  +- Exchange(distribution=[hash[X0, X1]])
                  :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :                 :        +- Union(all=[true], union=[X0, X1])
                  :                 :           :- Calc(select=[x0 AS X0, y AS X1])
                  :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :                 :           :     :- Calc(select=[y, x0])
                  :                 :           :     :  +- Reused(reference_id=[20])
                  :                 :           :     +- Reused(reference_id=[7])
                  :                 :           +- Reused(reference_id=[21])
                  :                 +- Reused(reference_id=[7])
                  :- Reused(reference_id=[13])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, X1])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                           :  +- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- Reused(reference_id=[22])

Job has been submitted with JobID 02d033df465df53f63926877f8bcea50
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, s_4.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT r_0.x AS X0, s_5.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN b AS b_4 ON s_2.y = b_4.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...

------------> using sink uuid: 4183f4d2_a59c_49e9_8298_dba206c81dbd

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, s_4.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT r_0.x AS X0, s_5.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN b AS b_4 ON s_2.y = b_4.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :  :     :  :  :  :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$10])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :     +- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :        :  :  :  :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :        :  :  :  :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$10])
   :        :  :  :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :     +- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26498.49685970449, cumulative cost = {3.354833223875653E8 rows, 1.2542929260717901E10 cpu, 4.374396216E9 io, 1.5827278240545146E9 network, 8.288957155017964E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 26498.49685970449, cumulative cost = {3.354568238907056E8 rows, 1.2542505284768147E10 cpu, 4.374396216E9 io, 1.5827278240545146E9 network, 8.271998117027752E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26498.49685970449, cumulative cost = {3.3543032539384586E8 rows, 1.2537841549320839E10 cpu, 4.374396216E9 io, 1.5820918601298816E9 network, 8.271998117027752E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 146183.08019508744, cumulative cost = {3.354038268969861E8 rows, 1.2535502620037718E10 cpu, 4.374396216E9 io, 1.5820918601298816E9 network, 8.255039079037541E8 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 130949.90252859009, cumulative cost = {2.5155267722502458E8 rows, 1.0079946622618855E10 cpu, 3.211566648E9 io, 1.285252600717146E9 network, 6.319753221667068E8 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 92262.50417459429, cumulative cost = {1.46010700628776E8 rows, 5.658844697600057E9 cpu, 1.88264424E9 io, 7.186275638040671E8 network, 3.6281764536241925E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 92262.50417459429, cumulative cost = {1.4591843812460142E8 rows, 5.658844697600057E9 cpu, 1.88264424E9 io, 7.186275638040671E8 network, 3.6281764536241925E8 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 257862.2890266386, cumulative cost = {1.0559099408603865E8 rows, 4.46221940276053E9 cpu, 1.3289181E9 io, 5.72812419049718E8 network, 2.691546416042876E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 257862.2890266386, cumulative cost = {1.0533313179701202E8 rows, 4.418898538204055E9 cpu, 1.3289181E9 io, 5.666237241130787E8 network, 2.691546416042876E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 257862.2890266386, cumulative cost = {1.0507526950798538E8 rows, 4.414772741579629E9 cpu, 1.3289181E9 io, 5.666237241130787E8 network, 2.5265145510658273E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 257862.2890266386, cumulative cost = {1.0481740721895875E8 rows, 4.36938897871094E9 cpu, 1.3289181E9 io, 5.604350291764394E8 network, 2.5265145510658273E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1422537.4320530535, cumulative cost = {1.0455954492993212E8 rows, 4.346628379798092E9 cpu, 1.3289181E9 io, 5.604350291764394E8 network, 2.3614826860887787E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 1024569.2415718036, cumulative cost = {9.438067725979155E7 rows, 3.8597779522080383E9 cpu, 1.218171168E9 io, 4.967574143194394E8 network, 2.1676221927587786E8 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 626601.2891968036, cumulative cost = {8.460032341596976E7 rows, 3.3733388984464664E9 cpu, 1.10742852E9 io, 4.330813047394394E8 network, 1.9737968225587785E8 memory}
         :  :     :              :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 227466.35699680363, cumulative cost = {6.973028850837296E7 rows, 2.4841305319892693E9 cpu, 9.41316552E8 io, 3.126031667074394E8 network, 1.7465413084787786E8 memory}
         :  :     :              :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 155324.65168480374, cumulative cost = {5.297390977493215E7 rows, 1.8544734341393328E9 cpu, 7.19830752E8 io, 2.3414309392759946E8 network, 1.30441300985158E8 memory}
         :  :     :              :  :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 83183.01724780386, cumulative cost = {3.628970475605335E7 rows, 1.2248891113547082E9 cpu, 4.98345204E8 io, 1.556831080877595E8 network, 8.622864752243814E7 memory}
         :  :     :              :  :  :  :  :  :- Calc(select=[X0, X00 AS X1]): rowcount = 20453.201813503878, cumulative cost = {1.6135322648430951E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :  :     :              :  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20453.201813503878, cumulative cost = {1.6114869446617447E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :  :     :              :  :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :     :              :  :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :     :              :  :  :  :  :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :  :  :  :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                    +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 1476.1316766932337, cumulative cost = {3190438.391063945 rows, 8218016.524695228 cpu, 5.5382172E7 io, 271632.228511555 network, 1239668.3641115595 memory}
         :  :     :              :  :  :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 1476.1316766932337, cumulative cost = {3188962.2593872515 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :  :     :              :  :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1476.1316766932337, cumulative cost = {3187486.127710558 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :  :     :              :  :  :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3185295.9960338646 rows, 7845988.433667338 cpu, 5.5377888E7 io, 231921.0682709174 network, 1226816.3641115595 memory}
         :  :     :              :  :  :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9483.877844621558, cumulative cost = {3175812.118189243 rows, 7694246.388153394 cpu, 5.5377888E7 io, 231921.0682709174 network, 619848.1820557797 memory}
         :  :     :              :  :  :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3166328.2403446217 rows, 6025083.887499999 cpu, 5.5377888E7 io, 4308.0 network, 619848.1820557797 memory}
         :  :     :              :  :  :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52319.2875, cumulative cost = {3156844.3625000003 rows, 5187975.2875 cpu, 5.5377888E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :  :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :  :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 62729.81543429998, cumulative cost = {2.0071199090374596E7 rows, 6.891796810558517E8 cpu, 2.76850836E8 io, 8.849538872932796E7 network, 4.824971975819186E7 memory}
         :  :     :              :  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], build=[right]): rowcount = 62729.81543429998, cumulative cost = {2.0008469274940297E7 rows, 6.891796810558517E8 cpu, 2.76850836E8 io, 8.849538872932796E7 network, 4.824971975819186E7 memory}
         :  :     :              :  :  :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :        :  +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        +- Exchange(distribution=[hash[y0]]): rowcount = 72140.51956199988, cumulative cost = {1.6600508709505998E7 rows, 6.253890908993556E8 cpu, 2.21481516E8 io, 8.018996672932796E7 network, 4.420982266271987E7 memory}
         :  :     :              :  :  :  :  :           +- Calc(select=[X0, y0]): rowcount = 72140.51956199988, cumulative cost = {1.6528368189943997E7 rows, 6.132694836129397E8 cpu, 2.21481516E8 io, 7.845859425983997E7 network, 4.420982266271987E7 memory}
         :  :     :              :  :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 72140.51956199988, cumulative cost = {1.6456227670381997E7 rows, 6.132694836129397E8 cpu, 2.21481516E8 io, 7.845859425983997E7 network, 4.420982266271987E7 memory}
         :  :     :              :  :  :  :  :                 :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :  :     :              :  :  :  :  :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :     :              :  :  :  :  :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :  :  :  :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :  :  :  :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :     :              :  :  :  :  :                 :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :  :  :  :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :  :  :  :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :  :  :  :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :  :  :  :                 :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                    +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 72141.63443699988, cumulative cost = {1.6528880367193997E7 rows, 6.294289981329397E8 cpu, 2.21485548E8 io, 7.845998583983997E7 network, 4.4212653462719865E7 memory}
         :  :     :              :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 72141.63443699988, cumulative cost = {1.6456738732756997E7 rows, 6.294289981329397E8 cpu, 2.21485548E8 io, 7.845998583983997E7 network, 4.4212653462719865E7 memory}
         :  :     :              :  :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :  :     :              :  :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :     :              :  :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :     :              :  :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :  :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :  :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 346065.68249999994, cumulative cost = {3345740.6975000002 rows, 7.660445505999999E7 cpu, 5.5373352E7 io, 8306813.579999999 network, 2858.7999999999997 memory}
         :  :     :              :  :  :  :           +- Calc(select=[x, y0]): rowcount = 346065.68249999994, cumulative cost = {2999675.015 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :     :              :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346065.68249999994, cumulative cost = {2653609.3325 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :     :              :  :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :  :     :              :  :  :  :                    +- Calc(select=[x, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 72141.70531199989, cumulative cost = {1.6528912376443999E7 rows, 6.294296314929397E8 cpu, 2.214858E8 io, 7.846007277983996E7 network, 4.421282986271987E7 memory}
         :  :     :              :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 72141.70531199989, cumulative cost = {1.6456770671131998E7 rows, 6.294296314929397E8 cpu, 2.214858E8 io, 7.846007277983996E7 network, 4.421282986271987E7 memory}
         :  :     :              :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :  :     :              :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :     :              :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :     :              :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 346066.155, cumulative cost = {3345772.5650000004 rows, 7.660508464000002E7 cpu, 5.5373604E7 io, 8306900.5200000005 network, 3035.2 memory}
         :  :     :              :  :  :           +- Calc(select=[x, y0]): rowcount = 346066.155, cumulative cost = {2999706.41 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
         :  :     :              :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346066.155, cumulative cost = {2653640.2550000004 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
         :  :     :              :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :  :     :              :  :  :                    +- Calc(select=[x0, y]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[x AS X0, y00 AS X1]): rowcount = 399134.9322, cumulative cost = {1.42434336184E7 rows, 8.88581765168E8 cpu, 1.66111968E8 io, 1.20478138032E8 network, 2.2725551408E7 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 399134.9322, cumulative cost = {1.38442986862E7 rows, 8.88581765168E8 cpu, 1.66111968E8 io, 1.20478138032E8 network, 2.2725551408E7 memory}
         :  :     :              :  :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[hash[x]]): rowcount = 353845.54799999995, cumulative cost = {8831055.754 rows, 4.7970949678400004E8 cpu, 1.10742672E8 io, 6.5108842032000005E7 network, 2910200.7199999997 memory}
         :  :     :              :  :           +- Calc(select=[x, y0 AS y00]): rowcount = 353845.54799999995, cumulative cost = {8477210.206 rows, 4.2026344472E8 cpu, 1.10742672E8 io, 5.661654888E7 network, 2910200.7199999997 memory}
         :  :     :              :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x1)], select=[x, y, y0, x1], build=[right]): rowcount = 353845.54799999995, cumulative cost = {8123364.658 rows, 4.2026344472E8 cpu, 1.10742672E8 io, 5.661654888E7 network, 2910200.7199999997 memory}
         :  :     :              :  :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :  :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                 +- Exchange(distribution=[hash[x1]]): rowcount = 51916.32, cumulative cost = {3155411.1099999994 rows, 1.380661016E7 cpu, 5.5373376E7 io, 1247252.88 network, 2886.7999999999997 memory}
         :  :     :              :  :                    +- Calc(select=[y0, x0 AS x1]): rowcount = 51916.32, cumulative cost = {3103494.7899999996 rows, 5084668.4 cpu, 5.5373376E7 io, 1261.1999999999998 network, 2886.7999999999997 memory}
         :  :     :              :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right]): rowcount = 51916.32, cumulative cost = {3051578.4699999997 rows, 5084668.4 cpu, 5.5373376E7 io, 1261.1999999999998 network, 2886.7999999999997 memory}
         :  :     :              :  :                          :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                          :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                          +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :  :     :              :  :                             +- Calc(select=[x, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397967.952375, cumulative cost = {8755784.60225 rows, 4.8541448452E8 cpu, 1.10742648E8 io, 6.367610958E7 network, 1.938253702E7 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397967.952375, cumulative cost = {8357816.649875 rows, 4.8541448452E8 cpu, 1.10742648E8 io, 6.367610958E7 network, 1.938253702E7 memory}
         :  :     :              :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 346065.68249999994, cumulative cost = {3345740.6975000002 rows, 7.660445505999999E7 cpu, 5.5373352E7 io, 8306813.579999999 network, 2858.7999999999997 memory}
         :  :     :              :           +- Calc(select=[x, y0]): rowcount = 346065.68249999994, cumulative cost = {2999675.015 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346065.68249999994, cumulative cost = {2653609.3325 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :  :     :              :                    +- Calc(select=[x, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397968.19048124994, cumulative cost = {8756330.2380875 rows, 4.85427890158E8 cpu, 1.10746932E8 io, 6.3677614857E7 network, 1.9386049332999997E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397968.19048124994, cumulative cost = {8358362.047606249 rows, 4.85427890158E8 cpu, 1.10746932E8 io, 6.3677614857E7 network, 1.9386049332999997E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 346067.26987499994, cumulative cost = {3346285.857124999 rows, 7.661784799899998E7 cpu, 5.5377636E7 io, 8308318.856999998 network, 6282.219999999999 memory}
         :  :     :                       +- Calc(select=[x, y0]): rowcount = 346067.26987499994, cumulative cost = {3000218.5872499994 rows, 1.847854666E7 cpu, 5.5377636E7 io, 2704.38 network, 6282.219999999999 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346067.26987499994, cumulative cost = {2654151.3173749996 rows, 1.847854666E7 cpu, 5.5377636E7 io, 2704.38 network, 6282.219999999999 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 61.1325, cumulative cost = {1030.0475000000001 rows, 21625.6 cpu, 8340.0 io, 2704.38 network, 2858.7999999999997 memory}
         :  :     :                                +- Calc(select=[x0, y]): rowcount = 61.1325, cumulative cost = {968.9150000000001 rows, 11844.4 cpu, 8340.0 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 61.1325, cumulative cost = {907.7825 rows, 11844.4 cpu, 8340.0 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :     :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :  :     :                                         +- Calc(select=[x, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                                            +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                                               :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :                                               +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                                  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 357221.0721373233, cumulative cost = {4.023518153438817E7 rows, 1.1917046279502146E9 cpu, 5.5372614E8 io, 1.4581514475434905E8 network, 7.92227155726399E7 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 357221.0721373233, cumulative cost = {3.987796046225084E7 rows, 1.1316914878311443E9 cpu, 5.5372614E8 io, 1.372418390230533E8 network, 7.92227155726399E7 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 357221.0721373233, cumulative cost = {3.952073939011352E7 rows, 1.1316914878311443E9 cpu, 5.5372614E8 io, 1.372418390230533E8 network, 7.92227155726399E7 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 74419.81424882227, cumulative cost = {3.454941031797619E7 rows, 7.250546253171537E8 cpu, 4.98356844E8 io, 8.18725430230533E7 network, 7.505520597470585E7 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.447499050372737E7 rows, 7.125520965233516E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.505520597470585E7 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 74419.81424882227, cumulative cost = {3.440057068947855E7 rows, 7.113613794953704E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.029233786278123E7 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.4326150875229724E7 rows, 6.982634921875777E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 7.029233786278123E7 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 410548.4825059023, cumulative cost = {3.42517310609809E7 rows, 6.916947164674833E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 6.552946975085661E7 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 63027.00953233071, cumulative cost = {2.0138961130538054E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 63027.00953233071, cumulative cost = {2.007593412100572E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 64702.79882540108, cumulative cost = {1.0734887841343772E7 rows, 9.052850452322999E7 cpu, 1.66120308E8 io, 6350090.185137104 network, 2.4896743856188547E7 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                             :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 347521.47297357157, cumulative cost = {1.3702221447936947E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347521.47297357157, cumulative cost = {1.3354699974963374E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 9755.819823810161, cumulative cost = {1.0700124501989802E7 rows, 8.179343588297544E7 cpu, 1.6612434E8 io, 5035394.689098923 network, 2.4908839856188547E7 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 9755.819823810161, cumulative cost = {1.0690368682165992E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9755.819823810161, cumulative cost = {1.068061286234218E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                                            :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 38687.39835399579, cumulative cost = {1.0541102669372E8 rows, 4.420970975116268E9 cpu, 1.328922408E9 io, 5.666250369130787E8 network, 2.691576768042876E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 38687.39835399579, cumulative cost = {1.05372339295366E8 rows, 4.420970975116268E9 cpu, 1.328922408E9 io, 5.666250369130787E8 network, 2.691576768042876E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 257862.2890266386, cumulative cost = {1.0533313179701202E8 rows, 4.418898538204055E9 cpu, 1.3289181E9 io, 5.666237241130787E8 network, 2.691546416042876E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 257862.2890266386, cumulative cost = {1.0507526950798538E8 rows, 4.414772741579629E9 cpu, 1.3289181E9 io, 5.666237241130787E8 network, 2.5265145510658273E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 257862.2890266386, cumulative cost = {1.0481740721895875E8 rows, 4.36938897871094E9 cpu, 1.3289181E9 io, 5.604350291764394E8 network, 2.5265145510658273E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1422537.4320530535, cumulative cost = {1.0455954492993212E8 rows, 4.346628379798092E9 cpu, 1.3289181E9 io, 5.604350291764394E8 network, 2.3614826860887787E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 1024569.2415718036, cumulative cost = {9.438067725979155E7 rows, 3.8597779522080383E9 cpu, 1.218171168E9 io, 4.967574143194394E8 network, 2.1676221927587786E8 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 626601.2891968036, cumulative cost = {8.460032341596976E7 rows, 3.3733388984464664E9 cpu, 1.10742852E9 io, 4.330813047394394E8 network, 1.9737968225587785E8 memory}
         :        :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 227466.35699680363, cumulative cost = {6.973028850837296E7 rows, 2.4841305319892693E9 cpu, 9.41316552E8 io, 3.126031667074394E8 network, 1.7465413084787786E8 memory}
         :        :           :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 155324.65168480374, cumulative cost = {5.297390977493215E7 rows, 1.8544734341393328E9 cpu, 7.19830752E8 io, 2.3414309392759946E8 network, 1.30441300985158E8 memory}
         :        :           :  :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 83183.01724780386, cumulative cost = {3.628970475605335E7 rows, 1.2248891113547082E9 cpu, 4.98345204E8 io, 1.556831080877595E8 network, 8.622864752243814E7 memory}
         :        :           :  :  :  :  :  :- Calc(select=[X0, X00 AS X1]): rowcount = 20453.201813503878, cumulative cost = {1.6135322648430951E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :        :           :  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20453.201813503878, cumulative cost = {1.6114869446617447E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :        :           :  :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :           :  :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :           :  :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :           :  :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :           :  :  :  :  :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :  :  :  :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                    +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 1476.1316766932337, cumulative cost = {3190438.391063945 rows, 8218016.524695228 cpu, 5.5382172E7 io, 271632.228511555 network, 1239668.3641115595 memory}
         :        :           :  :  :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 1476.1316766932337, cumulative cost = {3188962.2593872515 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :        :           :  :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1476.1316766932337, cumulative cost = {3187486.127710558 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :        :           :  :  :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3185295.9960338646 rows, 7845988.433667338 cpu, 5.5377888E7 io, 231921.0682709174 network, 1226816.3641115595 memory}
         :        :           :  :  :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9483.877844621558, cumulative cost = {3175812.118189243 rows, 7694246.388153394 cpu, 5.5377888E7 io, 231921.0682709174 network, 619848.1820557797 memory}
         :        :           :  :  :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3166328.2403446217 rows, 6025083.887499999 cpu, 5.5377888E7 io, 4308.0 network, 619848.1820557797 memory}
         :        :           :  :  :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52319.2875, cumulative cost = {3156844.3625000003 rows, 5187975.2875 cpu, 5.5377888E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :  :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :  :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :  :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 62729.81543429998, cumulative cost = {2.0071199090374596E7 rows, 6.891796810558517E8 cpu, 2.76850836E8 io, 8.849538872932796E7 network, 4.824971975819186E7 memory}
         :        :           :  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], build=[right]): rowcount = 62729.81543429998, cumulative cost = {2.0008469274940297E7 rows, 6.891796810558517E8 cpu, 2.76850836E8 io, 8.849538872932796E7 network, 4.824971975819186E7 memory}
         :        :           :  :  :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :  :  :  :  :        :  +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :        +- Exchange(distribution=[hash[y0]]): rowcount = 72140.51956199988, cumulative cost = {1.6600508709505998E7 rows, 6.253890908993556E8 cpu, 2.21481516E8 io, 8.018996672932796E7 network, 4.420982266271987E7 memory}
         :        :           :  :  :  :  :           +- Calc(select=[X0, y0]): rowcount = 72140.51956199988, cumulative cost = {1.6528368189943997E7 rows, 6.132694836129397E8 cpu, 2.21481516E8 io, 7.845859425983997E7 network, 4.420982266271987E7 memory}
         :        :           :  :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 72140.51956199988, cumulative cost = {1.6456227670381997E7 rows, 6.132694836129397E8 cpu, 2.21481516E8 io, 7.845859425983997E7 network, 4.420982266271987E7 memory}
         :        :           :  :  :  :  :                 :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :        :           :  :  :  :  :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :           :  :  :  :  :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :           :  :  :  :  :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :           :  :  :  :  :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :           :  :  :  :  :                 :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :  :  :  :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :  :  :  :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :  :  :  :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :  :  :  :                 :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :  :  :  :  :                    +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 72141.63443699988, cumulative cost = {1.6528880367193997E7 rows, 6.294289981329397E8 cpu, 2.21485548E8 io, 7.845998583983997E7 network, 4.4212653462719865E7 memory}
         :        :           :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 72141.63443699988, cumulative cost = {1.6456738732756997E7 rows, 6.294289981329397E8 cpu, 2.21485548E8 io, 7.845998583983997E7 network, 4.4212653462719865E7 memory}
         :        :           :  :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :        :           :  :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :           :  :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :           :  :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :           :  :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :           :  :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :  :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :  :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 346065.68249999994, cumulative cost = {3345740.6975000002 rows, 7.660445505999999E7 cpu, 5.5373352E7 io, 8306813.579999999 network, 2858.7999999999997 memory}
         :        :           :  :  :  :           +- Calc(select=[x, y0]): rowcount = 346065.68249999994, cumulative cost = {2999675.015 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :        :           :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346065.68249999994, cumulative cost = {2653609.3325 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :        :           :  :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :        :           :  :  :  :                    +- Calc(select=[x, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 72141.70531199989, cumulative cost = {1.6528912376443999E7 rows, 6.294296314929397E8 cpu, 2.214858E8 io, 7.846007277983996E7 network, 4.421282986271987E7 memory}
         :        :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 72141.70531199989, cumulative cost = {1.6456770671131998E7 rows, 6.294296314929397E8 cpu, 2.214858E8 io, 7.846007277983996E7 network, 4.421282986271987E7 memory}
         :        :           :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :        :           :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :           :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :           :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :           :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :           :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 346066.155, cumulative cost = {3345772.5650000004 rows, 7.660508464000002E7 cpu, 5.5373604E7 io, 8306900.5200000005 network, 3035.2 memory}
         :        :           :  :  :           +- Calc(select=[x, y0]): rowcount = 346066.155, cumulative cost = {2999706.41 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
         :        :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346066.155, cumulative cost = {2653640.2550000004 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
         :        :           :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :        :           :  :  :                    +- Calc(select=[x0, y]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[x AS X0, y00 AS X1]): rowcount = 399134.9322, cumulative cost = {1.42434336184E7 rows, 8.88581765168E8 cpu, 1.66111968E8 io, 1.20478138032E8 network, 2.2725551408E7 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 399134.9322, cumulative cost = {1.38442986862E7 rows, 8.88581765168E8 cpu, 1.66111968E8 io, 1.20478138032E8 network, 2.2725551408E7 memory}
         :        :           :  :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[hash[x]]): rowcount = 353845.54799999995, cumulative cost = {8831055.754 rows, 4.7970949678400004E8 cpu, 1.10742672E8 io, 6.5108842032000005E7 network, 2910200.7199999997 memory}
         :        :           :  :           +- Calc(select=[x, y0 AS y00]): rowcount = 353845.54799999995, cumulative cost = {8477210.206 rows, 4.2026344472E8 cpu, 1.10742672E8 io, 5.661654888E7 network, 2910200.7199999997 memory}
         :        :           :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x1)], select=[x, y, y0, x1], build=[right]): rowcount = 353845.54799999995, cumulative cost = {8123364.658 rows, 4.2026344472E8 cpu, 1.10742672E8 io, 5.661654888E7 network, 2910200.7199999997 memory}
         :        :           :  :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :  :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :                 +- Exchange(distribution=[hash[x1]]): rowcount = 51916.32, cumulative cost = {3155411.1099999994 rows, 1.380661016E7 cpu, 5.5373376E7 io, 1247252.88 network, 2886.7999999999997 memory}
         :        :           :  :                    +- Calc(select=[y0, x0 AS x1]): rowcount = 51916.32, cumulative cost = {3103494.7899999996 rows, 5084668.4 cpu, 5.5373376E7 io, 1261.1999999999998 network, 2886.7999999999997 memory}
         :        :           :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right]): rowcount = 51916.32, cumulative cost = {3051578.4699999997 rows, 5084668.4 cpu, 5.5373376E7 io, 1261.1999999999998 network, 2886.7999999999997 memory}
         :        :           :  :                          :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :                          :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :                          :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                          :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                          +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :        :           :  :                             +- Calc(select=[x, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397967.952375, cumulative cost = {8755784.60225 rows, 4.8541448452E8 cpu, 1.10742648E8 io, 6.367610958E7 network, 1.938253702E7 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397967.952375, cumulative cost = {8357816.649875 rows, 4.8541448452E8 cpu, 1.10742648E8 io, 6.367610958E7 network, 1.938253702E7 memory}
         :        :           :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 346065.68249999994, cumulative cost = {3345740.6975000002 rows, 7.660445505999999E7 cpu, 5.5373352E7 io, 8306813.579999999 network, 2858.7999999999997 memory}
         :        :           :           +- Calc(select=[x, y0]): rowcount = 346065.68249999994, cumulative cost = {2999675.015 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346065.68249999994, cumulative cost = {2653609.3325 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :        :           :                    +- Calc(select=[x, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :           :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397968.19048124994, cumulative cost = {8756330.2380875 rows, 4.85427890158E8 cpu, 1.10746932E8 io, 6.3677614857E7 network, 1.9386049332999997E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397968.19048124994, cumulative cost = {8358362.047606249 rows, 4.85427890158E8 cpu, 1.10746932E8 io, 6.3677614857E7 network, 1.9386049332999997E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 346067.26987499994, cumulative cost = {3346285.857124999 rows, 7.661784799899998E7 cpu, 5.5377636E7 io, 8308318.856999998 network, 6282.219999999999 memory}
         :        :                    +- Calc(select=[x, y0]): rowcount = 346067.26987499994, cumulative cost = {3000218.5872499994 rows, 1.847854666E7 cpu, 5.5377636E7 io, 2704.38 network, 6282.219999999999 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346067.26987499994, cumulative cost = {2654151.3173749996 rows, 1.847854666E7 cpu, 5.5377636E7 io, 2704.38 network, 6282.219999999999 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 61.1325, cumulative cost = {1030.0475000000001 rows, 21625.6 cpu, 8340.0 io, 2704.38 network, 2858.7999999999997 memory}
         :        :                             +- Calc(select=[x0, y]): rowcount = 61.1325, cumulative cost = {968.9150000000001 rows, 11844.4 cpu, 8340.0 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 61.1325, cumulative cost = {907.7825 rows, 11844.4 cpu, 8340.0 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :        :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :        :                                      +- Calc(select=[x, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                         +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                            :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                                            +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 15233.177666497362, cumulative cost = {8.370496659176642E7 rows, 2.455409814338669E9 cpu, 1.162829568E9 io, 2.9683925941273576E8 network, 1.935285857370473E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 15233.177666497362, cumulative cost = {8.368973341409992E7 rows, 2.455409814338669E9 cpu, 1.162829568E9 io, 2.9683925941273576E8 network, 1.935285857370473E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 90341.14563932574, cumulative cost = {4.916519761629408E7 rows, 1.7395993356171422E9 cpu, 6.64468692E8 io, 2.164796390003584E8 network, 1.1783333492265138E8 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 90341.14563932574, cumulative cost = {4.9074856470654756E7 rows, 1.738153877286913E9 cpu, 6.64468692E8 io, 2.164796390003584E8 network, 1.1205150160173453E8 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 90341.14563932574, cumulative cost = {4.898451532501543E7 rows, 1.7222538356543915E9 cpu, 6.64468692E8 io, 2.143114515050146E8 network, 1.1205150160173453E8 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 498380.98394147574, cumulative cost = {4.889417417937611E7 rows, 1.7142797399113278E9 cpu, 6.64468692E8 io, 2.143114515050146E8 network, 1.0626966828081769E8 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 470353.72812947584, cumulative cost = {3.214431580799064E7 rows, 1.1332369281144466E9 cpu, 4.42978884E8 io, 1.4290268744517463E8 network, 6.667781405457778E7 memory}
               :           :  :- Calc(select=[x AS X0, X1]): rowcount = 397999.94231314905, cumulative cost = {1.1946256119052742E7 rows, 4.9366387496156937E8 cpu, 1.66120008E8 io, 6.395092257541156E7 network, 2.0711667356473174E7 memory}
               :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 397999.94231314905, cumulative cost = {1.1548256176739592E7 rows, 4.9366387496156937E8 cpu, 1.66120008E8 io, 6.395092257541156E7 network, 2.0711667356473174E7 memory}
               :           :  :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :     +- Exchange(distribution=[hash[x]]): rowcount = 346278.9487543269, cumulative cost = {6536148.234426444 rows, 8.485213937153476E7 cpu, 1.10750712E8 io, 8581626.575411558 network, 1320046.2262308649 memory}
               :           :  :        +- Calc(select=[x, X1]): rowcount = 346278.9487543269, cumulative cost = {6189869.285672117 rows, 2.667727598080785E7 cpu, 1.10750712E8 io, 270931.80530771165 network, 1320046.2262308649 memory}
               :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346278.9487543269, cumulative cost = {5843590.336917791 rows, 2.667727598080785E7 cpu, 1.10750712E8 io, 270931.80530771165 network, 1320046.2262308649 memory}
               :           :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 1472.3250288462589, cumulative cost = {3190257.3881634637 rows, 8209065.380577081 cpu, 5.5381416E7 io, 270931.80530771165 network, 1237596.0246154743 memory}
               :           :  :                 +- Calc(select=[X0, X1]): rowcount = 1472.3250288462589, cumulative cost = {3188785.0631346176 rows, 7973493.375961679 cpu, 5.5381416E7 io, 235596.00461540144 network, 1237596.0246154743 memory}
               :           :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1472.3250288462589, cumulative cost = {3187312.7381057716 rows, 7973493.375961679 cpu, 5.5381416E7 io, 235596.00461540144 network, 1237596.0246154743 memory}
               :           :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :           :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :           :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :           :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :                       +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[X0, X10 AS X1]): rowcount = 72353.78581632682, cumulative cost = {1.9727705960808422E7 rows, 6.391026994247477E8 cpu, 2.76858876E8 io, 7.895176486976308E7 network, 4.596614669810461E7 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 72353.78581632682, cumulative cost = {1.9655352174992096E7 rows, 6.391026994247477E8 cpu, 2.76858876E8 io, 7.895176486976308E7 network, 4.596614669810461E7 memory}
               :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
               :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
               :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
               :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
               :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
               :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :           :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :        +- Exchange(distribution=[hash[x]]): rowcount = 347480.0250288462, cumulative cost = {6544141.988355773 rows, 8.626684161157718E7 cpu, 1.1074668E8 io, 8798592.609923113 network, 1756352.0353847444 memory}
               :           :           +- Calc(select=[x, X1]): rowcount = 347480.0250288462, cumulative cost = {6196661.963326926 rows, 2.789019740673102E7 cpu, 1.1074668E8 io, 459072.0092308029 network, 1756352.0353847444 memory}
               :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347480.0250288462, cumulative cost = {5849181.93829808 rows, 2.789019740673102E7 cpu, 1.1074668E8 io, 459072.0092308029 network, 1756352.0353847444 memory}
               :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :                 +- Exchange(distribution=[broadcast]): rowcount = 9479.500192308393, cumulative cost = {3194647.913269234 rows, 9357929.405192554 cpu, 5.5377384E7 io, 459072.0092308029 network, 1225500.0246154743 memory}
               :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :           :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :                                :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :                                :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, y AS X1]): rowcount = 28027.255811999894, cumulative cost = {1.6251477387443997E7 rows, 5.805444308129398E8 cpu, 2.21489808E8 io, 7.140876405983996E7 network, 3.959185422623991E7 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x1)], select=[X0, X1, y, x1], build=[right]): rowcount = 28027.255811999894, cumulative cost = {1.6223450131631996E7 rows, 5.805444308129398E8 cpu, 2.21489808E8 io, 7.140876405983996E7 network, 3.959185422623991E7 memory}
               :                 :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
               :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
               :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
               :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
               :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
               :                 :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :                 :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                 :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[hash[x1]]): rowcount = 51969.825, cumulative cost = {3156566.4750000006 rows, 3.00726546E7 cpu, 5.5377612E7 io, 1255591.7999999998 network, 24948.0 memory}
               :                    +- Calc(select=[y, x0 AS x1]): rowcount = 51969.825, cumulative cost = {3104596.6500000004 rows, 2.1341724E7 cpu, 5.5377612E7 io, 8316.0 network, 24948.0 memory}
               :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 51969.825, cumulative cost = {3052626.825 rows, 2.1341724E7 cpu, 5.5377612E7 io, 8316.0 network, 24948.0 memory}
               :                          :- Calc(select=[x, y]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :                          :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :                          :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                          :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :                          :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 11213.37213732334, cumulative cost = {3.450930262013934E7 rows, 7.149980425793138E8 cpu, 4.98360876E8 io, 8.035962041237734E7 network, 7.506730197470585E7 memory}
                  +- Calc(select=[X0, X1]): rowcount = 11213.37213732334, cumulative cost = {3.4498089248002015E7 rows, 7.132039030373421E8 cpu, 4.98360876E8 io, 8.009049948108158E7 network, 7.506730197470585E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 11213.37213732334, cumulative cost = {3.448687587586469E7 rows, 7.132039030373421E8 cpu, 4.98360876E8 io, 8.009049948108158E7 network, 7.506730197470585E7 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.447499050372737E7 rows, 7.125520965233516E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.505520597470585E7 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 74419.81424882227, cumulative cost = {3.440057068947855E7 rows, 7.113613794953704E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.029233786278123E7 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.4326150875229724E7 rows, 6.982634921875777E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 7.029233786278123E7 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 410548.4825059023, cumulative cost = {3.42517310609809E7 rows, 6.916947164674833E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 6.552946975085661E7 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 63027.00953233071, cumulative cost = {2.0138961130538054E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 63027.00953233071, cumulative cost = {2.007593412100572E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 64702.79882540108, cumulative cost = {1.0734887841343772E7 rows, 9.052850452322999E7 cpu, 1.66120308E8 io, 6350090.185137104 network, 2.4896743856188547E7 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 347521.47297357157, cumulative cost = {1.3702221447936947E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347521.47297357157, cumulative cost = {1.3354699974963374E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
                        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 9755.819823810161, cumulative cost = {1.0700124501989802E7 rows, 8.179343588297544E7 cpu, 1.6612434E8 io, 5035394.689098923 network, 2.4908839856188547E7 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 9755.819823810161, cumulative cost = {1.0690368682165992E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9755.819823810161, cumulative cost = {1.068061286234218E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,2,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#2] Exchange(distribution=[hash[X1]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[17])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[5])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[20])
         :        :           :              :        :           :     :- Reused(reference_id=[1])
         :        :           :              :        :           :     +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :              :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[21])
         :        :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :              :        +- Reused(reference_id=[2])
         :        :           :              :- Reused(reference_id=[3])
         :        :           :              +- Exchange(distribution=[broadcast])(reuse_id=[11])
         :        :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[4])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Exchange(distribution=[hash[x]])
         :        :           :        :  +- Reused(reference_id=[1])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[16])
         :        :           :                       :  +- Reused(reference_id=[4])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[10])
         :        :           :                             :- Reused(reference_id=[1])
         :        :           :                             +- Reused(reference_id=[2])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[5])
         :        :                    +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :                       +- Reused(reference_id=[6])
         :        +- Reused(reference_id=[7])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,3,2,2,1,1,2,1,2,1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :  :- Calc(select=[X0, X00 AS X1])\n:  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :  :  :  :     :- [#11] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :  :  :     +- [#12] Exchange(distribution=[broadcast])\n:  :  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, X0, y00], build=[right])\n:  :  :  :  :        :- [#13] Exchange(distribution=[hash[x]], shuffle_mode=[BATCH])\n:  :  :  :  :        +- [#14] Exchange(distribution=[hash[y0]])\n:  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n:  :  :  :        :- [#7] Exchange(distribution=[hash[X1]])\n:  :  :  :        +- [#4] Exchange(distribution=[hash[x]])\n:  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n:  :  :        :- [#7] Exchange(distribution=[hash[X1]])\n:  :  :        +- [#8] Exchange(distribution=[hash[x]])\n:  :  +- Calc(select=[x AS X0, y00 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])\n:  :        :- [#5] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:  :        +- [#6] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[x AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[9])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[x0, y])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], isBroadcast=[true], build=[right])
         :              :                 :- Reused(reference_id=[4])
         :              :                 +- Exchange(distribution=[broadcast])(reuse_id=[8])
         :              :                    +- Calc(select=[x, y])
         :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])
         :              :                          :- Reused(reference_id=[6])
         :              :                          +- Reused(reference_id=[2])
         :              :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])(reuse_id=[14])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[8])
         :              :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0 AS y00])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x1)], select=[x, y, y0, x1], build=[right])
         :              :        :- Reused(reference_id=[9])
         :              :        +- Exchange(distribution=[hash[x1]])
         :              :           +- Calc(select=[y0, x0 AS x1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right])
         :              :                 :- Calc(select=[x, y0])(reuse_id=[12])
         :              :                 :  +- Reused(reference_id=[10])
         :              :                 +- Reused(reference_id=[8])
         :              :- Exchange(distribution=[hash[X1]])(reuse_id=[13])
         :              :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :              :     +- Exchange(distribution=[hash[X0, X1]])
         :              :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :              :- Reused(reference_id=[1])
         :              :              :- Reused(reference_id=[11])
         :              :              :- Reused(reference_id=[9])
         :              :              +- Exchange(distribution=[hash[x]])
         :              :                 +- Reused(reference_id=[12])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[x0, y])
         :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[19])
         :              :                 :- Reused(reference_id=[4])
         :              :                 +- Reused(reference_id=[2])
         :              :- Reused(reference_id=[13])
         :              :- Reused(reference_id=[14])
         :              :- Reused(reference_id=[15])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[11])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[12])
         :              :                 :     +- Reused(reference_id=[11])
         :              :                 +- Reused(reference_id=[16])
         :              :- Exchange(distribution=[hash[x]], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[12])
         :              +- Exchange(distribution=[hash[y0]])
         :                 +- Calc(select=[X0, y0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])
         :                       :- Reused(reference_id=[13])
         :                       +- Exchange(distribution=[hash[x]], shuffle_mode=[BATCH])
         :                          +- Reused(reference_id=[12])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Reused(reference_id=[9])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[17])
         :- Reused(reference_id=[18])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[x, x0])
         :     +- Reused(reference_id=[19])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[1,0,1,0,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#3] Exchange(distribution=[hash[y]])\n:  :     +- [#4] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#1] Exchange(distribution=[hash[X1]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x1)], select=[X0, X1, y, x1], build=[right])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#2] Exchange(distribution=[hash[x1]])\n])
                  :- Reused(reference_id=[13])
                  :- Exchange(distribution=[hash[x1]])
                  :  +- Calc(select=[y, x0 AS x1])
                  :     +- MultipleInput(readOrder=[0,1,0], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:- Calc(select=[x, y])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#2] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#3] Exchange(distribution=[broadcast])\n+- [#1] Exchange(distribution=[broadcast])\n])
                  :        :- Reused(reference_id=[11])
                  :        :- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[7])
                  :- Reused(reference_id=[9])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Calc(select=[X0, X1])
                  :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                  :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[22])
                  :                 :  +- Exchange(distribution=[hash[X0, X1]])
                  :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :                 :        +- Union(all=[true], union=[X0, X1])
                  :                 :           :- Calc(select=[x0 AS X0, y AS X1])
                  :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :                 :           :     :- Calc(select=[y, x0])
                  :                 :           :     :  +- Reused(reference_id=[20])
                  :                 :           :     +- Reused(reference_id=[7])
                  :                 :           +- Reused(reference_id=[21])
                  :                 +- Reused(reference_id=[7])
                  :- Reused(reference_id=[13])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, X1])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                           :  +- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- Reused(reference_id=[22])

Job has been submitted with JobID 276d0c8454a78b0bc5fbd69d53fc136c
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, s_4.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT r_0.x AS X0, s_5.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN b AS b_4 ON s_2.y = b_4.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...

------------> using sink uuid: c9b5b0fc_5b9d_4f3c_9d44_c5b043da328c

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, s_4.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT r_0.x AS X0, s_5.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN b AS b_4 ON s_2.y = b_4.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :  :     :  :  :  :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$10])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :     +- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :        :  :  :  :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :        :  :  :  :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$10])
   :        :  :  :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :     +- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 73386.89754053052, cumulative cost = {9.779484121670175E8 rows, 4.256369187764789E10 cpu, 1.215391104E10 io, 5.499490131000197E9 network, 2.314217818964989E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 73386.89754053052, cumulative cost = {9.778750252694769E8 rows, 4.256251768728724E10 cpu, 1.215391104E10 io, 5.499490131000197E9 network, 2.309521057522395E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 73386.89754053052, cumulative cost = {9.778016383719363E8 rows, 4.254960159332011E10 cpu, 1.215391104E10 io, 5.497728845459225E9 network, 2.309521057522395E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 404850.2367977591, cumulative cost = {9.777282514743958E8 rows, 4.254312398953134E10 cpu, 1.215391104E10 io, 5.497728845459225E9 network, 2.304824296079801E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 363830.2902593256, cumulative cost = {7.181300381832311E8 rows, 3.1236743550935524E10 cpu, 8.923095816E9 io, 4.0324488509545665E9 network, 1.7555525959820595E9 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 256348.5268339126, cumulative cost = {4.2489640482557267E8 rows, 1.895339182275731E10 cpu, 5.23078416E9 io, 2.4581427375647607E9 network, 1.0078455689675696E9 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 256348.5268339126, cumulative cost = {4.246400562987388E8 rows, 1.895339182275731E10 cpu, 5.23078416E9 io, 2.4581427375647607E9 network, 1.0078455689675696E9 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 716460.1895027534, cumulative cost = {2.9337047803005105E8 rows, 1.2397606540008392E10 cpu, 3.692304852E9 io, 1.591499096337872E9 network, 7.477022446144898E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 716460.1895027534, cumulative cost = {2.926540178405483E8 rows, 1.227724122817193E10 cpu, 3.692304852E9 io, 1.574304051789806E9 network, 7.477022446144898E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 716460.1895027534, cumulative cost = {2.919375576510455E8 rows, 1.2265777865139887E10 cpu, 3.692304852E9 io, 1.574304051789806E9 network, 7.018487924863136E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 716460.1895027534, cumulative cost = {2.912210974615427E8 rows, 1.2139680871787403E10 cpu, 3.692304852E9 io, 1.5571090072417397E9 network, 7.018487924863136E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 3952464.0923287654, cumulative cost = {2.9050463727203995E8 rows, 1.2076441446310143E10 cpu, 3.692304852E9 io, 1.5571090072417397E9 network, 6.559953403581374E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 2846720.3932912657, cumulative cost = {2.6222408189588618E8 rows, 1.0723765234333813E10 cpu, 3.384606288E9 io, 1.3801854881557398E9 network, 6.021391438241373E8 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 1740976.9774162658, cumulative cost = {2.3505013390334493E8 rows, 9.372216240780521E9 cpu, 3.076914504E9 io, 1.2032643540157397E9 network, 5.482885121641374E8 memory}
         :  :     :              :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 631990.1745600158, cumulative cost = {1.9373463196559116E8 rows, 6.901582726265105E9 cpu, 2.615380416E9 io, 8.685201975787396E8 network, 4.851495098111373E8 memory}
         :  :     :              :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 431549.3409221924, cumulative cost = {1.4717920508174688E8 rows, 5.152186014115752E9 cpu, 1.999997688E9 io, 6.505282872546362E8 network, 3.6232642898874056E8 memory}
         :  :     :              :  :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 231108.38915936893, cumulative cost = {1.008241656827904E8 rows, 3.402988687200036E9 cpu, 1.38461454E9 io, 4.3253623203053266E8 network, 2.395030541663438E8 memory}
         :  :     :              :  :  :  :  :  :- Calc(select=[X0, X00 AS X1]): rowcount = 56815.38727619545, cumulative cost = {4.4826816665192574E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :  :     :              :  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56815.38727619545, cumulative cost = {4.477000127791638E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :  :     :              :  :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :     :              :  :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :     :              :  :  :  :  :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :  :  :  :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                    +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 4024.00925581335, cumulative cost = {8860873.74288371 rows, 2.2651304825347934E7 cpu, 1.53862644E8 io, 740441.7030696564 network, 3402209.231627392 memory}
         :  :     :              :  :  :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 4024.00925581335, cumulative cost = {8856849.733627897 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :  :     :              :  :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4024.00925581335, cumulative cost = {8852825.724372083 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :  :     :              :  :  :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8847671.71511627 rows, 2.1702449517441086E7 cpu, 1.53855864E8 io, 637085.480930136 network, 3381869.231627392 memory}
         :  :     :              :  :  :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26261.728372089, cumulative cost = {8821409.98674418 rows, 2.128226186348766E7 cpu, 1.53855864E8 io, 637085.480930136 network, 1701118.615813696 memory}
         :  :     :              :  :  :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8795148.25837209 rows, 1.6660197669999998E7 cpu, 1.53855864E8 io, 6804.0 network, 1701118.615813696 memory}
         :  :     :              :  :  :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144876.90999999997, cumulative cost = {8768886.530000001 rows, 1.434216711E7 cpu, 1.53855864E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :  :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :  :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 174293.00188317348, cumulative cost = {5.576624062843846E7 rows, 1.9147910576910505E9 cpu, 7.69218252E8 io, 2.4587647498541126E8 network, 1.3404293539211486E8 memory}
         :  :     :              :  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], build=[right]): rowcount = 174293.00188317348, cumulative cost = {5.559194762655529E7 rows, 1.9147910576910505E9 cpu, 7.69218252E8 io, 2.4587647498541126E8 network, 1.3404293539211486E8 memory}
         :  :     :              :  :  :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :  :  :  :  :        :  +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        +- Exchange(distribution=[hash[y0]]): rowcount = 200438.94588782344, cumulative cost = {4.612301442467211E7 rows, 1.737550756723948E9 cpu, 6.15375948E8 io, 2.2280010538541126E8 network, 1.2281832642239675E8 memory}
         :  :     :              :  :  :  :  :           +- Calc(select=[X0, y0]): rowcount = 200438.94588782344, cumulative cost = {4.5922575478784285E7 rows, 1.7038770138147936E9 cpu, 6.15375948E8 io, 2.179895706841035E8 network, 1.2281832642239675E8 memory}
         :  :     :              :  :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 200438.94588782344, cumulative cost = {4.572213653289646E7 rows, 1.7038770138147936E9 cpu, 6.15375948E8 io, 2.179895706841035E8 network, 1.2281832642239675E8 memory}
         :  :     :              :  :  :  :  :                 :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :  :     :              :  :  :  :  :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :     :              :  :  :  :  :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :  :  :  :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :  :  :  :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :     :              :  :  :  :  :                 :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :  :  :  :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :  :  :  :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :  :  :  :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :  :  :  :                 :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :  :  :  :  :                    +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 200440.95176282345, cumulative cost = {4.592349005803428E7 rows, 1.7487657775747936E9 cpu, 6.15383148E8 io, 2.179920552241035E8 network, 1.2282337482239676E8 memory}
         :  :     :              :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 200440.95176282345, cumulative cost = {4.572304910627145E7 rows, 1.7487657775747936E9 cpu, 6.15383148E8 io, 2.179920552241035E8 network, 1.2282337482239676E8 memory}
         :  :     :              :  :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :  :     :              :  :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :     :              :  :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :     :              :  :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :  :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :  :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 961527.7725, cumulative cost = {9295550.7675 rows, 2.1283333098000002E8 cpu, 1.53849504E8 io, 2.307885414E7 network, 5076.4 memory}
         :  :     :              :  :  :  :           +- Calc(select=[x, y0]): rowcount = 961527.7725, cumulative cost = {8334022.995 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :  :     :              :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961527.7725, cumulative cost = {7372495.2225 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :  :     :              :  :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
         :  :     :              :  :  :  :                    +- Calc(select=[x, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 200440.83363782344, cumulative cost = {4.592343670928428E7 rows, 1.7487647219747937E9 cpu, 6.15382728E8 io, 2.179919103241035E8 network, 1.2282308082239676E8 memory}
         :  :     :              :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 200440.83363782344, cumulative cost = {4.572299587564646E7 rows, 1.7487647219747937E9 cpu, 6.15382728E8 io, 2.179919103241035E8 network, 1.2282308082239676E8 memory}
         :  :     :              :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :  :     :              :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :     :              :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :     :              :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 961526.985, cumulative cost = {9295497.655000001 rows, 2.1283228168E8 cpu, 1.53849084E8 io, 2.3078709240000002E7 network, 4782.4 memory}
         :  :     :              :  :  :           +- Calc(select=[x, y0]): rowcount = 961526.985, cumulative cost = {8333970.670000001 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
         :  :     :              :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961526.985, cumulative cost = {7372443.6850000005 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
         :  :     :              :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :  :     :              :  :  :                    +- Calc(select=[x0, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[x AS X0, y00 AS X1]): rowcount = 1108986.80285625, cumulative cost = {3.9574524960337505E7 rows, 2.468892537538E9 cpu, 4.61534088E8 io, 3.34744156437E8 network, 6.3139002353E7 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 1108986.80285625, cumulative cost = {3.846553815748125E7 rows, 2.468892537538E9 cpu, 4.61534088E8 io, 3.34744156437E8 network, 6.3139002353E7 memory}
         :  :     :              :  :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[hash[x]]): rowcount = 983150.352375, cumulative cost = {2.4536361354625E7 rows, 1.3328506147189999E9 cpu, 3.07691808E8 io, 1.8090187643699998E8 network, 8082582.620000001 memory}
         :  :     :              :  :           +- Calc(select=[x, y0 AS y00]): rowcount = 983150.352375, cumulative cost = {2.355321100225E7 rows, 1.16768135552E9 cpu, 3.07691808E8 io, 1.5730626798E8 network, 8082582.620000001 memory}
         :  :     :              :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x1)], select=[x, y, y0, x1], build=[right]): rowcount = 983150.352375, cumulative cost = {2.2570060649875E7 rows, 1.16768135552E9 cpu, 3.07691808E8 io, 1.5730626798E8 network, 8082582.620000001 memory}
         :  :     :              :  :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :  :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                 +- Exchange(distribution=[hash[x1]]): rowcount = 144240.6825, cumulative cost = {8766720.297499998 rows, 3.835071006E7 cpu, 1.53849528E8 io, 3463987.98 network, 5104.4 memory}
         :  :     :              :  :                    +- Calc(select=[y0, x0 AS x1]): rowcount = 144240.6825, cumulative cost = {8622479.614999998 rows, 1.4118275399999999E7 cpu, 1.53849528E8 io, 2211.6 network, 5104.4 memory}
         :  :     :              :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right]): rowcount = 144240.6825, cumulative cost = {8478238.9325 rows, 1.4118275399999999E7 cpu, 1.53849528E8 io, 2211.6 network, 5104.4 memory}
         :  :     :              :  :                          :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                          :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                          +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
         :  :     :              :  :                             +- Calc(select=[x, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105743.415875, cumulative cost = {2.432722759925E7 rows, 1.34870227316E9 cpu, 3.07691784E8 io, 1.7692113414E8 network, 5.3850631660000004E7 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105743.415875, cumulative cost = {2.3221484183375E7 rows, 1.34870227316E9 cpu, 3.07691784E8 io, 1.7692113414E8 network, 5.3850631660000004E7 memory}
         :  :     :              :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 961527.7725, cumulative cost = {9295550.7675 rows, 2.1283333098000002E8 cpu, 1.53849504E8 io, 2.307885414E7 network, 5076.4 memory}
         :  :     :              :           +- Calc(select=[x, y0]): rowcount = 961527.7725, cumulative cost = {8334022.995 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961527.7725, cumulative cost = {7372495.2225 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
         :  :     :              :                    +- Calc(select=[x, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105743.6990375, cumulative cost = {2.4328091283825E7 rows, 1.348723747884E9 cpu, 3.07698564E8 io, 1.76923519086E8 network, 5.3856196534E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105743.6990375, cumulative cost = {2.32223475847875E7 rows, 1.348723747884E9 cpu, 3.07698564E8 io, 1.76923519086E8 network, 5.3856196534E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 961529.66025, cumulative cost = {9296413.88575 rows, 2.12854790602E8 cpu, 1.53856284E8 io, 2.3081239086E7 network, 10535.56 memory}
         :  :     :                       +- Calc(select=[x, y0]): rowcount = 961529.66025, cumulative cost = {8334884.2255 rows, 5.131780768E7 cpu, 1.53856284E8 io, 4527.24 network, 10535.56 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961529.66025, cumulative cost = {7373354.56525 rows, 5.131780768E7 cpu, 1.53856284E8 io, 4527.24 network, 10535.56 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 102.735, cumulative cost = {1729.9049999999997 rows, 36225.799999999996 cpu, 14004.0 io, 4527.24 network, 4782.4 memory}
         :  :     :                                +- Calc(select=[x, y]): rowcount = 102.735, cumulative cost = {1627.1699999999998 rows, 19788.199999999997 cpu, 14004.0 io, 2061.6 network, 4782.4 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 102.735, cumulative cost = {1524.435 rows, 19788.199999999997 cpu, 14004.0 io, 2061.6 network, 4782.4 memory}
         :  :     :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :  :     :                                         +- Calc(select=[x0, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                                            +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                                               :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :                                               +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                                  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 992529.9893899972, cumulative cost = {1.3101322974185382E8 rows, 6.542113361317773E9 cpu, 1.538479308E9 io, 8.666436412268888E8 network, 2.2002155374092555E8 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 992529.9893899972, cumulative cost = {1.3002069975246382E8 rows, 6.375368323100253E9 cpu, 1.538479308E9 io, 8.428229214815289E8 network, 2.2002155374092555E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 992529.9893899972, cumulative cost = {1.2902816976307382E8 rows, 6.375368323100253E9 cpu, 1.538479308E9 io, 8.428229214815289E8 network, 2.2002155374092555E8 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 206771.5959333153, cumulative cost = {1.1521544977368382E8 rows, 5.245537430332787E9 cpu, 1.384637028E9 io, 6.889806414815289E8 network, 2.0844234436865988E8 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.150086781777505E8 rows, 5.210799802215989E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 2.0844234436865988E8 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 206771.5959333153, cumulative cost = {1.1480190658181718E8 rows, 5.207491456681056E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 1.952089622289277E8 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.1459513498588386E8 rows, 5.171099655796793E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.952089622289277E8 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 1140687.6756224853, cumulative cost = {1.1438836338995054E8 rows, 5.152848652986834E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.8197558008919552E8 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 175115.28760917907, cumulative cost = {6.2360548979872726E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 175115.28760917907, cumulative cost = {6.218543369226354E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 179761.68948028254, cumulative cost = {3.623319088764287E7 rows, 1.328521145834818E9 cpu, 4.61548092E8 io, 1.7147682713648033E8 network, 6.914175207815145E7 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                             :     :              :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                             :     :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 965572.3880133063, cumulative cost = {5.088712673445533E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965572.3880133063, cumulative cost = {4.992155434644203E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :  :                                   :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                                   :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[hash[X0]]): rowcount = 27054.25342204238, cumulative cost = {3.613579195842872E7 rows, 1.3044051900928757E9 cpu, 4.61555292E8 io, 1.678190486710826E8 network, 6.916335207815145E7 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 27054.25342204238, cumulative cost = {3.6108737705006674E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 27054.25342204238, cumulative cost = {3.608168345158463E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                                            :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                                            :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :           :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 107481.76342541301, cumulative cost = {2.928698030673991E8 rows, 1.2282987897887953E10 cpu, 3.692311656E9 io, 1.5743061133898058E9 network, 7.477070270144898E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 107481.76342541301, cumulative cost = {2.927623213039737E8 rows, 1.2282987897887953E10 cpu, 3.692311656E9 io, 1.5743061133898058E9 network, 7.477070270144898E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 716460.1895027534, cumulative cost = {2.926540178405483E8 rows, 1.227724122817193E10 cpu, 3.692304852E9 io, 1.574304051789806E9 network, 7.477022446144898E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 716460.1895027534, cumulative cost = {2.919375576510455E8 rows, 1.2265777865139887E10 cpu, 3.692304852E9 io, 1.574304051789806E9 network, 7.018487924863136E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 716460.1895027534, cumulative cost = {2.912210974615427E8 rows, 1.2139680871787403E10 cpu, 3.692304852E9 io, 1.5571090072417397E9 network, 7.018487924863136E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 3952464.0923287654, cumulative cost = {2.9050463727203995E8 rows, 1.2076441446310143E10 cpu, 3.692304852E9 io, 1.5571090072417397E9 network, 6.559953403581374E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 2846720.3932912657, cumulative cost = {2.6222408189588618E8 rows, 1.0723765234333813E10 cpu, 3.384606288E9 io, 1.3801854881557398E9 network, 6.021391438241373E8 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 1740976.9774162658, cumulative cost = {2.3505013390334493E8 rows, 9.372216240780521E9 cpu, 3.076914504E9 io, 1.2032643540157397E9 network, 5.482885121641374E8 memory}
         :        :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 631990.1745600158, cumulative cost = {1.9373463196559116E8 rows, 6.901582726265105E9 cpu, 2.615380416E9 io, 8.685201975787396E8 network, 4.851495098111373E8 memory}
         :        :           :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 431549.3409221924, cumulative cost = {1.4717920508174688E8 rows, 5.152186014115752E9 cpu, 1.999997688E9 io, 6.505282872546362E8 network, 3.6232642898874056E8 memory}
         :        :           :  :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 231108.38915936893, cumulative cost = {1.008241656827904E8 rows, 3.402988687200036E9 cpu, 1.38461454E9 io, 4.3253623203053266E8 network, 2.395030541663438E8 memory}
         :        :           :  :  :  :  :  :- Calc(select=[X0, X00 AS X1]): rowcount = 56815.38727619545, cumulative cost = {4.4826816665192574E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :        :           :  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56815.38727619545, cumulative cost = {4.477000127791638E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :        :           :  :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :           :  :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :           :  :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :           :  :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :           :  :  :  :  :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :  :  :  :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                    +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 4024.00925581335, cumulative cost = {8860873.74288371 rows, 2.2651304825347934E7 cpu, 1.53862644E8 io, 740441.7030696564 network, 3402209.231627392 memory}
         :        :           :  :  :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 4024.00925581335, cumulative cost = {8856849.733627897 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :        :           :  :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4024.00925581335, cumulative cost = {8852825.724372083 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :        :           :  :  :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8847671.71511627 rows, 2.1702449517441086E7 cpu, 1.53855864E8 io, 637085.480930136 network, 3381869.231627392 memory}
         :        :           :  :  :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26261.728372089, cumulative cost = {8821409.98674418 rows, 2.128226186348766E7 cpu, 1.53855864E8 io, 637085.480930136 network, 1701118.615813696 memory}
         :        :           :  :  :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8795148.25837209 rows, 1.6660197669999998E7 cpu, 1.53855864E8 io, 6804.0 network, 1701118.615813696 memory}
         :        :           :  :  :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144876.90999999997, cumulative cost = {8768886.530000001 rows, 1.434216711E7 cpu, 1.53855864E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :  :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :  :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :  :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 174293.00188317348, cumulative cost = {5.576624062843846E7 rows, 1.9147910576910505E9 cpu, 7.69218252E8 io, 2.4587647498541126E8 network, 1.3404293539211486E8 memory}
         :        :           :  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], build=[right]): rowcount = 174293.00188317348, cumulative cost = {5.559194762655529E7 rows, 1.9147910576910505E9 cpu, 7.69218252E8 io, 2.4587647498541126E8 network, 1.3404293539211486E8 memory}
         :        :           :  :  :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :  :  :  :  :        :  +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :        +- Exchange(distribution=[hash[y0]]): rowcount = 200438.94588782344, cumulative cost = {4.612301442467211E7 rows, 1.737550756723948E9 cpu, 6.15375948E8 io, 2.2280010538541126E8 network, 1.2281832642239675E8 memory}
         :        :           :  :  :  :  :           +- Calc(select=[X0, y0]): rowcount = 200438.94588782344, cumulative cost = {4.5922575478784285E7 rows, 1.7038770138147936E9 cpu, 6.15375948E8 io, 2.179895706841035E8 network, 1.2281832642239675E8 memory}
         :        :           :  :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 200438.94588782344, cumulative cost = {4.572213653289646E7 rows, 1.7038770138147936E9 cpu, 6.15375948E8 io, 2.179895706841035E8 network, 1.2281832642239675E8 memory}
         :        :           :  :  :  :  :                 :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :        :           :  :  :  :  :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :           :  :  :  :  :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :           :  :  :  :  :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :           :  :  :  :  :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :           :  :  :  :  :                 :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :  :  :  :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :  :  :  :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :  :  :  :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :  :  :  :                 :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :  :  :  :  :                    +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 200440.95176282345, cumulative cost = {4.592349005803428E7 rows, 1.7487657775747936E9 cpu, 6.15383148E8 io, 2.179920552241035E8 network, 1.2282337482239676E8 memory}
         :        :           :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 200440.95176282345, cumulative cost = {4.572304910627145E7 rows, 1.7487657775747936E9 cpu, 6.15383148E8 io, 2.179920552241035E8 network, 1.2282337482239676E8 memory}
         :        :           :  :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :        :           :  :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :           :  :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :           :  :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :           :  :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :           :  :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :  :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :  :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 961527.7725, cumulative cost = {9295550.7675 rows, 2.1283333098000002E8 cpu, 1.53849504E8 io, 2.307885414E7 network, 5076.4 memory}
         :        :           :  :  :  :           +- Calc(select=[x, y0]): rowcount = 961527.7725, cumulative cost = {8334022.995 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :        :           :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961527.7725, cumulative cost = {7372495.2225 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :        :           :  :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
         :        :           :  :  :  :                    +- Calc(select=[x, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 200440.83363782344, cumulative cost = {4.592343670928428E7 rows, 1.7487647219747937E9 cpu, 6.15382728E8 io, 2.179919103241035E8 network, 1.2282308082239676E8 memory}
         :        :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 200440.83363782344, cumulative cost = {4.572299587564646E7 rows, 1.7487647219747937E9 cpu, 6.15382728E8 io, 2.179919103241035E8 network, 1.2282308082239676E8 memory}
         :        :           :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :        :           :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :           :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :           :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :           :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :           :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 961526.985, cumulative cost = {9295497.655000001 rows, 2.1283228168E8 cpu, 1.53849084E8 io, 2.3078709240000002E7 network, 4782.4 memory}
         :        :           :  :  :           +- Calc(select=[x, y0]): rowcount = 961526.985, cumulative cost = {8333970.670000001 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
         :        :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961526.985, cumulative cost = {7372443.6850000005 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
         :        :           :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :        :           :  :  :                    +- Calc(select=[x0, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[x AS X0, y00 AS X1]): rowcount = 1108986.80285625, cumulative cost = {3.9574524960337505E7 rows, 2.468892537538E9 cpu, 4.61534088E8 io, 3.34744156437E8 network, 6.3139002353E7 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 1108986.80285625, cumulative cost = {3.846553815748125E7 rows, 2.468892537538E9 cpu, 4.61534088E8 io, 3.34744156437E8 network, 6.3139002353E7 memory}
         :        :           :  :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[hash[x]]): rowcount = 983150.352375, cumulative cost = {2.4536361354625E7 rows, 1.3328506147189999E9 cpu, 3.07691808E8 io, 1.8090187643699998E8 network, 8082582.620000001 memory}
         :        :           :  :           +- Calc(select=[x, y0 AS y00]): rowcount = 983150.352375, cumulative cost = {2.355321100225E7 rows, 1.16768135552E9 cpu, 3.07691808E8 io, 1.5730626798E8 network, 8082582.620000001 memory}
         :        :           :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x1)], select=[x, y, y0, x1], build=[right]): rowcount = 983150.352375, cumulative cost = {2.2570060649875E7 rows, 1.16768135552E9 cpu, 3.07691808E8 io, 1.5730626798E8 network, 8082582.620000001 memory}
         :        :           :  :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :  :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :                 +- Exchange(distribution=[hash[x1]]): rowcount = 144240.6825, cumulative cost = {8766720.297499998 rows, 3.835071006E7 cpu, 1.53849528E8 io, 3463987.98 network, 5104.4 memory}
         :        :           :  :                    +- Calc(select=[y0, x0 AS x1]): rowcount = 144240.6825, cumulative cost = {8622479.614999998 rows, 1.4118275399999999E7 cpu, 1.53849528E8 io, 2211.6 network, 5104.4 memory}
         :        :           :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right]): rowcount = 144240.6825, cumulative cost = {8478238.9325 rows, 1.4118275399999999E7 cpu, 1.53849528E8 io, 2211.6 network, 5104.4 memory}
         :        :           :  :                          :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :                          :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :                          :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                          :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                          +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
         :        :           :  :                             +- Calc(select=[x, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105743.415875, cumulative cost = {2.432722759925E7 rows, 1.34870227316E9 cpu, 3.07691784E8 io, 1.7692113414E8 network, 5.3850631660000004E7 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105743.415875, cumulative cost = {2.3221484183375E7 rows, 1.34870227316E9 cpu, 3.07691784E8 io, 1.7692113414E8 network, 5.3850631660000004E7 memory}
         :        :           :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 961527.7725, cumulative cost = {9295550.7675 rows, 2.1283333098000002E8 cpu, 1.53849504E8 io, 2.307885414E7 network, 5076.4 memory}
         :        :           :           +- Calc(select=[x, y0]): rowcount = 961527.7725, cumulative cost = {8334022.995 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961527.7725, cumulative cost = {7372495.2225 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
         :        :           :                    +- Calc(select=[x, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :           :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105743.6990375, cumulative cost = {2.4328091283825E7 rows, 1.348723747884E9 cpu, 3.07698564E8 io, 1.76923519086E8 network, 5.3856196534E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105743.6990375, cumulative cost = {2.32223475847875E7 rows, 1.348723747884E9 cpu, 3.07698564E8 io, 1.76923519086E8 network, 5.3856196534E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 961529.66025, cumulative cost = {9296413.88575 rows, 2.12854790602E8 cpu, 1.53856284E8 io, 2.3081239086E7 network, 10535.56 memory}
         :        :                    +- Calc(select=[x, y0]): rowcount = 961529.66025, cumulative cost = {8334884.2255 rows, 5.131780768E7 cpu, 1.53856284E8 io, 4527.24 network, 10535.56 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961529.66025, cumulative cost = {7373354.56525 rows, 5.131780768E7 cpu, 1.53856284E8 io, 4527.24 network, 10535.56 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 102.735, cumulative cost = {1729.9049999999997 rows, 36225.799999999996 cpu, 14004.0 io, 4527.24 network, 4782.4 memory}
         :        :                             +- Calc(select=[x, y]): rowcount = 102.735, cumulative cost = {1627.1699999999998 rows, 19788.199999999997 cpu, 14004.0 io, 2061.6 network, 4782.4 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 102.735, cumulative cost = {1524.435 rows, 19788.199999999997 cpu, 14004.0 io, 2061.6 network, 4782.4 memory}
         :        :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :        :                                      +- Calc(select=[x0, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                         +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                            :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                                            +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 41019.94653843347, cumulative cost = {2.591933630543669E8 rows, 1.130597558835902E10 cpu, 3.230815224E9 io, 1.4652799945046577E9 network, 5.492717000977415E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], build=[right]): rowcount = 41019.94653843347, cumulative cost = {2.5915234310782844E8 rows, 1.130597558835902E10 cpu, 3.230815224E9 io, 1.4652799945046577E9 network, 5.492717000977415E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 242360.57086622587, cumulative cost = {1.4400812776536947E8 rows, 6.086007318675995E9 cpu, 1.846170996E9 io, 7.805081335801686E8 network, 3.390658343232417E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 242360.57086622587, cumulative cost = {1.4376576719450325E8 rows, 6.045290742770469E9 cpu, 1.846170996E9 io, 7.746914798793792E8 network, 3.390658343232417E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 242360.57086622587, cumulative cost = {1.4352340662363702E8 rows, 6.041412973636609E9 cpu, 1.846170996E9 io, 7.746914798793792E8 network, 3.2355475778780323E8 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 242360.57086622587, cumulative cost = {1.432810460527708E8 rows, 5.998757513164153E9 cpu, 1.846170996E9 io, 7.688748261785897E8 network, 3.2355475778780323E8 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1337019.7922788807, cumulative cost = {1.4303868548190457E8 rows, 5.977365196487691E9 cpu, 1.846170996E9 io, 7.688748261785897E8 network, 3.0804368125236475E8 memory}
               :              :- Union(all=[true], union=[X0, X1]): rowcount = 1306862.0468957073, cumulative cost = {9.571616754007506E7 rows, 4.2254664351935163E9 cpu, 1.230781092E9 io, 5.508692690944862E8 network, 1.8518344282996798E8 memory}
               :              :  :- Calc(select=[x AS X0, X1]): rowcount = 1105832.07045755, cumulative cost = {3.3189480964450616E7 rows, 1.371488855565088E9 cpu, 4.61548464E8 io, 1.7767474034828407E8 network, 5.7510015907064155E7 memory}
               :              :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 1105832.07045755, cumulative cost = {3.2083648893993065E7 rows, 1.371488855565088E9 cpu, 4.61548464E8 io, 1.7767474034828407E8 network, 5.7510015907064155E7 memory}
               :              :  :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :     +- Exchange(distribution=[hash[x]]): rowcount = 962118.8030503338, cumulative cost = {1.8157626823535513E7 rows, 2.3561518514068538E8 cpu, 3.07706184E8 io, 2.3832460348284073E7 network, 3631362.936245466 memory}
               :              :  :        +- Calc(select=[x, X1]): rowcount = 962118.8030503338, cumulative cost = {1.7195508020485178E7 rows, 7.397922622822931E7 cpu, 3.07706184E8 io, 741609.075076062 network, 3631362.936245466 memory}
               :              :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962118.8030503338, cumulative cost = {1.6233389217434842E7 rows, 7.397922622822931E7 cpu, 3.07706184E8 io, 741609.075076062 network, 3631362.936245466 memory}
               :              :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :              +- Exchange(distribution=[broadcast]): rowcount = 4030.3536688916415, cumulative cost = {8861175.414384509 rows, 2.2666223398878183E7 cpu, 1.53863904E8 io, 741609.075076062 network, 3405663.130787534 memory}
               :              :  :                 +- Calc(select=[X0, X1]): rowcount = 4030.3536688916415, cumulative cost = {8857145.060715618 rows, 2.202136681185552E7 cpu, 1.53863904E8 io, 644880.5870226626 network, 3405663.130787534 memory}
               :              :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4030.3536688916415, cumulative cost = {8853114.707046727 rows, 2.202136681185552E7 cpu, 1.53863904E8 io, 644880.5870226626 network, 3405663.130787534 memory}
               :              :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :              :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :              :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :              :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :                       +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  +- Calc(select=[X0, X10 AS X1]): rowcount = 201029.97643815717, cumulative cost = {6.121982452872873E7 rows, 2.8526707175815325E9 cpu, 7.69232628E8 io, 3.7319452874620223E8 network, 1.2767342692290384E8 memory}
               :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 201029.97643815717, cumulative cost = {6.101879455229057E7 rows, 2.8526707175815325E9 cpu, 7.69232628E8 io, 3.7319452874620223E8 network, 1.2767342692290384E8 memory}
               :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
               :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
               :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
               :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
               :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
               :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :              :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :        +- Exchange(distribution=[hash[x]]): rowcount = 965454.6036688916, cumulative cost = {2.4590707188843787E7 rows, 1.3167068563373878E9 cpu, 3.07698984E8 io, 1.782813276620987E8 network, 4855128.500507081 memory}
               :              :           +- Calc(select=[x, X1]): rowcount = 965454.6036688916, cumulative cost = {2.3625252585174896E7 rows, 1.154510482921014E9 cpu, 3.07698984E8 io, 1.5511041717404532E8 network, 4855128.500507081 memory}
               :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965454.6036688916, cumulative cost = {2.2659797981506005E7 rows, 1.154510482921014E9 cpu, 3.07698984E8 io, 1.5511041717404532E8 network, 4855128.500507081 memory}
               :              :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :                 +- Exchange(distribution=[hash[X0]]): rowcount = 26269.02445927761, cumulative cost = {8874153.377837114 rows, 2.6123610725339938E7 cpu, 1.53856704E8 io, 1268137.1740453253 network, 3384063.130787534 memory}
               :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :              :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :                                :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :                                :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[X0, y AS X1]): rowcount = 30157.745383173515, cumulative cost = {4.5985498149550624E7 rows, 1.7505617415018961E9 cpu, 6.15389904E8 io, 2.180055570841035E8 network, 1.2286023842239675E8 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[X0, y, x], isBroadcast=[true], build=[right]): rowcount = 30157.745383173515, cumulative cost = {4.595534040416745E7 rows, 1.7505617415018961E9 cpu, 6.15389904E8 io, 2.180055570841035E8 network, 1.2286023842239675E8 memory}
               :                    :- Calc(select=[X0, y]): rowcount = 200451.63588782345, cumulative cost = {4.592398265878428E7 rows, 1.7488573284147935E9 cpu, 6.15382704E8 io, 2.179983570841035E8 network, 1.2283863842239675E8 memory}
               :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], build=[left]): rowcount = 200451.63588782345, cumulative cost = {4.5723531022896454E7 rows, 1.7488573284147935E9 cpu, 6.15382704E8 io, 2.179983570841035E8 network, 1.2283863842239675E8 memory}
               :                    :     :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
               :                    :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
               :                    :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
               :                    :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
               :                    :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
               :                    :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                    :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                    :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                    :     :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                    :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                    :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                    :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                    :     +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
               :                    :        +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                    :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[X0]]): rowcount = 31105.739389997292, cumulative cost = {1.151031953959205E8 rows, 5.217780539200975E9 cpu, 1.384644228E9 io, 6.847718609244893E8 network, 2.0846394436865988E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 31105.739389997292, cumulative cost = {1.150720896565305E8 rows, 5.212554774983456E9 cpu, 1.384644228E9 io, 6.840253231791294E8 network, 2.0846394436865988E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 31105.739389997292, cumulative cost = {1.150409839171405E8 rows, 5.212554774983456E9 cpu, 1.384644228E9 io, 6.840253231791294E8 network, 2.0846394436865988E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.150086781777505E8 rows, 5.210799802215989E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 2.0844234436865988E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 206771.5959333153, cumulative cost = {1.1480190658181718E8 rows, 5.207491456681056E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 1.952089622289277E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.1459513498588386E8 rows, 5.171099655796793E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.952089622289277E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1140687.6756224853, cumulative cost = {1.1438836338995054E8 rows, 5.152848652986834E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.8197558008919552E8 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 175115.28760917907, cumulative cost = {6.2360548979872726E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 175115.28760917907, cumulative cost = {6.218543369226354E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 179761.68948028254, cumulative cost = {3.623319088764287E7 rows, 1.328521145834818E9 cpu, 4.61548092E8 io, 1.7147682713648033E8 network, 6.914175207815145E7 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :           :     :              :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :     :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 965572.3880133063, cumulative cost = {5.088712673445533E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965572.3880133063, cumulative cost = {4.992155434644203E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
                        :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[hash[X0]]): rowcount = 27054.25342204238, cumulative cost = {3.613579195842872E7 rows, 1.3044051900928757E9 cpu, 4.61555292E8 io, 1.678190486710826E8 network, 6.916335207815145E7 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 27054.25342204238, cumulative cost = {3.6108737705006674E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 27054.25342204238, cumulative cost = {3.608168345158463E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[1,0,1,2,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#3] Exchange(distribution=[hash[X1]])\n:  :     +- [#4] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#5] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#6] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], build=[right])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#2] Exchange(distribution=[hash[X0]])\n])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[0,1,0,1,2,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#2] Exchange(distribution=[hash[y]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#4] Exchange(distribution=[hash[X1]])\n:        +- [#5] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[X0, y, x], isBroadcast=[true], build=[right])\n      :- Calc(select=[X0, y])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], build=[left])\n      :     :- [#4] Exchange(distribution=[hash[X1]])\n      :     +- [#7] Exchange(distribution=[hash[x]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[3])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[6])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- Calc(select=[x0 AS X0, y AS X1])
         :              :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :                 :           :     :- Calc(select=[y, x0])
         :              :                 :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[9])
         :              :                 :           :     :     :- Reused(reference_id=[1])
         :              :                 :           :     :     +- Exchange(distribution=[broadcast])(reuse_id=[5])
         :              :                 :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :              :                 :           :     +- Reused(reference_id=[2])
         :              :                 :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[10])
         :              :                 :              +- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[2])
         :              :- Exchange(distribution=[hash[X1]])(reuse_id=[7])
         :              :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :              :     +- Exchange(distribution=[hash[X0, X1]])
         :              :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :              :- Reused(reference_id=[1])
         :              :              :- Exchange(distribution=[broadcast])(reuse_id=[8])
         :              :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[12])
         :              :              :- Reused(reference_id=[4])
         :              :              +- Exchange(distribution=[hash[x]])
         :              :                 +- Calc(select=[x, y0])(reuse_id=[15])
         :              :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[13])
         :              :                       :- Reused(reference_id=[1])
         :              :                       +- Reused(reference_id=[5])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :              :        :- Reused(reference_id=[4])
         :              :        +- Exchange(distribution=[hash[X0]])
         :              :           +- Reused(reference_id=[6])
         :              :- Reused(reference_id=[7])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, y])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Reused(reference_id=[8])
         :- Exchange(distribution=[hash[X0]])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[hash[X0]])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[14])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Reused(reference_id=[4])
         :        :           :              :- Exchange(distribution=[hash[x]])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[11])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- Reused(reference_id=[9])
         :        :           :              :        :           +- Reused(reference_id=[10])
         :        :           :              :        +- Reused(reference_id=[5])
         :        :           :              :- Reused(reference_id=[11])
         :        :           :              +- Reused(reference_id=[8])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Exchange(distribution=[hash[x]])
         :        :           :        :  +- Reused(reference_id=[1])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[20])
         :        :           :                       :  +- Reused(reference_id=[12])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- Reused(reference_id=[13])
         :        :           :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[hash[X0]])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[14])
         :        :                    +- Reused(reference_id=[2])
         :        +- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[22])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,3,2,2,1,1,2,1,2,1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :  :- Calc(select=[X0, X00 AS X1])\n:  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :  :  :  :     :- [#11] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :  :  :     +- [#12] Exchange(distribution=[broadcast])\n:  :  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, X0, y00], build=[right])\n:  :  :  :  :        :- [#13] Exchange(distribution=[hash[x]], shuffle_mode=[BATCH])\n:  :  :  :  :        +- [#14] Exchange(distribution=[hash[y0]])\n:  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n:  :  :  :        :- [#7] Exchange(distribution=[hash[X1]])\n:  :  :  :        +- [#4] Exchange(distribution=[hash[x]])\n:  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n:  :  :        :- [#7] Exchange(distribution=[hash[X1]])\n:  :  :        +- [#8] Exchange(distribution=[hash[x]])\n:  :  +- Calc(select=[x AS X0, y00 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])\n:  :        :- [#5] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:  :        +- [#6] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[x AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Reused(reference_id=[4])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[x, y])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], isBroadcast=[true], build=[right])
         :              :                 :- Reused(reference_id=[3])
         :              :                 +- Exchange(distribution=[broadcast])(reuse_id=[17])
         :              :                    +- Calc(select=[x0, y])
         :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[23])
         :              :                          :- Reused(reference_id=[12])
         :              :                          +- Reused(reference_id=[5])
         :              :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])(reuse_id=[18])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])(reuse_id=[16])
         :              :           +- Calc(select=[x, y])
         :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])
         :              :                 :- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[5])
         :              :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0 AS y00])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x1)], select=[x, y, y0, x1], build=[right])
         :              :        :- Reused(reference_id=[4])
         :              :        +- Exchange(distribution=[hash[x1]])
         :              :           +- Calc(select=[y0, x0 AS x1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right])
         :              :                 :- Reused(reference_id=[15])
         :              :                 +- Reused(reference_id=[16])
         :              :- Reused(reference_id=[7])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[17])
         :              :- Reused(reference_id=[7])
         :              :- Reused(reference_id=[18])
         :              :- Reused(reference_id=[19])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[8])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[15])
         :              :                 :     +- Reused(reference_id=[8])
         :              :                 +- Reused(reference_id=[20])
         :              :- Exchange(distribution=[hash[x]], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[15])
         :              +- Exchange(distribution=[hash[y0]])
         :                 +- Calc(select=[X0, y0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])
         :                       :- Reused(reference_id=[7])
         :                       +- Exchange(distribution=[hash[x]], shuffle_mode=[BATCH])
         :                          +- Reused(reference_id=[15])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[21])
         :- Reused(reference_id=[22])
         +- Exchange(distribution=[broadcast])
            +- Calc(select=[x, x0])
               +- Reused(reference_id=[23])

Job has been submitted with JobID 7e5b25c5a88aa1f3d06e1f31d0c4149c
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, s_4.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT r_0.x AS X0, s_5.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN b AS b_4 ON s_2.y = b_4.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 17ccf142_613c_4fb9_9374_33f8f4a9cf7f

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, s_4.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT r_0.x AS X0, s_5.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN b AS b_4 ON s_2.y = b_4.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :  :     :  :  :  :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$10])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :     +- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :        :  :  :  :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :        :  :  :  :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$10])
   :        :  :  :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :     +- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 73386.89754053052, cumulative cost = {9.779484121670175E8 rows, 4.256369187764789E10 cpu, 1.215391104E10 io, 5.499490131000197E9 network, 2.314217818964989E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 73386.89754053052, cumulative cost = {9.778750252694769E8 rows, 4.256251768728724E10 cpu, 1.215391104E10 io, 5.499490131000197E9 network, 2.309521057522395E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 73386.89754053052, cumulative cost = {9.778016383719363E8 rows, 4.254960159332011E10 cpu, 1.215391104E10 io, 5.497728845459225E9 network, 2.309521057522395E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 404850.2367977591, cumulative cost = {9.777282514743958E8 rows, 4.254312398953134E10 cpu, 1.215391104E10 io, 5.497728845459225E9 network, 2.304824296079801E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 363830.2902593256, cumulative cost = {7.181300381832311E8 rows, 3.1236743550935524E10 cpu, 8.923095816E9 io, 4.0324488509545665E9 network, 1.7555525959820595E9 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 256348.5268339126, cumulative cost = {4.2489640482557267E8 rows, 1.895339182275731E10 cpu, 5.23078416E9 io, 2.4581427375647607E9 network, 1.0078455689675696E9 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 256348.5268339126, cumulative cost = {4.246400562987388E8 rows, 1.895339182275731E10 cpu, 5.23078416E9 io, 2.4581427375647607E9 network, 1.0078455689675696E9 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 716460.1895027534, cumulative cost = {2.9337047803005105E8 rows, 1.2397606540008392E10 cpu, 3.692304852E9 io, 1.591499096337872E9 network, 7.477022446144898E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 716460.1895027534, cumulative cost = {2.926540178405483E8 rows, 1.227724122817193E10 cpu, 3.692304852E9 io, 1.574304051789806E9 network, 7.477022446144898E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 716460.1895027534, cumulative cost = {2.919375576510455E8 rows, 1.2265777865139887E10 cpu, 3.692304852E9 io, 1.574304051789806E9 network, 7.018487924863136E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 716460.1895027534, cumulative cost = {2.912210974615427E8 rows, 1.2139680871787403E10 cpu, 3.692304852E9 io, 1.5571090072417397E9 network, 7.018487924863136E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 3952464.0923287654, cumulative cost = {2.9050463727203995E8 rows, 1.2076441446310143E10 cpu, 3.692304852E9 io, 1.5571090072417397E9 network, 6.559953403581374E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 2846720.3932912657, cumulative cost = {2.6222408189588618E8 rows, 1.0723765234333813E10 cpu, 3.384606288E9 io, 1.3801854881557398E9 network, 6.021391438241373E8 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 1740976.9774162658, cumulative cost = {2.3505013390334493E8 rows, 9.372216240780521E9 cpu, 3.076914504E9 io, 1.2032643540157397E9 network, 5.482885121641374E8 memory}
         :  :     :              :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 631990.1745600158, cumulative cost = {1.9373463196559116E8 rows, 6.901582726265105E9 cpu, 2.615380416E9 io, 8.685201975787396E8 network, 4.851495098111373E8 memory}
         :  :     :              :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 431549.3409221924, cumulative cost = {1.4717920508174688E8 rows, 5.152186014115752E9 cpu, 1.999997688E9 io, 6.505282872546362E8 network, 3.6232642898874056E8 memory}
         :  :     :              :  :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 231108.38915936893, cumulative cost = {1.008241656827904E8 rows, 3.402988687200036E9 cpu, 1.38461454E9 io, 4.3253623203053266E8 network, 2.395030541663438E8 memory}
         :  :     :              :  :  :  :  :  :- Calc(select=[X0, X00 AS X1]): rowcount = 56815.38727619545, cumulative cost = {4.4826816665192574E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :  :     :              :  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56815.38727619545, cumulative cost = {4.477000127791638E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :  :     :              :  :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :     :              :  :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :     :              :  :  :  :  :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :  :  :  :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                    +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 4024.00925581335, cumulative cost = {8860873.74288371 rows, 2.2651304825347934E7 cpu, 1.53862644E8 io, 740441.7030696564 network, 3402209.231627392 memory}
         :  :     :              :  :  :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 4024.00925581335, cumulative cost = {8856849.733627897 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :  :     :              :  :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4024.00925581335, cumulative cost = {8852825.724372083 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :  :     :              :  :  :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8847671.71511627 rows, 2.1702449517441086E7 cpu, 1.53855864E8 io, 637085.480930136 network, 3381869.231627392 memory}
         :  :     :              :  :  :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26261.728372089, cumulative cost = {8821409.98674418 rows, 2.128226186348766E7 cpu, 1.53855864E8 io, 637085.480930136 network, 1701118.615813696 memory}
         :  :     :              :  :  :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8795148.25837209 rows, 1.6660197669999998E7 cpu, 1.53855864E8 io, 6804.0 network, 1701118.615813696 memory}
         :  :     :              :  :  :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144876.90999999997, cumulative cost = {8768886.530000001 rows, 1.434216711E7 cpu, 1.53855864E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :  :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :  :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 174293.00188317348, cumulative cost = {5.576624062843846E7 rows, 1.9147910576910505E9 cpu, 7.69218252E8 io, 2.4587647498541126E8 network, 1.3404293539211486E8 memory}
         :  :     :              :  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], build=[right]): rowcount = 174293.00188317348, cumulative cost = {5.559194762655529E7 rows, 1.9147910576910505E9 cpu, 7.69218252E8 io, 2.4587647498541126E8 network, 1.3404293539211486E8 memory}
         :  :     :              :  :  :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :  :  :  :  :        :  +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        +- Exchange(distribution=[hash[y0]]): rowcount = 200438.94588782344, cumulative cost = {4.612301442467211E7 rows, 1.737550756723948E9 cpu, 6.15375948E8 io, 2.2280010538541126E8 network, 1.2281832642239675E8 memory}
         :  :     :              :  :  :  :  :           +- Calc(select=[X0, y0]): rowcount = 200438.94588782344, cumulative cost = {4.5922575478784285E7 rows, 1.7038770138147936E9 cpu, 6.15375948E8 io, 2.179895706841035E8 network, 1.2281832642239675E8 memory}
         :  :     :              :  :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 200438.94588782344, cumulative cost = {4.572213653289646E7 rows, 1.7038770138147936E9 cpu, 6.15375948E8 io, 2.179895706841035E8 network, 1.2281832642239675E8 memory}
         :  :     :              :  :  :  :  :                 :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :  :     :              :  :  :  :  :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :     :              :  :  :  :  :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :  :  :  :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :  :  :  :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :     :              :  :  :  :  :                 :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :  :  :  :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :  :  :  :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :  :  :  :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :  :  :  :                 :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :  :  :  :  :                    +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 200440.95176282345, cumulative cost = {4.592349005803428E7 rows, 1.7487657775747936E9 cpu, 6.15383148E8 io, 2.179920552241035E8 network, 1.2282337482239676E8 memory}
         :  :     :              :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 200440.95176282345, cumulative cost = {4.572304910627145E7 rows, 1.7487657775747936E9 cpu, 6.15383148E8 io, 2.179920552241035E8 network, 1.2282337482239676E8 memory}
         :  :     :              :  :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :  :     :              :  :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :     :              :  :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :     :              :  :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :  :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :  :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 961527.7725, cumulative cost = {9295550.7675 rows, 2.1283333098000002E8 cpu, 1.53849504E8 io, 2.307885414E7 network, 5076.4 memory}
         :  :     :              :  :  :  :           +- Calc(select=[x, y0]): rowcount = 961527.7725, cumulative cost = {8334022.995 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :  :     :              :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961527.7725, cumulative cost = {7372495.2225 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :  :     :              :  :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
         :  :     :              :  :  :  :                    +- Calc(select=[x, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 200440.83363782344, cumulative cost = {4.592343670928428E7 rows, 1.7487647219747937E9 cpu, 6.15382728E8 io, 2.179919103241035E8 network, 1.2282308082239676E8 memory}
         :  :     :              :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 200440.83363782344, cumulative cost = {4.572299587564646E7 rows, 1.7487647219747937E9 cpu, 6.15382728E8 io, 2.179919103241035E8 network, 1.2282308082239676E8 memory}
         :  :     :              :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :  :     :              :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :     :              :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :     :              :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 961526.985, cumulative cost = {9295497.655000001 rows, 2.1283228168E8 cpu, 1.53849084E8 io, 2.3078709240000002E7 network, 4782.4 memory}
         :  :     :              :  :  :           +- Calc(select=[x, y0]): rowcount = 961526.985, cumulative cost = {8333970.670000001 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
         :  :     :              :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961526.985, cumulative cost = {7372443.6850000005 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
         :  :     :              :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :  :     :              :  :  :                    +- Calc(select=[x0, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[x AS X0, y00 AS X1]): rowcount = 1108986.80285625, cumulative cost = {3.9574524960337505E7 rows, 2.468892537538E9 cpu, 4.61534088E8 io, 3.34744156437E8 network, 6.3139002353E7 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 1108986.80285625, cumulative cost = {3.846553815748125E7 rows, 2.468892537538E9 cpu, 4.61534088E8 io, 3.34744156437E8 network, 6.3139002353E7 memory}
         :  :     :              :  :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[hash[x]]): rowcount = 983150.352375, cumulative cost = {2.4536361354625E7 rows, 1.3328506147189999E9 cpu, 3.07691808E8 io, 1.8090187643699998E8 network, 8082582.620000001 memory}
         :  :     :              :  :           +- Calc(select=[x, y0 AS y00]): rowcount = 983150.352375, cumulative cost = {2.355321100225E7 rows, 1.16768135552E9 cpu, 3.07691808E8 io, 1.5730626798E8 network, 8082582.620000001 memory}
         :  :     :              :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x1)], select=[x, y, y0, x1], build=[right]): rowcount = 983150.352375, cumulative cost = {2.2570060649875E7 rows, 1.16768135552E9 cpu, 3.07691808E8 io, 1.5730626798E8 network, 8082582.620000001 memory}
         :  :     :              :  :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :  :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                 +- Exchange(distribution=[hash[x1]]): rowcount = 144240.6825, cumulative cost = {8766720.297499998 rows, 3.835071006E7 cpu, 1.53849528E8 io, 3463987.98 network, 5104.4 memory}
         :  :     :              :  :                    +- Calc(select=[y0, x0 AS x1]): rowcount = 144240.6825, cumulative cost = {8622479.614999998 rows, 1.4118275399999999E7 cpu, 1.53849528E8 io, 2211.6 network, 5104.4 memory}
         :  :     :              :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right]): rowcount = 144240.6825, cumulative cost = {8478238.9325 rows, 1.4118275399999999E7 cpu, 1.53849528E8 io, 2211.6 network, 5104.4 memory}
         :  :     :              :  :                          :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                          :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                          +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
         :  :     :              :  :                             +- Calc(select=[x, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105743.415875, cumulative cost = {2.432722759925E7 rows, 1.34870227316E9 cpu, 3.07691784E8 io, 1.7692113414E8 network, 5.3850631660000004E7 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105743.415875, cumulative cost = {2.3221484183375E7 rows, 1.34870227316E9 cpu, 3.07691784E8 io, 1.7692113414E8 network, 5.3850631660000004E7 memory}
         :  :     :              :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 961527.7725, cumulative cost = {9295550.7675 rows, 2.1283333098000002E8 cpu, 1.53849504E8 io, 2.307885414E7 network, 5076.4 memory}
         :  :     :              :           +- Calc(select=[x, y0]): rowcount = 961527.7725, cumulative cost = {8334022.995 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961527.7725, cumulative cost = {7372495.2225 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
         :  :     :              :                    +- Calc(select=[x, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105743.6990375, cumulative cost = {2.4328091283825E7 rows, 1.348723747884E9 cpu, 3.07698564E8 io, 1.76923519086E8 network, 5.3856196534E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105743.6990375, cumulative cost = {2.32223475847875E7 rows, 1.348723747884E9 cpu, 3.07698564E8 io, 1.76923519086E8 network, 5.3856196534E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 961529.66025, cumulative cost = {9296413.88575 rows, 2.12854790602E8 cpu, 1.53856284E8 io, 2.3081239086E7 network, 10535.56 memory}
         :  :     :                       +- Calc(select=[x, y0]): rowcount = 961529.66025, cumulative cost = {8334884.2255 rows, 5.131780768E7 cpu, 1.53856284E8 io, 4527.24 network, 10535.56 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961529.66025, cumulative cost = {7373354.56525 rows, 5.131780768E7 cpu, 1.53856284E8 io, 4527.24 network, 10535.56 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 102.735, cumulative cost = {1729.9049999999997 rows, 36225.799999999996 cpu, 14004.0 io, 4527.24 network, 4782.4 memory}
         :  :     :                                +- Calc(select=[x, y]): rowcount = 102.735, cumulative cost = {1627.1699999999998 rows, 19788.199999999997 cpu, 14004.0 io, 2061.6 network, 4782.4 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 102.735, cumulative cost = {1524.435 rows, 19788.199999999997 cpu, 14004.0 io, 2061.6 network, 4782.4 memory}
         :  :     :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :  :     :                                         +- Calc(select=[x0, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                                            +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                                               :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :                                               +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                                  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 992529.9893899972, cumulative cost = {1.3101322974185382E8 rows, 6.542113361317773E9 cpu, 1.538479308E9 io, 8.666436412268888E8 network, 2.2002155374092555E8 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 992529.9893899972, cumulative cost = {1.3002069975246382E8 rows, 6.375368323100253E9 cpu, 1.538479308E9 io, 8.428229214815289E8 network, 2.2002155374092555E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 992529.9893899972, cumulative cost = {1.2902816976307382E8 rows, 6.375368323100253E9 cpu, 1.538479308E9 io, 8.428229214815289E8 network, 2.2002155374092555E8 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 206771.5959333153, cumulative cost = {1.1521544977368382E8 rows, 5.245537430332787E9 cpu, 1.384637028E9 io, 6.889806414815289E8 network, 2.0844234436865988E8 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.150086781777505E8 rows, 5.210799802215989E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 2.0844234436865988E8 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 206771.5959333153, cumulative cost = {1.1480190658181718E8 rows, 5.207491456681056E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 1.952089622289277E8 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.1459513498588386E8 rows, 5.171099655796793E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.952089622289277E8 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 1140687.6756224853, cumulative cost = {1.1438836338995054E8 rows, 5.152848652986834E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.8197558008919552E8 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 175115.28760917907, cumulative cost = {6.2360548979872726E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 175115.28760917907, cumulative cost = {6.218543369226354E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 179761.68948028254, cumulative cost = {3.623319088764287E7 rows, 1.328521145834818E9 cpu, 4.61548092E8 io, 1.7147682713648033E8 network, 6.914175207815145E7 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                             :     :              :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                             :     :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 965572.3880133063, cumulative cost = {5.088712673445533E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965572.3880133063, cumulative cost = {4.992155434644203E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :  :                                   :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                                   :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[hash[X0]]): rowcount = 27054.25342204238, cumulative cost = {3.613579195842872E7 rows, 1.3044051900928757E9 cpu, 4.61555292E8 io, 1.678190486710826E8 network, 6.916335207815145E7 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 27054.25342204238, cumulative cost = {3.6108737705006674E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 27054.25342204238, cumulative cost = {3.608168345158463E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                                            :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                                            :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :           :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 107481.76342541301, cumulative cost = {2.928698030673991E8 rows, 1.2282987897887953E10 cpu, 3.692311656E9 io, 1.5743061133898058E9 network, 7.477070270144898E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 107481.76342541301, cumulative cost = {2.927623213039737E8 rows, 1.2282987897887953E10 cpu, 3.692311656E9 io, 1.5743061133898058E9 network, 7.477070270144898E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 716460.1895027534, cumulative cost = {2.926540178405483E8 rows, 1.227724122817193E10 cpu, 3.692304852E9 io, 1.574304051789806E9 network, 7.477022446144898E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 716460.1895027534, cumulative cost = {2.919375576510455E8 rows, 1.2265777865139887E10 cpu, 3.692304852E9 io, 1.574304051789806E9 network, 7.018487924863136E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 716460.1895027534, cumulative cost = {2.912210974615427E8 rows, 1.2139680871787403E10 cpu, 3.692304852E9 io, 1.5571090072417397E9 network, 7.018487924863136E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 3952464.0923287654, cumulative cost = {2.9050463727203995E8 rows, 1.2076441446310143E10 cpu, 3.692304852E9 io, 1.5571090072417397E9 network, 6.559953403581374E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 2846720.3932912657, cumulative cost = {2.6222408189588618E8 rows, 1.0723765234333813E10 cpu, 3.384606288E9 io, 1.3801854881557398E9 network, 6.021391438241373E8 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 1740976.9774162658, cumulative cost = {2.3505013390334493E8 rows, 9.372216240780521E9 cpu, 3.076914504E9 io, 1.2032643540157397E9 network, 5.482885121641374E8 memory}
         :        :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 631990.1745600158, cumulative cost = {1.9373463196559116E8 rows, 6.901582726265105E9 cpu, 2.615380416E9 io, 8.685201975787396E8 network, 4.851495098111373E8 memory}
         :        :           :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 431549.3409221924, cumulative cost = {1.4717920508174688E8 rows, 5.152186014115752E9 cpu, 1.999997688E9 io, 6.505282872546362E8 network, 3.6232642898874056E8 memory}
         :        :           :  :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 231108.38915936893, cumulative cost = {1.008241656827904E8 rows, 3.402988687200036E9 cpu, 1.38461454E9 io, 4.3253623203053266E8 network, 2.395030541663438E8 memory}
         :        :           :  :  :  :  :  :- Calc(select=[X0, X00 AS X1]): rowcount = 56815.38727619545, cumulative cost = {4.4826816665192574E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :        :           :  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56815.38727619545, cumulative cost = {4.477000127791638E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :        :           :  :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :           :  :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :           :  :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :           :  :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :           :  :  :  :  :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :  :  :  :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                    +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 4024.00925581335, cumulative cost = {8860873.74288371 rows, 2.2651304825347934E7 cpu, 1.53862644E8 io, 740441.7030696564 network, 3402209.231627392 memory}
         :        :           :  :  :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 4024.00925581335, cumulative cost = {8856849.733627897 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :        :           :  :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4024.00925581335, cumulative cost = {8852825.724372083 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :        :           :  :  :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8847671.71511627 rows, 2.1702449517441086E7 cpu, 1.53855864E8 io, 637085.480930136 network, 3381869.231627392 memory}
         :        :           :  :  :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26261.728372089, cumulative cost = {8821409.98674418 rows, 2.128226186348766E7 cpu, 1.53855864E8 io, 637085.480930136 network, 1701118.615813696 memory}
         :        :           :  :  :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8795148.25837209 rows, 1.6660197669999998E7 cpu, 1.53855864E8 io, 6804.0 network, 1701118.615813696 memory}
         :        :           :  :  :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144876.90999999997, cumulative cost = {8768886.530000001 rows, 1.434216711E7 cpu, 1.53855864E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :  :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :  :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :  :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 174293.00188317348, cumulative cost = {5.576624062843846E7 rows, 1.9147910576910505E9 cpu, 7.69218252E8 io, 2.4587647498541126E8 network, 1.3404293539211486E8 memory}
         :        :           :  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], build=[right]): rowcount = 174293.00188317348, cumulative cost = {5.559194762655529E7 rows, 1.9147910576910505E9 cpu, 7.69218252E8 io, 2.4587647498541126E8 network, 1.3404293539211486E8 memory}
         :        :           :  :  :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :  :  :  :  :        :  +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :        +- Exchange(distribution=[hash[y0]]): rowcount = 200438.94588782344, cumulative cost = {4.612301442467211E7 rows, 1.737550756723948E9 cpu, 6.15375948E8 io, 2.2280010538541126E8 network, 1.2281832642239675E8 memory}
         :        :           :  :  :  :  :           +- Calc(select=[X0, y0]): rowcount = 200438.94588782344, cumulative cost = {4.5922575478784285E7 rows, 1.7038770138147936E9 cpu, 6.15375948E8 io, 2.179895706841035E8 network, 1.2281832642239675E8 memory}
         :        :           :  :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 200438.94588782344, cumulative cost = {4.572213653289646E7 rows, 1.7038770138147936E9 cpu, 6.15375948E8 io, 2.179895706841035E8 network, 1.2281832642239675E8 memory}
         :        :           :  :  :  :  :                 :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :        :           :  :  :  :  :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :           :  :  :  :  :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :           :  :  :  :  :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :           :  :  :  :  :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :           :  :  :  :  :                 :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :  :  :  :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :  :  :  :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :  :  :  :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :  :  :  :                 :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :  :  :  :  :                    +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 200440.95176282345, cumulative cost = {4.592349005803428E7 rows, 1.7487657775747936E9 cpu, 6.15383148E8 io, 2.179920552241035E8 network, 1.2282337482239676E8 memory}
         :        :           :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 200440.95176282345, cumulative cost = {4.572304910627145E7 rows, 1.7487657775747936E9 cpu, 6.15383148E8 io, 2.179920552241035E8 network, 1.2282337482239676E8 memory}
         :        :           :  :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :        :           :  :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :           :  :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :           :  :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :           :  :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :           :  :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :  :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :  :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 961527.7725, cumulative cost = {9295550.7675 rows, 2.1283333098000002E8 cpu, 1.53849504E8 io, 2.307885414E7 network, 5076.4 memory}
         :        :           :  :  :  :           +- Calc(select=[x, y0]): rowcount = 961527.7725, cumulative cost = {8334022.995 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :        :           :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961527.7725, cumulative cost = {7372495.2225 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :        :           :  :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
         :        :           :  :  :  :                    +- Calc(select=[x, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 200440.83363782344, cumulative cost = {4.592343670928428E7 rows, 1.7487647219747937E9 cpu, 6.15382728E8 io, 2.179919103241035E8 network, 1.2282308082239676E8 memory}
         :        :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 200440.83363782344, cumulative cost = {4.572299587564646E7 rows, 1.7487647219747937E9 cpu, 6.15382728E8 io, 2.179919103241035E8 network, 1.2282308082239676E8 memory}
         :        :           :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :        :           :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :           :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :           :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :           :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :           :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 961526.985, cumulative cost = {9295497.655000001 rows, 2.1283228168E8 cpu, 1.53849084E8 io, 2.3078709240000002E7 network, 4782.4 memory}
         :        :           :  :  :           +- Calc(select=[x, y0]): rowcount = 961526.985, cumulative cost = {8333970.670000001 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
         :        :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961526.985, cumulative cost = {7372443.6850000005 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
         :        :           :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :        :           :  :  :                    +- Calc(select=[x0, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[x AS X0, y00 AS X1]): rowcount = 1108986.80285625, cumulative cost = {3.9574524960337505E7 rows, 2.468892537538E9 cpu, 4.61534088E8 io, 3.34744156437E8 network, 6.3139002353E7 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 1108986.80285625, cumulative cost = {3.846553815748125E7 rows, 2.468892537538E9 cpu, 4.61534088E8 io, 3.34744156437E8 network, 6.3139002353E7 memory}
         :        :           :  :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[hash[x]]): rowcount = 983150.352375, cumulative cost = {2.4536361354625E7 rows, 1.3328506147189999E9 cpu, 3.07691808E8 io, 1.8090187643699998E8 network, 8082582.620000001 memory}
         :        :           :  :           +- Calc(select=[x, y0 AS y00]): rowcount = 983150.352375, cumulative cost = {2.355321100225E7 rows, 1.16768135552E9 cpu, 3.07691808E8 io, 1.5730626798E8 network, 8082582.620000001 memory}
         :        :           :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x1)], select=[x, y, y0, x1], build=[right]): rowcount = 983150.352375, cumulative cost = {2.2570060649875E7 rows, 1.16768135552E9 cpu, 3.07691808E8 io, 1.5730626798E8 network, 8082582.620000001 memory}
         :        :           :  :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :  :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :                 +- Exchange(distribution=[hash[x1]]): rowcount = 144240.6825, cumulative cost = {8766720.297499998 rows, 3.835071006E7 cpu, 1.53849528E8 io, 3463987.98 network, 5104.4 memory}
         :        :           :  :                    +- Calc(select=[y0, x0 AS x1]): rowcount = 144240.6825, cumulative cost = {8622479.614999998 rows, 1.4118275399999999E7 cpu, 1.53849528E8 io, 2211.6 network, 5104.4 memory}
         :        :           :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right]): rowcount = 144240.6825, cumulative cost = {8478238.9325 rows, 1.4118275399999999E7 cpu, 1.53849528E8 io, 2211.6 network, 5104.4 memory}
         :        :           :  :                          :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :                          :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :                          :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                          :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                          +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
         :        :           :  :                             +- Calc(select=[x, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105743.415875, cumulative cost = {2.432722759925E7 rows, 1.34870227316E9 cpu, 3.07691784E8 io, 1.7692113414E8 network, 5.3850631660000004E7 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105743.415875, cumulative cost = {2.3221484183375E7 rows, 1.34870227316E9 cpu, 3.07691784E8 io, 1.7692113414E8 network, 5.3850631660000004E7 memory}
         :        :           :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 961527.7725, cumulative cost = {9295550.7675 rows, 2.1283333098000002E8 cpu, 1.53849504E8 io, 2.307885414E7 network, 5076.4 memory}
         :        :           :           +- Calc(select=[x, y0]): rowcount = 961527.7725, cumulative cost = {8334022.995 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961527.7725, cumulative cost = {7372495.2225 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
         :        :           :                    +- Calc(select=[x, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :           :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105743.6990375, cumulative cost = {2.4328091283825E7 rows, 1.348723747884E9 cpu, 3.07698564E8 io, 1.76923519086E8 network, 5.3856196534E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105743.6990375, cumulative cost = {2.32223475847875E7 rows, 1.348723747884E9 cpu, 3.07698564E8 io, 1.76923519086E8 network, 5.3856196534E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 961529.66025, cumulative cost = {9296413.88575 rows, 2.12854790602E8 cpu, 1.53856284E8 io, 2.3081239086E7 network, 10535.56 memory}
         :        :                    +- Calc(select=[x, y0]): rowcount = 961529.66025, cumulative cost = {8334884.2255 rows, 5.131780768E7 cpu, 1.53856284E8 io, 4527.24 network, 10535.56 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961529.66025, cumulative cost = {7373354.56525 rows, 5.131780768E7 cpu, 1.53856284E8 io, 4527.24 network, 10535.56 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 102.735, cumulative cost = {1729.9049999999997 rows, 36225.799999999996 cpu, 14004.0 io, 4527.24 network, 4782.4 memory}
         :        :                             +- Calc(select=[x, y]): rowcount = 102.735, cumulative cost = {1627.1699999999998 rows, 19788.199999999997 cpu, 14004.0 io, 2061.6 network, 4782.4 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 102.735, cumulative cost = {1524.435 rows, 19788.199999999997 cpu, 14004.0 io, 2061.6 network, 4782.4 memory}
         :        :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :        :                                      +- Calc(select=[x0, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                         +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                            :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                                            +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 41019.94653843347, cumulative cost = {2.591933630543669E8 rows, 1.130597558835902E10 cpu, 3.230815224E9 io, 1.4652799945046577E9 network, 5.492717000977415E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], build=[right]): rowcount = 41019.94653843347, cumulative cost = {2.5915234310782844E8 rows, 1.130597558835902E10 cpu, 3.230815224E9 io, 1.4652799945046577E9 network, 5.492717000977415E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 242360.57086622587, cumulative cost = {1.4400812776536947E8 rows, 6.086007318675995E9 cpu, 1.846170996E9 io, 7.805081335801686E8 network, 3.390658343232417E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 242360.57086622587, cumulative cost = {1.4376576719450325E8 rows, 6.045290742770469E9 cpu, 1.846170996E9 io, 7.746914798793792E8 network, 3.390658343232417E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 242360.57086622587, cumulative cost = {1.4352340662363702E8 rows, 6.041412973636609E9 cpu, 1.846170996E9 io, 7.746914798793792E8 network, 3.2355475778780323E8 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 242360.57086622587, cumulative cost = {1.432810460527708E8 rows, 5.998757513164153E9 cpu, 1.846170996E9 io, 7.688748261785897E8 network, 3.2355475778780323E8 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1337019.7922788807, cumulative cost = {1.4303868548190457E8 rows, 5.977365196487691E9 cpu, 1.846170996E9 io, 7.688748261785897E8 network, 3.0804368125236475E8 memory}
               :              :- Union(all=[true], union=[X0, X1]): rowcount = 1306862.0468957073, cumulative cost = {9.571616754007506E7 rows, 4.2254664351935163E9 cpu, 1.230781092E9 io, 5.508692690944862E8 network, 1.8518344282996798E8 memory}
               :              :  :- Calc(select=[x AS X0, X1]): rowcount = 1105832.07045755, cumulative cost = {3.3189480964450616E7 rows, 1.371488855565088E9 cpu, 4.61548464E8 io, 1.7767474034828407E8 network, 5.7510015907064155E7 memory}
               :              :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 1105832.07045755, cumulative cost = {3.2083648893993065E7 rows, 1.371488855565088E9 cpu, 4.61548464E8 io, 1.7767474034828407E8 network, 5.7510015907064155E7 memory}
               :              :  :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :     +- Exchange(distribution=[hash[x]]): rowcount = 962118.8030503338, cumulative cost = {1.8157626823535513E7 rows, 2.3561518514068538E8 cpu, 3.07706184E8 io, 2.3832460348284073E7 network, 3631362.936245466 memory}
               :              :  :        +- Calc(select=[x, X1]): rowcount = 962118.8030503338, cumulative cost = {1.7195508020485178E7 rows, 7.397922622822931E7 cpu, 3.07706184E8 io, 741609.075076062 network, 3631362.936245466 memory}
               :              :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962118.8030503338, cumulative cost = {1.6233389217434842E7 rows, 7.397922622822931E7 cpu, 3.07706184E8 io, 741609.075076062 network, 3631362.936245466 memory}
               :              :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :              +- Exchange(distribution=[broadcast]): rowcount = 4030.3536688916415, cumulative cost = {8861175.414384509 rows, 2.2666223398878183E7 cpu, 1.53863904E8 io, 741609.075076062 network, 3405663.130787534 memory}
               :              :  :                 +- Calc(select=[X0, X1]): rowcount = 4030.3536688916415, cumulative cost = {8857145.060715618 rows, 2.202136681185552E7 cpu, 1.53863904E8 io, 644880.5870226626 network, 3405663.130787534 memory}
               :              :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4030.3536688916415, cumulative cost = {8853114.707046727 rows, 2.202136681185552E7 cpu, 1.53863904E8 io, 644880.5870226626 network, 3405663.130787534 memory}
               :              :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :              :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :              :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :              :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :                       +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  +- Calc(select=[X0, X10 AS X1]): rowcount = 201029.97643815717, cumulative cost = {6.121982452872873E7 rows, 2.8526707175815325E9 cpu, 7.69232628E8 io, 3.7319452874620223E8 network, 1.2767342692290384E8 memory}
               :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 201029.97643815717, cumulative cost = {6.101879455229057E7 rows, 2.8526707175815325E9 cpu, 7.69232628E8 io, 3.7319452874620223E8 network, 1.2767342692290384E8 memory}
               :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
               :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
               :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
               :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
               :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
               :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :              :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :        +- Exchange(distribution=[hash[x]]): rowcount = 965454.6036688916, cumulative cost = {2.4590707188843787E7 rows, 1.3167068563373878E9 cpu, 3.07698984E8 io, 1.782813276620987E8 network, 4855128.500507081 memory}
               :              :           +- Calc(select=[x, X1]): rowcount = 965454.6036688916, cumulative cost = {2.3625252585174896E7 rows, 1.154510482921014E9 cpu, 3.07698984E8 io, 1.5511041717404532E8 network, 4855128.500507081 memory}
               :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965454.6036688916, cumulative cost = {2.2659797981506005E7 rows, 1.154510482921014E9 cpu, 3.07698984E8 io, 1.5511041717404532E8 network, 4855128.500507081 memory}
               :              :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :                 +- Exchange(distribution=[hash[X0]]): rowcount = 26269.02445927761, cumulative cost = {8874153.377837114 rows, 2.6123610725339938E7 cpu, 1.53856704E8 io, 1268137.1740453253 network, 3384063.130787534 memory}
               :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :              :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :                                :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :                                :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[X0, y AS X1]): rowcount = 30157.745383173515, cumulative cost = {4.5985498149550624E7 rows, 1.7505617415018961E9 cpu, 6.15389904E8 io, 2.180055570841035E8 network, 1.2286023842239675E8 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[X0, y, x], isBroadcast=[true], build=[right]): rowcount = 30157.745383173515, cumulative cost = {4.595534040416745E7 rows, 1.7505617415018961E9 cpu, 6.15389904E8 io, 2.180055570841035E8 network, 1.2286023842239675E8 memory}
               :                    :- Calc(select=[X0, y]): rowcount = 200451.63588782345, cumulative cost = {4.592398265878428E7 rows, 1.7488573284147935E9 cpu, 6.15382704E8 io, 2.179983570841035E8 network, 1.2283863842239675E8 memory}
               :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], build=[left]): rowcount = 200451.63588782345, cumulative cost = {4.5723531022896454E7 rows, 1.7488573284147935E9 cpu, 6.15382704E8 io, 2.179983570841035E8 network, 1.2283863842239675E8 memory}
               :                    :     :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
               :                    :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
               :                    :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
               :                    :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
               :                    :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
               :                    :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                    :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                    :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                    :     :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                    :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                    :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                    :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                    :     +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
               :                    :        +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                    :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[X0]]): rowcount = 31105.739389997292, cumulative cost = {1.151031953959205E8 rows, 5.217780539200975E9 cpu, 1.384644228E9 io, 6.847718609244893E8 network, 2.0846394436865988E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 31105.739389997292, cumulative cost = {1.150720896565305E8 rows, 5.212554774983456E9 cpu, 1.384644228E9 io, 6.840253231791294E8 network, 2.0846394436865988E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 31105.739389997292, cumulative cost = {1.150409839171405E8 rows, 5.212554774983456E9 cpu, 1.384644228E9 io, 6.840253231791294E8 network, 2.0846394436865988E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.150086781777505E8 rows, 5.210799802215989E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 2.0844234436865988E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 206771.5959333153, cumulative cost = {1.1480190658181718E8 rows, 5.207491456681056E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 1.952089622289277E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.1459513498588386E8 rows, 5.171099655796793E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.952089622289277E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1140687.6756224853, cumulative cost = {1.1438836338995054E8 rows, 5.152848652986834E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.8197558008919552E8 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 175115.28760917907, cumulative cost = {6.2360548979872726E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 175115.28760917907, cumulative cost = {6.218543369226354E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 179761.68948028254, cumulative cost = {3.623319088764287E7 rows, 1.328521145834818E9 cpu, 4.61548092E8 io, 1.7147682713648033E8 network, 6.914175207815145E7 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :           :     :              :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :     :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 965572.3880133063, cumulative cost = {5.088712673445533E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965572.3880133063, cumulative cost = {4.992155434644203E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
                        :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[hash[X0]]): rowcount = 27054.25342204238, cumulative cost = {3.613579195842872E7 rows, 1.3044051900928757E9 cpu, 4.61555292E8 io, 1.678190486710826E8 network, 6.916335207815145E7 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 27054.25342204238, cumulative cost = {3.6108737705006674E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 27054.25342204238, cumulative cost = {3.608168345158463E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[1,0,1,2,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#3] Exchange(distribution=[hash[X1]])\n:  :     +- [#4] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#5] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#6] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], build=[right])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#2] Exchange(distribution=[hash[X0]])\n])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[0,1,0,1,2,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#2] Exchange(distribution=[hash[y]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#4] Exchange(distribution=[hash[X1]])\n:        +- [#5] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[X0, y, x], isBroadcast=[true], build=[right])\n      :- Calc(select=[X0, y])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], build=[left])\n      :     :- [#4] Exchange(distribution=[hash[X1]])\n      :     +- [#7] Exchange(distribution=[hash[x]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[3])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[6])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- Calc(select=[x0 AS X0, y AS X1])
         :              :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :                 :           :     :- Calc(select=[y, x0])
         :              :                 :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[9])
         :              :                 :           :     :     :- Reused(reference_id=[1])
         :              :                 :           :     :     +- Exchange(distribution=[broadcast])(reuse_id=[5])
         :              :                 :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :              :                 :           :     +- Reused(reference_id=[2])
         :              :                 :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[10])
         :              :                 :              +- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[2])
         :              :- Exchange(distribution=[hash[X1]])(reuse_id=[7])
         :              :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :              :     +- Exchange(distribution=[hash[X0, X1]])
         :              :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :              :- Reused(reference_id=[1])
         :              :              :- Exchange(distribution=[broadcast])(reuse_id=[8])
         :              :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[12])
         :              :              :- Reused(reference_id=[4])
         :              :              +- Exchange(distribution=[hash[x]])
         :              :                 +- Calc(select=[x, y0])(reuse_id=[15])
         :              :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[13])
         :              :                       :- Reused(reference_id=[1])
         :              :                       +- Reused(reference_id=[5])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :              :        :- Reused(reference_id=[4])
         :              :        +- Exchange(distribution=[hash[X0]])
         :              :           +- Reused(reference_id=[6])
         :              :- Reused(reference_id=[7])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, y])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Reused(reference_id=[8])
         :- Exchange(distribution=[hash[X0]])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[hash[X0]])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[14])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Reused(reference_id=[4])
         :        :           :              :- Exchange(distribution=[hash[x]])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[11])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- Reused(reference_id=[9])
         :        :           :              :        :           +- Reused(reference_id=[10])
         :        :           :              :        +- Reused(reference_id=[5])
         :        :           :              :- Reused(reference_id=[11])
         :        :           :              +- Reused(reference_id=[8])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Exchange(distribution=[hash[x]])
         :        :           :        :  +- Reused(reference_id=[1])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[20])
         :        :           :                       :  +- Reused(reference_id=[12])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- Reused(reference_id=[13])
         :        :           :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[hash[X0]])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[14])
         :        :                    +- Reused(reference_id=[2])
         :        +- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[22])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,3,2,2,1,1,2,1,2,1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :  :- Calc(select=[X0, X00 AS X1])\n:  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :  :  :  :     :- [#11] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :  :  :     +- [#12] Exchange(distribution=[broadcast])\n:  :  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, X0, y00], build=[right])\n:  :  :  :  :        :- [#13] Exchange(distribution=[hash[x]], shuffle_mode=[BATCH])\n:  :  :  :  :        +- [#14] Exchange(distribution=[hash[y0]])\n:  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n:  :  :  :        :- [#7] Exchange(distribution=[hash[X1]])\n:  :  :  :        +- [#4] Exchange(distribution=[hash[x]])\n:  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n:  :  :        :- [#7] Exchange(distribution=[hash[X1]])\n:  :  :        +- [#8] Exchange(distribution=[hash[x]])\n:  :  +- Calc(select=[x AS X0, y00 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])\n:  :        :- [#5] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:  :        +- [#6] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[x AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Reused(reference_id=[4])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[x, y])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], isBroadcast=[true], build=[right])
         :              :                 :- Reused(reference_id=[3])
         :              :                 +- Exchange(distribution=[broadcast])(reuse_id=[17])
         :              :                    +- Calc(select=[x0, y])
         :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[23])
         :              :                          :- Reused(reference_id=[12])
         :              :                          +- Reused(reference_id=[5])
         :              :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])(reuse_id=[18])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])(reuse_id=[16])
         :              :           +- Calc(select=[x, y])
         :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])
         :              :                 :- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[5])
         :              :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0 AS y00])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x1)], select=[x, y, y0, x1], build=[right])
         :              :        :- Reused(reference_id=[4])
         :              :        +- Exchange(distribution=[hash[x1]])
         :              :           +- Calc(select=[y0, x0 AS x1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right])
         :              :                 :- Reused(reference_id=[15])
         :              :                 +- Reused(reference_id=[16])
         :              :- Reused(reference_id=[7])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[17])
         :              :- Reused(reference_id=[7])
         :              :- Reused(reference_id=[18])
         :              :- Reused(reference_id=[19])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[8])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[15])
         :              :                 :     +- Reused(reference_id=[8])
         :              :                 +- Reused(reference_id=[20])
         :              :- Exchange(distribution=[hash[x]], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[15])
         :              +- Exchange(distribution=[hash[y0]])
         :                 +- Calc(select=[X0, y0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])
         :                       :- Reused(reference_id=[7])
         :                       +- Exchange(distribution=[hash[x]], shuffle_mode=[BATCH])
         :                          +- Reused(reference_id=[15])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[21])
         :- Reused(reference_id=[22])
         +- Exchange(distribution=[broadcast])
            +- Calc(select=[x, x0])
               +- Reused(reference_id=[23])

Job has been submitted with JobID 66dc3a72c8ea1f0fee2d107a97df341c
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, s_4.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT r_0.x AS X0, s_5.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN b AS b_4 ON s_2.y = b_4.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 330c5b82_1116_4fcb_bcdc_9df6cb307143

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, s_4.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT r_0.x AS X0, s_5.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN b AS b_4 ON s_2.y = b_4.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :  :     :  :  :  :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$10])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :     +- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :        :  :  :  :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :        :  :  :  :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$10])
   :        :  :  :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :     +- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 73386.89754053052, cumulative cost = {9.779484121670175E8 rows, 4.256369187764789E10 cpu, 1.215391104E10 io, 5.499490131000197E9 network, 2.314217818964989E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 73386.89754053052, cumulative cost = {9.778750252694769E8 rows, 4.256251768728724E10 cpu, 1.215391104E10 io, 5.499490131000197E9 network, 2.309521057522395E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 73386.89754053052, cumulative cost = {9.778016383719363E8 rows, 4.254960159332011E10 cpu, 1.215391104E10 io, 5.497728845459225E9 network, 2.309521057522395E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 404850.2367977591, cumulative cost = {9.777282514743958E8 rows, 4.254312398953134E10 cpu, 1.215391104E10 io, 5.497728845459225E9 network, 2.304824296079801E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 363830.2902593256, cumulative cost = {7.181300381832311E8 rows, 3.1236743550935524E10 cpu, 8.923095816E9 io, 4.0324488509545665E9 network, 1.7555525959820595E9 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 256348.5268339126, cumulative cost = {4.2489640482557267E8 rows, 1.895339182275731E10 cpu, 5.23078416E9 io, 2.4581427375647607E9 network, 1.0078455689675696E9 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 256348.5268339126, cumulative cost = {4.246400562987388E8 rows, 1.895339182275731E10 cpu, 5.23078416E9 io, 2.4581427375647607E9 network, 1.0078455689675696E9 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 716460.1895027534, cumulative cost = {2.9337047803005105E8 rows, 1.2397606540008392E10 cpu, 3.692304852E9 io, 1.591499096337872E9 network, 7.477022446144898E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 716460.1895027534, cumulative cost = {2.926540178405483E8 rows, 1.227724122817193E10 cpu, 3.692304852E9 io, 1.574304051789806E9 network, 7.477022446144898E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 716460.1895027534, cumulative cost = {2.919375576510455E8 rows, 1.2265777865139887E10 cpu, 3.692304852E9 io, 1.574304051789806E9 network, 7.018487924863136E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 716460.1895027534, cumulative cost = {2.912210974615427E8 rows, 1.2139680871787403E10 cpu, 3.692304852E9 io, 1.5571090072417397E9 network, 7.018487924863136E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 3952464.0923287654, cumulative cost = {2.9050463727203995E8 rows, 1.2076441446310143E10 cpu, 3.692304852E9 io, 1.5571090072417397E9 network, 6.559953403581374E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 2846720.3932912657, cumulative cost = {2.6222408189588618E8 rows, 1.0723765234333813E10 cpu, 3.384606288E9 io, 1.3801854881557398E9 network, 6.021391438241373E8 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 1740976.9774162658, cumulative cost = {2.3505013390334493E8 rows, 9.372216240780521E9 cpu, 3.076914504E9 io, 1.2032643540157397E9 network, 5.482885121641374E8 memory}
         :  :     :              :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 631990.1745600158, cumulative cost = {1.9373463196559116E8 rows, 6.901582726265105E9 cpu, 2.615380416E9 io, 8.685201975787396E8 network, 4.851495098111373E8 memory}
         :  :     :              :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 431549.3409221924, cumulative cost = {1.4717920508174688E8 rows, 5.152186014115752E9 cpu, 1.999997688E9 io, 6.505282872546362E8 network, 3.6232642898874056E8 memory}
         :  :     :              :  :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 231108.38915936893, cumulative cost = {1.008241656827904E8 rows, 3.402988687200036E9 cpu, 1.38461454E9 io, 4.3253623203053266E8 network, 2.395030541663438E8 memory}
         :  :     :              :  :  :  :  :  :- Calc(select=[X0, X00 AS X1]): rowcount = 56815.38727619545, cumulative cost = {4.4826816665192574E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :  :     :              :  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56815.38727619545, cumulative cost = {4.477000127791638E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :  :     :              :  :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :     :              :  :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :     :              :  :  :  :  :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :  :  :  :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                    +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 4024.00925581335, cumulative cost = {8860873.74288371 rows, 2.2651304825347934E7 cpu, 1.53862644E8 io, 740441.7030696564 network, 3402209.231627392 memory}
         :  :     :              :  :  :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 4024.00925581335, cumulative cost = {8856849.733627897 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :  :     :              :  :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4024.00925581335, cumulative cost = {8852825.724372083 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :  :     :              :  :  :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8847671.71511627 rows, 2.1702449517441086E7 cpu, 1.53855864E8 io, 637085.480930136 network, 3381869.231627392 memory}
         :  :     :              :  :  :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26261.728372089, cumulative cost = {8821409.98674418 rows, 2.128226186348766E7 cpu, 1.53855864E8 io, 637085.480930136 network, 1701118.615813696 memory}
         :  :     :              :  :  :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8795148.25837209 rows, 1.6660197669999998E7 cpu, 1.53855864E8 io, 6804.0 network, 1701118.615813696 memory}
         :  :     :              :  :  :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144876.90999999997, cumulative cost = {8768886.530000001 rows, 1.434216711E7 cpu, 1.53855864E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :  :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :  :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 174293.00188317348, cumulative cost = {5.576624062843846E7 rows, 1.9147910576910505E9 cpu, 7.69218252E8 io, 2.4587647498541126E8 network, 1.3404293539211486E8 memory}
         :  :     :              :  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], build=[right]): rowcount = 174293.00188317348, cumulative cost = {5.559194762655529E7 rows, 1.9147910576910505E9 cpu, 7.69218252E8 io, 2.4587647498541126E8 network, 1.3404293539211486E8 memory}
         :  :     :              :  :  :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :  :  :  :  :        :  +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        +- Exchange(distribution=[hash[y0]]): rowcount = 200438.94588782344, cumulative cost = {4.612301442467211E7 rows, 1.737550756723948E9 cpu, 6.15375948E8 io, 2.2280010538541126E8 network, 1.2281832642239675E8 memory}
         :  :     :              :  :  :  :  :           +- Calc(select=[X0, y0]): rowcount = 200438.94588782344, cumulative cost = {4.5922575478784285E7 rows, 1.7038770138147936E9 cpu, 6.15375948E8 io, 2.179895706841035E8 network, 1.2281832642239675E8 memory}
         :  :     :              :  :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 200438.94588782344, cumulative cost = {4.572213653289646E7 rows, 1.7038770138147936E9 cpu, 6.15375948E8 io, 2.179895706841035E8 network, 1.2281832642239675E8 memory}
         :  :     :              :  :  :  :  :                 :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :  :     :              :  :  :  :  :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :     :              :  :  :  :  :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :  :  :  :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :  :  :  :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :     :              :  :  :  :  :                 :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :  :  :  :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :  :  :  :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :  :  :  :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :  :  :  :                 :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :  :  :  :  :                    +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 200440.95176282345, cumulative cost = {4.592349005803428E7 rows, 1.7487657775747936E9 cpu, 6.15383148E8 io, 2.179920552241035E8 network, 1.2282337482239676E8 memory}
         :  :     :              :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 200440.95176282345, cumulative cost = {4.572304910627145E7 rows, 1.7487657775747936E9 cpu, 6.15383148E8 io, 2.179920552241035E8 network, 1.2282337482239676E8 memory}
         :  :     :              :  :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :  :     :              :  :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :     :              :  :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :     :              :  :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :  :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :  :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 961527.7725, cumulative cost = {9295550.7675 rows, 2.1283333098000002E8 cpu, 1.53849504E8 io, 2.307885414E7 network, 5076.4 memory}
         :  :     :              :  :  :  :           +- Calc(select=[x, y0]): rowcount = 961527.7725, cumulative cost = {8334022.995 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :  :     :              :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961527.7725, cumulative cost = {7372495.2225 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :  :     :              :  :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
         :  :     :              :  :  :  :                    +- Calc(select=[x, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 200440.83363782344, cumulative cost = {4.592343670928428E7 rows, 1.7487647219747937E9 cpu, 6.15382728E8 io, 2.179919103241035E8 network, 1.2282308082239676E8 memory}
         :  :     :              :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 200440.83363782344, cumulative cost = {4.572299587564646E7 rows, 1.7487647219747937E9 cpu, 6.15382728E8 io, 2.179919103241035E8 network, 1.2282308082239676E8 memory}
         :  :     :              :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :  :     :              :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :     :              :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :     :              :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 961526.985, cumulative cost = {9295497.655000001 rows, 2.1283228168E8 cpu, 1.53849084E8 io, 2.3078709240000002E7 network, 4782.4 memory}
         :  :     :              :  :  :           +- Calc(select=[x, y0]): rowcount = 961526.985, cumulative cost = {8333970.670000001 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
         :  :     :              :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961526.985, cumulative cost = {7372443.6850000005 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
         :  :     :              :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :  :     :              :  :  :                    +- Calc(select=[x0, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[x AS X0, y00 AS X1]): rowcount = 1108986.80285625, cumulative cost = {3.9574524960337505E7 rows, 2.468892537538E9 cpu, 4.61534088E8 io, 3.34744156437E8 network, 6.3139002353E7 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 1108986.80285625, cumulative cost = {3.846553815748125E7 rows, 2.468892537538E9 cpu, 4.61534088E8 io, 3.34744156437E8 network, 6.3139002353E7 memory}
         :  :     :              :  :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[hash[x]]): rowcount = 983150.352375, cumulative cost = {2.4536361354625E7 rows, 1.3328506147189999E9 cpu, 3.07691808E8 io, 1.8090187643699998E8 network, 8082582.620000001 memory}
         :  :     :              :  :           +- Calc(select=[x, y0 AS y00]): rowcount = 983150.352375, cumulative cost = {2.355321100225E7 rows, 1.16768135552E9 cpu, 3.07691808E8 io, 1.5730626798E8 network, 8082582.620000001 memory}
         :  :     :              :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x1)], select=[x, y, y0, x1], build=[right]): rowcount = 983150.352375, cumulative cost = {2.2570060649875E7 rows, 1.16768135552E9 cpu, 3.07691808E8 io, 1.5730626798E8 network, 8082582.620000001 memory}
         :  :     :              :  :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :  :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                 +- Exchange(distribution=[hash[x1]]): rowcount = 144240.6825, cumulative cost = {8766720.297499998 rows, 3.835071006E7 cpu, 1.53849528E8 io, 3463987.98 network, 5104.4 memory}
         :  :     :              :  :                    +- Calc(select=[y0, x0 AS x1]): rowcount = 144240.6825, cumulative cost = {8622479.614999998 rows, 1.4118275399999999E7 cpu, 1.53849528E8 io, 2211.6 network, 5104.4 memory}
         :  :     :              :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right]): rowcount = 144240.6825, cumulative cost = {8478238.9325 rows, 1.4118275399999999E7 cpu, 1.53849528E8 io, 2211.6 network, 5104.4 memory}
         :  :     :              :  :                          :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                          :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                          +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
         :  :     :              :  :                             +- Calc(select=[x, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105743.415875, cumulative cost = {2.432722759925E7 rows, 1.34870227316E9 cpu, 3.07691784E8 io, 1.7692113414E8 network, 5.3850631660000004E7 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105743.415875, cumulative cost = {2.3221484183375E7 rows, 1.34870227316E9 cpu, 3.07691784E8 io, 1.7692113414E8 network, 5.3850631660000004E7 memory}
         :  :     :              :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 961527.7725, cumulative cost = {9295550.7675 rows, 2.1283333098000002E8 cpu, 1.53849504E8 io, 2.307885414E7 network, 5076.4 memory}
         :  :     :              :           +- Calc(select=[x, y0]): rowcount = 961527.7725, cumulative cost = {8334022.995 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961527.7725, cumulative cost = {7372495.2225 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
         :  :     :              :                    +- Calc(select=[x, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105743.6990375, cumulative cost = {2.4328091283825E7 rows, 1.348723747884E9 cpu, 3.07698564E8 io, 1.76923519086E8 network, 5.3856196534E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105743.6990375, cumulative cost = {2.32223475847875E7 rows, 1.348723747884E9 cpu, 3.07698564E8 io, 1.76923519086E8 network, 5.3856196534E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 961529.66025, cumulative cost = {9296413.88575 rows, 2.12854790602E8 cpu, 1.53856284E8 io, 2.3081239086E7 network, 10535.56 memory}
         :  :     :                       +- Calc(select=[x, y0]): rowcount = 961529.66025, cumulative cost = {8334884.2255 rows, 5.131780768E7 cpu, 1.53856284E8 io, 4527.24 network, 10535.56 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961529.66025, cumulative cost = {7373354.56525 rows, 5.131780768E7 cpu, 1.53856284E8 io, 4527.24 network, 10535.56 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 102.735, cumulative cost = {1729.9049999999997 rows, 36225.799999999996 cpu, 14004.0 io, 4527.24 network, 4782.4 memory}
         :  :     :                                +- Calc(select=[x, y]): rowcount = 102.735, cumulative cost = {1627.1699999999998 rows, 19788.199999999997 cpu, 14004.0 io, 2061.6 network, 4782.4 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 102.735, cumulative cost = {1524.435 rows, 19788.199999999997 cpu, 14004.0 io, 2061.6 network, 4782.4 memory}
         :  :     :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :  :     :                                         +- Calc(select=[x0, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                                            +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                                               :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :                                               +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                                  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 992529.9893899972, cumulative cost = {1.3101322974185382E8 rows, 6.542113361317773E9 cpu, 1.538479308E9 io, 8.666436412268888E8 network, 2.2002155374092555E8 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 992529.9893899972, cumulative cost = {1.3002069975246382E8 rows, 6.375368323100253E9 cpu, 1.538479308E9 io, 8.428229214815289E8 network, 2.2002155374092555E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 992529.9893899972, cumulative cost = {1.2902816976307382E8 rows, 6.375368323100253E9 cpu, 1.538479308E9 io, 8.428229214815289E8 network, 2.2002155374092555E8 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 206771.5959333153, cumulative cost = {1.1521544977368382E8 rows, 5.245537430332787E9 cpu, 1.384637028E9 io, 6.889806414815289E8 network, 2.0844234436865988E8 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.150086781777505E8 rows, 5.210799802215989E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 2.0844234436865988E8 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 206771.5959333153, cumulative cost = {1.1480190658181718E8 rows, 5.207491456681056E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 1.952089622289277E8 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.1459513498588386E8 rows, 5.171099655796793E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.952089622289277E8 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 1140687.6756224853, cumulative cost = {1.1438836338995054E8 rows, 5.152848652986834E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.8197558008919552E8 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 175115.28760917907, cumulative cost = {6.2360548979872726E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 175115.28760917907, cumulative cost = {6.218543369226354E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 179761.68948028254, cumulative cost = {3.623319088764287E7 rows, 1.328521145834818E9 cpu, 4.61548092E8 io, 1.7147682713648033E8 network, 6.914175207815145E7 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                             :     :              :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                             :     :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 965572.3880133063, cumulative cost = {5.088712673445533E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965572.3880133063, cumulative cost = {4.992155434644203E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :  :                                   :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                                   :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[hash[X0]]): rowcount = 27054.25342204238, cumulative cost = {3.613579195842872E7 rows, 1.3044051900928757E9 cpu, 4.61555292E8 io, 1.678190486710826E8 network, 6.916335207815145E7 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 27054.25342204238, cumulative cost = {3.6108737705006674E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 27054.25342204238, cumulative cost = {3.608168345158463E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                                            :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                                            :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :           :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 107481.76342541301, cumulative cost = {2.928698030673991E8 rows, 1.2282987897887953E10 cpu, 3.692311656E9 io, 1.5743061133898058E9 network, 7.477070270144898E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 107481.76342541301, cumulative cost = {2.927623213039737E8 rows, 1.2282987897887953E10 cpu, 3.692311656E9 io, 1.5743061133898058E9 network, 7.477070270144898E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 716460.1895027534, cumulative cost = {2.926540178405483E8 rows, 1.227724122817193E10 cpu, 3.692304852E9 io, 1.574304051789806E9 network, 7.477022446144898E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 716460.1895027534, cumulative cost = {2.919375576510455E8 rows, 1.2265777865139887E10 cpu, 3.692304852E9 io, 1.574304051789806E9 network, 7.018487924863136E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 716460.1895027534, cumulative cost = {2.912210974615427E8 rows, 1.2139680871787403E10 cpu, 3.692304852E9 io, 1.5571090072417397E9 network, 7.018487924863136E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 3952464.0923287654, cumulative cost = {2.9050463727203995E8 rows, 1.2076441446310143E10 cpu, 3.692304852E9 io, 1.5571090072417397E9 network, 6.559953403581374E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 2846720.3932912657, cumulative cost = {2.6222408189588618E8 rows, 1.0723765234333813E10 cpu, 3.384606288E9 io, 1.3801854881557398E9 network, 6.021391438241373E8 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 1740976.9774162658, cumulative cost = {2.3505013390334493E8 rows, 9.372216240780521E9 cpu, 3.076914504E9 io, 1.2032643540157397E9 network, 5.482885121641374E8 memory}
         :        :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 631990.1745600158, cumulative cost = {1.9373463196559116E8 rows, 6.901582726265105E9 cpu, 2.615380416E9 io, 8.685201975787396E8 network, 4.851495098111373E8 memory}
         :        :           :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 431549.3409221924, cumulative cost = {1.4717920508174688E8 rows, 5.152186014115752E9 cpu, 1.999997688E9 io, 6.505282872546362E8 network, 3.6232642898874056E8 memory}
         :        :           :  :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 231108.38915936893, cumulative cost = {1.008241656827904E8 rows, 3.402988687200036E9 cpu, 1.38461454E9 io, 4.3253623203053266E8 network, 2.395030541663438E8 memory}
         :        :           :  :  :  :  :  :- Calc(select=[X0, X00 AS X1]): rowcount = 56815.38727619545, cumulative cost = {4.4826816665192574E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :        :           :  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56815.38727619545, cumulative cost = {4.477000127791638E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :        :           :  :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :           :  :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :           :  :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :           :  :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :           :  :  :  :  :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :  :  :  :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                    +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 4024.00925581335, cumulative cost = {8860873.74288371 rows, 2.2651304825347934E7 cpu, 1.53862644E8 io, 740441.7030696564 network, 3402209.231627392 memory}
         :        :           :  :  :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 4024.00925581335, cumulative cost = {8856849.733627897 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :        :           :  :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4024.00925581335, cumulative cost = {8852825.724372083 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :        :           :  :  :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8847671.71511627 rows, 2.1702449517441086E7 cpu, 1.53855864E8 io, 637085.480930136 network, 3381869.231627392 memory}
         :        :           :  :  :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26261.728372089, cumulative cost = {8821409.98674418 rows, 2.128226186348766E7 cpu, 1.53855864E8 io, 637085.480930136 network, 1701118.615813696 memory}
         :        :           :  :  :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8795148.25837209 rows, 1.6660197669999998E7 cpu, 1.53855864E8 io, 6804.0 network, 1701118.615813696 memory}
         :        :           :  :  :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144876.90999999997, cumulative cost = {8768886.530000001 rows, 1.434216711E7 cpu, 1.53855864E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :  :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :  :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :  :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 174293.00188317348, cumulative cost = {5.576624062843846E7 rows, 1.9147910576910505E9 cpu, 7.69218252E8 io, 2.4587647498541126E8 network, 1.3404293539211486E8 memory}
         :        :           :  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], build=[right]): rowcount = 174293.00188317348, cumulative cost = {5.559194762655529E7 rows, 1.9147910576910505E9 cpu, 7.69218252E8 io, 2.4587647498541126E8 network, 1.3404293539211486E8 memory}
         :        :           :  :  :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :  :  :  :  :        :  +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :        +- Exchange(distribution=[hash[y0]]): rowcount = 200438.94588782344, cumulative cost = {4.612301442467211E7 rows, 1.737550756723948E9 cpu, 6.15375948E8 io, 2.2280010538541126E8 network, 1.2281832642239675E8 memory}
         :        :           :  :  :  :  :           +- Calc(select=[X0, y0]): rowcount = 200438.94588782344, cumulative cost = {4.5922575478784285E7 rows, 1.7038770138147936E9 cpu, 6.15375948E8 io, 2.179895706841035E8 network, 1.2281832642239675E8 memory}
         :        :           :  :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 200438.94588782344, cumulative cost = {4.572213653289646E7 rows, 1.7038770138147936E9 cpu, 6.15375948E8 io, 2.179895706841035E8 network, 1.2281832642239675E8 memory}
         :        :           :  :  :  :  :                 :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :        :           :  :  :  :  :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :           :  :  :  :  :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :           :  :  :  :  :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :           :  :  :  :  :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :           :  :  :  :  :                 :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :  :  :  :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :  :  :  :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :  :  :  :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :  :  :  :                 :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :  :  :  :  :                    +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 200440.95176282345, cumulative cost = {4.592349005803428E7 rows, 1.7487657775747936E9 cpu, 6.15383148E8 io, 2.179920552241035E8 network, 1.2282337482239676E8 memory}
         :        :           :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 200440.95176282345, cumulative cost = {4.572304910627145E7 rows, 1.7487657775747936E9 cpu, 6.15383148E8 io, 2.179920552241035E8 network, 1.2282337482239676E8 memory}
         :        :           :  :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :        :           :  :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :           :  :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :           :  :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :           :  :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :           :  :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :  :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :  :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 961527.7725, cumulative cost = {9295550.7675 rows, 2.1283333098000002E8 cpu, 1.53849504E8 io, 2.307885414E7 network, 5076.4 memory}
         :        :           :  :  :  :           +- Calc(select=[x, y0]): rowcount = 961527.7725, cumulative cost = {8334022.995 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :        :           :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961527.7725, cumulative cost = {7372495.2225 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :        :           :  :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
         :        :           :  :  :  :                    +- Calc(select=[x, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 200440.83363782344, cumulative cost = {4.592343670928428E7 rows, 1.7487647219747937E9 cpu, 6.15382728E8 io, 2.179919103241035E8 network, 1.2282308082239676E8 memory}
         :        :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 200440.83363782344, cumulative cost = {4.572299587564646E7 rows, 1.7487647219747937E9 cpu, 6.15382728E8 io, 2.179919103241035E8 network, 1.2282308082239676E8 memory}
         :        :           :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :        :           :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :           :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :           :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :           :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :           :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 961526.985, cumulative cost = {9295497.655000001 rows, 2.1283228168E8 cpu, 1.53849084E8 io, 2.3078709240000002E7 network, 4782.4 memory}
         :        :           :  :  :           +- Calc(select=[x, y0]): rowcount = 961526.985, cumulative cost = {8333970.670000001 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
         :        :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961526.985, cumulative cost = {7372443.6850000005 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
         :        :           :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :        :           :  :  :                    +- Calc(select=[x0, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[x AS X0, y00 AS X1]): rowcount = 1108986.80285625, cumulative cost = {3.9574524960337505E7 rows, 2.468892537538E9 cpu, 4.61534088E8 io, 3.34744156437E8 network, 6.3139002353E7 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 1108986.80285625, cumulative cost = {3.846553815748125E7 rows, 2.468892537538E9 cpu, 4.61534088E8 io, 3.34744156437E8 network, 6.3139002353E7 memory}
         :        :           :  :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[hash[x]]): rowcount = 983150.352375, cumulative cost = {2.4536361354625E7 rows, 1.3328506147189999E9 cpu, 3.07691808E8 io, 1.8090187643699998E8 network, 8082582.620000001 memory}
         :        :           :  :           +- Calc(select=[x, y0 AS y00]): rowcount = 983150.352375, cumulative cost = {2.355321100225E7 rows, 1.16768135552E9 cpu, 3.07691808E8 io, 1.5730626798E8 network, 8082582.620000001 memory}
         :        :           :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x1)], select=[x, y, y0, x1], build=[right]): rowcount = 983150.352375, cumulative cost = {2.2570060649875E7 rows, 1.16768135552E9 cpu, 3.07691808E8 io, 1.5730626798E8 network, 8082582.620000001 memory}
         :        :           :  :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :  :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :                 +- Exchange(distribution=[hash[x1]]): rowcount = 144240.6825, cumulative cost = {8766720.297499998 rows, 3.835071006E7 cpu, 1.53849528E8 io, 3463987.98 network, 5104.4 memory}
         :        :           :  :                    +- Calc(select=[y0, x0 AS x1]): rowcount = 144240.6825, cumulative cost = {8622479.614999998 rows, 1.4118275399999999E7 cpu, 1.53849528E8 io, 2211.6 network, 5104.4 memory}
         :        :           :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right]): rowcount = 144240.6825, cumulative cost = {8478238.9325 rows, 1.4118275399999999E7 cpu, 1.53849528E8 io, 2211.6 network, 5104.4 memory}
         :        :           :  :                          :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :                          :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :                          :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                          :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                          +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
         :        :           :  :                             +- Calc(select=[x, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105743.415875, cumulative cost = {2.432722759925E7 rows, 1.34870227316E9 cpu, 3.07691784E8 io, 1.7692113414E8 network, 5.3850631660000004E7 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105743.415875, cumulative cost = {2.3221484183375E7 rows, 1.34870227316E9 cpu, 3.07691784E8 io, 1.7692113414E8 network, 5.3850631660000004E7 memory}
         :        :           :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 961527.7725, cumulative cost = {9295550.7675 rows, 2.1283333098000002E8 cpu, 1.53849504E8 io, 2.307885414E7 network, 5076.4 memory}
         :        :           :           +- Calc(select=[x, y0]): rowcount = 961527.7725, cumulative cost = {8334022.995 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961527.7725, cumulative cost = {7372495.2225 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
         :        :           :                    +- Calc(select=[x, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :           :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105743.6990375, cumulative cost = {2.4328091283825E7 rows, 1.348723747884E9 cpu, 3.07698564E8 io, 1.76923519086E8 network, 5.3856196534E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105743.6990375, cumulative cost = {2.32223475847875E7 rows, 1.348723747884E9 cpu, 3.07698564E8 io, 1.76923519086E8 network, 5.3856196534E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 961529.66025, cumulative cost = {9296413.88575 rows, 2.12854790602E8 cpu, 1.53856284E8 io, 2.3081239086E7 network, 10535.56 memory}
         :        :                    +- Calc(select=[x, y0]): rowcount = 961529.66025, cumulative cost = {8334884.2255 rows, 5.131780768E7 cpu, 1.53856284E8 io, 4527.24 network, 10535.56 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961529.66025, cumulative cost = {7373354.56525 rows, 5.131780768E7 cpu, 1.53856284E8 io, 4527.24 network, 10535.56 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 102.735, cumulative cost = {1729.9049999999997 rows, 36225.799999999996 cpu, 14004.0 io, 4527.24 network, 4782.4 memory}
         :        :                             +- Calc(select=[x, y]): rowcount = 102.735, cumulative cost = {1627.1699999999998 rows, 19788.199999999997 cpu, 14004.0 io, 2061.6 network, 4782.4 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 102.735, cumulative cost = {1524.435 rows, 19788.199999999997 cpu, 14004.0 io, 2061.6 network, 4782.4 memory}
         :        :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :        :                                      +- Calc(select=[x0, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                         +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                            :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                                            +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 41019.94653843347, cumulative cost = {2.591933630543669E8 rows, 1.130597558835902E10 cpu, 3.230815224E9 io, 1.4652799945046577E9 network, 5.492717000977415E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], build=[right]): rowcount = 41019.94653843347, cumulative cost = {2.5915234310782844E8 rows, 1.130597558835902E10 cpu, 3.230815224E9 io, 1.4652799945046577E9 network, 5.492717000977415E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 242360.57086622587, cumulative cost = {1.4400812776536947E8 rows, 6.086007318675995E9 cpu, 1.846170996E9 io, 7.805081335801686E8 network, 3.390658343232417E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 242360.57086622587, cumulative cost = {1.4376576719450325E8 rows, 6.045290742770469E9 cpu, 1.846170996E9 io, 7.746914798793792E8 network, 3.390658343232417E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 242360.57086622587, cumulative cost = {1.4352340662363702E8 rows, 6.041412973636609E9 cpu, 1.846170996E9 io, 7.746914798793792E8 network, 3.2355475778780323E8 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 242360.57086622587, cumulative cost = {1.432810460527708E8 rows, 5.998757513164153E9 cpu, 1.846170996E9 io, 7.688748261785897E8 network, 3.2355475778780323E8 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1337019.7922788807, cumulative cost = {1.4303868548190457E8 rows, 5.977365196487691E9 cpu, 1.846170996E9 io, 7.688748261785897E8 network, 3.0804368125236475E8 memory}
               :              :- Union(all=[true], union=[X0, X1]): rowcount = 1306862.0468957073, cumulative cost = {9.571616754007506E7 rows, 4.2254664351935163E9 cpu, 1.230781092E9 io, 5.508692690944862E8 network, 1.8518344282996798E8 memory}
               :              :  :- Calc(select=[x AS X0, X1]): rowcount = 1105832.07045755, cumulative cost = {3.3189480964450616E7 rows, 1.371488855565088E9 cpu, 4.61548464E8 io, 1.7767474034828407E8 network, 5.7510015907064155E7 memory}
               :              :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 1105832.07045755, cumulative cost = {3.2083648893993065E7 rows, 1.371488855565088E9 cpu, 4.61548464E8 io, 1.7767474034828407E8 network, 5.7510015907064155E7 memory}
               :              :  :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :     +- Exchange(distribution=[hash[x]]): rowcount = 962118.8030503338, cumulative cost = {1.8157626823535513E7 rows, 2.3561518514068538E8 cpu, 3.07706184E8 io, 2.3832460348284073E7 network, 3631362.936245466 memory}
               :              :  :        +- Calc(select=[x, X1]): rowcount = 962118.8030503338, cumulative cost = {1.7195508020485178E7 rows, 7.397922622822931E7 cpu, 3.07706184E8 io, 741609.075076062 network, 3631362.936245466 memory}
               :              :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962118.8030503338, cumulative cost = {1.6233389217434842E7 rows, 7.397922622822931E7 cpu, 3.07706184E8 io, 741609.075076062 network, 3631362.936245466 memory}
               :              :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :              +- Exchange(distribution=[broadcast]): rowcount = 4030.3536688916415, cumulative cost = {8861175.414384509 rows, 2.2666223398878183E7 cpu, 1.53863904E8 io, 741609.075076062 network, 3405663.130787534 memory}
               :              :  :                 +- Calc(select=[X0, X1]): rowcount = 4030.3536688916415, cumulative cost = {8857145.060715618 rows, 2.202136681185552E7 cpu, 1.53863904E8 io, 644880.5870226626 network, 3405663.130787534 memory}
               :              :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4030.3536688916415, cumulative cost = {8853114.707046727 rows, 2.202136681185552E7 cpu, 1.53863904E8 io, 644880.5870226626 network, 3405663.130787534 memory}
               :              :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :              :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :              :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :              :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :                       +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  +- Calc(select=[X0, X10 AS X1]): rowcount = 201029.97643815717, cumulative cost = {6.121982452872873E7 rows, 2.8526707175815325E9 cpu, 7.69232628E8 io, 3.7319452874620223E8 network, 1.2767342692290384E8 memory}
               :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 201029.97643815717, cumulative cost = {6.101879455229057E7 rows, 2.8526707175815325E9 cpu, 7.69232628E8 io, 3.7319452874620223E8 network, 1.2767342692290384E8 memory}
               :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
               :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
               :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
               :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
               :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
               :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :              :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :        +- Exchange(distribution=[hash[x]]): rowcount = 965454.6036688916, cumulative cost = {2.4590707188843787E7 rows, 1.3167068563373878E9 cpu, 3.07698984E8 io, 1.782813276620987E8 network, 4855128.500507081 memory}
               :              :           +- Calc(select=[x, X1]): rowcount = 965454.6036688916, cumulative cost = {2.3625252585174896E7 rows, 1.154510482921014E9 cpu, 3.07698984E8 io, 1.5511041717404532E8 network, 4855128.500507081 memory}
               :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965454.6036688916, cumulative cost = {2.2659797981506005E7 rows, 1.154510482921014E9 cpu, 3.07698984E8 io, 1.5511041717404532E8 network, 4855128.500507081 memory}
               :              :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :                 +- Exchange(distribution=[hash[X0]]): rowcount = 26269.02445927761, cumulative cost = {8874153.377837114 rows, 2.6123610725339938E7 cpu, 1.53856704E8 io, 1268137.1740453253 network, 3384063.130787534 memory}
               :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :              :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :                                :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :                                :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[X0, y AS X1]): rowcount = 30157.745383173515, cumulative cost = {4.5985498149550624E7 rows, 1.7505617415018961E9 cpu, 6.15389904E8 io, 2.180055570841035E8 network, 1.2286023842239675E8 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[X0, y, x], isBroadcast=[true], build=[right]): rowcount = 30157.745383173515, cumulative cost = {4.595534040416745E7 rows, 1.7505617415018961E9 cpu, 6.15389904E8 io, 2.180055570841035E8 network, 1.2286023842239675E8 memory}
               :                    :- Calc(select=[X0, y]): rowcount = 200451.63588782345, cumulative cost = {4.592398265878428E7 rows, 1.7488573284147935E9 cpu, 6.15382704E8 io, 2.179983570841035E8 network, 1.2283863842239675E8 memory}
               :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], build=[left]): rowcount = 200451.63588782345, cumulative cost = {4.5723531022896454E7 rows, 1.7488573284147935E9 cpu, 6.15382704E8 io, 2.179983570841035E8 network, 1.2283863842239675E8 memory}
               :                    :     :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
               :                    :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
               :                    :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
               :                    :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
               :                    :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
               :                    :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                    :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                    :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                    :     :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                    :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                    :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                    :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                    :     +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
               :                    :        +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                    :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[X0]]): rowcount = 31105.739389997292, cumulative cost = {1.151031953959205E8 rows, 5.217780539200975E9 cpu, 1.384644228E9 io, 6.847718609244893E8 network, 2.0846394436865988E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 31105.739389997292, cumulative cost = {1.150720896565305E8 rows, 5.212554774983456E9 cpu, 1.384644228E9 io, 6.840253231791294E8 network, 2.0846394436865988E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 31105.739389997292, cumulative cost = {1.150409839171405E8 rows, 5.212554774983456E9 cpu, 1.384644228E9 io, 6.840253231791294E8 network, 2.0846394436865988E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.150086781777505E8 rows, 5.210799802215989E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 2.0844234436865988E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 206771.5959333153, cumulative cost = {1.1480190658181718E8 rows, 5.207491456681056E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 1.952089622289277E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.1459513498588386E8 rows, 5.171099655796793E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.952089622289277E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1140687.6756224853, cumulative cost = {1.1438836338995054E8 rows, 5.152848652986834E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.8197558008919552E8 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 175115.28760917907, cumulative cost = {6.2360548979872726E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 175115.28760917907, cumulative cost = {6.218543369226354E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 179761.68948028254, cumulative cost = {3.623319088764287E7 rows, 1.328521145834818E9 cpu, 4.61548092E8 io, 1.7147682713648033E8 network, 6.914175207815145E7 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :           :     :              :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :     :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 965572.3880133063, cumulative cost = {5.088712673445533E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965572.3880133063, cumulative cost = {4.992155434644203E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
                        :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[hash[X0]]): rowcount = 27054.25342204238, cumulative cost = {3.613579195842872E7 rows, 1.3044051900928757E9 cpu, 4.61555292E8 io, 1.678190486710826E8 network, 6.916335207815145E7 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 27054.25342204238, cumulative cost = {3.6108737705006674E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 27054.25342204238, cumulative cost = {3.608168345158463E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[1,0,1,2,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#3] Exchange(distribution=[hash[X1]])\n:  :     +- [#4] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#5] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#6] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], build=[right])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#2] Exchange(distribution=[hash[X0]])\n])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[0,1,0,1,2,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#2] Exchange(distribution=[hash[y]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#4] Exchange(distribution=[hash[X1]])\n:        +- [#5] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[X0, y, x], isBroadcast=[true], build=[right])\n      :- Calc(select=[X0, y])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], build=[left])\n      :     :- [#4] Exchange(distribution=[hash[X1]])\n      :     +- [#7] Exchange(distribution=[hash[x]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[3])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[6])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- Calc(select=[x0 AS X0, y AS X1])
         :              :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :                 :           :     :- Calc(select=[y, x0])
         :              :                 :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[9])
         :              :                 :           :     :     :- Reused(reference_id=[1])
         :              :                 :           :     :     +- Exchange(distribution=[broadcast])(reuse_id=[5])
         :              :                 :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :              :                 :           :     +- Reused(reference_id=[2])
         :              :                 :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[10])
         :              :                 :              +- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[2])
         :              :- Exchange(distribution=[hash[X1]])(reuse_id=[7])
         :              :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :              :     +- Exchange(distribution=[hash[X0, X1]])
         :              :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :              :- Reused(reference_id=[1])
         :              :              :- Exchange(distribution=[broadcast])(reuse_id=[8])
         :              :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[12])
         :              :              :- Reused(reference_id=[4])
         :              :              +- Exchange(distribution=[hash[x]])
         :              :                 +- Calc(select=[x, y0])(reuse_id=[15])
         :              :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[13])
         :              :                       :- Reused(reference_id=[1])
         :              :                       +- Reused(reference_id=[5])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :              :        :- Reused(reference_id=[4])
         :              :        +- Exchange(distribution=[hash[X0]])
         :              :           +- Reused(reference_id=[6])
         :              :- Reused(reference_id=[7])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, y])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Reused(reference_id=[8])
         :- Exchange(distribution=[hash[X0]])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[hash[X0]])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[14])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Reused(reference_id=[4])
         :        :           :              :- Exchange(distribution=[hash[x]])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[11])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- Reused(reference_id=[9])
         :        :           :              :        :           +- Reused(reference_id=[10])
         :        :           :              :        +- Reused(reference_id=[5])
         :        :           :              :- Reused(reference_id=[11])
         :        :           :              +- Reused(reference_id=[8])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Exchange(distribution=[hash[x]])
         :        :           :        :  +- Reused(reference_id=[1])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[20])
         :        :           :                       :  +- Reused(reference_id=[12])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- Reused(reference_id=[13])
         :        :           :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[hash[X0]])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[14])
         :        :                    +- Reused(reference_id=[2])
         :        +- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[22])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,3,2,2,1,1,2,1,2,1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :  :- Calc(select=[X0, X00 AS X1])\n:  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :  :  :  :     :- [#11] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :  :  :     +- [#12] Exchange(distribution=[broadcast])\n:  :  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, X0, y00], build=[right])\n:  :  :  :  :        :- [#13] Exchange(distribution=[hash[x]], shuffle_mode=[BATCH])\n:  :  :  :  :        +- [#14] Exchange(distribution=[hash[y0]])\n:  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n:  :  :  :        :- [#7] Exchange(distribution=[hash[X1]])\n:  :  :  :        +- [#4] Exchange(distribution=[hash[x]])\n:  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n:  :  :        :- [#7] Exchange(distribution=[hash[X1]])\n:  :  :        +- [#8] Exchange(distribution=[hash[x]])\n:  :  +- Calc(select=[x AS X0, y00 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])\n:  :        :- [#5] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:  :        +- [#6] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[x AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Reused(reference_id=[4])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[x, y])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], isBroadcast=[true], build=[right])
         :              :                 :- Reused(reference_id=[3])
         :              :                 +- Exchange(distribution=[broadcast])(reuse_id=[17])
         :              :                    +- Calc(select=[x0, y])
         :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[23])
         :              :                          :- Reused(reference_id=[12])
         :              :                          +- Reused(reference_id=[5])
         :              :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])(reuse_id=[18])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])(reuse_id=[16])
         :              :           +- Calc(select=[x, y])
         :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])
         :              :                 :- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[5])
         :              :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0 AS y00])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x1)], select=[x, y, y0, x1], build=[right])
         :              :        :- Reused(reference_id=[4])
         :              :        +- Exchange(distribution=[hash[x1]])
         :              :           +- Calc(select=[y0, x0 AS x1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right])
         :              :                 :- Reused(reference_id=[15])
         :              :                 +- Reused(reference_id=[16])
         :              :- Reused(reference_id=[7])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[17])
         :              :- Reused(reference_id=[7])
         :              :- Reused(reference_id=[18])
         :              :- Reused(reference_id=[19])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[8])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[15])
         :              :                 :     +- Reused(reference_id=[8])
         :              :                 +- Reused(reference_id=[20])
         :              :- Exchange(distribution=[hash[x]], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[15])
         :              +- Exchange(distribution=[hash[y0]])
         :                 +- Calc(select=[X0, y0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])
         :                       :- Reused(reference_id=[7])
         :                       +- Exchange(distribution=[hash[x]], shuffle_mode=[BATCH])
         :                          +- Reused(reference_id=[15])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[21])
         :- Reused(reference_id=[22])
         +- Exchange(distribution=[broadcast])
            +- Calc(select=[x, x0])
               +- Reused(reference_id=[23])

Job has been submitted with JobID 10f8572dd5b3cb6ef62576ac1cd1a9b9
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, s_4.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT r_0.x AS X0, s_5.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN b AS b_4 ON s_2.y = b_4.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 18fb112e_f3f4_4173_8dc0_f5588e335d58

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, s_4.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT r_0.x AS X0, s_5.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN b AS b_4 ON s_2.y = b_4.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :  :     :  :  :  :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$10])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :     +- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :        :  :  :  :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :        :  :  :  :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$10])
   :        :  :  :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :     +- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 46959.245476733944, cumulative cost = {5.969100023936437E8 rows, 2.2385267720480484E10 cpu, 7.77701748E9 io, 2.826225299298288E9 network, 1.4809676821468656E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 46959.245476733944, cumulative cost = {5.96863043148167E8 rows, 2.2384516372552856E10 cpu, 7.77701748E9 io, 2.826225299298288E9 network, 1.4779622904363546E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 46959.245476733944, cumulative cost = {5.968160839026903E8 rows, 2.237625154534895E10 cpu, 7.77701748E9 io, 2.825098277406846E9 network, 1.4779622904363546E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 259057.98294034816, cumulative cost = {5.967691246572136E8 rows, 2.2372106617621902E10 cpu, 7.77701748E9 io, 2.825098277406846E9 network, 1.4749568987258437E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 232807.52234944253, cumulative cost = {4.4721534996592784E8 rows, 1.7920260898740734E10 cpu, 5.709685464E9 io, 2.284964851872427E9 network, 1.1234249830709777E9 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 164030.47901849778, cumulative cost = {2.595801941195307E8 rows, 1.0060344587954721E10 cpu, 3.34706016E9 io, 1.277598131361112E9 network, 6.4495336999107E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 164030.47901849778, cumulative cost = {2.594161636405122E8 rows, 1.0060344587954721E10 cpu, 3.34706016E9 io, 1.277598131361112E9 network, 6.4495336999107E8 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 458444.0222062985, cumulative cost = {1.877225644595921E8 rows, 7.93302223101667E9 cpu, 2.362619724E9 io, 1.0183676826442659E9 network, 4.784676874799075E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 458444.0222062985, cumulative cost = {1.872641204373858E8 rows, 7.856003635286012E9 cpu, 2.362619724E9 io, 1.0073650261113148E9 network, 4.784676874799075E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 458444.0222062985, cumulative cost = {1.868056764151795E8 rows, 7.848668530930711E9 cpu, 2.362619724E9 io, 1.0073650261113148E9 network, 4.4912727005870444E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 458444.0222062985, cumulative cost = {1.8634723239297318E8 rows, 7.767982383022402E9 cpu, 2.362619724E9 io, 9.963623695783637E8 network, 4.4912727005870444E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2529077.7668620236, cumulative cost = {1.8588878837076688E8 rows, 7.727517138752609E9 cpu, 2.362619724E9 io, 9.963623695783637E8 network, 4.1978685263750136E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 1821542.626462024, cumulative cost = {1.6779251899510485E8 rows, 6.861969956129747E9 cpu, 2.165729424E9 io, 8.831530309543637E8 network, 3.853237091815013E8 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 1114007.717587024, cumulative cost = {1.5040449252339283E8 rows, 5.997147908823285E9 cpu, 1.96884468E9 io, 7.699456467343637E8 network, 3.508651260015013E8 memory}
         :  :     :              :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 404397.7662370242, cumulative cost = {1.2396767694610581E8 rows, 4.416254591761698E9 cpu, 1.673520504E9 io, 5.557516702783637E8 network, 3.104631409375013E8 memory}
         :  :     :              :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 276140.4784579607, cumulative cost = {9.417772880103564E7 rows, 3.2968426344266577E9 cpu, 1.279751712E9 io, 4.162629027490634E8 network, 2.3186701862185007E8 memory}
         :  :     :              :  :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 147883.09280389722, cumulative cost = {6.451599374049455E7 rows, 2.177558059739397E9 cpu, 8.85982572E8 io, 2.7677401515976304E8 network, 1.5327065270619887E8 memory}
         :  :     :              :  :  :  :  :  :- Calc(select=[X0, X00 AS X1]): rowcount = 36357.763662037716, cumulative cost = {2.8684576273294717E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :  :     :              :  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.763662037716, cumulative cost = {2.864821850963268E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :  :     :              :  :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :     :              :  :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :     :              :  :  :  :  :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :  :  :  :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                    +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 2593.245886494809, cumulative cost = {5670702.8078893805 rows, 1.4537252221332248E7 cpu, 9.84561E7 io, 477181.2431150449 network, 2187003.1564755705 memory}
         :  :     :              :  :  :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 2593.245886494809, cumulative cost = {5668109.562002886 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :  :     :              :  :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2593.245886494809, cumulative cost = {5665516.316116392 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :  :     :              :  :  :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5661997.070229897 rows, 1.3909946432213355E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 2170335.1564755705 memory}
         :  :     :              :  :  :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16825.305909965395, cumulative cost = {5645171.764319932 rows, 1.3640741537653908E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 1093515.5782377853 memory}
         :  :     :              :  :  :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5628346.458409967 rows, 1.06794876975E7 cpu, 9.8450544E7 io, 5580.0 network, 1093515.5782377853 memory}
         :  :     :              :  :  :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92819.4175, cumulative cost = {5611521.152500002 rows, 9194377.0175 cpu, 9.8450544E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :  :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :  :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 111525.32914185952, cumulative cost = {3.568353437439594E7 rows, 1.2252402869219177E9 cpu, 4.92202668E8 io, 1.5733092683199784E8 network, 8.577457439527877E7 memory}
         :  :     :              :  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], build=[right]): rowcount = 111525.32914185952, cumulative cost = {3.5572009045254074E7 rows, 1.2252402869219177E9 cpu, 4.92202668E8 io, 1.5733092683199784E8 network, 8.577457439527877E7 memory}
         :  :     :              :  :  :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :  :  :  :  :        :  +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        +- Exchange(distribution=[hash[y0]]): rowcount = 128255.74427906348, cumulative cost = {2.9513100366112214E7 rows, 1.1118290637676852E9 cpu, 3.93763236E8 io, 1.4256498803199783E8 network, 7.859222471565121E7 memory}
         :  :     :              :  :  :  :  :           +- Calc(select=[X0, y0]): rowcount = 128255.74427906348, cumulative cost = {2.938484462183315E7 rows, 1.0902820987288024E9 cpu, 3.93763236E8 io, 1.3948685016930032E8 network, 7.859222471565121E7 memory}
         :  :     :              :  :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 128255.74427906348, cumulative cost = {2.9256588877554085E7 rows, 1.0902820987288024E9 cpu, 3.93763236E8 io, 1.3948685016930032E8 network, 7.859222471565121E7 memory}
         :  :     :              :  :  :  :  :                 :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :  :     :              :  :  :  :  :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :     :              :  :  :  :  :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :  :  :  :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :  :  :  :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :     :              :  :  :  :  :                 :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :  :  :  :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :  :  :  :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :  :  :  :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :  :  :  :                 :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :  :  :  :  :                    +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 128257.38565406349, cumulative cost = {2.9385594582083143E7 rows, 1.1190084342088025E9 cpu, 3.9376914E8 io, 1.3948888758930033E8 network, 7.859636591565122E7 memory}
         :  :     :              :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 128257.38565406349, cumulative cost = {2.925733719642908E7 rows, 1.1190084342088025E9 cpu, 3.9376914E8 io, 1.3948888758930033E8 network, 7.859636591565122E7 memory}
         :  :     :              :  :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :  :     :              :  :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :     :              :  :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :     :              :  :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :  :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :  :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 615257.3925, cumulative cost = {5948130.0275 rows, 1.3618945354E8 cpu, 9.8445336E7 io, 1.4767976219999999E7 network, 4169.2 memory}
         :  :     :              :  :  :  :           +- Calc(select=[x, y0]): rowcount = 615257.3925, cumulative cost = {5332872.635 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :  :     :              :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615257.3925, cumulative cost = {4717615.2425 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :  :     :              :  :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
         :  :     :              :  :  :  :                    +- Calc(select=[x, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 128257.28777906348, cumulative cost = {2.9385550378833145E7 rows, 1.1190075595688024E9 cpu, 3.93768792E8 io, 1.3948876752930033E8 network, 7.859612231565121E7 memory}
         :  :     :              :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 128257.28777906348, cumulative cost = {2.9257293091054082E7 rows, 1.1190075595688024E9 cpu, 3.93768792E8 io, 1.3948876752930033E8 network, 7.859612231565121E7 memory}
         :  :     :              :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :  :     :              :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :     :              :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :     :              :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 615256.74, cumulative cost = {5948086.0200000005 rows, 1.3618858412E8 cpu, 9.8444988E7 io, 1.476785616E7 network, 3925.6 memory}
         :  :     :              :  :  :           +- Calc(select=[x, y0]): rowcount = 615256.74, cumulative cost = {5332829.28 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
         :  :     :              :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615256.74, cumulative cost = {4717572.54 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
         :  :     :              :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :  :     :              :  :  :                    +- Calc(select=[x0, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[x AS X0, y00 AS X1]): rowcount = 709609.9513499999, cumulative cost = {2.5322807859699998E7 rows, 1.5797793093439999E9 cpu, 2.95324176E8 io, 2.14193976456E8 network, 4.0401985064E7 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 709609.9513499999, cumulative cost = {2.461319790835E7 rows, 1.5797793093439999E9 cpu, 2.95324176E8 io, 2.14193976456E8 network, 4.0401985064E7 memory}
         :  :     :              :  :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[hash[x]]): rowcount = 629091.009, cumulative cost = {1.5700303956999999E7 rows, 8.52857589272E8 cpu, 1.96884768E8 io, 1.15754568456E8 network, 5172888.56 memory}
         :  :     :              :  :           +- Calc(select=[x, y0 AS y00]): rowcount = 629091.009, cumulative cost = {1.5071212947999999E7 rows, 7.4717029976E8 cpu, 1.96884768E8 io, 1.0065638424E8 network, 5172888.56 memory}
         :  :     :              :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x1)], select=[x, y, y0, x1], build=[right]): rowcount = 629091.009, cumulative cost = {1.4442121939E7 rows, 7.4717029976E8 cpu, 1.96884768E8 io, 1.0065638424E8 network, 5172888.56 memory}
         :  :     :              :  :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :  :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                 +- Exchange(distribution=[hash[x1]]): rowcount = 92298.05999999998, cumulative cost = {5609746.929999999 rows, 2.4542923279999994E7 cpu, 9.844536E7 io, 2216976.2399999993 network, 4197.2 memory}
         :  :     :              :  :                    +- Calc(select=[y0, x0 AS x1]): rowcount = 92298.05999999998, cumulative cost = {5517448.869999999 rows, 9036849.2 cpu, 9.844536E7 io, 1822.8000000000002 network, 4197.2 memory}
         :  :     :              :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right]): rowcount = 92298.05999999998, cumulative cost = {5425150.81 rows, 9036849.2 cpu, 9.844536E7 io, 1822.8000000000002 network, 4197.2 memory}
         :  :     :              :  :                          :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                          :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                          +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
         :  :     :              :  :                             +- Calc(select=[x, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707534.908875, cumulative cost = {1.556648384525E7 rows, 8.6300050468E8 cpu, 1.96884744E8 io, 1.1320738422E8 network, 3.445858318E7 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707534.908875, cumulative cost = {1.4858948936375E7 rows, 8.6300050468E8 cpu, 1.96884744E8 io, 1.1320738422E8 network, 3.445858318E7 memory}
         :  :     :              :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 615257.3925, cumulative cost = {5948130.0275 rows, 1.3618945354E8 cpu, 9.8445336E7 io, 1.4767976219999999E7 network, 4169.2 memory}
         :  :     :              :           +- Calc(select=[x, y0]): rowcount = 615257.3925, cumulative cost = {5332872.635 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615257.3925, cumulative cost = {4717615.2425 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
         :  :     :              :                    +- Calc(select=[x, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707535.1403999999, cumulative cost = {1.5567191608799998E7 rows, 8.630181048560001E8 cpu, 1.968903E8 io, 1.13209338624E8 network, 3.4463143456E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707535.1403999999, cumulative cost = {1.4859656468399998E7 rows, 8.630181048560001E8 cpu, 1.968903E8 io, 1.13209338624E8 network, 3.4463143456E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 615258.936, cumulative cost = {5948837.327999999 rows, 1.36207041368E8 cpu, 9.8450892E7 io, 1.4769930624E7 network, 8643.039999999999 memory}
         :  :     :                       +- Calc(select=[x, y0]): rowcount = 615258.936, cumulative cost = {5333578.391999999 rows, 3.284354012E7 cpu, 9.8450892E7 io, 3716.16 network, 8643.039999999999 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615258.936, cumulative cost = {4718319.455999999 rows, 3.284354012E7 cpu, 9.8450892E7 io, 3716.16 network, 8643.039999999999 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 84.24, cumulative cost = {1418.52 rows, 29730.199999999997 cpu, 11484.0 io, 3716.16 network, 3925.6 memory}
         :  :     :                                +- Calc(select=[x, y]): rowcount = 84.24, cumulative cost = {1334.28 rows, 16251.8 cpu, 11484.0 io, 1694.3999999999999 network, 3925.6 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 84.24, cumulative cost = {1250.04 rows, 16251.8 cpu, 11484.0 io, 1694.3999999999999 network, 3925.6 memory}
         :  :     :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :  :     :                                         +- Calc(select=[x0, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                                            +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                                               :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :                                               +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                                  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 635092.5045836867, cumulative cost = {7.152956870190158E7 rows, 2.1185740647237313E9 cpu, 9.84440436E8 io, 2.5923044871684632E8 network, 1.4081281726760986E8 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 635092.5045836867, cumulative cost = {7.08944761973179E7 rows, 2.011878523953672E9 cpu, 9.84440436E8 io, 2.4398822860683784E8 network, 1.4081281726760986E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 635092.5045836867, cumulative cost = {7.025938369273421E7 rows, 2.011878523953672E9 cpu, 9.84440436E8 io, 2.4398822860683784E8 network, 1.4081281726760986E8 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 132308.0305579119, cumulative cost = {6.1421007188150525E7 rows, 1.2889310677092087E9 cpu, 8.86001028E8 io, 1.4554882060683784E8 network, 1.334035675563668E8 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.128869915759261E7 rows, 1.2667033185754795E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.334035675563668E8 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 132308.0305579119, cumulative cost = {6.1156391127034694E7 rows, 1.2645863900865529E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.2493585360066044E8 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.102408309647678E7 rows, 1.2413001767083604E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.2493585360066044E8 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 729897.833220605, cumulative cost = {6.089177506591886E7 rows, 1.2296218113768308E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.1646813964495409E8 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 112052.33563582558, cumulative cost = {3.580258249390231E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 112052.33563582558, cumulative cost = {3.5690530158266485E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 115027.89265686346, cumulative cost = {1.908402168458766E7 rows, 1.609046963037042E8 cpu, 2.9533566E8 io, 1.1286275816362873E7 network, 4.425118995309321E7 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                             :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 617845.4975847794, cumulative cost = {2.435929473879594E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617845.4975847794, cumulative cost = {2.374144924121116E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 17327.983898529517, cumulative cost = {1.9021961743626382E7 rows, 1.4535536690237078E8 cpu, 2.95341564E8 io, 8947382.006162858 network, 4.426890195309321E7 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 17327.983898529517, cumulative cost = {1.9004633759727854E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 17327.983898529517, cumulative cost = {1.8987305775829326E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                                            :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 68777.04333094477, cumulative cost = {1.8740234832404768E8 rows, 7.859683503263662E9 cpu, 2.362625304E9 io, 1.0073667205113147E9 network, 4.7847161307990754E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 68777.04333094477, cumulative cost = {1.8733357128071675E8 rows, 7.859683503263662E9 cpu, 2.362625304E9 io, 1.0073667205113147E9 network, 4.7847161307990754E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 458444.0222062985, cumulative cost = {1.872641204373858E8 rows, 7.856003635286012E9 cpu, 2.362619724E9 io, 1.0073650261113148E9 network, 4.784676874799075E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 458444.0222062985, cumulative cost = {1.868056764151795E8 rows, 7.848668530930711E9 cpu, 2.362619724E9 io, 1.0073650261113148E9 network, 4.4912727005870444E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 458444.0222062985, cumulative cost = {1.8634723239297318E8 rows, 7.767982383022402E9 cpu, 2.362619724E9 io, 9.963623695783637E8 network, 4.4912727005870444E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 2529077.7668620236, cumulative cost = {1.8588878837076688E8 rows, 7.727517138752609E9 cpu, 2.362619724E9 io, 9.963623695783637E8 network, 4.1978685263750136E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 1821542.626462024, cumulative cost = {1.6779251899510485E8 rows, 6.861969956129747E9 cpu, 2.165729424E9 io, 8.831530309543637E8 network, 3.853237091815013E8 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 1114007.717587024, cumulative cost = {1.5040449252339283E8 rows, 5.997147908823285E9 cpu, 1.96884468E9 io, 7.699456467343637E8 network, 3.508651260015013E8 memory}
         :        :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 404397.7662370242, cumulative cost = {1.2396767694610581E8 rows, 4.416254591761698E9 cpu, 1.673520504E9 io, 5.557516702783637E8 network, 3.104631409375013E8 memory}
         :        :           :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 276140.4784579607, cumulative cost = {9.417772880103564E7 rows, 3.2968426344266577E9 cpu, 1.279751712E9 io, 4.162629027490634E8 network, 2.3186701862185007E8 memory}
         :        :           :  :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 147883.09280389722, cumulative cost = {6.451599374049455E7 rows, 2.177558059739397E9 cpu, 8.85982572E8 io, 2.7677401515976304E8 network, 1.5327065270619887E8 memory}
         :        :           :  :  :  :  :  :- Calc(select=[X0, X00 AS X1]): rowcount = 36357.763662037716, cumulative cost = {2.8684576273294717E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :        :           :  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.763662037716, cumulative cost = {2.864821850963268E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :        :           :  :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :           :  :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :           :  :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :           :  :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :           :  :  :  :  :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :  :  :  :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                    +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 2593.245886494809, cumulative cost = {5670702.8078893805 rows, 1.4537252221332248E7 cpu, 9.84561E7 io, 477181.2431150449 network, 2187003.1564755705 memory}
         :        :           :  :  :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 2593.245886494809, cumulative cost = {5668109.562002886 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :        :           :  :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2593.245886494809, cumulative cost = {5665516.316116392 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :        :           :  :  :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5661997.070229897 rows, 1.3909946432213355E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 2170335.1564755705 memory}
         :        :           :  :  :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16825.305909965395, cumulative cost = {5645171.764319932 rows, 1.3640741537653908E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 1093515.5782377853 memory}
         :        :           :  :  :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5628346.458409967 rows, 1.06794876975E7 cpu, 9.8450544E7 io, 5580.0 network, 1093515.5782377853 memory}
         :        :           :  :  :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92819.4175, cumulative cost = {5611521.152500002 rows, 9194377.0175 cpu, 9.8450544E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :  :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :  :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :  :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 111525.32914185952, cumulative cost = {3.568353437439594E7 rows, 1.2252402869219177E9 cpu, 4.92202668E8 io, 1.5733092683199784E8 network, 8.577457439527877E7 memory}
         :        :           :  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], build=[right]): rowcount = 111525.32914185952, cumulative cost = {3.5572009045254074E7 rows, 1.2252402869219177E9 cpu, 4.92202668E8 io, 1.5733092683199784E8 network, 8.577457439527877E7 memory}
         :        :           :  :  :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :  :  :  :  :        :  +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :        +- Exchange(distribution=[hash[y0]]): rowcount = 128255.74427906348, cumulative cost = {2.9513100366112214E7 rows, 1.1118290637676852E9 cpu, 3.93763236E8 io, 1.4256498803199783E8 network, 7.859222471565121E7 memory}
         :        :           :  :  :  :  :           +- Calc(select=[X0, y0]): rowcount = 128255.74427906348, cumulative cost = {2.938484462183315E7 rows, 1.0902820987288024E9 cpu, 3.93763236E8 io, 1.3948685016930032E8 network, 7.859222471565121E7 memory}
         :        :           :  :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 128255.74427906348, cumulative cost = {2.9256588877554085E7 rows, 1.0902820987288024E9 cpu, 3.93763236E8 io, 1.3948685016930032E8 network, 7.859222471565121E7 memory}
         :        :           :  :  :  :  :                 :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :        :           :  :  :  :  :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :           :  :  :  :  :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :           :  :  :  :  :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :           :  :  :  :  :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :           :  :  :  :  :                 :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :  :  :  :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :  :  :  :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :  :  :  :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :  :  :  :                 :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :  :  :  :  :                    +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 128257.38565406349, cumulative cost = {2.9385594582083143E7 rows, 1.1190084342088025E9 cpu, 3.9376914E8 io, 1.3948888758930033E8 network, 7.859636591565122E7 memory}
         :        :           :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 128257.38565406349, cumulative cost = {2.925733719642908E7 rows, 1.1190084342088025E9 cpu, 3.9376914E8 io, 1.3948888758930033E8 network, 7.859636591565122E7 memory}
         :        :           :  :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :        :           :  :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :           :  :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :           :  :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :           :  :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :           :  :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :  :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :  :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 615257.3925, cumulative cost = {5948130.0275 rows, 1.3618945354E8 cpu, 9.8445336E7 io, 1.4767976219999999E7 network, 4169.2 memory}
         :        :           :  :  :  :           +- Calc(select=[x, y0]): rowcount = 615257.3925, cumulative cost = {5332872.635 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :        :           :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615257.3925, cumulative cost = {4717615.2425 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :        :           :  :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
         :        :           :  :  :  :                    +- Calc(select=[x, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 128257.28777906348, cumulative cost = {2.9385550378833145E7 rows, 1.1190075595688024E9 cpu, 3.93768792E8 io, 1.3948876752930033E8 network, 7.859612231565121E7 memory}
         :        :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 128257.28777906348, cumulative cost = {2.9257293091054082E7 rows, 1.1190075595688024E9 cpu, 3.93768792E8 io, 1.3948876752930033E8 network, 7.859612231565121E7 memory}
         :        :           :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :        :           :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :           :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :           :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :           :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :           :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 615256.74, cumulative cost = {5948086.0200000005 rows, 1.3618858412E8 cpu, 9.8444988E7 io, 1.476785616E7 network, 3925.6 memory}
         :        :           :  :  :           +- Calc(select=[x, y0]): rowcount = 615256.74, cumulative cost = {5332829.28 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
         :        :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615256.74, cumulative cost = {4717572.54 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
         :        :           :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :        :           :  :  :                    +- Calc(select=[x0, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[x AS X0, y00 AS X1]): rowcount = 709609.9513499999, cumulative cost = {2.5322807859699998E7 rows, 1.5797793093439999E9 cpu, 2.95324176E8 io, 2.14193976456E8 network, 4.0401985064E7 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 709609.9513499999, cumulative cost = {2.461319790835E7 rows, 1.5797793093439999E9 cpu, 2.95324176E8 io, 2.14193976456E8 network, 4.0401985064E7 memory}
         :        :           :  :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[hash[x]]): rowcount = 629091.009, cumulative cost = {1.5700303956999999E7 rows, 8.52857589272E8 cpu, 1.96884768E8 io, 1.15754568456E8 network, 5172888.56 memory}
         :        :           :  :           +- Calc(select=[x, y0 AS y00]): rowcount = 629091.009, cumulative cost = {1.5071212947999999E7 rows, 7.4717029976E8 cpu, 1.96884768E8 io, 1.0065638424E8 network, 5172888.56 memory}
         :        :           :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x1)], select=[x, y, y0, x1], build=[right]): rowcount = 629091.009, cumulative cost = {1.4442121939E7 rows, 7.4717029976E8 cpu, 1.96884768E8 io, 1.0065638424E8 network, 5172888.56 memory}
         :        :           :  :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :  :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :                 +- Exchange(distribution=[hash[x1]]): rowcount = 92298.05999999998, cumulative cost = {5609746.929999999 rows, 2.4542923279999994E7 cpu, 9.844536E7 io, 2216976.2399999993 network, 4197.2 memory}
         :        :           :  :                    +- Calc(select=[y0, x0 AS x1]): rowcount = 92298.05999999998, cumulative cost = {5517448.869999999 rows, 9036849.2 cpu, 9.844536E7 io, 1822.8000000000002 network, 4197.2 memory}
         :        :           :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right]): rowcount = 92298.05999999998, cumulative cost = {5425150.81 rows, 9036849.2 cpu, 9.844536E7 io, 1822.8000000000002 network, 4197.2 memory}
         :        :           :  :                          :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :                          :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :                          :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                          :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                          +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
         :        :           :  :                             +- Calc(select=[x, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707534.908875, cumulative cost = {1.556648384525E7 rows, 8.6300050468E8 cpu, 1.96884744E8 io, 1.1320738422E8 network, 3.445858318E7 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707534.908875, cumulative cost = {1.4858948936375E7 rows, 8.6300050468E8 cpu, 1.96884744E8 io, 1.1320738422E8 network, 3.445858318E7 memory}
         :        :           :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 615257.3925, cumulative cost = {5948130.0275 rows, 1.3618945354E8 cpu, 9.8445336E7 io, 1.4767976219999999E7 network, 4169.2 memory}
         :        :           :           +- Calc(select=[x, y0]): rowcount = 615257.3925, cumulative cost = {5332872.635 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615257.3925, cumulative cost = {4717615.2425 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
         :        :           :                    +- Calc(select=[x, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :           :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707535.1403999999, cumulative cost = {1.5567191608799998E7 rows, 8.630181048560001E8 cpu, 1.968903E8 io, 1.13209338624E8 network, 3.4463143456E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707535.1403999999, cumulative cost = {1.4859656468399998E7 rows, 8.630181048560001E8 cpu, 1.968903E8 io, 1.13209338624E8 network, 3.4463143456E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 615258.936, cumulative cost = {5948837.327999999 rows, 1.36207041368E8 cpu, 9.8450892E7 io, 1.4769930624E7 network, 8643.039999999999 memory}
         :        :                    +- Calc(select=[x, y0]): rowcount = 615258.936, cumulative cost = {5333578.391999999 rows, 3.284354012E7 cpu, 9.8450892E7 io, 3716.16 network, 8643.039999999999 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615258.936, cumulative cost = {4718319.455999999 rows, 3.284354012E7 cpu, 9.8450892E7 io, 3716.16 network, 8643.039999999999 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 84.24, cumulative cost = {1418.52 rows, 29730.199999999997 cpu, 11484.0 io, 3716.16 network, 3925.6 memory}
         :        :                             +- Calc(select=[x, y]): rowcount = 84.24, cumulative cost = {1334.28 rows, 16251.8 cpu, 11484.0 io, 1694.3999999999999 network, 3925.6 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 84.24, cumulative cost = {1250.04 rows, 16251.8 cpu, 11484.0 io, 1694.3999999999999 network, 3925.6 memory}
         :        :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :        :                                      +- Calc(select=[x0, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                         +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                            :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                                            +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 26250.46059090563, cumulative cost = {1.4929471670834532E8 rows, 4.451586660898228E9 cpu, 2.067332016E9 io, 5.401334255344193E8 network, 3.51531915654866E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 26250.46059090563, cumulative cost = {1.4926846624775442E8 rows, 4.451586660898228E9 cpu, 2.067332016E9 io, 5.401334255344193E8 network, 3.51531915654866E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 155083.06602235074, cumulative cost = {8.789277261581986E7 rows, 3.179154996780047E9 cpu, 1.181325084E9 io, 3.9727601355096287E8 network, 2.1699511584181273E8 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 155083.06602235074, cumulative cost = {8.77376895497975E7 rows, 3.1766736677236896E9 cpu, 1.181325084E9 io, 3.9727601355096287E8 network, 2.0706979961638227E8 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 155083.06602235074, cumulative cost = {8.758260648377515E7 rows, 3.149379048103756E9 cpu, 1.181325084E9 io, 3.9355401996642643E8 network, 2.0706979961638227E8 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 855539.8593842413, cumulative cost = {8.74275234177528E7 rows, 3.135690410353608E9 cpu, 1.181325084E9 io, 3.9355401996642643E8 network, 1.971444833909518E8 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 836226.1384923818, cumulative cost = {5.7146374804751694E7 rows, 2.0146426718511891E9 cpu, 7.87550412E8 io, 2.5405407059712613E8 network, 1.1851790667530061E8 memory}
               :           :  :- Calc(select=[x AS X0, X1]): rowcount = 707591.7113104329, cumulative cost = {2.123797041310528E7 rows, 8.776244786175095E8 cpu, 2.9533596E8 io, 1.1369282230387531E8 network, 3.681100133160895E7 memory}
               :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 707591.7113104329, cumulative cost = {2.0530378701794848E7 rows, 8.776244786175095E8 cpu, 2.9533596E8 io, 1.1369282230387531E8 network, 3.681100133160895E7 memory}
               :           :  :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :     +- Exchange(distribution=[hash[x]]): rowcount = 615636.0754028853, cumulative cost = {1.1619502990484416E7 rows, 1.508103980142864E8 cpu, 1.96896552E8 io, 1.5253414303875316E7 network, 2335381.109047373 memory}
               :           :  :        +- Calc(select=[x, X1]): rowcount = 615636.0754028853, cumulative cost = {1.100386691508153E7 rows, 4.738353734660167E7 cpu, 1.96896552E8 io, 478148.49420606665 network, 2335381.109047373 memory}
               :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615636.0754028853, cumulative cost = {1.0388230839678645E7 rows, 4.738353734660167E7 cpu, 1.96896552E8 io, 478148.49420606665 network, 2335381.109047373 memory}
               :           :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 2598.502685902536, cumulative cost = {5670952.76427576 rows, 1.4549613325114453E7 cpu, 9.8457144E7 io, 478148.49420606665 network, 2189864.958636831 memory}
               :           :  :                 +- Calc(select=[X0, X1]): rowcount = 2598.502685902536, cumulative cost = {5668354.261589858 rows, 1.4133852895370048E7 cpu, 9.8457144E7 io, 415784.4297444058 network, 2189864.958636831 memory}
               :           :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2598.502685902536, cumulative cost = {5665755.758903955 rows, 1.4133852895370048E7 cpu, 9.8457144E7 io, 415784.4297444058 network, 2189864.958636831 memory}
               :           :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :           :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :           :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :           :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :                       +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[X0, X10 AS X1]): rowcount = 128634.42718194886, cumulative cost = {3.507217825315403E7 rows, 1.1361819670951874E9 cpu, 4.92214452E8 io, 1.403612482932508E8 network, 8.170690534369166E7 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 128634.42718194886, cumulative cost = {3.494354382597208E7 rows, 1.1361819670951874E9 cpu, 4.92214452E8 io, 1.403612482932508E8 network, 8.170690534369166E7 memory}
               :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
               :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
               :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
               :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
               :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
               :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :           :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :        +- Exchange(distribution=[hash[x]]): rowcount = 617771.0026859025, cumulative cost = {1.1633959615515111E7 rows, 1.533428775448977E8 cpu, 1.96890648E8 io, 1.5640336923950471E7 network, 3114708.6280404446 memory}
               :           :           +- Calc(select=[x, X1]): rowcount = 617771.0026859025, cumulative cost = {1.1016188612829208E7 rows, 4.9557349093666084E7 cpu, 1.96890648E8 io, 813832.8594888116 network, 3114708.6280404446 memory}
               :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617771.0026859025, cumulative cost = {1.0398417610143306E7 rows, 4.9557349093666084E7 cpu, 1.96890648E8 io, 813832.8594888116 network, 3114708.6280404446 memory}
               :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :                 +- Exchange(distribution=[broadcast]): rowcount = 16831.351239350242, cumulative cost = {5679004.607457403 rows, 1.6609562283751285E7 cpu, 9.845124E7 io, 813832.8594888116 network, 2172152.958636831 memory}
               :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :           :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :                                :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :                                :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, y AS X1]): rowcount = 19313.72089185952, cumulative cost = {2.9425608753616866E7 rows, 1.120192198643035E9 cpu, 3.93774672E8 io, 1.394999493693003E8 network, 7.862657671565121E7 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[X0, y, x], isBroadcast=[true], build=[right]): rowcount = 19313.72089185952, cumulative cost = {2.9406295032725006E7 rows, 1.120192198643035E9 cpu, 3.93774672E8 io, 1.394999493693003E8 network, 7.862657671565121E7 memory}
               :                 :- Calc(select=[X0, y]): rowcount = 128266.13927906349, cumulative cost = {2.9385997311833147E7 rows, 1.1190834135288024E9 cpu, 3.93768768E8 io, 1.394940453693003E8 network, 7.860886471565121E7 memory}
               :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], build=[left]): rowcount = 128266.13927906349, cumulative cost = {2.9257731172554083E7 rows, 1.1190834135288024E9 cpu, 3.93768768E8 io, 1.394940453693003E8 network, 7.860886471565121E7 memory}
               :                 :     :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
               :                 :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
               :                 :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
               :                 :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
               :                 :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
               :                 :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                 :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                 :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                 :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                 :     :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :     +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
               :                 :        +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                 :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 19920.004583686783, cumulative cost = {6.134944317134367E7 rows, 1.2710316395533326E9 cpu, 8.86006932E8 io, 1.4285741198345643E8 network, 1.334212795563668E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 19920.004583686783, cumulative cost = {6.132952316675998E7 rows, 1.2678444388199427E9 cpu, 8.86006932E8 io, 1.4237933187344795E8 network, 1.334212795563668E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 19920.004583686783, cumulative cost = {6.1309603162176296E7 rows, 1.2678444388199427E9 cpu, 8.86006932E8 io, 1.4237933187344795E8 network, 1.334212795563668E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.128869915759261E7 rows, 1.2667033185754795E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.334035675563668E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 132308.0305579119, cumulative cost = {6.1156391127034694E7 rows, 1.2645863900865529E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.2493585360066044E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.102408309647678E7 rows, 1.2413001767083604E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.2493585360066044E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 729897.833220605, cumulative cost = {6.089177506591886E7 rows, 1.2296218113768308E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.1646813964495409E8 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 112052.33563582558, cumulative cost = {3.580258249390231E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 112052.33563582558, cumulative cost = {3.5690530158266485E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 115027.89265686346, cumulative cost = {1.908402168458766E7 rows, 1.609046963037042E8 cpu, 2.9533566E8 io, 1.1286275816362873E7 network, 4.425118995309321E7 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 617845.4975847794, cumulative cost = {2.435929473879594E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617845.4975847794, cumulative cost = {2.374144924121116E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
                        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 17327.983898529517, cumulative cost = {1.9021961743626382E7 rows, 1.4535536690237078E8 cpu, 2.95341564E8 io, 8947382.006162858 network, 4.426890195309321E7 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 17327.983898529517, cumulative cost = {1.9004633759727854E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 17327.983898529517, cumulative cost = {1.8987305775829326E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,2,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#2] Exchange(distribution=[hash[X1]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[5])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[21])
         :        :           :              :        :           :     :- Reused(reference_id=[1])
         :        :           :              :        :           :     +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :              :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[22])
         :        :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :              :        +- Reused(reference_id=[2])
         :        :           :              :- Reused(reference_id=[3])
         :        :           :              +- Exchange(distribution=[broadcast])(reuse_id=[11])
         :        :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[4])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Exchange(distribution=[hash[x]])
         :        :           :        :  +- Reused(reference_id=[1])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[17])
         :        :           :                       :  +- Reused(reference_id=[4])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[9])
         :        :           :                             :- Reused(reference_id=[1])
         :        :           :                             +- Reused(reference_id=[2])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[5])
         :        :                    +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :                       +- Reused(reference_id=[6])
         :        +- Reused(reference_id=[7])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,3,2,2,1,1,2,1,2,1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :  :- Calc(select=[X0, X00 AS X1])\n:  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :  :  :  :     :- [#11] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :  :  :     +- [#12] Exchange(distribution=[broadcast])\n:  :  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, X0, y00], build=[right])\n:  :  :  :  :        :- [#13] Exchange(distribution=[hash[x]], shuffle_mode=[BATCH])\n:  :  :  :  :        +- [#14] Exchange(distribution=[hash[y0]])\n:  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n:  :  :  :        :- [#7] Exchange(distribution=[hash[X1]])\n:  :  :  :        +- [#4] Exchange(distribution=[hash[x]])\n:  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n:  :  :        :- [#7] Exchange(distribution=[hash[X1]])\n:  :  :        +- [#8] Exchange(distribution=[hash[x]])\n:  :  +- Calc(select=[x AS X0, y00 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])\n:  :        :- [#5] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:  :        +- [#6] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[x AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[8])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[x, y])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], isBroadcast=[true], build=[right])
         :              :                 :- Reused(reference_id=[6])
         :              :                 +- Exchange(distribution=[broadcast])(reuse_id=[13])
         :              :                    +- Calc(select=[x0, y])
         :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[20])
         :              :                          :- Reused(reference_id=[4])
         :              :                          +- Reused(reference_id=[2])
         :              :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])(reuse_id=[15])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])(reuse_id=[10])
         :              :           +- Calc(select=[x, y])
         :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])
         :              :                 :- Reused(reference_id=[6])
         :              :                 +- Reused(reference_id=[2])
         :              :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0 AS y00])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x1)], select=[x, y, y0, x1], build=[right])
         :              :        :- Reused(reference_id=[8])
         :              :        +- Exchange(distribution=[hash[x1]])
         :              :           +- Calc(select=[y0, x0 AS x1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right])
         :              :                 :- Calc(select=[x, y0])(reuse_id=[12])
         :              :                 :  +- Reused(reference_id=[9])
         :              :                 +- Reused(reference_id=[10])
         :              :- Exchange(distribution=[hash[X1]])(reuse_id=[14])
         :              :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :              :     +- Exchange(distribution=[hash[X0, X1]])
         :              :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :              :- Reused(reference_id=[1])
         :              :              :- Reused(reference_id=[11])
         :              :              :- Reused(reference_id=[8])
         :              :              +- Exchange(distribution=[hash[x]])
         :              :                 +- Reused(reference_id=[12])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[13])
         :              :- Reused(reference_id=[14])
         :              :- Reused(reference_id=[15])
         :              :- Reused(reference_id=[16])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[11])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[12])
         :              :                 :     +- Reused(reference_id=[11])
         :              :                 +- Reused(reference_id=[17])
         :              :- Exchange(distribution=[hash[x]], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[12])
         :              +- Exchange(distribution=[hash[y0]])
         :                 +- Calc(select=[X0, y0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])
         :                       :- Reused(reference_id=[14])
         :                       +- Exchange(distribution=[hash[x]], shuffle_mode=[BATCH])
         :                          +- Reused(reference_id=[12])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Reused(reference_id=[8])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[18])
         :- Reused(reference_id=[19])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[x, x0])
         :     +- Reused(reference_id=[20])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[0,1,0,1,2,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#2] Exchange(distribution=[hash[y]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#4] Exchange(distribution=[hash[X1]])\n:        +- [#5] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[X0, y, x], isBroadcast=[true], build=[right])\n      :- Calc(select=[X0, y])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], build=[left])\n      :     :- [#4] Exchange(distribution=[hash[X1]])\n      :     +- [#7] Exchange(distribution=[hash[x]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
                  :- Reused(reference_id=[7])
                  :- Reused(reference_id=[8])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Calc(select=[X0, X1])
                  :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                  :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[23])
                  :                 :  +- Exchange(distribution=[hash[X0, X1]])
                  :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :                 :        +- Union(all=[true], union=[X0, X1])
                  :                 :           :- Calc(select=[x0 AS X0, y AS X1])
                  :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :                 :           :     :- Calc(select=[y, x0])
                  :                 :           :     :  +- Reused(reference_id=[21])
                  :                 :           :     +- Reused(reference_id=[7])
                  :                 :           +- Reused(reference_id=[22])
                  :                 +- Reused(reference_id=[7])
                  :- Reused(reference_id=[14])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Reused(reference_id=[23])
                  :- Reused(reference_id=[14])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Reused(reference_id=[11])

Job has been submitted with JobID 2cda501980d97c94ab66d289d451cc0b
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, s_4.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT r_0.x AS X0, s_5.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN b AS b_4 ON s_2.y = b_4.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 086ec9ee_c1de_4737_a112_d02e722f2668

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, s_4.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT r_0.x AS X0, s_5.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN b AS b_4 ON s_2.y = b_4.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :  :     :  :  :  :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$10])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :     +- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :        :  :  :  :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :        :  :  :  :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$10])
   :        :  :  :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :     +- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 46959.245476733944, cumulative cost = {5.969100023936437E8 rows, 2.2385267720480484E10 cpu, 7.77701748E9 io, 2.826225299298288E9 network, 1.4809676821468656E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 46959.245476733944, cumulative cost = {5.96863043148167E8 rows, 2.2384516372552856E10 cpu, 7.77701748E9 io, 2.826225299298288E9 network, 1.4779622904363546E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 46959.245476733944, cumulative cost = {5.968160839026903E8 rows, 2.237625154534895E10 cpu, 7.77701748E9 io, 2.825098277406846E9 network, 1.4779622904363546E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 259057.98294034816, cumulative cost = {5.967691246572136E8 rows, 2.2372106617621902E10 cpu, 7.77701748E9 io, 2.825098277406846E9 network, 1.4749568987258437E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 232807.52234944253, cumulative cost = {4.4721534996592784E8 rows, 1.7920260898740734E10 cpu, 5.709685464E9 io, 2.284964851872427E9 network, 1.1234249830709777E9 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 164030.47901849778, cumulative cost = {2.595801941195307E8 rows, 1.0060344587954721E10 cpu, 3.34706016E9 io, 1.277598131361112E9 network, 6.4495336999107E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 164030.47901849778, cumulative cost = {2.594161636405122E8 rows, 1.0060344587954721E10 cpu, 3.34706016E9 io, 1.277598131361112E9 network, 6.4495336999107E8 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 458444.0222062985, cumulative cost = {1.877225644595921E8 rows, 7.93302223101667E9 cpu, 2.362619724E9 io, 1.0183676826442659E9 network, 4.784676874799075E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 458444.0222062985, cumulative cost = {1.872641204373858E8 rows, 7.856003635286012E9 cpu, 2.362619724E9 io, 1.0073650261113148E9 network, 4.784676874799075E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 458444.0222062985, cumulative cost = {1.868056764151795E8 rows, 7.848668530930711E9 cpu, 2.362619724E9 io, 1.0073650261113148E9 network, 4.4912727005870444E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 458444.0222062985, cumulative cost = {1.8634723239297318E8 rows, 7.767982383022402E9 cpu, 2.362619724E9 io, 9.963623695783637E8 network, 4.4912727005870444E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2529077.7668620236, cumulative cost = {1.8588878837076688E8 rows, 7.727517138752609E9 cpu, 2.362619724E9 io, 9.963623695783637E8 network, 4.1978685263750136E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 1821542.626462024, cumulative cost = {1.6779251899510485E8 rows, 6.861969956129747E9 cpu, 2.165729424E9 io, 8.831530309543637E8 network, 3.853237091815013E8 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 1114007.717587024, cumulative cost = {1.5040449252339283E8 rows, 5.997147908823285E9 cpu, 1.96884468E9 io, 7.699456467343637E8 network, 3.508651260015013E8 memory}
         :  :     :              :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 404397.7662370242, cumulative cost = {1.2396767694610581E8 rows, 4.416254591761698E9 cpu, 1.673520504E9 io, 5.557516702783637E8 network, 3.104631409375013E8 memory}
         :  :     :              :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 276140.4784579607, cumulative cost = {9.417772880103564E7 rows, 3.2968426344266577E9 cpu, 1.279751712E9 io, 4.162629027490634E8 network, 2.3186701862185007E8 memory}
         :  :     :              :  :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 147883.09280389722, cumulative cost = {6.451599374049455E7 rows, 2.177558059739397E9 cpu, 8.85982572E8 io, 2.7677401515976304E8 network, 1.5327065270619887E8 memory}
         :  :     :              :  :  :  :  :  :- Calc(select=[X0, X00 AS X1]): rowcount = 36357.763662037716, cumulative cost = {2.8684576273294717E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :  :     :              :  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.763662037716, cumulative cost = {2.864821850963268E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :  :     :              :  :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :     :              :  :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :     :              :  :  :  :  :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :  :  :  :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                    +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 2593.245886494809, cumulative cost = {5670702.8078893805 rows, 1.4537252221332248E7 cpu, 9.84561E7 io, 477181.2431150449 network, 2187003.1564755705 memory}
         :  :     :              :  :  :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 2593.245886494809, cumulative cost = {5668109.562002886 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :  :     :              :  :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2593.245886494809, cumulative cost = {5665516.316116392 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :  :     :              :  :  :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5661997.070229897 rows, 1.3909946432213355E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 2170335.1564755705 memory}
         :  :     :              :  :  :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16825.305909965395, cumulative cost = {5645171.764319932 rows, 1.3640741537653908E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 1093515.5782377853 memory}
         :  :     :              :  :  :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5628346.458409967 rows, 1.06794876975E7 cpu, 9.8450544E7 io, 5580.0 network, 1093515.5782377853 memory}
         :  :     :              :  :  :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92819.4175, cumulative cost = {5611521.152500002 rows, 9194377.0175 cpu, 9.8450544E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :  :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :  :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 111525.32914185952, cumulative cost = {3.568353437439594E7 rows, 1.2252402869219177E9 cpu, 4.92202668E8 io, 1.5733092683199784E8 network, 8.577457439527877E7 memory}
         :  :     :              :  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], build=[right]): rowcount = 111525.32914185952, cumulative cost = {3.5572009045254074E7 rows, 1.2252402869219177E9 cpu, 4.92202668E8 io, 1.5733092683199784E8 network, 8.577457439527877E7 memory}
         :  :     :              :  :  :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :  :  :  :  :        :  +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        +- Exchange(distribution=[hash[y0]]): rowcount = 128255.74427906348, cumulative cost = {2.9513100366112214E7 rows, 1.1118290637676852E9 cpu, 3.93763236E8 io, 1.4256498803199783E8 network, 7.859222471565121E7 memory}
         :  :     :              :  :  :  :  :           +- Calc(select=[X0, y0]): rowcount = 128255.74427906348, cumulative cost = {2.938484462183315E7 rows, 1.0902820987288024E9 cpu, 3.93763236E8 io, 1.3948685016930032E8 network, 7.859222471565121E7 memory}
         :  :     :              :  :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 128255.74427906348, cumulative cost = {2.9256588877554085E7 rows, 1.0902820987288024E9 cpu, 3.93763236E8 io, 1.3948685016930032E8 network, 7.859222471565121E7 memory}
         :  :     :              :  :  :  :  :                 :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :  :     :              :  :  :  :  :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :     :              :  :  :  :  :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :  :  :  :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :  :  :  :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :     :              :  :  :  :  :                 :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :  :  :  :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :  :  :  :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :  :  :  :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :  :  :  :                 :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :  :  :  :  :                    +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 128257.38565406349, cumulative cost = {2.9385594582083143E7 rows, 1.1190084342088025E9 cpu, 3.9376914E8 io, 1.3948888758930033E8 network, 7.859636591565122E7 memory}
         :  :     :              :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 128257.38565406349, cumulative cost = {2.925733719642908E7 rows, 1.1190084342088025E9 cpu, 3.9376914E8 io, 1.3948888758930033E8 network, 7.859636591565122E7 memory}
         :  :     :              :  :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :  :     :              :  :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :     :              :  :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :     :              :  :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :  :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :  :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 615257.3925, cumulative cost = {5948130.0275 rows, 1.3618945354E8 cpu, 9.8445336E7 io, 1.4767976219999999E7 network, 4169.2 memory}
         :  :     :              :  :  :  :           +- Calc(select=[x, y0]): rowcount = 615257.3925, cumulative cost = {5332872.635 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :  :     :              :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615257.3925, cumulative cost = {4717615.2425 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :  :     :              :  :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
         :  :     :              :  :  :  :                    +- Calc(select=[x, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 128257.28777906348, cumulative cost = {2.9385550378833145E7 rows, 1.1190075595688024E9 cpu, 3.93768792E8 io, 1.3948876752930033E8 network, 7.859612231565121E7 memory}
         :  :     :              :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 128257.28777906348, cumulative cost = {2.9257293091054082E7 rows, 1.1190075595688024E9 cpu, 3.93768792E8 io, 1.3948876752930033E8 network, 7.859612231565121E7 memory}
         :  :     :              :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :  :     :              :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :     :              :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :     :              :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 615256.74, cumulative cost = {5948086.0200000005 rows, 1.3618858412E8 cpu, 9.8444988E7 io, 1.476785616E7 network, 3925.6 memory}
         :  :     :              :  :  :           +- Calc(select=[x, y0]): rowcount = 615256.74, cumulative cost = {5332829.28 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
         :  :     :              :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615256.74, cumulative cost = {4717572.54 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
         :  :     :              :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :  :     :              :  :  :                    +- Calc(select=[x0, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[x AS X0, y00 AS X1]): rowcount = 709609.9513499999, cumulative cost = {2.5322807859699998E7 rows, 1.5797793093439999E9 cpu, 2.95324176E8 io, 2.14193976456E8 network, 4.0401985064E7 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 709609.9513499999, cumulative cost = {2.461319790835E7 rows, 1.5797793093439999E9 cpu, 2.95324176E8 io, 2.14193976456E8 network, 4.0401985064E7 memory}
         :  :     :              :  :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[hash[x]]): rowcount = 629091.009, cumulative cost = {1.5700303956999999E7 rows, 8.52857589272E8 cpu, 1.96884768E8 io, 1.15754568456E8 network, 5172888.56 memory}
         :  :     :              :  :           +- Calc(select=[x, y0 AS y00]): rowcount = 629091.009, cumulative cost = {1.5071212947999999E7 rows, 7.4717029976E8 cpu, 1.96884768E8 io, 1.0065638424E8 network, 5172888.56 memory}
         :  :     :              :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x1)], select=[x, y, y0, x1], build=[right]): rowcount = 629091.009, cumulative cost = {1.4442121939E7 rows, 7.4717029976E8 cpu, 1.96884768E8 io, 1.0065638424E8 network, 5172888.56 memory}
         :  :     :              :  :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :  :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                 +- Exchange(distribution=[hash[x1]]): rowcount = 92298.05999999998, cumulative cost = {5609746.929999999 rows, 2.4542923279999994E7 cpu, 9.844536E7 io, 2216976.2399999993 network, 4197.2 memory}
         :  :     :              :  :                    +- Calc(select=[y0, x0 AS x1]): rowcount = 92298.05999999998, cumulative cost = {5517448.869999999 rows, 9036849.2 cpu, 9.844536E7 io, 1822.8000000000002 network, 4197.2 memory}
         :  :     :              :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right]): rowcount = 92298.05999999998, cumulative cost = {5425150.81 rows, 9036849.2 cpu, 9.844536E7 io, 1822.8000000000002 network, 4197.2 memory}
         :  :     :              :  :                          :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                          :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                          +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
         :  :     :              :  :                             +- Calc(select=[x, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707534.908875, cumulative cost = {1.556648384525E7 rows, 8.6300050468E8 cpu, 1.96884744E8 io, 1.1320738422E8 network, 3.445858318E7 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707534.908875, cumulative cost = {1.4858948936375E7 rows, 8.6300050468E8 cpu, 1.96884744E8 io, 1.1320738422E8 network, 3.445858318E7 memory}
         :  :     :              :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 615257.3925, cumulative cost = {5948130.0275 rows, 1.3618945354E8 cpu, 9.8445336E7 io, 1.4767976219999999E7 network, 4169.2 memory}
         :  :     :              :           +- Calc(select=[x, y0]): rowcount = 615257.3925, cumulative cost = {5332872.635 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615257.3925, cumulative cost = {4717615.2425 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
         :  :     :              :                    +- Calc(select=[x, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707535.1403999999, cumulative cost = {1.5567191608799998E7 rows, 8.630181048560001E8 cpu, 1.968903E8 io, 1.13209338624E8 network, 3.4463143456E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707535.1403999999, cumulative cost = {1.4859656468399998E7 rows, 8.630181048560001E8 cpu, 1.968903E8 io, 1.13209338624E8 network, 3.4463143456E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 615258.936, cumulative cost = {5948837.327999999 rows, 1.36207041368E8 cpu, 9.8450892E7 io, 1.4769930624E7 network, 8643.039999999999 memory}
         :  :     :                       +- Calc(select=[x, y0]): rowcount = 615258.936, cumulative cost = {5333578.391999999 rows, 3.284354012E7 cpu, 9.8450892E7 io, 3716.16 network, 8643.039999999999 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615258.936, cumulative cost = {4718319.455999999 rows, 3.284354012E7 cpu, 9.8450892E7 io, 3716.16 network, 8643.039999999999 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 84.24, cumulative cost = {1418.52 rows, 29730.199999999997 cpu, 11484.0 io, 3716.16 network, 3925.6 memory}
         :  :     :                                +- Calc(select=[x, y]): rowcount = 84.24, cumulative cost = {1334.28 rows, 16251.8 cpu, 11484.0 io, 1694.3999999999999 network, 3925.6 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 84.24, cumulative cost = {1250.04 rows, 16251.8 cpu, 11484.0 io, 1694.3999999999999 network, 3925.6 memory}
         :  :     :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :  :     :                                         +- Calc(select=[x0, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                                            +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                                               :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :                                               +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                                  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 635092.5045836867, cumulative cost = {7.152956870190158E7 rows, 2.1185740647237313E9 cpu, 9.84440436E8 io, 2.5923044871684632E8 network, 1.4081281726760986E8 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 635092.5045836867, cumulative cost = {7.08944761973179E7 rows, 2.011878523953672E9 cpu, 9.84440436E8 io, 2.4398822860683784E8 network, 1.4081281726760986E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 635092.5045836867, cumulative cost = {7.025938369273421E7 rows, 2.011878523953672E9 cpu, 9.84440436E8 io, 2.4398822860683784E8 network, 1.4081281726760986E8 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 132308.0305579119, cumulative cost = {6.1421007188150525E7 rows, 1.2889310677092087E9 cpu, 8.86001028E8 io, 1.4554882060683784E8 network, 1.334035675563668E8 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.128869915759261E7 rows, 1.2667033185754795E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.334035675563668E8 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 132308.0305579119, cumulative cost = {6.1156391127034694E7 rows, 1.2645863900865529E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.2493585360066044E8 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.102408309647678E7 rows, 1.2413001767083604E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.2493585360066044E8 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 729897.833220605, cumulative cost = {6.089177506591886E7 rows, 1.2296218113768308E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.1646813964495409E8 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 112052.33563582558, cumulative cost = {3.580258249390231E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 112052.33563582558, cumulative cost = {3.5690530158266485E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 115027.89265686346, cumulative cost = {1.908402168458766E7 rows, 1.609046963037042E8 cpu, 2.9533566E8 io, 1.1286275816362873E7 network, 4.425118995309321E7 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                             :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 617845.4975847794, cumulative cost = {2.435929473879594E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617845.4975847794, cumulative cost = {2.374144924121116E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 17327.983898529517, cumulative cost = {1.9021961743626382E7 rows, 1.4535536690237078E8 cpu, 2.95341564E8 io, 8947382.006162858 network, 4.426890195309321E7 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 17327.983898529517, cumulative cost = {1.9004633759727854E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 17327.983898529517, cumulative cost = {1.8987305775829326E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                                            :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 68777.04333094477, cumulative cost = {1.8740234832404768E8 rows, 7.859683503263662E9 cpu, 2.362625304E9 io, 1.0073667205113147E9 network, 4.7847161307990754E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 68777.04333094477, cumulative cost = {1.8733357128071675E8 rows, 7.859683503263662E9 cpu, 2.362625304E9 io, 1.0073667205113147E9 network, 4.7847161307990754E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 458444.0222062985, cumulative cost = {1.872641204373858E8 rows, 7.856003635286012E9 cpu, 2.362619724E9 io, 1.0073650261113148E9 network, 4.784676874799075E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 458444.0222062985, cumulative cost = {1.868056764151795E8 rows, 7.848668530930711E9 cpu, 2.362619724E9 io, 1.0073650261113148E9 network, 4.4912727005870444E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 458444.0222062985, cumulative cost = {1.8634723239297318E8 rows, 7.767982383022402E9 cpu, 2.362619724E9 io, 9.963623695783637E8 network, 4.4912727005870444E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 2529077.7668620236, cumulative cost = {1.8588878837076688E8 rows, 7.727517138752609E9 cpu, 2.362619724E9 io, 9.963623695783637E8 network, 4.1978685263750136E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 1821542.626462024, cumulative cost = {1.6779251899510485E8 rows, 6.861969956129747E9 cpu, 2.165729424E9 io, 8.831530309543637E8 network, 3.853237091815013E8 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 1114007.717587024, cumulative cost = {1.5040449252339283E8 rows, 5.997147908823285E9 cpu, 1.96884468E9 io, 7.699456467343637E8 network, 3.508651260015013E8 memory}
         :        :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 404397.7662370242, cumulative cost = {1.2396767694610581E8 rows, 4.416254591761698E9 cpu, 1.673520504E9 io, 5.557516702783637E8 network, 3.104631409375013E8 memory}
         :        :           :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 276140.4784579607, cumulative cost = {9.417772880103564E7 rows, 3.2968426344266577E9 cpu, 1.279751712E9 io, 4.162629027490634E8 network, 2.3186701862185007E8 memory}
         :        :           :  :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 147883.09280389722, cumulative cost = {6.451599374049455E7 rows, 2.177558059739397E9 cpu, 8.85982572E8 io, 2.7677401515976304E8 network, 1.5327065270619887E8 memory}
         :        :           :  :  :  :  :  :- Calc(select=[X0, X00 AS X1]): rowcount = 36357.763662037716, cumulative cost = {2.8684576273294717E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :        :           :  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.763662037716, cumulative cost = {2.864821850963268E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :        :           :  :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :           :  :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :           :  :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :           :  :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :           :  :  :  :  :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :  :  :  :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                    +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 2593.245886494809, cumulative cost = {5670702.8078893805 rows, 1.4537252221332248E7 cpu, 9.84561E7 io, 477181.2431150449 network, 2187003.1564755705 memory}
         :        :           :  :  :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 2593.245886494809, cumulative cost = {5668109.562002886 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :        :           :  :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2593.245886494809, cumulative cost = {5665516.316116392 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :        :           :  :  :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5661997.070229897 rows, 1.3909946432213355E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 2170335.1564755705 memory}
         :        :           :  :  :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16825.305909965395, cumulative cost = {5645171.764319932 rows, 1.3640741537653908E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 1093515.5782377853 memory}
         :        :           :  :  :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5628346.458409967 rows, 1.06794876975E7 cpu, 9.8450544E7 io, 5580.0 network, 1093515.5782377853 memory}
         :        :           :  :  :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92819.4175, cumulative cost = {5611521.152500002 rows, 9194377.0175 cpu, 9.8450544E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :  :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :  :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :  :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 111525.32914185952, cumulative cost = {3.568353437439594E7 rows, 1.2252402869219177E9 cpu, 4.92202668E8 io, 1.5733092683199784E8 network, 8.577457439527877E7 memory}
         :        :           :  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], build=[right]): rowcount = 111525.32914185952, cumulative cost = {3.5572009045254074E7 rows, 1.2252402869219177E9 cpu, 4.92202668E8 io, 1.5733092683199784E8 network, 8.577457439527877E7 memory}
         :        :           :  :  :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :  :  :  :  :        :  +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :        +- Exchange(distribution=[hash[y0]]): rowcount = 128255.74427906348, cumulative cost = {2.9513100366112214E7 rows, 1.1118290637676852E9 cpu, 3.93763236E8 io, 1.4256498803199783E8 network, 7.859222471565121E7 memory}
         :        :           :  :  :  :  :           +- Calc(select=[X0, y0]): rowcount = 128255.74427906348, cumulative cost = {2.938484462183315E7 rows, 1.0902820987288024E9 cpu, 3.93763236E8 io, 1.3948685016930032E8 network, 7.859222471565121E7 memory}
         :        :           :  :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 128255.74427906348, cumulative cost = {2.9256588877554085E7 rows, 1.0902820987288024E9 cpu, 3.93763236E8 io, 1.3948685016930032E8 network, 7.859222471565121E7 memory}
         :        :           :  :  :  :  :                 :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :        :           :  :  :  :  :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :           :  :  :  :  :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :           :  :  :  :  :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :           :  :  :  :  :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :           :  :  :  :  :                 :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :  :  :  :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :  :  :  :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :  :  :  :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :  :  :  :                 :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :  :  :  :  :                    +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 128257.38565406349, cumulative cost = {2.9385594582083143E7 rows, 1.1190084342088025E9 cpu, 3.9376914E8 io, 1.3948888758930033E8 network, 7.859636591565122E7 memory}
         :        :           :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 128257.38565406349, cumulative cost = {2.925733719642908E7 rows, 1.1190084342088025E9 cpu, 3.9376914E8 io, 1.3948888758930033E8 network, 7.859636591565122E7 memory}
         :        :           :  :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :        :           :  :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :           :  :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :           :  :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :           :  :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :           :  :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :  :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :  :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 615257.3925, cumulative cost = {5948130.0275 rows, 1.3618945354E8 cpu, 9.8445336E7 io, 1.4767976219999999E7 network, 4169.2 memory}
         :        :           :  :  :  :           +- Calc(select=[x, y0]): rowcount = 615257.3925, cumulative cost = {5332872.635 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :        :           :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615257.3925, cumulative cost = {4717615.2425 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :        :           :  :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
         :        :           :  :  :  :                    +- Calc(select=[x, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 128257.28777906348, cumulative cost = {2.9385550378833145E7 rows, 1.1190075595688024E9 cpu, 3.93768792E8 io, 1.3948876752930033E8 network, 7.859612231565121E7 memory}
         :        :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 128257.28777906348, cumulative cost = {2.9257293091054082E7 rows, 1.1190075595688024E9 cpu, 3.93768792E8 io, 1.3948876752930033E8 network, 7.859612231565121E7 memory}
         :        :           :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :        :           :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :           :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :           :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :           :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :           :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 615256.74, cumulative cost = {5948086.0200000005 rows, 1.3618858412E8 cpu, 9.8444988E7 io, 1.476785616E7 network, 3925.6 memory}
         :        :           :  :  :           +- Calc(select=[x, y0]): rowcount = 615256.74, cumulative cost = {5332829.28 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
         :        :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615256.74, cumulative cost = {4717572.54 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
         :        :           :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :        :           :  :  :                    +- Calc(select=[x0, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[x AS X0, y00 AS X1]): rowcount = 709609.9513499999, cumulative cost = {2.5322807859699998E7 rows, 1.5797793093439999E9 cpu, 2.95324176E8 io, 2.14193976456E8 network, 4.0401985064E7 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 709609.9513499999, cumulative cost = {2.461319790835E7 rows, 1.5797793093439999E9 cpu, 2.95324176E8 io, 2.14193976456E8 network, 4.0401985064E7 memory}
         :        :           :  :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[hash[x]]): rowcount = 629091.009, cumulative cost = {1.5700303956999999E7 rows, 8.52857589272E8 cpu, 1.96884768E8 io, 1.15754568456E8 network, 5172888.56 memory}
         :        :           :  :           +- Calc(select=[x, y0 AS y00]): rowcount = 629091.009, cumulative cost = {1.5071212947999999E7 rows, 7.4717029976E8 cpu, 1.96884768E8 io, 1.0065638424E8 network, 5172888.56 memory}
         :        :           :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x1)], select=[x, y, y0, x1], build=[right]): rowcount = 629091.009, cumulative cost = {1.4442121939E7 rows, 7.4717029976E8 cpu, 1.96884768E8 io, 1.0065638424E8 network, 5172888.56 memory}
         :        :           :  :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :  :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :                 +- Exchange(distribution=[hash[x1]]): rowcount = 92298.05999999998, cumulative cost = {5609746.929999999 rows, 2.4542923279999994E7 cpu, 9.844536E7 io, 2216976.2399999993 network, 4197.2 memory}
         :        :           :  :                    +- Calc(select=[y0, x0 AS x1]): rowcount = 92298.05999999998, cumulative cost = {5517448.869999999 rows, 9036849.2 cpu, 9.844536E7 io, 1822.8000000000002 network, 4197.2 memory}
         :        :           :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right]): rowcount = 92298.05999999998, cumulative cost = {5425150.81 rows, 9036849.2 cpu, 9.844536E7 io, 1822.8000000000002 network, 4197.2 memory}
         :        :           :  :                          :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :                          :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :                          :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                          :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                          +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
         :        :           :  :                             +- Calc(select=[x, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707534.908875, cumulative cost = {1.556648384525E7 rows, 8.6300050468E8 cpu, 1.96884744E8 io, 1.1320738422E8 network, 3.445858318E7 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707534.908875, cumulative cost = {1.4858948936375E7 rows, 8.6300050468E8 cpu, 1.96884744E8 io, 1.1320738422E8 network, 3.445858318E7 memory}
         :        :           :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 615257.3925, cumulative cost = {5948130.0275 rows, 1.3618945354E8 cpu, 9.8445336E7 io, 1.4767976219999999E7 network, 4169.2 memory}
         :        :           :           +- Calc(select=[x, y0]): rowcount = 615257.3925, cumulative cost = {5332872.635 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615257.3925, cumulative cost = {4717615.2425 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
         :        :           :                    +- Calc(select=[x, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :           :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707535.1403999999, cumulative cost = {1.5567191608799998E7 rows, 8.630181048560001E8 cpu, 1.968903E8 io, 1.13209338624E8 network, 3.4463143456E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707535.1403999999, cumulative cost = {1.4859656468399998E7 rows, 8.630181048560001E8 cpu, 1.968903E8 io, 1.13209338624E8 network, 3.4463143456E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 615258.936, cumulative cost = {5948837.327999999 rows, 1.36207041368E8 cpu, 9.8450892E7 io, 1.4769930624E7 network, 8643.039999999999 memory}
         :        :                    +- Calc(select=[x, y0]): rowcount = 615258.936, cumulative cost = {5333578.391999999 rows, 3.284354012E7 cpu, 9.8450892E7 io, 3716.16 network, 8643.039999999999 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615258.936, cumulative cost = {4718319.455999999 rows, 3.284354012E7 cpu, 9.8450892E7 io, 3716.16 network, 8643.039999999999 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 84.24, cumulative cost = {1418.52 rows, 29730.199999999997 cpu, 11484.0 io, 3716.16 network, 3925.6 memory}
         :        :                             +- Calc(select=[x, y]): rowcount = 84.24, cumulative cost = {1334.28 rows, 16251.8 cpu, 11484.0 io, 1694.3999999999999 network, 3925.6 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 84.24, cumulative cost = {1250.04 rows, 16251.8 cpu, 11484.0 io, 1694.3999999999999 network, 3925.6 memory}
         :        :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :        :                                      +- Calc(select=[x0, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                         +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                            :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                                            +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 26250.46059090563, cumulative cost = {1.4929471670834532E8 rows, 4.451586660898228E9 cpu, 2.067332016E9 io, 5.401334255344193E8 network, 3.51531915654866E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 26250.46059090563, cumulative cost = {1.4926846624775442E8 rows, 4.451586660898228E9 cpu, 2.067332016E9 io, 5.401334255344193E8 network, 3.51531915654866E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 155083.06602235074, cumulative cost = {8.789277261581986E7 rows, 3.179154996780047E9 cpu, 1.181325084E9 io, 3.9727601355096287E8 network, 2.1699511584181273E8 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 155083.06602235074, cumulative cost = {8.77376895497975E7 rows, 3.1766736677236896E9 cpu, 1.181325084E9 io, 3.9727601355096287E8 network, 2.0706979961638227E8 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 155083.06602235074, cumulative cost = {8.758260648377515E7 rows, 3.149379048103756E9 cpu, 1.181325084E9 io, 3.9355401996642643E8 network, 2.0706979961638227E8 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 855539.8593842413, cumulative cost = {8.74275234177528E7 rows, 3.135690410353608E9 cpu, 1.181325084E9 io, 3.9355401996642643E8 network, 1.971444833909518E8 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 836226.1384923818, cumulative cost = {5.7146374804751694E7 rows, 2.0146426718511891E9 cpu, 7.87550412E8 io, 2.5405407059712613E8 network, 1.1851790667530061E8 memory}
               :           :  :- Calc(select=[x AS X0, X1]): rowcount = 707591.7113104329, cumulative cost = {2.123797041310528E7 rows, 8.776244786175095E8 cpu, 2.9533596E8 io, 1.1369282230387531E8 network, 3.681100133160895E7 memory}
               :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 707591.7113104329, cumulative cost = {2.0530378701794848E7 rows, 8.776244786175095E8 cpu, 2.9533596E8 io, 1.1369282230387531E8 network, 3.681100133160895E7 memory}
               :           :  :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :     +- Exchange(distribution=[hash[x]]): rowcount = 615636.0754028853, cumulative cost = {1.1619502990484416E7 rows, 1.508103980142864E8 cpu, 1.96896552E8 io, 1.5253414303875316E7 network, 2335381.109047373 memory}
               :           :  :        +- Calc(select=[x, X1]): rowcount = 615636.0754028853, cumulative cost = {1.100386691508153E7 rows, 4.738353734660167E7 cpu, 1.96896552E8 io, 478148.49420606665 network, 2335381.109047373 memory}
               :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615636.0754028853, cumulative cost = {1.0388230839678645E7 rows, 4.738353734660167E7 cpu, 1.96896552E8 io, 478148.49420606665 network, 2335381.109047373 memory}
               :           :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 2598.502685902536, cumulative cost = {5670952.76427576 rows, 1.4549613325114453E7 cpu, 9.8457144E7 io, 478148.49420606665 network, 2189864.958636831 memory}
               :           :  :                 +- Calc(select=[X0, X1]): rowcount = 2598.502685902536, cumulative cost = {5668354.261589858 rows, 1.4133852895370048E7 cpu, 9.8457144E7 io, 415784.4297444058 network, 2189864.958636831 memory}
               :           :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2598.502685902536, cumulative cost = {5665755.758903955 rows, 1.4133852895370048E7 cpu, 9.8457144E7 io, 415784.4297444058 network, 2189864.958636831 memory}
               :           :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :           :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :           :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :           :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :                       +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[X0, X10 AS X1]): rowcount = 128634.42718194886, cumulative cost = {3.507217825315403E7 rows, 1.1361819670951874E9 cpu, 4.92214452E8 io, 1.403612482932508E8 network, 8.170690534369166E7 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 128634.42718194886, cumulative cost = {3.494354382597208E7 rows, 1.1361819670951874E9 cpu, 4.92214452E8 io, 1.403612482932508E8 network, 8.170690534369166E7 memory}
               :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
               :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
               :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
               :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
               :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
               :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :           :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :        +- Exchange(distribution=[hash[x]]): rowcount = 617771.0026859025, cumulative cost = {1.1633959615515111E7 rows, 1.533428775448977E8 cpu, 1.96890648E8 io, 1.5640336923950471E7 network, 3114708.6280404446 memory}
               :           :           +- Calc(select=[x, X1]): rowcount = 617771.0026859025, cumulative cost = {1.1016188612829208E7 rows, 4.9557349093666084E7 cpu, 1.96890648E8 io, 813832.8594888116 network, 3114708.6280404446 memory}
               :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617771.0026859025, cumulative cost = {1.0398417610143306E7 rows, 4.9557349093666084E7 cpu, 1.96890648E8 io, 813832.8594888116 network, 3114708.6280404446 memory}
               :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :                 +- Exchange(distribution=[broadcast]): rowcount = 16831.351239350242, cumulative cost = {5679004.607457403 rows, 1.6609562283751285E7 cpu, 9.845124E7 io, 813832.8594888116 network, 2172152.958636831 memory}
               :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :           :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :                                :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :                                :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, y AS X1]): rowcount = 19313.72089185952, cumulative cost = {2.9425608753616866E7 rows, 1.120192198643035E9 cpu, 3.93774672E8 io, 1.394999493693003E8 network, 7.862657671565121E7 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[X0, y, x], isBroadcast=[true], build=[right]): rowcount = 19313.72089185952, cumulative cost = {2.9406295032725006E7 rows, 1.120192198643035E9 cpu, 3.93774672E8 io, 1.394999493693003E8 network, 7.862657671565121E7 memory}
               :                 :- Calc(select=[X0, y]): rowcount = 128266.13927906349, cumulative cost = {2.9385997311833147E7 rows, 1.1190834135288024E9 cpu, 3.93768768E8 io, 1.394940453693003E8 network, 7.860886471565121E7 memory}
               :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], build=[left]): rowcount = 128266.13927906349, cumulative cost = {2.9257731172554083E7 rows, 1.1190834135288024E9 cpu, 3.93768768E8 io, 1.394940453693003E8 network, 7.860886471565121E7 memory}
               :                 :     :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
               :                 :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
               :                 :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
               :                 :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
               :                 :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
               :                 :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                 :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                 :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                 :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                 :     :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :     +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
               :                 :        +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                 :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 19920.004583686783, cumulative cost = {6.134944317134367E7 rows, 1.2710316395533326E9 cpu, 8.86006932E8 io, 1.4285741198345643E8 network, 1.334212795563668E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 19920.004583686783, cumulative cost = {6.132952316675998E7 rows, 1.2678444388199427E9 cpu, 8.86006932E8 io, 1.4237933187344795E8 network, 1.334212795563668E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 19920.004583686783, cumulative cost = {6.1309603162176296E7 rows, 1.2678444388199427E9 cpu, 8.86006932E8 io, 1.4237933187344795E8 network, 1.334212795563668E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.128869915759261E7 rows, 1.2667033185754795E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.334035675563668E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 132308.0305579119, cumulative cost = {6.1156391127034694E7 rows, 1.2645863900865529E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.2493585360066044E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.102408309647678E7 rows, 1.2413001767083604E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.2493585360066044E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 729897.833220605, cumulative cost = {6.089177506591886E7 rows, 1.2296218113768308E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.1646813964495409E8 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 112052.33563582558, cumulative cost = {3.580258249390231E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 112052.33563582558, cumulative cost = {3.5690530158266485E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 115027.89265686346, cumulative cost = {1.908402168458766E7 rows, 1.609046963037042E8 cpu, 2.9533566E8 io, 1.1286275816362873E7 network, 4.425118995309321E7 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 617845.4975847794, cumulative cost = {2.435929473879594E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617845.4975847794, cumulative cost = {2.374144924121116E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
                        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 17327.983898529517, cumulative cost = {1.9021961743626382E7 rows, 1.4535536690237078E8 cpu, 2.95341564E8 io, 8947382.006162858 network, 4.426890195309321E7 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 17327.983898529517, cumulative cost = {1.9004633759727854E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 17327.983898529517, cumulative cost = {1.8987305775829326E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,2,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#2] Exchange(distribution=[hash[X1]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[5])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[21])
         :        :           :              :        :           :     :- Reused(reference_id=[1])
         :        :           :              :        :           :     +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :              :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[22])
         :        :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :              :        +- Reused(reference_id=[2])
         :        :           :              :- Reused(reference_id=[3])
         :        :           :              +- Exchange(distribution=[broadcast])(reuse_id=[11])
         :        :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[4])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Exchange(distribution=[hash[x]])
         :        :           :        :  +- Reused(reference_id=[1])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[17])
         :        :           :                       :  +- Reused(reference_id=[4])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[9])
         :        :           :                             :- Reused(reference_id=[1])
         :        :           :                             +- Reused(reference_id=[2])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[5])
         :        :                    +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :                       +- Reused(reference_id=[6])
         :        +- Reused(reference_id=[7])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,3,2,2,1,1,2,1,2,1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :  :- Calc(select=[X0, X00 AS X1])\n:  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :  :  :  :     :- [#11] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :  :  :     +- [#12] Exchange(distribution=[broadcast])\n:  :  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, X0, y00], build=[right])\n:  :  :  :  :        :- [#13] Exchange(distribution=[hash[x]], shuffle_mode=[BATCH])\n:  :  :  :  :        +- [#14] Exchange(distribution=[hash[y0]])\n:  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n:  :  :  :        :- [#7] Exchange(distribution=[hash[X1]])\n:  :  :  :        +- [#4] Exchange(distribution=[hash[x]])\n:  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n:  :  :        :- [#7] Exchange(distribution=[hash[X1]])\n:  :  :        +- [#8] Exchange(distribution=[hash[x]])\n:  :  +- Calc(select=[x AS X0, y00 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])\n:  :        :- [#5] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:  :        +- [#6] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[x AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[8])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[x, y])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], isBroadcast=[true], build=[right])
         :              :                 :- Reused(reference_id=[6])
         :              :                 +- Exchange(distribution=[broadcast])(reuse_id=[13])
         :              :                    +- Calc(select=[x0, y])
         :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[20])
         :              :                          :- Reused(reference_id=[4])
         :              :                          +- Reused(reference_id=[2])
         :              :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])(reuse_id=[15])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])(reuse_id=[10])
         :              :           +- Calc(select=[x, y])
         :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])
         :              :                 :- Reused(reference_id=[6])
         :              :                 +- Reused(reference_id=[2])
         :              :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0 AS y00])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x1)], select=[x, y, y0, x1], build=[right])
         :              :        :- Reused(reference_id=[8])
         :              :        +- Exchange(distribution=[hash[x1]])
         :              :           +- Calc(select=[y0, x0 AS x1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right])
         :              :                 :- Calc(select=[x, y0])(reuse_id=[12])
         :              :                 :  +- Reused(reference_id=[9])
         :              :                 +- Reused(reference_id=[10])
         :              :- Exchange(distribution=[hash[X1]])(reuse_id=[14])
         :              :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :              :     +- Exchange(distribution=[hash[X0, X1]])
         :              :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :              :- Reused(reference_id=[1])
         :              :              :- Reused(reference_id=[11])
         :              :              :- Reused(reference_id=[8])
         :              :              +- Exchange(distribution=[hash[x]])
         :              :                 +- Reused(reference_id=[12])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[13])
         :              :- Reused(reference_id=[14])
         :              :- Reused(reference_id=[15])
         :              :- Reused(reference_id=[16])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[11])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[12])
         :              :                 :     +- Reused(reference_id=[11])
         :              :                 +- Reused(reference_id=[17])
         :              :- Exchange(distribution=[hash[x]], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[12])
         :              +- Exchange(distribution=[hash[y0]])
         :                 +- Calc(select=[X0, y0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])
         :                       :- Reused(reference_id=[14])
         :                       +- Exchange(distribution=[hash[x]], shuffle_mode=[BATCH])
         :                          +- Reused(reference_id=[12])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Reused(reference_id=[8])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[18])
         :- Reused(reference_id=[19])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[x, x0])
         :     +- Reused(reference_id=[20])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[0,1,0,1,2,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#2] Exchange(distribution=[hash[y]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#4] Exchange(distribution=[hash[X1]])\n:        +- [#5] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[X0, y, x], isBroadcast=[true], build=[right])\n      :- Calc(select=[X0, y])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], build=[left])\n      :     :- [#4] Exchange(distribution=[hash[X1]])\n      :     +- [#7] Exchange(distribution=[hash[x]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
                  :- Reused(reference_id=[7])
                  :- Reused(reference_id=[8])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Calc(select=[X0, X1])
                  :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                  :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[23])
                  :                 :  +- Exchange(distribution=[hash[X0, X1]])
                  :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :                 :        +- Union(all=[true], union=[X0, X1])
                  :                 :           :- Calc(select=[x0 AS X0, y AS X1])
                  :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :                 :           :     :- Calc(select=[y, x0])
                  :                 :           :     :  +- Reused(reference_id=[21])
                  :                 :           :     +- Reused(reference_id=[7])
                  :                 :           +- Reused(reference_id=[22])
                  :                 +- Reused(reference_id=[7])
                  :- Reused(reference_id=[14])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Reused(reference_id=[23])
                  :- Reused(reference_id=[14])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Reused(reference_id=[11])

Job has been submitted with JobID 0fe9f1c27a5a4b02596875a76616d276
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, s_4.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT r_0.x AS X0, s_5.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN b AS b_4 ON s_2.y = b_4.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: e4278ed0_e724_434a_b00a_ffd2c40f5dc1

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, s_4.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT p19_0.X0 AS X0, s_2.y AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT r_0.x AS X0, s_5.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x) UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN b AS b_4 ON s_2.y = b_4.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :  :     :  :  :  :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$10])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :     +- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :        :  :  :  :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :        :  :  :  :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$10])
   :        :  :  :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :     +- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 46959.245476733944, cumulative cost = {5.969100023936437E8 rows, 2.2385267720480484E10 cpu, 7.77701748E9 io, 2.826225299298288E9 network, 1.4809676821468656E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 46959.245476733944, cumulative cost = {5.96863043148167E8 rows, 2.2384516372552856E10 cpu, 7.77701748E9 io, 2.826225299298288E9 network, 1.4779622904363546E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 46959.245476733944, cumulative cost = {5.968160839026903E8 rows, 2.237625154534895E10 cpu, 7.77701748E9 io, 2.825098277406846E9 network, 1.4779622904363546E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 259057.98294034816, cumulative cost = {5.967691246572136E8 rows, 2.2372106617621902E10 cpu, 7.77701748E9 io, 2.825098277406846E9 network, 1.4749568987258437E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 232807.52234944253, cumulative cost = {4.4721534996592784E8 rows, 1.7920260898740734E10 cpu, 5.709685464E9 io, 2.284964851872427E9 network, 1.1234249830709777E9 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 164030.47901849778, cumulative cost = {2.595801941195307E8 rows, 1.0060344587954721E10 cpu, 3.34706016E9 io, 1.277598131361112E9 network, 6.4495336999107E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 164030.47901849778, cumulative cost = {2.594161636405122E8 rows, 1.0060344587954721E10 cpu, 3.34706016E9 io, 1.277598131361112E9 network, 6.4495336999107E8 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 458444.0222062985, cumulative cost = {1.877225644595921E8 rows, 7.93302223101667E9 cpu, 2.362619724E9 io, 1.0183676826442659E9 network, 4.784676874799075E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 458444.0222062985, cumulative cost = {1.872641204373858E8 rows, 7.856003635286012E9 cpu, 2.362619724E9 io, 1.0073650261113148E9 network, 4.784676874799075E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 458444.0222062985, cumulative cost = {1.868056764151795E8 rows, 7.848668530930711E9 cpu, 2.362619724E9 io, 1.0073650261113148E9 network, 4.4912727005870444E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 458444.0222062985, cumulative cost = {1.8634723239297318E8 rows, 7.767982383022402E9 cpu, 2.362619724E9 io, 9.963623695783637E8 network, 4.4912727005870444E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2529077.7668620236, cumulative cost = {1.8588878837076688E8 rows, 7.727517138752609E9 cpu, 2.362619724E9 io, 9.963623695783637E8 network, 4.1978685263750136E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 1821542.626462024, cumulative cost = {1.6779251899510485E8 rows, 6.861969956129747E9 cpu, 2.165729424E9 io, 8.831530309543637E8 network, 3.853237091815013E8 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 1114007.717587024, cumulative cost = {1.5040449252339283E8 rows, 5.997147908823285E9 cpu, 1.96884468E9 io, 7.699456467343637E8 network, 3.508651260015013E8 memory}
         :  :     :              :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 404397.7662370242, cumulative cost = {1.2396767694610581E8 rows, 4.416254591761698E9 cpu, 1.673520504E9 io, 5.557516702783637E8 network, 3.104631409375013E8 memory}
         :  :     :              :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 276140.4784579607, cumulative cost = {9.417772880103564E7 rows, 3.2968426344266577E9 cpu, 1.279751712E9 io, 4.162629027490634E8 network, 2.3186701862185007E8 memory}
         :  :     :              :  :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 147883.09280389722, cumulative cost = {6.451599374049455E7 rows, 2.177558059739397E9 cpu, 8.85982572E8 io, 2.7677401515976304E8 network, 1.5327065270619887E8 memory}
         :  :     :              :  :  :  :  :  :- Calc(select=[X0, X00 AS X1]): rowcount = 36357.763662037716, cumulative cost = {2.8684576273294717E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :  :     :              :  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.763662037716, cumulative cost = {2.864821850963268E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :  :     :              :  :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :     :              :  :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :     :              :  :  :  :  :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :  :  :  :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                    +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 2593.245886494809, cumulative cost = {5670702.8078893805 rows, 1.4537252221332248E7 cpu, 9.84561E7 io, 477181.2431150449 network, 2187003.1564755705 memory}
         :  :     :              :  :  :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 2593.245886494809, cumulative cost = {5668109.562002886 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :  :     :              :  :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2593.245886494809, cumulative cost = {5665516.316116392 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :  :     :              :  :  :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5661997.070229897 rows, 1.3909946432213355E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 2170335.1564755705 memory}
         :  :     :              :  :  :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16825.305909965395, cumulative cost = {5645171.764319932 rows, 1.3640741537653908E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 1093515.5782377853 memory}
         :  :     :              :  :  :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5628346.458409967 rows, 1.06794876975E7 cpu, 9.8450544E7 io, 5580.0 network, 1093515.5782377853 memory}
         :  :     :              :  :  :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92819.4175, cumulative cost = {5611521.152500002 rows, 9194377.0175 cpu, 9.8450544E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :  :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :  :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 111525.32914185952, cumulative cost = {3.568353437439594E7 rows, 1.2252402869219177E9 cpu, 4.92202668E8 io, 1.5733092683199784E8 network, 8.577457439527877E7 memory}
         :  :     :              :  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], build=[right]): rowcount = 111525.32914185952, cumulative cost = {3.5572009045254074E7 rows, 1.2252402869219177E9 cpu, 4.92202668E8 io, 1.5733092683199784E8 network, 8.577457439527877E7 memory}
         :  :     :              :  :  :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :  :  :  :  :        :  +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :        +- Exchange(distribution=[hash[y0]]): rowcount = 128255.74427906348, cumulative cost = {2.9513100366112214E7 rows, 1.1118290637676852E9 cpu, 3.93763236E8 io, 1.4256498803199783E8 network, 7.859222471565121E7 memory}
         :  :     :              :  :  :  :  :           +- Calc(select=[X0, y0]): rowcount = 128255.74427906348, cumulative cost = {2.938484462183315E7 rows, 1.0902820987288024E9 cpu, 3.93763236E8 io, 1.3948685016930032E8 network, 7.859222471565121E7 memory}
         :  :     :              :  :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 128255.74427906348, cumulative cost = {2.9256588877554085E7 rows, 1.0902820987288024E9 cpu, 3.93763236E8 io, 1.3948685016930032E8 network, 7.859222471565121E7 memory}
         :  :     :              :  :  :  :  :                 :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :  :     :              :  :  :  :  :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :     :              :  :  :  :  :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :  :  :  :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :  :  :  :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :     :              :  :  :  :  :                 :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :  :  :  :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :  :  :  :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :  :  :  :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :  :  :  :                 :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                 +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :  :  :  :  :                    +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 128257.38565406349, cumulative cost = {2.9385594582083143E7 rows, 1.1190084342088025E9 cpu, 3.9376914E8 io, 1.3948888758930033E8 network, 7.859636591565122E7 memory}
         :  :     :              :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 128257.38565406349, cumulative cost = {2.925733719642908E7 rows, 1.1190084342088025E9 cpu, 3.9376914E8 io, 1.3948888758930033E8 network, 7.859636591565122E7 memory}
         :  :     :              :  :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :  :     :              :  :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :     :              :  :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :     :              :  :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :  :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :  :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 615257.3925, cumulative cost = {5948130.0275 rows, 1.3618945354E8 cpu, 9.8445336E7 io, 1.4767976219999999E7 network, 4169.2 memory}
         :  :     :              :  :  :  :           +- Calc(select=[x, y0]): rowcount = 615257.3925, cumulative cost = {5332872.635 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :  :     :              :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615257.3925, cumulative cost = {4717615.2425 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :  :     :              :  :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
         :  :     :              :  :  :  :                    +- Calc(select=[x, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 128257.28777906348, cumulative cost = {2.9385550378833145E7 rows, 1.1190075595688024E9 cpu, 3.93768792E8 io, 1.3948876752930033E8 network, 7.859612231565121E7 memory}
         :  :     :              :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 128257.28777906348, cumulative cost = {2.9257293091054082E7 rows, 1.1190075595688024E9 cpu, 3.93768792E8 io, 1.3948876752930033E8 network, 7.859612231565121E7 memory}
         :  :     :              :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :  :     :              :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :     :              :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :     :              :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 615256.74, cumulative cost = {5948086.0200000005 rows, 1.3618858412E8 cpu, 9.8444988E7 io, 1.476785616E7 network, 3925.6 memory}
         :  :     :              :  :  :           +- Calc(select=[x, y0]): rowcount = 615256.74, cumulative cost = {5332829.28 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
         :  :     :              :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615256.74, cumulative cost = {4717572.54 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
         :  :     :              :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :  :     :              :  :  :                    +- Calc(select=[x0, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[x AS X0, y00 AS X1]): rowcount = 709609.9513499999, cumulative cost = {2.5322807859699998E7 rows, 1.5797793093439999E9 cpu, 2.95324176E8 io, 2.14193976456E8 network, 4.0401985064E7 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 709609.9513499999, cumulative cost = {2.461319790835E7 rows, 1.5797793093439999E9 cpu, 2.95324176E8 io, 2.14193976456E8 network, 4.0401985064E7 memory}
         :  :     :              :  :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[hash[x]]): rowcount = 629091.009, cumulative cost = {1.5700303956999999E7 rows, 8.52857589272E8 cpu, 1.96884768E8 io, 1.15754568456E8 network, 5172888.56 memory}
         :  :     :              :  :           +- Calc(select=[x, y0 AS y00]): rowcount = 629091.009, cumulative cost = {1.5071212947999999E7 rows, 7.4717029976E8 cpu, 1.96884768E8 io, 1.0065638424E8 network, 5172888.56 memory}
         :  :     :              :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x1)], select=[x, y, y0, x1], build=[right]): rowcount = 629091.009, cumulative cost = {1.4442121939E7 rows, 7.4717029976E8 cpu, 1.96884768E8 io, 1.0065638424E8 network, 5172888.56 memory}
         :  :     :              :  :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :  :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                 +- Exchange(distribution=[hash[x1]]): rowcount = 92298.05999999998, cumulative cost = {5609746.929999999 rows, 2.4542923279999994E7 cpu, 9.844536E7 io, 2216976.2399999993 network, 4197.2 memory}
         :  :     :              :  :                    +- Calc(select=[y0, x0 AS x1]): rowcount = 92298.05999999998, cumulative cost = {5517448.869999999 rows, 9036849.2 cpu, 9.844536E7 io, 1822.8000000000002 network, 4197.2 memory}
         :  :     :              :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right]): rowcount = 92298.05999999998, cumulative cost = {5425150.81 rows, 9036849.2 cpu, 9.844536E7 io, 1822.8000000000002 network, 4197.2 memory}
         :  :     :              :  :                          :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                          :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                          +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
         :  :     :              :  :                             +- Calc(select=[x, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707534.908875, cumulative cost = {1.556648384525E7 rows, 8.6300050468E8 cpu, 1.96884744E8 io, 1.1320738422E8 network, 3.445858318E7 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707534.908875, cumulative cost = {1.4858948936375E7 rows, 8.6300050468E8 cpu, 1.96884744E8 io, 1.1320738422E8 network, 3.445858318E7 memory}
         :  :     :              :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 615257.3925, cumulative cost = {5948130.0275 rows, 1.3618945354E8 cpu, 9.8445336E7 io, 1.4767976219999999E7 network, 4169.2 memory}
         :  :     :              :           +- Calc(select=[x, y0]): rowcount = 615257.3925, cumulative cost = {5332872.635 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615257.3925, cumulative cost = {4717615.2425 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
         :  :     :              :                    +- Calc(select=[x, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707535.1403999999, cumulative cost = {1.5567191608799998E7 rows, 8.630181048560001E8 cpu, 1.968903E8 io, 1.13209338624E8 network, 3.4463143456E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707535.1403999999, cumulative cost = {1.4859656468399998E7 rows, 8.630181048560001E8 cpu, 1.968903E8 io, 1.13209338624E8 network, 3.4463143456E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 615258.936, cumulative cost = {5948837.327999999 rows, 1.36207041368E8 cpu, 9.8450892E7 io, 1.4769930624E7 network, 8643.039999999999 memory}
         :  :     :                       +- Calc(select=[x, y0]): rowcount = 615258.936, cumulative cost = {5333578.391999999 rows, 3.284354012E7 cpu, 9.8450892E7 io, 3716.16 network, 8643.039999999999 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615258.936, cumulative cost = {4718319.455999999 rows, 3.284354012E7 cpu, 9.8450892E7 io, 3716.16 network, 8643.039999999999 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 84.24, cumulative cost = {1418.52 rows, 29730.199999999997 cpu, 11484.0 io, 3716.16 network, 3925.6 memory}
         :  :     :                                +- Calc(select=[x, y]): rowcount = 84.24, cumulative cost = {1334.28 rows, 16251.8 cpu, 11484.0 io, 1694.3999999999999 network, 3925.6 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 84.24, cumulative cost = {1250.04 rows, 16251.8 cpu, 11484.0 io, 1694.3999999999999 network, 3925.6 memory}
         :  :     :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :  :     :                                         +- Calc(select=[x0, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                                            +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                                               :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :                                               +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                                  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 635092.5045836867, cumulative cost = {7.152956870190158E7 rows, 2.1185740647237313E9 cpu, 9.84440436E8 io, 2.5923044871684632E8 network, 1.4081281726760986E8 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 635092.5045836867, cumulative cost = {7.08944761973179E7 rows, 2.011878523953672E9 cpu, 9.84440436E8 io, 2.4398822860683784E8 network, 1.4081281726760986E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 635092.5045836867, cumulative cost = {7.025938369273421E7 rows, 2.011878523953672E9 cpu, 9.84440436E8 io, 2.4398822860683784E8 network, 1.4081281726760986E8 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 132308.0305579119, cumulative cost = {6.1421007188150525E7 rows, 1.2889310677092087E9 cpu, 8.86001028E8 io, 1.4554882060683784E8 network, 1.334035675563668E8 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.128869915759261E7 rows, 1.2667033185754795E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.334035675563668E8 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 132308.0305579119, cumulative cost = {6.1156391127034694E7 rows, 1.2645863900865529E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.2493585360066044E8 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.102408309647678E7 rows, 1.2413001767083604E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.2493585360066044E8 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 729897.833220605, cumulative cost = {6.089177506591886E7 rows, 1.2296218113768308E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.1646813964495409E8 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 112052.33563582558, cumulative cost = {3.580258249390231E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 112052.33563582558, cumulative cost = {3.5690530158266485E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 115027.89265686346, cumulative cost = {1.908402168458766E7 rows, 1.609046963037042E8 cpu, 2.9533566E8 io, 1.1286275816362873E7 network, 4.425118995309321E7 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                             :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 617845.4975847794, cumulative cost = {2.435929473879594E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617845.4975847794, cumulative cost = {2.374144924121116E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 17327.983898529517, cumulative cost = {1.9021961743626382E7 rows, 1.4535536690237078E8 cpu, 2.95341564E8 io, 8947382.006162858 network, 4.426890195309321E7 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 17327.983898529517, cumulative cost = {1.9004633759727854E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 17327.983898529517, cumulative cost = {1.8987305775829326E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                                            :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 68777.04333094477, cumulative cost = {1.8740234832404768E8 rows, 7.859683503263662E9 cpu, 2.362625304E9 io, 1.0073667205113147E9 network, 4.7847161307990754E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 68777.04333094477, cumulative cost = {1.8733357128071675E8 rows, 7.859683503263662E9 cpu, 2.362625304E9 io, 1.0073667205113147E9 network, 4.7847161307990754E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 458444.0222062985, cumulative cost = {1.872641204373858E8 rows, 7.856003635286012E9 cpu, 2.362619724E9 io, 1.0073650261113148E9 network, 4.784676874799075E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 458444.0222062985, cumulative cost = {1.868056764151795E8 rows, 7.848668530930711E9 cpu, 2.362619724E9 io, 1.0073650261113148E9 network, 4.4912727005870444E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 458444.0222062985, cumulative cost = {1.8634723239297318E8 rows, 7.767982383022402E9 cpu, 2.362619724E9 io, 9.963623695783637E8 network, 4.4912727005870444E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 2529077.7668620236, cumulative cost = {1.8588878837076688E8 rows, 7.727517138752609E9 cpu, 2.362619724E9 io, 9.963623695783637E8 network, 4.1978685263750136E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 1821542.626462024, cumulative cost = {1.6779251899510485E8 rows, 6.861969956129747E9 cpu, 2.165729424E9 io, 8.831530309543637E8 network, 3.853237091815013E8 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 1114007.717587024, cumulative cost = {1.5040449252339283E8 rows, 5.997147908823285E9 cpu, 1.96884468E9 io, 7.699456467343637E8 network, 3.508651260015013E8 memory}
         :        :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 404397.7662370242, cumulative cost = {1.2396767694610581E8 rows, 4.416254591761698E9 cpu, 1.673520504E9 io, 5.557516702783637E8 network, 3.104631409375013E8 memory}
         :        :           :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 276140.4784579607, cumulative cost = {9.417772880103564E7 rows, 3.2968426344266577E9 cpu, 1.279751712E9 io, 4.162629027490634E8 network, 2.3186701862185007E8 memory}
         :        :           :  :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 147883.09280389722, cumulative cost = {6.451599374049455E7 rows, 2.177558059739397E9 cpu, 8.85982572E8 io, 2.7677401515976304E8 network, 1.5327065270619887E8 memory}
         :        :           :  :  :  :  :  :- Calc(select=[X0, X00 AS X1]): rowcount = 36357.763662037716, cumulative cost = {2.8684576273294717E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :        :           :  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.763662037716, cumulative cost = {2.864821850963268E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :        :           :  :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :           :  :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :           :  :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :           :  :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :           :  :  :  :  :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :  :  :  :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                    +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 2593.245886494809, cumulative cost = {5670702.8078893805 rows, 1.4537252221332248E7 cpu, 9.84561E7 io, 477181.2431150449 network, 2187003.1564755705 memory}
         :        :           :  :  :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 2593.245886494809, cumulative cost = {5668109.562002886 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :        :           :  :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2593.245886494809, cumulative cost = {5665516.316116392 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :        :           :  :  :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5661997.070229897 rows, 1.3909946432213355E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 2170335.1564755705 memory}
         :        :           :  :  :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16825.305909965395, cumulative cost = {5645171.764319932 rows, 1.3640741537653908E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 1093515.5782377853 memory}
         :        :           :  :  :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5628346.458409967 rows, 1.06794876975E7 cpu, 9.8450544E7 io, 5580.0 network, 1093515.5782377853 memory}
         :        :           :  :  :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92819.4175, cumulative cost = {5611521.152500002 rows, 9194377.0175 cpu, 9.8450544E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :  :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :  :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :  :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :  :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 111525.32914185952, cumulative cost = {3.568353437439594E7 rows, 1.2252402869219177E9 cpu, 4.92202668E8 io, 1.5733092683199784E8 network, 8.577457439527877E7 memory}
         :        :           :  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], build=[right]): rowcount = 111525.32914185952, cumulative cost = {3.5572009045254074E7 rows, 1.2252402869219177E9 cpu, 4.92202668E8 io, 1.5733092683199784E8 network, 8.577457439527877E7 memory}
         :        :           :  :  :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :  :  :  :  :        :  +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :        +- Exchange(distribution=[hash[y0]]): rowcount = 128255.74427906348, cumulative cost = {2.9513100366112214E7 rows, 1.1118290637676852E9 cpu, 3.93763236E8 io, 1.4256498803199783E8 network, 7.859222471565121E7 memory}
         :        :           :  :  :  :  :           +- Calc(select=[X0, y0]): rowcount = 128255.74427906348, cumulative cost = {2.938484462183315E7 rows, 1.0902820987288024E9 cpu, 3.93763236E8 io, 1.3948685016930032E8 network, 7.859222471565121E7 memory}
         :        :           :  :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 128255.74427906348, cumulative cost = {2.9256588877554085E7 rows, 1.0902820987288024E9 cpu, 3.93763236E8 io, 1.3948685016930032E8 network, 7.859222471565121E7 memory}
         :        :           :  :  :  :  :                 :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :        :           :  :  :  :  :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :           :  :  :  :  :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :           :  :  :  :  :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :           :  :  :  :  :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :           :  :  :  :  :                 :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :  :  :  :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :  :  :  :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :  :  :  :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :  :  :  :                 :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                 +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :  :  :  :  :                    +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 128257.38565406349, cumulative cost = {2.9385594582083143E7 rows, 1.1190084342088025E9 cpu, 3.9376914E8 io, 1.3948888758930033E8 network, 7.859636591565122E7 memory}
         :        :           :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 128257.38565406349, cumulative cost = {2.925733719642908E7 rows, 1.1190084342088025E9 cpu, 3.9376914E8 io, 1.3948888758930033E8 network, 7.859636591565122E7 memory}
         :        :           :  :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :        :           :  :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :           :  :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :           :  :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :           :  :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :           :  :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :  :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :  :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 615257.3925, cumulative cost = {5948130.0275 rows, 1.3618945354E8 cpu, 9.8445336E7 io, 1.4767976219999999E7 network, 4169.2 memory}
         :        :           :  :  :  :           +- Calc(select=[x, y0]): rowcount = 615257.3925, cumulative cost = {5332872.635 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :        :           :  :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615257.3925, cumulative cost = {4717615.2425 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :        :           :  :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
         :        :           :  :  :  :                    +- Calc(select=[x, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 128257.28777906348, cumulative cost = {2.9385550378833145E7 rows, 1.1190075595688024E9 cpu, 3.93768792E8 io, 1.3948876752930033E8 network, 7.859612231565121E7 memory}
         :        :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 128257.28777906348, cumulative cost = {2.9257293091054082E7 rows, 1.1190075595688024E9 cpu, 3.93768792E8 io, 1.3948876752930033E8 network, 7.859612231565121E7 memory}
         :        :           :  :  :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :        :           :  :  :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :           :  :  :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :           :  :  :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :           :  :  :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :           :  :  :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :  :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :  :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :  :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :  :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :  :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :  :  :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :  :  :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 615256.74, cumulative cost = {5948086.0200000005 rows, 1.3618858412E8 cpu, 9.8444988E7 io, 1.476785616E7 network, 3925.6 memory}
         :        :           :  :  :           +- Calc(select=[x, y0]): rowcount = 615256.74, cumulative cost = {5332829.28 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
         :        :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615256.74, cumulative cost = {4717572.54 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
         :        :           :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :        :           :  :  :                    +- Calc(select=[x0, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[x AS X0, y00 AS X1]): rowcount = 709609.9513499999, cumulative cost = {2.5322807859699998E7 rows, 1.5797793093439999E9 cpu, 2.95324176E8 io, 2.14193976456E8 network, 4.0401985064E7 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 709609.9513499999, cumulative cost = {2.461319790835E7 rows, 1.5797793093439999E9 cpu, 2.95324176E8 io, 2.14193976456E8 network, 4.0401985064E7 memory}
         :        :           :  :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[hash[x]]): rowcount = 629091.009, cumulative cost = {1.5700303956999999E7 rows, 8.52857589272E8 cpu, 1.96884768E8 io, 1.15754568456E8 network, 5172888.56 memory}
         :        :           :  :           +- Calc(select=[x, y0 AS y00]): rowcount = 629091.009, cumulative cost = {1.5071212947999999E7 rows, 7.4717029976E8 cpu, 1.96884768E8 io, 1.0065638424E8 network, 5172888.56 memory}
         :        :           :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x1)], select=[x, y, y0, x1], build=[right]): rowcount = 629091.009, cumulative cost = {1.4442121939E7 rows, 7.4717029976E8 cpu, 1.96884768E8 io, 1.0065638424E8 network, 5172888.56 memory}
         :        :           :  :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :  :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :                 +- Exchange(distribution=[hash[x1]]): rowcount = 92298.05999999998, cumulative cost = {5609746.929999999 rows, 2.4542923279999994E7 cpu, 9.844536E7 io, 2216976.2399999993 network, 4197.2 memory}
         :        :           :  :                    +- Calc(select=[y0, x0 AS x1]): rowcount = 92298.05999999998, cumulative cost = {5517448.869999999 rows, 9036849.2 cpu, 9.844536E7 io, 1822.8000000000002 network, 4197.2 memory}
         :        :           :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right]): rowcount = 92298.05999999998, cumulative cost = {5425150.81 rows, 9036849.2 cpu, 9.844536E7 io, 1822.8000000000002 network, 4197.2 memory}
         :        :           :  :                          :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :                          :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :                          :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                          :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                          +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
         :        :           :  :                             +- Calc(select=[x, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707534.908875, cumulative cost = {1.556648384525E7 rows, 8.6300050468E8 cpu, 1.96884744E8 io, 1.1320738422E8 network, 3.445858318E7 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707534.908875, cumulative cost = {1.4858948936375E7 rows, 8.6300050468E8 cpu, 1.96884744E8 io, 1.1320738422E8 network, 3.445858318E7 memory}
         :        :           :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 615257.3925, cumulative cost = {5948130.0275 rows, 1.3618945354E8 cpu, 9.8445336E7 io, 1.4767976219999999E7 network, 4169.2 memory}
         :        :           :           +- Calc(select=[x, y0]): rowcount = 615257.3925, cumulative cost = {5332872.635 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615257.3925, cumulative cost = {4717615.2425 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
         :        :           :                    +- Calc(select=[x, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :           :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707535.1403999999, cumulative cost = {1.5567191608799998E7 rows, 8.630181048560001E8 cpu, 1.968903E8 io, 1.13209338624E8 network, 3.4463143456E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707535.1403999999, cumulative cost = {1.4859656468399998E7 rows, 8.630181048560001E8 cpu, 1.968903E8 io, 1.13209338624E8 network, 3.4463143456E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 615258.936, cumulative cost = {5948837.327999999 rows, 1.36207041368E8 cpu, 9.8450892E7 io, 1.4769930624E7 network, 8643.039999999999 memory}
         :        :                    +- Calc(select=[x, y0]): rowcount = 615258.936, cumulative cost = {5333578.391999999 rows, 3.284354012E7 cpu, 9.8450892E7 io, 3716.16 network, 8643.039999999999 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615258.936, cumulative cost = {4718319.455999999 rows, 3.284354012E7 cpu, 9.8450892E7 io, 3716.16 network, 8643.039999999999 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 84.24, cumulative cost = {1418.52 rows, 29730.199999999997 cpu, 11484.0 io, 3716.16 network, 3925.6 memory}
         :        :                             +- Calc(select=[x, y]): rowcount = 84.24, cumulative cost = {1334.28 rows, 16251.8 cpu, 11484.0 io, 1694.3999999999999 network, 3925.6 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 84.24, cumulative cost = {1250.04 rows, 16251.8 cpu, 11484.0 io, 1694.3999999999999 network, 3925.6 memory}
         :        :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :        :                                      +- Calc(select=[x0, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                         +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                            :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                                            +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 26250.46059090563, cumulative cost = {1.4929471670834532E8 rows, 4.451586660898228E9 cpu, 2.067332016E9 io, 5.401334255344193E8 network, 3.51531915654866E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 26250.46059090563, cumulative cost = {1.4926846624775442E8 rows, 4.451586660898228E9 cpu, 2.067332016E9 io, 5.401334255344193E8 network, 3.51531915654866E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 155083.06602235074, cumulative cost = {8.789277261581986E7 rows, 3.179154996780047E9 cpu, 1.181325084E9 io, 3.9727601355096287E8 network, 2.1699511584181273E8 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 155083.06602235074, cumulative cost = {8.77376895497975E7 rows, 3.1766736677236896E9 cpu, 1.181325084E9 io, 3.9727601355096287E8 network, 2.0706979961638227E8 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 155083.06602235074, cumulative cost = {8.758260648377515E7 rows, 3.149379048103756E9 cpu, 1.181325084E9 io, 3.9355401996642643E8 network, 2.0706979961638227E8 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 855539.8593842413, cumulative cost = {8.74275234177528E7 rows, 3.135690410353608E9 cpu, 1.181325084E9 io, 3.9355401996642643E8 network, 1.971444833909518E8 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 836226.1384923818, cumulative cost = {5.7146374804751694E7 rows, 2.0146426718511891E9 cpu, 7.87550412E8 io, 2.5405407059712613E8 network, 1.1851790667530061E8 memory}
               :           :  :- Calc(select=[x AS X0, X1]): rowcount = 707591.7113104329, cumulative cost = {2.123797041310528E7 rows, 8.776244786175095E8 cpu, 2.9533596E8 io, 1.1369282230387531E8 network, 3.681100133160895E7 memory}
               :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 707591.7113104329, cumulative cost = {2.0530378701794848E7 rows, 8.776244786175095E8 cpu, 2.9533596E8 io, 1.1369282230387531E8 network, 3.681100133160895E7 memory}
               :           :  :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :     +- Exchange(distribution=[hash[x]]): rowcount = 615636.0754028853, cumulative cost = {1.1619502990484416E7 rows, 1.508103980142864E8 cpu, 1.96896552E8 io, 1.5253414303875316E7 network, 2335381.109047373 memory}
               :           :  :        +- Calc(select=[x, X1]): rowcount = 615636.0754028853, cumulative cost = {1.100386691508153E7 rows, 4.738353734660167E7 cpu, 1.96896552E8 io, 478148.49420606665 network, 2335381.109047373 memory}
               :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615636.0754028853, cumulative cost = {1.0388230839678645E7 rows, 4.738353734660167E7 cpu, 1.96896552E8 io, 478148.49420606665 network, 2335381.109047373 memory}
               :           :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 2598.502685902536, cumulative cost = {5670952.76427576 rows, 1.4549613325114453E7 cpu, 9.8457144E7 io, 478148.49420606665 network, 2189864.958636831 memory}
               :           :  :                 +- Calc(select=[X0, X1]): rowcount = 2598.502685902536, cumulative cost = {5668354.261589858 rows, 1.4133852895370048E7 cpu, 9.8457144E7 io, 415784.4297444058 network, 2189864.958636831 memory}
               :           :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2598.502685902536, cumulative cost = {5665755.758903955 rows, 1.4133852895370048E7 cpu, 9.8457144E7 io, 415784.4297444058 network, 2189864.958636831 memory}
               :           :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :           :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :           :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :           :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :                       +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[X0, X10 AS X1]): rowcount = 128634.42718194886, cumulative cost = {3.507217825315403E7 rows, 1.1361819670951874E9 cpu, 4.92214452E8 io, 1.403612482932508E8 network, 8.170690534369166E7 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 128634.42718194886, cumulative cost = {3.494354382597208E7 rows, 1.1361819670951874E9 cpu, 4.92214452E8 io, 1.403612482932508E8 network, 8.170690534369166E7 memory}
               :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
               :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
               :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
               :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
               :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
               :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :           :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :        +- Exchange(distribution=[hash[x]]): rowcount = 617771.0026859025, cumulative cost = {1.1633959615515111E7 rows, 1.533428775448977E8 cpu, 1.96890648E8 io, 1.5640336923950471E7 network, 3114708.6280404446 memory}
               :           :           +- Calc(select=[x, X1]): rowcount = 617771.0026859025, cumulative cost = {1.1016188612829208E7 rows, 4.9557349093666084E7 cpu, 1.96890648E8 io, 813832.8594888116 network, 3114708.6280404446 memory}
               :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617771.0026859025, cumulative cost = {1.0398417610143306E7 rows, 4.9557349093666084E7 cpu, 1.96890648E8 io, 813832.8594888116 network, 3114708.6280404446 memory}
               :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :                 +- Exchange(distribution=[broadcast]): rowcount = 16831.351239350242, cumulative cost = {5679004.607457403 rows, 1.6609562283751285E7 cpu, 9.845124E7 io, 813832.8594888116 network, 2172152.958636831 memory}
               :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :           :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :                                :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :                                :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, y AS X1]): rowcount = 19313.72089185952, cumulative cost = {2.9425608753616866E7 rows, 1.120192198643035E9 cpu, 3.93774672E8 io, 1.394999493693003E8 network, 7.862657671565121E7 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[X0, y, x], isBroadcast=[true], build=[right]): rowcount = 19313.72089185952, cumulative cost = {2.9406295032725006E7 rows, 1.120192198643035E9 cpu, 3.93774672E8 io, 1.394999493693003E8 network, 7.862657671565121E7 memory}
               :                 :- Calc(select=[X0, y]): rowcount = 128266.13927906349, cumulative cost = {2.9385997311833147E7 rows, 1.1190834135288024E9 cpu, 3.93768768E8 io, 1.394940453693003E8 network, 7.860886471565121E7 memory}
               :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], build=[left]): rowcount = 128266.13927906349, cumulative cost = {2.9257731172554083E7 rows, 1.1190834135288024E9 cpu, 3.93768768E8 io, 1.394940453693003E8 network, 7.860886471565121E7 memory}
               :                 :     :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
               :                 :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
               :                 :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
               :                 :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
               :                 :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
               :                 :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                 :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                 :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                 :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                 :     :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :     +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
               :                 :        +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                 :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 19920.004583686783, cumulative cost = {6.134944317134367E7 rows, 1.2710316395533326E9 cpu, 8.86006932E8 io, 1.4285741198345643E8 network, 1.334212795563668E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 19920.004583686783, cumulative cost = {6.132952316675998E7 rows, 1.2678444388199427E9 cpu, 8.86006932E8 io, 1.4237933187344795E8 network, 1.334212795563668E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 19920.004583686783, cumulative cost = {6.1309603162176296E7 rows, 1.2678444388199427E9 cpu, 8.86006932E8 io, 1.4237933187344795E8 network, 1.334212795563668E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.128869915759261E7 rows, 1.2667033185754795E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.334035675563668E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 132308.0305579119, cumulative cost = {6.1156391127034694E7 rows, 1.2645863900865529E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.2493585360066044E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.102408309647678E7 rows, 1.2413001767083604E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.2493585360066044E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 729897.833220605, cumulative cost = {6.089177506591886E7 rows, 1.2296218113768308E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.1646813964495409E8 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 112052.33563582558, cumulative cost = {3.580258249390231E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 112052.33563582558, cumulative cost = {3.5690530158266485E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 115027.89265686346, cumulative cost = {1.908402168458766E7 rows, 1.609046963037042E8 cpu, 2.9533566E8 io, 1.1286275816362873E7 network, 4.425118995309321E7 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 617845.4975847794, cumulative cost = {2.435929473879594E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617845.4975847794, cumulative cost = {2.374144924121116E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
                        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 17327.983898529517, cumulative cost = {1.9021961743626382E7 rows, 1.4535536690237078E8 cpu, 2.95341564E8 io, 8947382.006162858 network, 4.426890195309321E7 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 17327.983898529517, cumulative cost = {1.9004633759727854E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 17327.983898529517, cumulative cost = {1.8987305775829326E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,2,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#2] Exchange(distribution=[hash[X1]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[5])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[21])
         :        :           :              :        :           :     :- Reused(reference_id=[1])
         :        :           :              :        :           :     +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :              :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[22])
         :        :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :              :        +- Reused(reference_id=[2])
         :        :           :              :- Reused(reference_id=[3])
         :        :           :              +- Exchange(distribution=[broadcast])(reuse_id=[11])
         :        :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[4])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Exchange(distribution=[hash[x]])
         :        :           :        :  +- Reused(reference_id=[1])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[17])
         :        :           :                       :  +- Reused(reference_id=[4])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[9])
         :        :           :                             :- Reused(reference_id=[1])
         :        :           :                             +- Reused(reference_id=[2])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[5])
         :        :                    +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :                       +- Reused(reference_id=[6])
         :        +- Reused(reference_id=[7])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,3,2,2,1,1,2,1,2,1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :  :- Calc(select=[X0, X00 AS X1])\n:  :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :  :  :  :     :- [#11] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :  :  :     +- [#12] Exchange(distribution=[broadcast])\n:  :  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, X0, y00], build=[right])\n:  :  :  :  :        :- [#13] Exchange(distribution=[hash[x]], shuffle_mode=[BATCH])\n:  :  :  :  :        +- [#14] Exchange(distribution=[hash[y0]])\n:  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n:  :  :  :        :- [#7] Exchange(distribution=[hash[X1]])\n:  :  :  :        +- [#4] Exchange(distribution=[hash[x]])\n:  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n:  :  :        :- [#7] Exchange(distribution=[hash[X1]])\n:  :  :        +- [#8] Exchange(distribution=[hash[x]])\n:  :  +- Calc(select=[x AS X0, y00 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])\n:  :        :- [#5] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:  :        +- [#6] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[x AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[8])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[x, y])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], isBroadcast=[true], build=[right])
         :              :                 :- Reused(reference_id=[6])
         :              :                 +- Exchange(distribution=[broadcast])(reuse_id=[13])
         :              :                    +- Calc(select=[x0, y])
         :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[20])
         :              :                          :- Reused(reference_id=[4])
         :              :                          +- Reused(reference_id=[2])
         :              :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])(reuse_id=[15])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])(reuse_id=[10])
         :              :           +- Calc(select=[x, y])
         :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])
         :              :                 :- Reused(reference_id=[6])
         :              :                 +- Reused(reference_id=[2])
         :              :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0 AS y00])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x1)], select=[x, y, y0, x1], build=[right])
         :              :        :- Reused(reference_id=[8])
         :              :        +- Exchange(distribution=[hash[x1]])
         :              :           +- Calc(select=[y0, x0 AS x1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, y0, x0, y], isBroadcast=[true], build=[right])
         :              :                 :- Calc(select=[x, y0])(reuse_id=[12])
         :              :                 :  +- Reused(reference_id=[9])
         :              :                 +- Reused(reference_id=[10])
         :              :- Exchange(distribution=[hash[X1]])(reuse_id=[14])
         :              :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :              :     +- Exchange(distribution=[hash[X0, X1]])
         :              :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :              :- Reused(reference_id=[1])
         :              :              :- Reused(reference_id=[11])
         :              :              :- Reused(reference_id=[8])
         :              :              +- Exchange(distribution=[hash[x]])
         :              :                 +- Reused(reference_id=[12])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[13])
         :              :- Reused(reference_id=[14])
         :              :- Reused(reference_id=[15])
         :              :- Reused(reference_id=[16])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[11])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[12])
         :              :                 :     +- Reused(reference_id=[11])
         :              :                 +- Reused(reference_id=[17])
         :              :- Exchange(distribution=[hash[x]], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[12])
         :              +- Exchange(distribution=[hash[y0]])
         :                 +- Calc(select=[X0, y0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])
         :                       :- Reused(reference_id=[14])
         :                       +- Exchange(distribution=[hash[x]], shuffle_mode=[BATCH])
         :                          +- Reused(reference_id=[12])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Reused(reference_id=[8])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[18])
         :- Reused(reference_id=[19])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[x, x0])
         :     +- Reused(reference_id=[20])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[0,1,0,1,2,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#2] Exchange(distribution=[hash[y]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#4] Exchange(distribution=[hash[X1]])\n:        +- [#5] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[X0, y, x], isBroadcast=[true], build=[right])\n      :- Calc(select=[X0, y])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], build=[left])\n      :     :- [#4] Exchange(distribution=[hash[X1]])\n      :     +- [#7] Exchange(distribution=[hash[x]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
                  :- Reused(reference_id=[7])
                  :- Reused(reference_id=[8])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Calc(select=[X0, X1])
                  :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                  :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[23])
                  :                 :  +- Exchange(distribution=[hash[X0, X1]])
                  :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :                 :        +- Union(all=[true], union=[X0, X1])
                  :                 :           :- Calc(select=[x0 AS X0, y AS X1])
                  :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :                 :           :     :- Calc(select=[y, x0])
                  :                 :           :     :  +- Reused(reference_id=[21])
                  :                 :           :     +- Reused(reference_id=[7])
                  :                 :           +- Reused(reference_id=[22])
                  :                 +- Reused(reference_id=[7])
                  :- Reused(reference_id=[14])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Reused(reference_id=[23])
                  :- Reused(reference_id=[14])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Reused(reference_id=[11])

Job has been submitted with JobID 0a72d5e7f59ea30e64e556b2dea4343d
