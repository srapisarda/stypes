WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, r_3.y AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x UNION (SELECT r_0.x AS X0, s_1.y AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x) UNION (SELECT b_0.x AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN s AS s_1 ON b_0.x = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x) UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 804a4450_4bc0_497d_a82e_6f6b91f10e0f

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, r_3.y AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN s AS s_2 ON s_1.y = s_2.x
                      INNER JOIN r AS r_3 ON s_2.y = r_3.x
             UNION
             (SELECT r_0.x AS X0, s_1.y AS X1
              FROM r AS r_0
                       INNER JOIN s AS s_1 ON r_0.y = s_1.x
                       INNER JOIN a AS a_2 ON s_1.y = a_2.x)
             UNION
             (SELECT b_0.x AS X0, r_2.y AS X1
              FROM b AS b_0
                       INNER JOIN s AS s_1 ON b_0.x = s_1.x
                       INNER JOIN r AS r_2 ON s_1.y = r_2.x)
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1
              FROM b AS b_0
                       INNER JOIN a AS a_1 ON b_0.x = a_1.x)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0)
            UNION
            (SELECT p19_0.X0 AS X0, r_2.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)),
     p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1
             FROM p19 AS p19_0
                      INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1
                      INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalUnion(all=[false])
   :  :        :        :  :- LogicalUnion(all=[false])
   :  :        :        :  :  :- LogicalProject(X0=[$0], X1=[$7])
   :  :        :        :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :        :        :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :        :        :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalUnion(all=[false])
   :  :              :  :  :  :- LogicalUnion(all=[false])
   :  :              :  :  :  :  :- LogicalProject(X0=[$0], X1=[$7])
   :  :              :  :  :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :              :  :  :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :              :  :  :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  +- LogicalUnion(all=[false])
   :        :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalUnion(all=[false])
         :     :        :  :- LogicalUnion(all=[false])
         :     :        :  :  :- LogicalProject(X0=[$0], X1=[$7])
         :     :        :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :     :        :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :     :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        :  +- LogicalProject(X0=[$0], X1=[$4])
         :     :        :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
         :     :        :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalUnion(all=[false])
         :           :  :  :  :- LogicalUnion(all=[false])
         :           :  :  :  :  :- LogicalProject(X0=[$0], X1=[$7])
         :           :  :  :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :           :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :           :  :  :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
         :           :  :  :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1920.9628080377838, cumulative cost = {2.7207925209823895E7 rows, 8.486349907431357E8 cpu, 3.63518388E8 io, 1.0357039126175107E8 network, 6.831620811897863E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 1920.9628080377838, cumulative cost = {2.7206004247015856E7 rows, 8.486042553382071E8 cpu, 3.63518388E8 io, 1.0357039126175107E8 network, 6.819326649926421E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1920.9628080377838, cumulative cost = {2.7204083284207817E7 rows, 8.482661658839924E8 cpu, 3.63518388E8 io, 1.0352428815435816E8 network, 6.819326649926421E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 10597.29016728458, cumulative cost = {2.7202162321399778E7 rows, 8.480966092413158E8 cpu, 3.63518388E8 io, 1.0352428815435816E8 network, 6.807032487954979E7 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 8943.304194298564, cumulative cost = {1.6458119738501929E7 rows, 5.150781318199452E8 cpu, 2.21807508E8 io, 6.314842220543276E7 network, 4.06352171105715E7 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 7457.33492151422, cumulative cost = {1.1058965482393708E7 rows, 3.336679136559834E8 cpu, 1.47871344E8 io, 4.046268851377286E7 network, 2.7724718530534662E7 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left]): rowcount = 7457.33492151422, cumulative cost = {1.1051508147472193E7 rows, 3.336679136559834E8 cpu, 1.47871344E8 io, 4.046268851377286E7 network, 2.7724718530534662E7 memory}
         :  :     :- Exchange(distribution=[broadcast]): rowcount = 9899.26181856229, cumulative cost = {5397067.675186917 rows, 1.829125230656439E8 cpu, 7.3935576E7 io, 2.292311917530539E7 network, 1.2910268980036838E7 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9899.26181856229, cumulative cost = {5387168.413368355 rows, 1.8132864117467394E8 cpu, 7.3935576E7 io, 2.2685536891659893E7 network, 1.2910268980036838E7 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9899.26181856229, cumulative cost = {5377269.151549792 rows, 1.8117025298557696E8 cpu, 7.3935576E7 io, 2.2685536891659893E7 network, 1.2276716223648852E7 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9899.26181856229, cumulative cost = {5367369.889731229 rows, 1.7942798290551E8 cpu, 7.3935576E7 io, 2.2447954608014397E7 network, 1.2276716223648852E7 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 54610.81781192009, cumulative cost = {5357470.627912667 rows, 1.785542098205193E8 cpu, 7.3935576E7 io, 2.2447954608014397E7 network, 1.1643163467260865E7 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 10326.504608038007, cumulative cost = {3967862.2000914263 rows, 1.2383810867630154E8 cpu, 5.545122E7 io, 1.5332502739201952E7 network, 9339651.42388057 memory}
         :  :     :              :  :- Calc(select=[X0, X00 AS X1]): rowcount = 2275.994796622063, cumulative cost = {1795415.0758928033 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :  :     :              :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2275.994796622063, cumulative cost = {1793139.0810961812 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :  :     :              :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :     :              :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :     :              :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :     :              :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :     :              :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :              :  :     :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     +- Exchange(distribution=[broadcast]): rowcount = 165.56451835589723, cumulative cost = {355055.38392218563 rows, 917640.6140781399 cpu, 6162492.0 io, 30487.87137748509 network, 138677.72233036565 memory}
         :  :     :              :  :        +- Calc(select=[X0, X1]): rowcount = 165.56451835589723, cumulative cost = {354889.81940382975 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :  :     :              :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 165.56451835589723, cumulative cost = {354724.25488547387 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :  :     :              :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {354464.690367118 rows, 874800.1834955486 cpu, 6161928.0 io, 25950.322936943558 network, 136985.72233036565 memory}
         :  :     :              :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1056.7634557059816, cumulative cost = {353407.926911412 rows, 857891.9682042529 cpu, 6161928.0 io, 25950.322936943558 network, 69352.86116518283 memory}
         :  :     :              :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {352351.163455706 rows, 671901.6000000001 cpu, 6161928.0 io, 588.0 network, 69352.86116518283 memory}
         :  :     :              :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5829.8, cumulative cost = {351294.39999999997 rows, 578624.8 cpu, 6161928.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 8050.509811415945, cumulative cost = {2162120.619590585 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], isBroadcast=[true], build=[left]): rowcount = 8050.509811415945, cumulative cost = {2154070.1097791693 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :  :     :              :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Calc(select=[x, X0]): rowcount = 38662.33128364844, cumulative cost = {695204.1634645888 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :  :     :              :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38662.33128364844, cumulative cost = {656541.8321809403 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :  :     :              :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1049.8752243229449, cumulative cost = {361180.5008972919 rows, 769749.2789616765 cpu, 6162120.0 io, 50490.01076750136 network, 134496.02871333694 memory}
         :  :     :              :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :     :              :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :     :              :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :     :              :                          +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :     :              :                             :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :     :              :                             :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :                             :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :                             :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                             :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                             :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                             :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                             :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                             :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                             :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                             :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                             :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                             :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                             :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                             :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                             +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 44284.313203882084, cumulative cost = {1334997.6100093203 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 44284.313203882084, cumulative cost = {1290713.2968054381 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 38529.75469254726, cumulative cost = {733030.983601556 rows, 9174228.288865468 cpu, 1.232358E7 io, 954675.8688124476 network, 145845.7805976497 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 38529.75469254726, cumulative cost = {694501.2289090088 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.75469254726, cumulative cost = {655971.4742164615 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 166.03128364844173, cumulative cost = {360742.7195239143 rows, 646309.2502483395 cpu, 6162804.0 io, 29961.75619131328 network, 136548.02871333694 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 166.03128364844173, cumulative cost = {360576.6882402658 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.03128364844173, cumulative cost = {360410.6569566174 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     +- Calc(select=[x, X1]): rowcount = 39816.30432486584, cumulative cost = {5646983.137363762 rows, 1.5035766606119207E8 cpu, 7.3935768E7 io, 1.753956933846747E7 network, 1.4260090888658335E7 memory}
         :  :        +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39816.30432486584, cumulative cost = {5607166.833038895 rows, 1.5035766606119207E8 cpu, 7.3935768E7 io, 1.753956933846747E7 network, 1.4260090888658335E7 memory}
         :  :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           +- Exchange(distribution=[broadcast]): rowcount = 8743.02883243897, cumulative cost = {5310651.528714029 rows, 1.4823412983053255E8 cpu, 6.7774992E7 io, 1.753956933846747E7 network, 1.3770481274041753E7 memory}
         :  :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8743.02883243897, cumulative cost = {5301908.49988159 rows, 1.4683524521734232E8 cpu, 6.7774992E7 io, 1.7329736646488935E7 network, 1.3770481274041753E7 memory}
         :  :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8743.02883243897, cumulative cost = {5293165.47104915 rows, 1.466953567560233E8 cpu, 6.7774992E7 io, 1.7329736646488935E7 network, 1.3210927428765658E7 memory}
         :  :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8743.02883243897, cumulative cost = {5284422.442216711 rows, 1.4515658368151402E8 cpu, 6.7774992E7 io, 1.71199039545104E7 network, 1.3210927428765658E7 memory}
         :  :                       +- Union(all=[true], union=[X0, X1]): rowcount = 48232.27867328323, cumulative cost = {5275679.413384272 rows, 1.4438486722274148E8 cpu, 6.7774992E7 io, 1.71199039545104E7 network, 1.2651373583489563E7 memory}
         :  :                          :- Calc(select=[X10 AS X0, X1]): rowcount = 9231.38329026783, cumulative cost = {2849416.0568825947 rows, 7.892754513662064E7 cpu, 3.6967836E7 io, 9426168.018011495 network, 7490707.439342812 memory}
         :  :                          :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 9231.38329026783, cumulative cost = {2840184.6735923267 rows, 7.892754513662064E7 cpu, 3.6967836E7 io, 9426168.018011495 network, 7490707.439342812 memory}
         :  :                          :     :- Exchange(distribution=[hash[X0]]): rowcount = 21989.461467351553, cumulative cost = {2055284.8408694062 rows, 6.630866481324656E7 cpu, 2.4645696E7 io, 8141431.750432873 network, 4973423.867820999 memory}
         :  :                          :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 21989.461467351553, cumulative cost = {2033295.3794020547 rows, 6.2614435286731504E7 cpu, 2.4645696E7 io, 7613684.675216436 network, 4973423.867820999 memory}
         :  :                          :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 21989.461467351553, cumulative cost = {2011305.9179347032 rows, 6.2262603903253876E7 cpu, 2.4645696E7 io, 7613684.675216436 network, 3566098.3339104997 memory}
         :  :                          :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 21989.461467351553, cumulative cost = {1989316.4564673516 rows, 5.8392458685E7 cpu, 2.4645696E7 io, 7085937.6 network, 3566098.3339104997 memory}
         :  :                          :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 121308.285, cumulative cost = {1967326.995 rows, 5.6451526125E7 cpu, 2.4645696E7 io, 7085937.6 network, 2158772.8000000003 memory}
         :  :                          :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 121292.685, cumulative cost = {1845836.5100000002 rows, 5.632186584E7 cpu, 2.4644448E7 io, 7085373.6 network, 2157080.8000000003 memory}
         :  :                          :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 82786.755, cumulative cost = {1390762.3650000002 rows, 5.4350981355000004E7 cpu, 1.8483084E7 io, 7085176.8 network, 2156851.2 memory}
         :  :                          :     :              :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974179.2 rows, 5.2212924E7 cpu, 1.23216E7 io, 7084944.0 network, 2156336.0 memory}
         :  :                          :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 44280.6, cumulative cost = {929898.6 rows, 5.2212924E7 cpu, 1.23216E7 io, 7084944.0 network, 2156336.0 memory}
         :  :                          :     :              :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :                          :     :              :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 38505.0, cumulative cost = {372220.0 rows, 6725860.0 cpu, 6160824.0 io, 924168.0 network, 56.0 memory}
         :  :                          :     :              :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 38505.0, cumulative cost = {333715.0 rows, 257020.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :                          :     :              :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295210.0 rows, 257020.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :                          :     :              :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :                          :     :              :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :              :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :              :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :              :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 38506.155, cumulative cost = {333796.41000000003 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :  :                          :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 38506.155, cumulative cost = {295290.255 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :  :                          :     :              :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
         :  :                          :     :              :  :           +- Calc(select=[x0, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :              :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :              :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :              :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.93, cumulative cost = {333781.45999999996 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :  :                          :     :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.93, cumulative cost = {295275.52999999997 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :  :                          :     :              :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :        +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :  :                          :     :              :           +- Calc(select=[x, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :                          :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :                          :     :                    :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :                          :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                          :     +- Exchange(distribution=[hash[y]]): rowcount = 39553.09380110065, cumulative cost = {775668.4494326526 rows, 1.2126539881226461E7 cpu, 1.232214E7 io, 1284736.2675786226 network, 1285873.7293501266 memory}
         :  :                          :        +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :                          :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :                          :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :              +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
         :  :                          :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
         :  :                          :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
         :  :                          :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
         :  :                          :                          +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
         :  :                          :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                          :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                          :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          +- Calc(select=[x AS X0, X1]): rowcount = 39000.895383015406, cumulative cost = {2378031.077828394 rows, 6.5409089807447575E7 cpu, 3.0807156E7 io, 7693735.936498902 network, 5160666.144146752 memory}
         :  :                             +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39000.895383015406, cumulative cost = {2339030.1824453785 rows, 6.5409089807447575E7 cpu, 3.0807156E7 io, 7693735.936498902 network, 5160666.144146752 memory}
         :  :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                +- Exchange(distribution=[broadcast]): rowcount = 3306.969220102733, cumulative cost = {2043330.287062363 rows, 6.332904205368675E7 cpu, 2.464638E7 io, 7693735.936498902 network, 4975475.867820999 memory}
         :  :                                   +- Calc(select=[X0, X1]): rowcount = 3306.969220102733, cumulative cost = {2040023.3178422602 rows, 6.279992697847032E7 cpu, 2.464638E7 io, 7614368.675216436 network, 4975475.867820999 memory}
         :  :                                      +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 3306.969220102733, cumulative cost = {2036716.3486221575 rows, 6.279992697847032E7 cpu, 2.464638E7 io, 7614368.675216436 network, 4975475.867820999 memory}
         :  :                                         :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 21989.461467351553, cumulative cost = {2033295.3794020547 rows, 6.2614435286731504E7 cpu, 2.4645696E7 io, 7613684.675216436 network, 4973423.867820999 memory}
         :  :                                         :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 21989.461467351553, cumulative cost = {2011305.9179347032 rows, 6.2262603903253876E7 cpu, 2.4645696E7 io, 7613684.675216436 network, 3566098.3339104997 memory}
         :  :                                         :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 21989.461467351553, cumulative cost = {1989316.4564673516 rows, 5.8392458685E7 cpu, 2.4645696E7 io, 7085937.6 network, 3566098.3339104997 memory}
         :  :                                         :        +- Union(all=[true], union=[X0, X1]): rowcount = 121308.285, cumulative cost = {1967326.995 rows, 5.6451526125E7 cpu, 2.4645696E7 io, 7085937.6 network, 2158772.8000000003 memory}
         :  :                                         :           :- Union(all=[true], union=[X0, X1]): rowcount = 121292.685, cumulative cost = {1845836.5100000002 rows, 5.632186584E7 cpu, 2.4644448E7 io, 7085373.6 network, 2157080.8000000003 memory}
         :  :                                         :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 82786.755, cumulative cost = {1390762.3650000002 rows, 5.4350981355000004E7 cpu, 1.8483084E7 io, 7085176.8 network, 2156851.2 memory}
         :  :                                         :           :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974179.2 rows, 5.2212924E7 cpu, 1.23216E7 io, 7084944.0 network, 2156336.0 memory}
         :  :                                         :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 44280.6, cumulative cost = {929898.6 rows, 5.2212924E7 cpu, 1.23216E7 io, 7084944.0 network, 2156336.0 memory}
         :  :                                         :           :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :                                         :           :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 38505.0, cumulative cost = {372220.0 rows, 6725860.0 cpu, 6160824.0 io, 924168.0 network, 56.0 memory}
         :  :                                         :           :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 38505.0, cumulative cost = {333715.0 rows, 257020.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :                                         :           :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295210.0 rows, 257020.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :                                         :           :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :                                         :           :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                                         :           :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                                         :           :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                         :           :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 38506.155, cumulative cost = {333796.41000000003 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :  :                                         :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 38506.155, cumulative cost = {295290.255 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :  :                                         :           :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
         :  :                                         :           :  :           +- Calc(select=[x0, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :                                         :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :                                         :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                         :           :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.93, cumulative cost = {333781.45999999996 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :  :                                         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.93, cumulative cost = {295275.52999999997 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :  :                                         :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :        +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :  :                                         :           :           +- Calc(select=[x, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :                                         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :                                         :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                         :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :                                         :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :                                         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                         :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :                                         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                                         +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :                                            +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 1485.9692727843437, cumulative cost = {5390210.951913922 rows, 1.814012748597676E8 cpu, 7.3936164E7 io, 2.2685733691659894E7 network, 1.2910498580036838E7 memory}
         :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], build=[right]): rowcount = 1485.9692727843437, cumulative cost = {5388724.982641138 rows, 1.814012748597676E8 cpu, 7.3936164E7 io, 2.2685733691659894E7 network, 1.2910498580036838E7 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9899.26181856229, cumulative cost = {5387168.413368355 rows, 1.8132864117467394E8 cpu, 7.3935576E7 io, 2.2685536891659893E7 network, 1.2910268980036838E7 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9899.26181856229, cumulative cost = {5377269.151549792 rows, 1.8117025298557696E8 cpu, 7.3935576E7 io, 2.2685536891659893E7 network, 1.2276716223648852E7 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9899.26181856229, cumulative cost = {5367369.889731229 rows, 1.7942798290551E8 cpu, 7.3935576E7 io, 2.2447954608014397E7 network, 1.2276716223648852E7 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 54610.81781192009, cumulative cost = {5357470.627912667 rows, 1.785542098205193E8 cpu, 7.3935576E7 io, 2.2447954608014397E7 network, 1.1643163467260865E7 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 10326.504608038007, cumulative cost = {3967862.2000914263 rows, 1.2383810867630154E8 cpu, 5.545122E7 io, 1.5332502739201952E7 network, 9339651.42388057 memory}
         :        :           :  :- Calc(select=[X0, X00 AS X1]): rowcount = 2275.994796622063, cumulative cost = {1795415.0758928033 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2275.994796622063, cumulative cost = {1793139.0810961812 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :           :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :           :  :     :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 165.56451835589723, cumulative cost = {355055.38392218563 rows, 917640.6140781399 cpu, 6162492.0 io, 30487.87137748509 network, 138677.72233036565 memory}
         :        :           :  :        +- Calc(select=[X0, X1]): rowcount = 165.56451835589723, cumulative cost = {354889.81940382975 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 165.56451835589723, cumulative cost = {354724.25488547387 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {354464.690367118 rows, 874800.1834955486 cpu, 6161928.0 io, 25950.322936943558 network, 136985.72233036565 memory}
         :        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1056.7634557059816, cumulative cost = {353407.926911412 rows, 857891.9682042529 cpu, 6161928.0 io, 25950.322936943558 network, 69352.86116518283 memory}
         :        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {352351.163455706 rows, 671901.6000000001 cpu, 6161928.0 io, 588.0 network, 69352.86116518283 memory}
         :        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5829.8, cumulative cost = {351294.39999999997 rows, 578624.8 cpu, 6161928.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 8050.509811415945, cumulative cost = {2162120.619590585 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], isBroadcast=[true], build=[left]): rowcount = 8050.509811415945, cumulative cost = {2154070.1097791693 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :        :           :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Calc(select=[x, X0]): rowcount = 38662.33128364844, cumulative cost = {695204.1634645888 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38662.33128364844, cumulative cost = {656541.8321809403 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :              +- Exchange(distribution=[broadcast]): rowcount = 1049.8752243229449, cumulative cost = {361180.5008972919 rows, 769749.2789616765 cpu, 6162120.0 io, 50490.01076750136 network, 134496.02871333694 memory}
         :        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :        :           :                             :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :        :           :                             :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :           :                             :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :           :                             :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :                             :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :                             :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :                             :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                             :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                             :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                             :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                             :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :                             :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :                             :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :           :                             :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                             :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                             +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 44284.313203882084, cumulative cost = {1334997.6100093203 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 44284.313203882084, cumulative cost = {1290713.2968054381 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 38529.75469254726, cumulative cost = {733030.983601556 rows, 9174228.288865468 cpu, 1.232358E7 io, 954675.8688124476 network, 145845.7805976497 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 38529.75469254726, cumulative cost = {694501.2289090088 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.75469254726, cumulative cost = {655971.4742164615 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 166.03128364844173, cumulative cost = {360742.7195239143 rows, 646309.2502483395 cpu, 6162804.0 io, 29961.75619131328 network, 136548.02871333694 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 166.03128364844173, cumulative cost = {360576.6882402658 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.03128364844173, cumulative cost = {360410.6569566174 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 1653.9859729860166, cumulative cost = {1.0733445292730566E7 rows, 3.330078801312034E8 cpu, 1.4171088E8 io, 4.0375865948925406E7 network, 2.7435107768978287E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1653.9859729860166, cumulative cost = {1.073179130675758E7 rows, 3.330078801312034E8 cpu, 1.4171088E8 io, 4.0375865948925406E7 network, 2.7435107768978287E7 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9706.568828374266, cumulative cost = {5424154.807928408 rows, 1.8579370140599713E8 cpu, 7.3935204E7 io, 2.3013765198639687E7 network, 1.3588654252744045E7 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9706.568828374266, cumulative cost = {5414448.239100033 rows, 1.8563839630474314E8 cpu, 7.3935204E7 io, 2.3013765198639687E7 network, 1.2967433847728092E7 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9706.568828374266, cumulative cost = {5404741.670271659 rows, 1.8393004019094926E8 cpu, 7.3935204E7 io, 2.2780807546758704E7 network, 1.2967433847728092E7 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 53547.79695504566, cumulative cost = {5395035.101443285 rows, 1.8307327543966854E8 cpu, 7.3935204E7 io, 2.2780807546758704E7 network, 1.234621344271214E7 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 52335.05518721536, cumulative cost = {3538259.6942116767 rows, 1.1949183709647769E8 cpu, 4.9290264E7 io, 1.4973704308720727E7 network, 7423046.363566561 memory}
               :           :  :- Calc(select=[x AS X0, X1]): rowcount = 44284.343487175654, cumulative cost = {1329397.1324974215 rows, 5.493713043960676E7 cpu, 1.8484404E7 io, 7116316.364184562 network, 2306715.2428445946 memory}
               :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 44284.343487175654, cumulative cost = {1285112.7890102458 rows, 5.493713043960676E7 cpu, 1.8484404E7 io, 7116316.364184562 network, 2306715.2428445946 memory}
               :           :  :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :     +- Exchange(distribution=[hash[x]]): rowcount = 38529.95658117102, cumulative cost = {727430.4455230703 rows, 9449866.786957398 cpu, 1.2323628E7 io, 955540.3641845626 network, 149037.67429901776 memory}
               :           :  :        +- Calc(select=[x, X1]): rowcount = 38529.95658117102, cumulative cost = {688900.4889418993 rows, 2976834.081320666 cpu, 1.2323628E7 io, 30821.40623645814 network, 149037.67429901776 memory}
               :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.95658117102, cumulative cost = {650370.5323607282 rows, 2976834.081320666 cpu, 1.2323628E7 io, 30821.40623645814 network, 149037.67429901776 memory}
               :           :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 167.37720780683773, cumulative cost = {355141.5757795572 rows, 921903.063658211 cpu, 6162852.0 io, 30821.40623645814 network, 139664.55066183486 memory}
               :           :  :                 +- Calc(select=[X0, X1]): rowcount = 167.37720780683773, cumulative cost = {354974.19857175037 rows, 895122.710409117 cpu, 6162852.0 io, 26804.353249094034 network, 139664.55066183486 memory}
               :           :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 167.37720780683773, cumulative cost = {354806.8213639435 rows, 895122.710409117 cpu, 6162852.0 io, 26804.353249094034 network, 139664.55066183486 memory}
               :           :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :           :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :           :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :           :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :           :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :                       +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[X0, X10 AS X1]): rowcount = 8050.711700039704, cumulative cost = {2156527.50652704 rows, 6.45023716016837E7 cpu, 3.080586E7 io, 7857387.944536165 network, 5116331.120721966 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left]): rowcount = 8050.711700039704, cumulative cost = {2148476.7948270002 rows, 6.45023716016837E7 cpu, 3.080586E7 io, 7857387.944536165 network, 5116331.120721966 memory}
               :           :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
               :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
               :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
               :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
               :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
               :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :           :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :        +- Calc(select=[x, X1]): rowcount = 38663.67720780684, cumulative cost = {689610.6466237959 rows, 3108554.398736411 cpu, 1.2322944E7 io, 51532.70649818807 network, 196908.0415763876 memory}
               :           :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38663.67720780684, cumulative cost = {650946.969415989 rows, 3108554.398736411 cpu, 1.2322944E7 io, 51532.70649818807 network, 196908.0415763876 memory}
               :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :              +- Exchange(distribution=[broadcast]): rowcount = 1058.8480520455848, cumulative cost = {355584.2922081822 rows, 1046491.614320046 cpu, 6162168.0 io, 51532.70649818807 network, 137612.55066183486 memory}
               :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :           :                             :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :                             :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :                             :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :                             :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :                             :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                             :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :                             :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :                             :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :                             +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, y AS X1]): rowcount = 1212.7417678303016, cumulative cost = {1803227.6102765624 rows, 6.3527890546235785E7 cpu, 2.464494E7 io, 7807103.238037977 network, 4923167.079145579 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[X0, y, x], isBroadcast=[true], build=[right]): rowcount = 1212.7417678303016, cumulative cost = {1802014.8685087322 rows, 6.3527890546235785E7 cpu, 2.464494E7 io, 7807103.238037977 network, 4923167.079145579 memory}
               :                 :- Calc(select=[X0, y]): rowcount = 8027.945118868678, cumulative cost = {1800688.126740902 rows, 6.3454090985284835E7 cpu, 2.4644256E7 io, 7806419.238037977 network, 4921115.079145579 memory}
               :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[left]): rowcount = 8027.945118868678, cumulative cost = {1792660.1816220332 rows, 6.3454090985284835E7 cpu, 2.4644256E7 io, 7806419.238037977 network, 4921115.079145579 memory}
               :                 :     :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
               :                 :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
               :                 :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
               :                 :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
               :                 :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
               :                 :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                 :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                 :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                 :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                 :     :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :     +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :        +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :           +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 1320.0043248658453, cumulative cost = {5305982.512856186 rows, 1.4712596613998038E8 cpu, 6.7775676E7 io, 1.7362100750285715E7 network, 1.3772533274041753E7 memory}
                  +- Calc(select=[X0, X1]): rowcount = 1320.0043248658453, cumulative cost = {5304662.508531321 rows, 1.4691476544800183E8 cpu, 6.7775676E7 io, 1.7330420646488935E7 network, 1.3772533274041753E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1320.0043248658453, cumulative cost = {5303342.504206455 rows, 1.4691476544800183E8 cpu, 6.7775676E7 io, 1.7330420646488935E7 network, 1.3772533274041753E7 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8743.02883243897, cumulative cost = {5301908.49988159 rows, 1.4683524521734232E8 cpu, 6.7774992E7 io, 1.7329736646488935E7 network, 1.3770481274041753E7 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8743.02883243897, cumulative cost = {5293165.47104915 rows, 1.466953567560233E8 cpu, 6.7774992E7 io, 1.7329736646488935E7 network, 1.3210927428765658E7 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8743.02883243897, cumulative cost = {5284422.442216711 rows, 1.4515658368151402E8 cpu, 6.7774992E7 io, 1.71199039545104E7 network, 1.3210927428765658E7 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 48232.27867328323, cumulative cost = {5275679.413384272 rows, 1.4438486722274148E8 cpu, 6.7774992E7 io, 1.71199039545104E7 network, 1.2651373583489563E7 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 9231.38329026783, cumulative cost = {2849416.0568825947 rows, 7.892754513662064E7 cpu, 3.6967836E7 io, 9426168.018011495 network, 7490707.439342812 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 9231.38329026783, cumulative cost = {2840184.6735923267 rows, 7.892754513662064E7 cpu, 3.6967836E7 io, 9426168.018011495 network, 7490707.439342812 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 21989.461467351553, cumulative cost = {2055284.8408694062 rows, 6.630866481324656E7 cpu, 2.4645696E7 io, 8141431.750432873 network, 4973423.867820999 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 21989.461467351553, cumulative cost = {2033295.3794020547 rows, 6.2614435286731504E7 cpu, 2.4645696E7 io, 7613684.675216436 network, 4973423.867820999 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 21989.461467351553, cumulative cost = {2011305.9179347032 rows, 6.2262603903253876E7 cpu, 2.4645696E7 io, 7613684.675216436 network, 3566098.3339104997 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 21989.461467351553, cumulative cost = {1989316.4564673516 rows, 5.8392458685E7 cpu, 2.4645696E7 io, 7085937.6 network, 3566098.3339104997 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 121308.285, cumulative cost = {1967326.995 rows, 5.6451526125E7 cpu, 2.4645696E7 io, 7085937.6 network, 2158772.8000000003 memory}
                        :           :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 121292.685, cumulative cost = {1845836.5100000002 rows, 5.632186584E7 cpu, 2.4644448E7 io, 7085373.6 network, 2157080.8000000003 memory}
                        :           :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 82786.755, cumulative cost = {1390762.3650000002 rows, 5.4350981355000004E7 cpu, 1.8483084E7 io, 7085176.8 network, 2156851.2 memory}
                        :           :     :              :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974179.2 rows, 5.2212924E7 cpu, 1.23216E7 io, 7084944.0 network, 2156336.0 memory}
                        :           :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 44280.6, cumulative cost = {929898.6 rows, 5.2212924E7 cpu, 1.23216E7 io, 7084944.0 network, 2156336.0 memory}
                        :           :     :              :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                        :           :     :              :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 38505.0, cumulative cost = {372220.0 rows, 6725860.0 cpu, 6160824.0 io, 924168.0 network, 56.0 memory}
                        :           :     :              :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 38505.0, cumulative cost = {333715.0 rows, 257020.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
                        :           :     :              :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295210.0 rows, 257020.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
                        :           :     :              :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
                        :           :     :              :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 38506.155, cumulative cost = {333796.41000000003 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
                        :           :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 38506.155, cumulative cost = {295290.255 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
                        :           :     :              :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
                        :           :     :              :  :           +- Calc(select=[x0, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.93, cumulative cost = {333781.45999999996 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
                        :           :     :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.93, cumulative cost = {295275.52999999997 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
                        :           :     :              :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :        +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
                        :           :     :              :           +- Calc(select=[x, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                        :           :     :                    :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 39553.09380110065, cumulative cost = {775668.4494326526 rows, 1.2126539881226461E7 cpu, 1.232214E7 io, 1284736.2675786226 network, 1285873.7293501266 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
                        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 39000.895383015406, cumulative cost = {2378031.077828394 rows, 6.5409089807447575E7 cpu, 3.0807156E7 io, 7693735.936498902 network, 5160666.144146752 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39000.895383015406, cumulative cost = {2339030.1824453785 rows, 6.5409089807447575E7 cpu, 3.0807156E7 io, 7693735.936498902 network, 5160666.144146752 memory}
                        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 3306.969220102733, cumulative cost = {2043330.287062363 rows, 6.332904205368675E7 cpu, 2.464638E7 io, 7693735.936498902 network, 4975475.867820999 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 3306.969220102733, cumulative cost = {2040023.3178422602 rows, 6.279992697847032E7 cpu, 2.464638E7 io, 7614368.675216436 network, 4975475.867820999 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 3306.969220102733, cumulative cost = {2036716.3486221575 rows, 6.279992697847032E7 cpu, 2.464638E7 io, 7614368.675216436 network, 4975475.867820999 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 21989.461467351553, cumulative cost = {2033295.3794020547 rows, 6.2614435286731504E7 cpu, 2.4645696E7 io, 7613684.675216436 network, 4973423.867820999 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 21989.461467351553, cumulative cost = {2011305.9179347032 rows, 6.2262603903253876E7 cpu, 2.4645696E7 io, 7613684.675216436 network, 3566098.3339104997 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 21989.461467351553, cumulative cost = {1989316.4564673516 rows, 5.8392458685E7 cpu, 2.4645696E7 io, 7085937.6 network, 3566098.3339104997 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 121308.285, cumulative cost = {1967326.995 rows, 5.6451526125E7 cpu, 2.4645696E7 io, 7085937.6 network, 2158772.8000000003 memory}
                        :                          :           :- Union(all=[true], union=[X0, X1]): rowcount = 121292.685, cumulative cost = {1845836.5100000002 rows, 5.632186584E7 cpu, 2.4644448E7 io, 7085373.6 network, 2157080.8000000003 memory}
                        :                          :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 82786.755, cumulative cost = {1390762.3650000002 rows, 5.4350981355000004E7 cpu, 1.8483084E7 io, 7085176.8 network, 2156851.2 memory}
                        :                          :           :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974179.2 rows, 5.2212924E7 cpu, 1.23216E7 io, 7084944.0 network, 2156336.0 memory}
                        :                          :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 44280.6, cumulative cost = {929898.6 rows, 5.2212924E7 cpu, 1.23216E7 io, 7084944.0 network, 2156336.0 memory}
                        :                          :           :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                        :                          :           :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 38505.0, cumulative cost = {372220.0 rows, 6725860.0 cpu, 6160824.0 io, 924168.0 network, 56.0 memory}
                        :                          :           :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 38505.0, cumulative cost = {333715.0 rows, 257020.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
                        :                          :           :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295210.0 rows, 257020.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
                        :                          :           :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
                        :                          :           :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 38506.155, cumulative cost = {333796.41000000003 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
                        :                          :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 38506.155, cumulative cost = {295290.255 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
                        :                          :           :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
                        :                          :           :  :           +- Calc(select=[x0, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.93, cumulative cost = {333781.45999999996 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
                        :                          :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.93, cumulative cost = {295275.52999999997 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
                        :                          :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :        +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
                        :                          :           :           +- Calc(select=[x, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
                        :                          :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :                          :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                        :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,1,0,1,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left])\n:  :     :- [#2] Exchange(distribution=[broadcast])\n:  :     +- Calc(select=[x, X1])\n:  :        +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:  :           :- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :           +- [#7] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], build=[right])\n:        :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#5] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[20])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[6])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[1,0,2,0,3,2,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[x0 AS X0, y AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y, x0, y00], build=[right])\n:  :  :     :- [#5] Exchange(distribution=[hash[x]])\n:  :  :     +- [#6] Exchange(distribution=[hash[y00]])\n:  :  +- Calc(select=[x AS X0, y0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])\n:  :        :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:  :        +- [#8] Exchange(distribution=[broadcast])\n:  +- Calc(select=[x0 AS X0, y AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])\n:        :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0], isBroadcast=[true], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[5])
         :        :           :              :- Exchange(distribution=[broadcast])(reuse_id=[8])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[1])
         :        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[2])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[x, y])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])
         :        :           :              :        :- Reused(reference_id=[1])
         :        :           :              :        +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :        :           :              :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[4])
         :        :           :              :- Exchange(distribution=[hash[x]])
         :        :           :              :  +- Reused(reference_id=[2])
         :        :           :              :- Exchange(distribution=[hash[y00]])
         :        :           :              :  +- Calc(select=[x, y0 AS y00])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :              :        :- Reused(reference_id=[2])
         :        :           :              :        +- Exchange(distribution=[broadcast])
         :        :           :              :           +- Calc(select=[x, y0])
         :        :           :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[left])
         :        :           :              :                 :- Reused(reference_id=[3])
         :        :           :              :                 +- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :                    +- Reused(reference_id=[4])
         :        :           :              :- Reused(reference_id=[2])
         :        :           :              +- Exchange(distribution=[broadcast])
         :        :           :                 +- Calc(select=[x0, y])
         :        :           :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])
         :        :           :                       :- Reused(reference_id=[5])
         :        :           :                       +- Reused(reference_id=[3])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :           :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :        :  +- Reused(reference_id=[2])
         :        :           :        +- Exchange(distribution=[broadcast])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[12])
         :        :           :                       :  +- Reused(reference_id=[1])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[10])
         :        :           :                             :- Reused(reference_id=[2])
         :        :           :                             +- Reused(reference_id=[3])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[2])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[6])
         :        :                    +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :                       +- Reused(reference_id=[5])
         :        +- Reused(reference_id=[7])
         :- Exchange(distribution=[broadcast])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], isBroadcast=[true], build=[left])\n:        :- [#5] Exchange(distribution=[broadcast])\n:        +- Calc(select=[x, X0])\n:           +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:              :- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:              +- [#7] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[9])
         :              :  +- Reused(reference_id=[2])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[2])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[14])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Calc(select=[y, x0])(reuse_id=[17])
         :              :                 :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :              :                 :           :  :     :- Reused(reference_id=[2])
         :              :                 :           :  :     +- Reused(reference_id=[3])
         :              :                 :           :  :- Reused(reference_id=[3])
         :              :                 :           :  :- Reused(reference_id=[5])
         :              :                 :           :  +- Reused(reference_id=[3])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[16])
         :              :                 :                 :- Reused(reference_id=[1])
         :              :                 :                 +- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[7])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[13])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :           :- Reused(reference_id=[2])
         :              :           :- Reused(reference_id=[8])
         :              :           :- Reused(reference_id=[9])
         :              :           +- Exchange(distribution=[hash[x]])
         :              :              +- Calc(select=[x, y0])(reuse_id=[11])
         :              :                 +- Reused(reference_id=[10])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[8])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[11])
         :              :                 :     +- Reused(reference_id=[8])
         :              :                 +- Reused(reference_id=[12])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[18])
         :              :  +- Reused(reference_id=[13])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[2])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Reused(reference_id=[14])
         :- Reused(reference_id=[15])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[x, x0])
         :     +- Reused(reference_id=[16])
         :- Exchange(distribution=[hash[X0, X1]])
         :  +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :     +- MultipleInput(readOrder=[0,1,0,1,1,2,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#2] Exchange(distribution=[hash[y]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left])\n:        :- [#4] Exchange(distribution=[broadcast])\n:        +- Calc(select=[x, X1])\n:           +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:              :- [#7] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:              +- [#8] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[X0, y, x], isBroadcast=[true], build=[right])\n      :- Calc(select=[X0, y])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], isBroadcast=[true], build=[left])\n      :     :- [#4] Exchange(distribution=[broadcast])\n      :     +- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[7])
         :        :- Reused(reference_id=[9])
         :        :- Exchange(distribution=[hash[x]])
         :        :  +- Calc(select=[x, X1])
         :        :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :        :  +- Reused(reference_id=[2])
         :        :        +- Exchange(distribution=[broadcast])
         :        :           +- Calc(select=[X0, X1])
         :        :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :        :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :                 :        +- Union(all=[true], union=[X0, X1])
         :        :                 :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :        :                 :           :     :- Reused(reference_id=[17])
         :        :                 :           :     +- Reused(reference_id=[7])
         :        :                 :           +- Calc(select=[x AS X0, x AS X1])
         :        :                 :              +- Reused(reference_id=[5])
         :        :                 +- Reused(reference_id=[7])
         :        :- Reused(reference_id=[18])
         :        :- Reused(reference_id=[18])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Calc(select=[x, y])
         :        :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :        :        :- Reused(reference_id=[2])
         :        :        +- Reused(reference_id=[8])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[2])
         :        +- Exchange(distribution=[broadcast])
         :           +- Reused(reference_id=[19])
         :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[2])
         +- Exchange(distribution=[broadcast])
            +- Reused(reference_id=[20])

Job has been submitted with JobID 7e7c42ceee0d50f12394d0648ccfe430
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, r_3.y AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x UNION (SELECT r_0.x AS X0, s_1.y AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x) UNION (SELECT b_0.x AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN s AS s_1 ON b_0.x = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x) UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: a72eb7a7_b273_40af_928b_0e74c6725707

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, r_3.y AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN s AS s_2 ON s_1.y = s_2.x
                      INNER JOIN r AS r_3 ON s_2.y = r_3.x
             UNION
             (SELECT r_0.x AS X0, s_1.y AS X1
              FROM r AS r_0
                       INNER JOIN s AS s_1 ON r_0.y = s_1.x
                       INNER JOIN a AS a_2 ON s_1.y = a_2.x)
             UNION
             (SELECT b_0.x AS X0, r_2.y AS X1
              FROM b AS b_0
                       INNER JOIN s AS s_1 ON b_0.x = s_1.x
                       INNER JOIN r AS r_2 ON s_1.y = r_2.x)
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1
              FROM b AS b_0
                       INNER JOIN a AS a_1 ON b_0.x = a_1.x)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0)
            UNION
            (SELECT p19_0.X0 AS X0, r_2.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)),
     p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1
             FROM p19 AS p19_0
                      INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1
                      INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalUnion(all=[false])
   :  :        :        :  :- LogicalUnion(all=[false])
   :  :        :        :  :  :- LogicalProject(X0=[$0], X1=[$7])
   :  :        :        :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :        :        :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :        :        :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalUnion(all=[false])
   :  :              :  :  :  :- LogicalUnion(all=[false])
   :  :              :  :  :  :  :- LogicalProject(X0=[$0], X1=[$7])
   :  :              :  :  :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :              :  :  :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :              :  :  :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  +- LogicalUnion(all=[false])
   :        :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalUnion(all=[false])
         :     :        :  :- LogicalUnion(all=[false])
         :     :        :  :  :- LogicalProject(X0=[$0], X1=[$7])
         :     :        :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :     :        :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :     :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        :  +- LogicalProject(X0=[$0], X1=[$4])
         :     :        :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
         :     :        :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalUnion(all=[false])
         :           :  :  :  :- LogicalUnion(all=[false])
         :           :  :  :  :  :- LogicalProject(X0=[$0], X1=[$7])
         :           :  :  :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :           :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :           :  :  :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
         :           :  :  :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1920.9628080377838, cumulative cost = {2.7207925209823895E7 rows, 8.486349907431357E8 cpu, 3.63518388E8 io, 1.0357039126175107E8 network, 6.831620811897863E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 1920.9628080377838, cumulative cost = {2.7206004247015856E7 rows, 8.486042553382071E8 cpu, 3.63518388E8 io, 1.0357039126175107E8 network, 6.819326649926421E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1920.9628080377838, cumulative cost = {2.7204083284207817E7 rows, 8.482661658839924E8 cpu, 3.63518388E8 io, 1.0352428815435816E8 network, 6.819326649926421E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 10597.29016728458, cumulative cost = {2.7202162321399778E7 rows, 8.480966092413158E8 cpu, 3.63518388E8 io, 1.0352428815435816E8 network, 6.807032487954979E7 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 8943.304194298564, cumulative cost = {1.6458119738501929E7 rows, 5.150781318199452E8 cpu, 2.21807508E8 io, 6.314842220543276E7 network, 4.06352171105715E7 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 7457.33492151422, cumulative cost = {1.1058965482393708E7 rows, 3.336679136559834E8 cpu, 1.47871344E8 io, 4.046268851377286E7 network, 2.7724718530534662E7 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left]): rowcount = 7457.33492151422, cumulative cost = {1.1051508147472193E7 rows, 3.336679136559834E8 cpu, 1.47871344E8 io, 4.046268851377286E7 network, 2.7724718530534662E7 memory}
         :  :     :- Exchange(distribution=[broadcast]): rowcount = 9899.26181856229, cumulative cost = {5397067.675186917 rows, 1.829125230656439E8 cpu, 7.3935576E7 io, 2.292311917530539E7 network, 1.2910268980036838E7 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9899.26181856229, cumulative cost = {5387168.413368355 rows, 1.8132864117467394E8 cpu, 7.3935576E7 io, 2.2685536891659893E7 network, 1.2910268980036838E7 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9899.26181856229, cumulative cost = {5377269.151549792 rows, 1.8117025298557696E8 cpu, 7.3935576E7 io, 2.2685536891659893E7 network, 1.2276716223648852E7 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9899.26181856229, cumulative cost = {5367369.889731229 rows, 1.7942798290551E8 cpu, 7.3935576E7 io, 2.2447954608014397E7 network, 1.2276716223648852E7 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 54610.81781192009, cumulative cost = {5357470.627912667 rows, 1.785542098205193E8 cpu, 7.3935576E7 io, 2.2447954608014397E7 network, 1.1643163467260865E7 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 10326.504608038007, cumulative cost = {3967862.2000914263 rows, 1.2383810867630154E8 cpu, 5.545122E7 io, 1.5332502739201952E7 network, 9339651.42388057 memory}
         :  :     :              :  :- Calc(select=[X0, X00 AS X1]): rowcount = 2275.994796622063, cumulative cost = {1795415.0758928033 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :  :     :              :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2275.994796622063, cumulative cost = {1793139.0810961812 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :  :     :              :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :     :              :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :     :              :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :     :              :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :     :              :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :              :  :     :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     +- Exchange(distribution=[broadcast]): rowcount = 165.56451835589723, cumulative cost = {355055.38392218563 rows, 917640.6140781399 cpu, 6162492.0 io, 30487.87137748509 network, 138677.72233036565 memory}
         :  :     :              :  :        +- Calc(select=[X0, X1]): rowcount = 165.56451835589723, cumulative cost = {354889.81940382975 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :  :     :              :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 165.56451835589723, cumulative cost = {354724.25488547387 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :  :     :              :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {354464.690367118 rows, 874800.1834955486 cpu, 6161928.0 io, 25950.322936943558 network, 136985.72233036565 memory}
         :  :     :              :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1056.7634557059816, cumulative cost = {353407.926911412 rows, 857891.9682042529 cpu, 6161928.0 io, 25950.322936943558 network, 69352.86116518283 memory}
         :  :     :              :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {352351.163455706 rows, 671901.6000000001 cpu, 6161928.0 io, 588.0 network, 69352.86116518283 memory}
         :  :     :              :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5829.8, cumulative cost = {351294.39999999997 rows, 578624.8 cpu, 6161928.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 8050.509811415945, cumulative cost = {2162120.619590585 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], isBroadcast=[true], build=[left]): rowcount = 8050.509811415945, cumulative cost = {2154070.1097791693 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :  :     :              :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Calc(select=[x, X0]): rowcount = 38662.33128364844, cumulative cost = {695204.1634645888 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :  :     :              :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38662.33128364844, cumulative cost = {656541.8321809403 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :  :     :              :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1049.8752243229449, cumulative cost = {361180.5008972919 rows, 769749.2789616765 cpu, 6162120.0 io, 50490.01076750136 network, 134496.02871333694 memory}
         :  :     :              :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :     :              :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :     :              :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :     :              :                          +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :     :              :                             :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :     :              :                             :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :                             :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :                             :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                             :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                             :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                             :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                             :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                             :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                             :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                             :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                             :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                             :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                             :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                             :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                             +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 44284.313203882084, cumulative cost = {1334997.6100093203 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 44284.313203882084, cumulative cost = {1290713.2968054381 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 38529.75469254726, cumulative cost = {733030.983601556 rows, 9174228.288865468 cpu, 1.232358E7 io, 954675.8688124476 network, 145845.7805976497 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 38529.75469254726, cumulative cost = {694501.2289090088 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.75469254726, cumulative cost = {655971.4742164615 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 166.03128364844173, cumulative cost = {360742.7195239143 rows, 646309.2502483395 cpu, 6162804.0 io, 29961.75619131328 network, 136548.02871333694 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 166.03128364844173, cumulative cost = {360576.6882402658 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.03128364844173, cumulative cost = {360410.6569566174 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     +- Calc(select=[x, X1]): rowcount = 39816.30432486584, cumulative cost = {5646983.137363762 rows, 1.5035766606119207E8 cpu, 7.3935768E7 io, 1.753956933846747E7 network, 1.4260090888658335E7 memory}
         :  :        +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39816.30432486584, cumulative cost = {5607166.833038895 rows, 1.5035766606119207E8 cpu, 7.3935768E7 io, 1.753956933846747E7 network, 1.4260090888658335E7 memory}
         :  :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           +- Exchange(distribution=[broadcast]): rowcount = 8743.02883243897, cumulative cost = {5310651.528714029 rows, 1.4823412983053255E8 cpu, 6.7774992E7 io, 1.753956933846747E7 network, 1.3770481274041753E7 memory}
         :  :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8743.02883243897, cumulative cost = {5301908.49988159 rows, 1.4683524521734232E8 cpu, 6.7774992E7 io, 1.7329736646488935E7 network, 1.3770481274041753E7 memory}
         :  :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8743.02883243897, cumulative cost = {5293165.47104915 rows, 1.466953567560233E8 cpu, 6.7774992E7 io, 1.7329736646488935E7 network, 1.3210927428765658E7 memory}
         :  :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8743.02883243897, cumulative cost = {5284422.442216711 rows, 1.4515658368151402E8 cpu, 6.7774992E7 io, 1.71199039545104E7 network, 1.3210927428765658E7 memory}
         :  :                       +- Union(all=[true], union=[X0, X1]): rowcount = 48232.27867328323, cumulative cost = {5275679.413384272 rows, 1.4438486722274148E8 cpu, 6.7774992E7 io, 1.71199039545104E7 network, 1.2651373583489563E7 memory}
         :  :                          :- Calc(select=[X10 AS X0, X1]): rowcount = 9231.38329026783, cumulative cost = {2849416.0568825947 rows, 7.892754513662064E7 cpu, 3.6967836E7 io, 9426168.018011495 network, 7490707.439342812 memory}
         :  :                          :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 9231.38329026783, cumulative cost = {2840184.6735923267 rows, 7.892754513662064E7 cpu, 3.6967836E7 io, 9426168.018011495 network, 7490707.439342812 memory}
         :  :                          :     :- Exchange(distribution=[hash[X0]]): rowcount = 21989.461467351553, cumulative cost = {2055284.8408694062 rows, 6.630866481324656E7 cpu, 2.4645696E7 io, 8141431.750432873 network, 4973423.867820999 memory}
         :  :                          :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 21989.461467351553, cumulative cost = {2033295.3794020547 rows, 6.2614435286731504E7 cpu, 2.4645696E7 io, 7613684.675216436 network, 4973423.867820999 memory}
         :  :                          :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 21989.461467351553, cumulative cost = {2011305.9179347032 rows, 6.2262603903253876E7 cpu, 2.4645696E7 io, 7613684.675216436 network, 3566098.3339104997 memory}
         :  :                          :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 21989.461467351553, cumulative cost = {1989316.4564673516 rows, 5.8392458685E7 cpu, 2.4645696E7 io, 7085937.6 network, 3566098.3339104997 memory}
         :  :                          :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 121308.285, cumulative cost = {1967326.995 rows, 5.6451526125E7 cpu, 2.4645696E7 io, 7085937.6 network, 2158772.8000000003 memory}
         :  :                          :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 121292.685, cumulative cost = {1845836.5100000002 rows, 5.632186584E7 cpu, 2.4644448E7 io, 7085373.6 network, 2157080.8000000003 memory}
         :  :                          :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 82786.755, cumulative cost = {1390762.3650000002 rows, 5.4350981355000004E7 cpu, 1.8483084E7 io, 7085176.8 network, 2156851.2 memory}
         :  :                          :     :              :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974179.2 rows, 5.2212924E7 cpu, 1.23216E7 io, 7084944.0 network, 2156336.0 memory}
         :  :                          :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 44280.6, cumulative cost = {929898.6 rows, 5.2212924E7 cpu, 1.23216E7 io, 7084944.0 network, 2156336.0 memory}
         :  :                          :     :              :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :                          :     :              :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 38505.0, cumulative cost = {372220.0 rows, 6725860.0 cpu, 6160824.0 io, 924168.0 network, 56.0 memory}
         :  :                          :     :              :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 38505.0, cumulative cost = {333715.0 rows, 257020.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :                          :     :              :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295210.0 rows, 257020.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :                          :     :              :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :                          :     :              :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :              :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :              :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :              :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 38506.155, cumulative cost = {333796.41000000003 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :  :                          :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 38506.155, cumulative cost = {295290.255 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :  :                          :     :              :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
         :  :                          :     :              :  :           +- Calc(select=[x0, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :              :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :              :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :              :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.93, cumulative cost = {333781.45999999996 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :  :                          :     :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.93, cumulative cost = {295275.52999999997 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :  :                          :     :              :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :        +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :  :                          :     :              :           +- Calc(select=[x, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :                          :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :                          :     :                    :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :                          :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                          :     +- Exchange(distribution=[hash[y]]): rowcount = 39553.09380110065, cumulative cost = {775668.4494326526 rows, 1.2126539881226461E7 cpu, 1.232214E7 io, 1284736.2675786226 network, 1285873.7293501266 memory}
         :  :                          :        +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :                          :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :                          :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :              +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
         :  :                          :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
         :  :                          :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
         :  :                          :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
         :  :                          :                          +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
         :  :                          :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                          :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                          :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          +- Calc(select=[x AS X0, X1]): rowcount = 39000.895383015406, cumulative cost = {2378031.077828394 rows, 6.5409089807447575E7 cpu, 3.0807156E7 io, 7693735.936498902 network, 5160666.144146752 memory}
         :  :                             +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39000.895383015406, cumulative cost = {2339030.1824453785 rows, 6.5409089807447575E7 cpu, 3.0807156E7 io, 7693735.936498902 network, 5160666.144146752 memory}
         :  :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                +- Exchange(distribution=[broadcast]): rowcount = 3306.969220102733, cumulative cost = {2043330.287062363 rows, 6.332904205368675E7 cpu, 2.464638E7 io, 7693735.936498902 network, 4975475.867820999 memory}
         :  :                                   +- Calc(select=[X0, X1]): rowcount = 3306.969220102733, cumulative cost = {2040023.3178422602 rows, 6.279992697847032E7 cpu, 2.464638E7 io, 7614368.675216436 network, 4975475.867820999 memory}
         :  :                                      +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 3306.969220102733, cumulative cost = {2036716.3486221575 rows, 6.279992697847032E7 cpu, 2.464638E7 io, 7614368.675216436 network, 4975475.867820999 memory}
         :  :                                         :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 21989.461467351553, cumulative cost = {2033295.3794020547 rows, 6.2614435286731504E7 cpu, 2.4645696E7 io, 7613684.675216436 network, 4973423.867820999 memory}
         :  :                                         :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 21989.461467351553, cumulative cost = {2011305.9179347032 rows, 6.2262603903253876E7 cpu, 2.4645696E7 io, 7613684.675216436 network, 3566098.3339104997 memory}
         :  :                                         :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 21989.461467351553, cumulative cost = {1989316.4564673516 rows, 5.8392458685E7 cpu, 2.4645696E7 io, 7085937.6 network, 3566098.3339104997 memory}
         :  :                                         :        +- Union(all=[true], union=[X0, X1]): rowcount = 121308.285, cumulative cost = {1967326.995 rows, 5.6451526125E7 cpu, 2.4645696E7 io, 7085937.6 network, 2158772.8000000003 memory}
         :  :                                         :           :- Union(all=[true], union=[X0, X1]): rowcount = 121292.685, cumulative cost = {1845836.5100000002 rows, 5.632186584E7 cpu, 2.4644448E7 io, 7085373.6 network, 2157080.8000000003 memory}
         :  :                                         :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 82786.755, cumulative cost = {1390762.3650000002 rows, 5.4350981355000004E7 cpu, 1.8483084E7 io, 7085176.8 network, 2156851.2 memory}
         :  :                                         :           :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974179.2 rows, 5.2212924E7 cpu, 1.23216E7 io, 7084944.0 network, 2156336.0 memory}
         :  :                                         :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 44280.6, cumulative cost = {929898.6 rows, 5.2212924E7 cpu, 1.23216E7 io, 7084944.0 network, 2156336.0 memory}
         :  :                                         :           :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :                                         :           :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 38505.0, cumulative cost = {372220.0 rows, 6725860.0 cpu, 6160824.0 io, 924168.0 network, 56.0 memory}
         :  :                                         :           :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 38505.0, cumulative cost = {333715.0 rows, 257020.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :                                         :           :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295210.0 rows, 257020.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :                                         :           :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :                                         :           :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                                         :           :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                                         :           :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                         :           :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 38506.155, cumulative cost = {333796.41000000003 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :  :                                         :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 38506.155, cumulative cost = {295290.255 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :  :                                         :           :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
         :  :                                         :           :  :           +- Calc(select=[x0, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :                                         :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :                                         :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                         :           :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.93, cumulative cost = {333781.45999999996 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :  :                                         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.93, cumulative cost = {295275.52999999997 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :  :                                         :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :        +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :  :                                         :           :           +- Calc(select=[x, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :                                         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :                                         :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                         :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :                                         :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :                                         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                         :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :                                         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                                         +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :                                            +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 1485.9692727843437, cumulative cost = {5390210.951913922 rows, 1.814012748597676E8 cpu, 7.3936164E7 io, 2.2685733691659894E7 network, 1.2910498580036838E7 memory}
         :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], build=[right]): rowcount = 1485.9692727843437, cumulative cost = {5388724.982641138 rows, 1.814012748597676E8 cpu, 7.3936164E7 io, 2.2685733691659894E7 network, 1.2910498580036838E7 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9899.26181856229, cumulative cost = {5387168.413368355 rows, 1.8132864117467394E8 cpu, 7.3935576E7 io, 2.2685536891659893E7 network, 1.2910268980036838E7 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9899.26181856229, cumulative cost = {5377269.151549792 rows, 1.8117025298557696E8 cpu, 7.3935576E7 io, 2.2685536891659893E7 network, 1.2276716223648852E7 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9899.26181856229, cumulative cost = {5367369.889731229 rows, 1.7942798290551E8 cpu, 7.3935576E7 io, 2.2447954608014397E7 network, 1.2276716223648852E7 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 54610.81781192009, cumulative cost = {5357470.627912667 rows, 1.785542098205193E8 cpu, 7.3935576E7 io, 2.2447954608014397E7 network, 1.1643163467260865E7 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 10326.504608038007, cumulative cost = {3967862.2000914263 rows, 1.2383810867630154E8 cpu, 5.545122E7 io, 1.5332502739201952E7 network, 9339651.42388057 memory}
         :        :           :  :- Calc(select=[X0, X00 AS X1]): rowcount = 2275.994796622063, cumulative cost = {1795415.0758928033 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2275.994796622063, cumulative cost = {1793139.0810961812 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :           :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :           :  :     :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 165.56451835589723, cumulative cost = {355055.38392218563 rows, 917640.6140781399 cpu, 6162492.0 io, 30487.87137748509 network, 138677.72233036565 memory}
         :        :           :  :        +- Calc(select=[X0, X1]): rowcount = 165.56451835589723, cumulative cost = {354889.81940382975 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 165.56451835589723, cumulative cost = {354724.25488547387 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {354464.690367118 rows, 874800.1834955486 cpu, 6161928.0 io, 25950.322936943558 network, 136985.72233036565 memory}
         :        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1056.7634557059816, cumulative cost = {353407.926911412 rows, 857891.9682042529 cpu, 6161928.0 io, 25950.322936943558 network, 69352.86116518283 memory}
         :        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {352351.163455706 rows, 671901.6000000001 cpu, 6161928.0 io, 588.0 network, 69352.86116518283 memory}
         :        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5829.8, cumulative cost = {351294.39999999997 rows, 578624.8 cpu, 6161928.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 8050.509811415945, cumulative cost = {2162120.619590585 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], isBroadcast=[true], build=[left]): rowcount = 8050.509811415945, cumulative cost = {2154070.1097791693 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :        :           :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Calc(select=[x, X0]): rowcount = 38662.33128364844, cumulative cost = {695204.1634645888 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38662.33128364844, cumulative cost = {656541.8321809403 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :              +- Exchange(distribution=[broadcast]): rowcount = 1049.8752243229449, cumulative cost = {361180.5008972919 rows, 769749.2789616765 cpu, 6162120.0 io, 50490.01076750136 network, 134496.02871333694 memory}
         :        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :        :           :                             :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :        :           :                             :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :           :                             :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :           :                             :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :                             :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :                             :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :                             :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                             :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                             :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                             :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                             :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :                             :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :                             :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :           :                             :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                             :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                             +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 44284.313203882084, cumulative cost = {1334997.6100093203 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 44284.313203882084, cumulative cost = {1290713.2968054381 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 38529.75469254726, cumulative cost = {733030.983601556 rows, 9174228.288865468 cpu, 1.232358E7 io, 954675.8688124476 network, 145845.7805976497 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 38529.75469254726, cumulative cost = {694501.2289090088 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.75469254726, cumulative cost = {655971.4742164615 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 166.03128364844173, cumulative cost = {360742.7195239143 rows, 646309.2502483395 cpu, 6162804.0 io, 29961.75619131328 network, 136548.02871333694 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 166.03128364844173, cumulative cost = {360576.6882402658 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.03128364844173, cumulative cost = {360410.6569566174 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 1653.9859729860166, cumulative cost = {1.0733445292730566E7 rows, 3.330078801312034E8 cpu, 1.4171088E8 io, 4.0375865948925406E7 network, 2.7435107768978287E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1653.9859729860166, cumulative cost = {1.073179130675758E7 rows, 3.330078801312034E8 cpu, 1.4171088E8 io, 4.0375865948925406E7 network, 2.7435107768978287E7 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9706.568828374266, cumulative cost = {5424154.807928408 rows, 1.8579370140599713E8 cpu, 7.3935204E7 io, 2.3013765198639687E7 network, 1.3588654252744045E7 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9706.568828374266, cumulative cost = {5414448.239100033 rows, 1.8563839630474314E8 cpu, 7.3935204E7 io, 2.3013765198639687E7 network, 1.2967433847728092E7 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9706.568828374266, cumulative cost = {5404741.670271659 rows, 1.8393004019094926E8 cpu, 7.3935204E7 io, 2.2780807546758704E7 network, 1.2967433847728092E7 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 53547.79695504566, cumulative cost = {5395035.101443285 rows, 1.8307327543966854E8 cpu, 7.3935204E7 io, 2.2780807546758704E7 network, 1.234621344271214E7 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 52335.05518721536, cumulative cost = {3538259.6942116767 rows, 1.1949183709647769E8 cpu, 4.9290264E7 io, 1.4973704308720727E7 network, 7423046.363566561 memory}
               :           :  :- Calc(select=[x AS X0, X1]): rowcount = 44284.343487175654, cumulative cost = {1329397.1324974215 rows, 5.493713043960676E7 cpu, 1.8484404E7 io, 7116316.364184562 network, 2306715.2428445946 memory}
               :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 44284.343487175654, cumulative cost = {1285112.7890102458 rows, 5.493713043960676E7 cpu, 1.8484404E7 io, 7116316.364184562 network, 2306715.2428445946 memory}
               :           :  :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :     +- Exchange(distribution=[hash[x]]): rowcount = 38529.95658117102, cumulative cost = {727430.4455230703 rows, 9449866.786957398 cpu, 1.2323628E7 io, 955540.3641845626 network, 149037.67429901776 memory}
               :           :  :        +- Calc(select=[x, X1]): rowcount = 38529.95658117102, cumulative cost = {688900.4889418993 rows, 2976834.081320666 cpu, 1.2323628E7 io, 30821.40623645814 network, 149037.67429901776 memory}
               :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.95658117102, cumulative cost = {650370.5323607282 rows, 2976834.081320666 cpu, 1.2323628E7 io, 30821.40623645814 network, 149037.67429901776 memory}
               :           :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 167.37720780683773, cumulative cost = {355141.5757795572 rows, 921903.063658211 cpu, 6162852.0 io, 30821.40623645814 network, 139664.55066183486 memory}
               :           :  :                 +- Calc(select=[X0, X1]): rowcount = 167.37720780683773, cumulative cost = {354974.19857175037 rows, 895122.710409117 cpu, 6162852.0 io, 26804.353249094034 network, 139664.55066183486 memory}
               :           :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 167.37720780683773, cumulative cost = {354806.8213639435 rows, 895122.710409117 cpu, 6162852.0 io, 26804.353249094034 network, 139664.55066183486 memory}
               :           :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :           :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :           :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :           :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :           :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :                       +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[X0, X10 AS X1]): rowcount = 8050.711700039704, cumulative cost = {2156527.50652704 rows, 6.45023716016837E7 cpu, 3.080586E7 io, 7857387.944536165 network, 5116331.120721966 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left]): rowcount = 8050.711700039704, cumulative cost = {2148476.7948270002 rows, 6.45023716016837E7 cpu, 3.080586E7 io, 7857387.944536165 network, 5116331.120721966 memory}
               :           :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
               :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
               :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
               :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
               :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
               :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :           :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :        +- Calc(select=[x, X1]): rowcount = 38663.67720780684, cumulative cost = {689610.6466237959 rows, 3108554.398736411 cpu, 1.2322944E7 io, 51532.70649818807 network, 196908.0415763876 memory}
               :           :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38663.67720780684, cumulative cost = {650946.969415989 rows, 3108554.398736411 cpu, 1.2322944E7 io, 51532.70649818807 network, 196908.0415763876 memory}
               :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :              +- Exchange(distribution=[broadcast]): rowcount = 1058.8480520455848, cumulative cost = {355584.2922081822 rows, 1046491.614320046 cpu, 6162168.0 io, 51532.70649818807 network, 137612.55066183486 memory}
               :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :           :                             :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :                             :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :                             :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :                             :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :                             :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                             :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :                             :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :                             :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :                             +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, y AS X1]): rowcount = 1212.7417678303016, cumulative cost = {1803227.6102765624 rows, 6.3527890546235785E7 cpu, 2.464494E7 io, 7807103.238037977 network, 4923167.079145579 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[X0, y, x], isBroadcast=[true], build=[right]): rowcount = 1212.7417678303016, cumulative cost = {1802014.8685087322 rows, 6.3527890546235785E7 cpu, 2.464494E7 io, 7807103.238037977 network, 4923167.079145579 memory}
               :                 :- Calc(select=[X0, y]): rowcount = 8027.945118868678, cumulative cost = {1800688.126740902 rows, 6.3454090985284835E7 cpu, 2.4644256E7 io, 7806419.238037977 network, 4921115.079145579 memory}
               :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[left]): rowcount = 8027.945118868678, cumulative cost = {1792660.1816220332 rows, 6.3454090985284835E7 cpu, 2.4644256E7 io, 7806419.238037977 network, 4921115.079145579 memory}
               :                 :     :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
               :                 :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
               :                 :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
               :                 :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
               :                 :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
               :                 :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                 :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                 :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                 :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                 :     :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :     +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :        +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :           +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 1320.0043248658453, cumulative cost = {5305982.512856186 rows, 1.4712596613998038E8 cpu, 6.7775676E7 io, 1.7362100750285715E7 network, 1.3772533274041753E7 memory}
                  +- Calc(select=[X0, X1]): rowcount = 1320.0043248658453, cumulative cost = {5304662.508531321 rows, 1.4691476544800183E8 cpu, 6.7775676E7 io, 1.7330420646488935E7 network, 1.3772533274041753E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1320.0043248658453, cumulative cost = {5303342.504206455 rows, 1.4691476544800183E8 cpu, 6.7775676E7 io, 1.7330420646488935E7 network, 1.3772533274041753E7 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8743.02883243897, cumulative cost = {5301908.49988159 rows, 1.4683524521734232E8 cpu, 6.7774992E7 io, 1.7329736646488935E7 network, 1.3770481274041753E7 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8743.02883243897, cumulative cost = {5293165.47104915 rows, 1.466953567560233E8 cpu, 6.7774992E7 io, 1.7329736646488935E7 network, 1.3210927428765658E7 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8743.02883243897, cumulative cost = {5284422.442216711 rows, 1.4515658368151402E8 cpu, 6.7774992E7 io, 1.71199039545104E7 network, 1.3210927428765658E7 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 48232.27867328323, cumulative cost = {5275679.413384272 rows, 1.4438486722274148E8 cpu, 6.7774992E7 io, 1.71199039545104E7 network, 1.2651373583489563E7 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 9231.38329026783, cumulative cost = {2849416.0568825947 rows, 7.892754513662064E7 cpu, 3.6967836E7 io, 9426168.018011495 network, 7490707.439342812 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 9231.38329026783, cumulative cost = {2840184.6735923267 rows, 7.892754513662064E7 cpu, 3.6967836E7 io, 9426168.018011495 network, 7490707.439342812 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 21989.461467351553, cumulative cost = {2055284.8408694062 rows, 6.630866481324656E7 cpu, 2.4645696E7 io, 8141431.750432873 network, 4973423.867820999 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 21989.461467351553, cumulative cost = {2033295.3794020547 rows, 6.2614435286731504E7 cpu, 2.4645696E7 io, 7613684.675216436 network, 4973423.867820999 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 21989.461467351553, cumulative cost = {2011305.9179347032 rows, 6.2262603903253876E7 cpu, 2.4645696E7 io, 7613684.675216436 network, 3566098.3339104997 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 21989.461467351553, cumulative cost = {1989316.4564673516 rows, 5.8392458685E7 cpu, 2.4645696E7 io, 7085937.6 network, 3566098.3339104997 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 121308.285, cumulative cost = {1967326.995 rows, 5.6451526125E7 cpu, 2.4645696E7 io, 7085937.6 network, 2158772.8000000003 memory}
                        :           :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 121292.685, cumulative cost = {1845836.5100000002 rows, 5.632186584E7 cpu, 2.4644448E7 io, 7085373.6 network, 2157080.8000000003 memory}
                        :           :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 82786.755, cumulative cost = {1390762.3650000002 rows, 5.4350981355000004E7 cpu, 1.8483084E7 io, 7085176.8 network, 2156851.2 memory}
                        :           :     :              :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974179.2 rows, 5.2212924E7 cpu, 1.23216E7 io, 7084944.0 network, 2156336.0 memory}
                        :           :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 44280.6, cumulative cost = {929898.6 rows, 5.2212924E7 cpu, 1.23216E7 io, 7084944.0 network, 2156336.0 memory}
                        :           :     :              :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                        :           :     :              :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 38505.0, cumulative cost = {372220.0 rows, 6725860.0 cpu, 6160824.0 io, 924168.0 network, 56.0 memory}
                        :           :     :              :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 38505.0, cumulative cost = {333715.0 rows, 257020.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
                        :           :     :              :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295210.0 rows, 257020.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
                        :           :     :              :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
                        :           :     :              :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 38506.155, cumulative cost = {333796.41000000003 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
                        :           :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 38506.155, cumulative cost = {295290.255 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
                        :           :     :              :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
                        :           :     :              :  :           +- Calc(select=[x0, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.93, cumulative cost = {333781.45999999996 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
                        :           :     :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.93, cumulative cost = {295275.52999999997 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
                        :           :     :              :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :        +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
                        :           :     :              :           +- Calc(select=[x, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                        :           :     :                    :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 39553.09380110065, cumulative cost = {775668.4494326526 rows, 1.2126539881226461E7 cpu, 1.232214E7 io, 1284736.2675786226 network, 1285873.7293501266 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
                        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 39000.895383015406, cumulative cost = {2378031.077828394 rows, 6.5409089807447575E7 cpu, 3.0807156E7 io, 7693735.936498902 network, 5160666.144146752 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39000.895383015406, cumulative cost = {2339030.1824453785 rows, 6.5409089807447575E7 cpu, 3.0807156E7 io, 7693735.936498902 network, 5160666.144146752 memory}
                        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 3306.969220102733, cumulative cost = {2043330.287062363 rows, 6.332904205368675E7 cpu, 2.464638E7 io, 7693735.936498902 network, 4975475.867820999 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 3306.969220102733, cumulative cost = {2040023.3178422602 rows, 6.279992697847032E7 cpu, 2.464638E7 io, 7614368.675216436 network, 4975475.867820999 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 3306.969220102733, cumulative cost = {2036716.3486221575 rows, 6.279992697847032E7 cpu, 2.464638E7 io, 7614368.675216436 network, 4975475.867820999 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 21989.461467351553, cumulative cost = {2033295.3794020547 rows, 6.2614435286731504E7 cpu, 2.4645696E7 io, 7613684.675216436 network, 4973423.867820999 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 21989.461467351553, cumulative cost = {2011305.9179347032 rows, 6.2262603903253876E7 cpu, 2.4645696E7 io, 7613684.675216436 network, 3566098.3339104997 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 21989.461467351553, cumulative cost = {1989316.4564673516 rows, 5.8392458685E7 cpu, 2.4645696E7 io, 7085937.6 network, 3566098.3339104997 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 121308.285, cumulative cost = {1967326.995 rows, 5.6451526125E7 cpu, 2.4645696E7 io, 7085937.6 network, 2158772.8000000003 memory}
                        :                          :           :- Union(all=[true], union=[X0, X1]): rowcount = 121292.685, cumulative cost = {1845836.5100000002 rows, 5.632186584E7 cpu, 2.4644448E7 io, 7085373.6 network, 2157080.8000000003 memory}
                        :                          :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 82786.755, cumulative cost = {1390762.3650000002 rows, 5.4350981355000004E7 cpu, 1.8483084E7 io, 7085176.8 network, 2156851.2 memory}
                        :                          :           :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974179.2 rows, 5.2212924E7 cpu, 1.23216E7 io, 7084944.0 network, 2156336.0 memory}
                        :                          :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 44280.6, cumulative cost = {929898.6 rows, 5.2212924E7 cpu, 1.23216E7 io, 7084944.0 network, 2156336.0 memory}
                        :                          :           :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                        :                          :           :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 38505.0, cumulative cost = {372220.0 rows, 6725860.0 cpu, 6160824.0 io, 924168.0 network, 56.0 memory}
                        :                          :           :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 38505.0, cumulative cost = {333715.0 rows, 257020.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
                        :                          :           :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295210.0 rows, 257020.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
                        :                          :           :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
                        :                          :           :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 38506.155, cumulative cost = {333796.41000000003 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
                        :                          :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 38506.155, cumulative cost = {295290.255 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
                        :                          :           :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
                        :                          :           :  :           +- Calc(select=[x0, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.93, cumulative cost = {333781.45999999996 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
                        :                          :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.93, cumulative cost = {295275.52999999997 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
                        :                          :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :        +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
                        :                          :           :           +- Calc(select=[x, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
                        :                          :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :                          :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                        :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,1,0,1,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left])\n:  :     :- [#2] Exchange(distribution=[broadcast])\n:  :     +- Calc(select=[x, X1])\n:  :        +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:  :           :- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :           +- [#7] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], build=[right])\n:        :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#5] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[20])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[6])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[1,0,2,0,3,2,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[x0 AS X0, y AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y, x0, y00], build=[right])\n:  :  :     :- [#5] Exchange(distribution=[hash[x]])\n:  :  :     +- [#6] Exchange(distribution=[hash[y00]])\n:  :  +- Calc(select=[x AS X0, y0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])\n:  :        :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:  :        +- [#8] Exchange(distribution=[broadcast])\n:  +- Calc(select=[x0 AS X0, y AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])\n:        :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0], isBroadcast=[true], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[5])
         :        :           :              :- Exchange(distribution=[broadcast])(reuse_id=[8])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[1])
         :        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[2])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[x, y])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])
         :        :           :              :        :- Reused(reference_id=[1])
         :        :           :              :        +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :        :           :              :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[4])
         :        :           :              :- Exchange(distribution=[hash[x]])
         :        :           :              :  +- Reused(reference_id=[2])
         :        :           :              :- Exchange(distribution=[hash[y00]])
         :        :           :              :  +- Calc(select=[x, y0 AS y00])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :              :        :- Reused(reference_id=[2])
         :        :           :              :        +- Exchange(distribution=[broadcast])
         :        :           :              :           +- Calc(select=[x, y0])
         :        :           :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[left])
         :        :           :              :                 :- Reused(reference_id=[3])
         :        :           :              :                 +- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :                    +- Reused(reference_id=[4])
         :        :           :              :- Reused(reference_id=[2])
         :        :           :              +- Exchange(distribution=[broadcast])
         :        :           :                 +- Calc(select=[x0, y])
         :        :           :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])
         :        :           :                       :- Reused(reference_id=[5])
         :        :           :                       +- Reused(reference_id=[3])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :           :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :        :  +- Reused(reference_id=[2])
         :        :           :        +- Exchange(distribution=[broadcast])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[12])
         :        :           :                       :  +- Reused(reference_id=[1])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[10])
         :        :           :                             :- Reused(reference_id=[2])
         :        :           :                             +- Reused(reference_id=[3])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[2])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[6])
         :        :                    +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :                       +- Reused(reference_id=[5])
         :        +- Reused(reference_id=[7])
         :- Exchange(distribution=[broadcast])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], isBroadcast=[true], build=[left])\n:        :- [#5] Exchange(distribution=[broadcast])\n:        +- Calc(select=[x, X0])\n:           +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:              :- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:              +- [#7] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[9])
         :              :  +- Reused(reference_id=[2])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[2])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[14])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Calc(select=[y, x0])(reuse_id=[17])
         :              :                 :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :              :                 :           :  :     :- Reused(reference_id=[2])
         :              :                 :           :  :     +- Reused(reference_id=[3])
         :              :                 :           :  :- Reused(reference_id=[3])
         :              :                 :           :  :- Reused(reference_id=[5])
         :              :                 :           :  +- Reused(reference_id=[3])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[16])
         :              :                 :                 :- Reused(reference_id=[1])
         :              :                 :                 +- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[7])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[13])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :           :- Reused(reference_id=[2])
         :              :           :- Reused(reference_id=[8])
         :              :           :- Reused(reference_id=[9])
         :              :           +- Exchange(distribution=[hash[x]])
         :              :              +- Calc(select=[x, y0])(reuse_id=[11])
         :              :                 +- Reused(reference_id=[10])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[8])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[11])
         :              :                 :     +- Reused(reference_id=[8])
         :              :                 +- Reused(reference_id=[12])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[18])
         :              :  +- Reused(reference_id=[13])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[2])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Reused(reference_id=[14])
         :- Reused(reference_id=[15])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[x, x0])
         :     +- Reused(reference_id=[16])
         :- Exchange(distribution=[hash[X0, X1]])
         :  +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :     +- MultipleInput(readOrder=[0,1,0,1,1,2,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#2] Exchange(distribution=[hash[y]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left])\n:        :- [#4] Exchange(distribution=[broadcast])\n:        +- Calc(select=[x, X1])\n:           +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:              :- [#7] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:              +- [#8] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[X0, y, x], isBroadcast=[true], build=[right])\n      :- Calc(select=[X0, y])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], isBroadcast=[true], build=[left])\n      :     :- [#4] Exchange(distribution=[broadcast])\n      :     +- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[7])
         :        :- Reused(reference_id=[9])
         :        :- Exchange(distribution=[hash[x]])
         :        :  +- Calc(select=[x, X1])
         :        :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :        :  +- Reused(reference_id=[2])
         :        :        +- Exchange(distribution=[broadcast])
         :        :           +- Calc(select=[X0, X1])
         :        :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :        :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :                 :        +- Union(all=[true], union=[X0, X1])
         :        :                 :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :        :                 :           :     :- Reused(reference_id=[17])
         :        :                 :           :     +- Reused(reference_id=[7])
         :        :                 :           +- Calc(select=[x AS X0, x AS X1])
         :        :                 :              +- Reused(reference_id=[5])
         :        :                 +- Reused(reference_id=[7])
         :        :- Reused(reference_id=[18])
         :        :- Reused(reference_id=[18])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Calc(select=[x, y])
         :        :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :        :        :- Reused(reference_id=[2])
         :        :        +- Reused(reference_id=[8])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[2])
         :        +- Exchange(distribution=[broadcast])
         :           +- Reused(reference_id=[19])
         :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[2])
         +- Exchange(distribution=[broadcast])
            +- Reused(reference_id=[20])

Job has been submitted with JobID 7d79760b40be50eed119018c20737530
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, r_3.y AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x UNION (SELECT r_0.x AS X0, s_1.y AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x) UNION (SELECT b_0.x AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN s AS s_1 ON b_0.x = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x) UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: d6087aa9_ce48_4e2c_b444_c6bdb5d61de9

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, r_3.y AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN s AS s_2 ON s_1.y = s_2.x
                      INNER JOIN r AS r_3 ON s_2.y = r_3.x
             UNION
             (SELECT r_0.x AS X0, s_1.y AS X1
              FROM r AS r_0
                       INNER JOIN s AS s_1 ON r_0.y = s_1.x
                       INNER JOIN a AS a_2 ON s_1.y = a_2.x)
             UNION
             (SELECT b_0.x AS X0, r_2.y AS X1
              FROM b AS b_0
                       INNER JOIN s AS s_1 ON b_0.x = s_1.x
                       INNER JOIN r AS r_2 ON s_1.y = r_2.x)
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1
              FROM b AS b_0
                       INNER JOIN a AS a_1 ON b_0.x = a_1.x)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0)
            UNION
            (SELECT p19_0.X0 AS X0, r_2.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)),
     p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1
             FROM p19 AS p19_0
                      INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1
                      INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalUnion(all=[false])
   :  :        :        :  :- LogicalUnion(all=[false])
   :  :        :        :  :  :- LogicalProject(X0=[$0], X1=[$7])
   :  :        :        :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :        :        :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :        :        :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalUnion(all=[false])
   :  :              :  :  :  :- LogicalUnion(all=[false])
   :  :              :  :  :  :  :- LogicalProject(X0=[$0], X1=[$7])
   :  :              :  :  :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :              :  :  :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :              :  :  :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  +- LogicalUnion(all=[false])
   :        :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalUnion(all=[false])
         :     :        :  :- LogicalUnion(all=[false])
         :     :        :  :  :- LogicalProject(X0=[$0], X1=[$7])
         :     :        :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :     :        :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :     :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        :  +- LogicalProject(X0=[$0], X1=[$4])
         :     :        :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
         :     :        :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalUnion(all=[false])
         :           :  :  :  :- LogicalUnion(all=[false])
         :           :  :  :  :  :- LogicalProject(X0=[$0], X1=[$7])
         :           :  :  :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :           :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :           :  :  :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
         :           :  :  :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1920.9628080377838, cumulative cost = {2.7207925209823895E7 rows, 8.486349907431357E8 cpu, 3.63518388E8 io, 1.0357039126175107E8 network, 6.831620811897863E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 1920.9628080377838, cumulative cost = {2.7206004247015856E7 rows, 8.486042553382071E8 cpu, 3.63518388E8 io, 1.0357039126175107E8 network, 6.819326649926421E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1920.9628080377838, cumulative cost = {2.7204083284207817E7 rows, 8.482661658839924E8 cpu, 3.63518388E8 io, 1.0352428815435816E8 network, 6.819326649926421E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 10597.29016728458, cumulative cost = {2.7202162321399778E7 rows, 8.480966092413158E8 cpu, 3.63518388E8 io, 1.0352428815435816E8 network, 6.807032487954979E7 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 8943.304194298564, cumulative cost = {1.6458119738501929E7 rows, 5.150781318199452E8 cpu, 2.21807508E8 io, 6.314842220543276E7 network, 4.06352171105715E7 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 7457.33492151422, cumulative cost = {1.1058965482393708E7 rows, 3.336679136559834E8 cpu, 1.47871344E8 io, 4.046268851377286E7 network, 2.7724718530534662E7 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left]): rowcount = 7457.33492151422, cumulative cost = {1.1051508147472193E7 rows, 3.336679136559834E8 cpu, 1.47871344E8 io, 4.046268851377286E7 network, 2.7724718530534662E7 memory}
         :  :     :- Exchange(distribution=[broadcast]): rowcount = 9899.26181856229, cumulative cost = {5397067.675186917 rows, 1.829125230656439E8 cpu, 7.3935576E7 io, 2.292311917530539E7 network, 1.2910268980036838E7 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9899.26181856229, cumulative cost = {5387168.413368355 rows, 1.8132864117467394E8 cpu, 7.3935576E7 io, 2.2685536891659893E7 network, 1.2910268980036838E7 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9899.26181856229, cumulative cost = {5377269.151549792 rows, 1.8117025298557696E8 cpu, 7.3935576E7 io, 2.2685536891659893E7 network, 1.2276716223648852E7 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9899.26181856229, cumulative cost = {5367369.889731229 rows, 1.7942798290551E8 cpu, 7.3935576E7 io, 2.2447954608014397E7 network, 1.2276716223648852E7 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 54610.81781192009, cumulative cost = {5357470.627912667 rows, 1.785542098205193E8 cpu, 7.3935576E7 io, 2.2447954608014397E7 network, 1.1643163467260865E7 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 10326.504608038007, cumulative cost = {3967862.2000914263 rows, 1.2383810867630154E8 cpu, 5.545122E7 io, 1.5332502739201952E7 network, 9339651.42388057 memory}
         :  :     :              :  :- Calc(select=[X0, X00 AS X1]): rowcount = 2275.994796622063, cumulative cost = {1795415.0758928033 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :  :     :              :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2275.994796622063, cumulative cost = {1793139.0810961812 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :  :     :              :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :     :              :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :     :              :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :     :              :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :     :              :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :              :  :     :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     +- Exchange(distribution=[broadcast]): rowcount = 165.56451835589723, cumulative cost = {355055.38392218563 rows, 917640.6140781399 cpu, 6162492.0 io, 30487.87137748509 network, 138677.72233036565 memory}
         :  :     :              :  :        +- Calc(select=[X0, X1]): rowcount = 165.56451835589723, cumulative cost = {354889.81940382975 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :  :     :              :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 165.56451835589723, cumulative cost = {354724.25488547387 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :  :     :              :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {354464.690367118 rows, 874800.1834955486 cpu, 6161928.0 io, 25950.322936943558 network, 136985.72233036565 memory}
         :  :     :              :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1056.7634557059816, cumulative cost = {353407.926911412 rows, 857891.9682042529 cpu, 6161928.0 io, 25950.322936943558 network, 69352.86116518283 memory}
         :  :     :              :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {352351.163455706 rows, 671901.6000000001 cpu, 6161928.0 io, 588.0 network, 69352.86116518283 memory}
         :  :     :              :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5829.8, cumulative cost = {351294.39999999997 rows, 578624.8 cpu, 6161928.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 8050.509811415945, cumulative cost = {2162120.619590585 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], isBroadcast=[true], build=[left]): rowcount = 8050.509811415945, cumulative cost = {2154070.1097791693 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :  :     :              :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Calc(select=[x, X0]): rowcount = 38662.33128364844, cumulative cost = {695204.1634645888 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :  :     :              :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38662.33128364844, cumulative cost = {656541.8321809403 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :  :     :              :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1049.8752243229449, cumulative cost = {361180.5008972919 rows, 769749.2789616765 cpu, 6162120.0 io, 50490.01076750136 network, 134496.02871333694 memory}
         :  :     :              :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :     :              :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :     :              :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :     :              :                          +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :     :              :                             :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :     :              :                             :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :                             :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :                             :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                             :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                             :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                             :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                             :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                             :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                             :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                             :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                             :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                             :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                             :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                             :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                             +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 44284.313203882084, cumulative cost = {1334997.6100093203 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 44284.313203882084, cumulative cost = {1290713.2968054381 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 38529.75469254726, cumulative cost = {733030.983601556 rows, 9174228.288865468 cpu, 1.232358E7 io, 954675.8688124476 network, 145845.7805976497 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 38529.75469254726, cumulative cost = {694501.2289090088 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.75469254726, cumulative cost = {655971.4742164615 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 166.03128364844173, cumulative cost = {360742.7195239143 rows, 646309.2502483395 cpu, 6162804.0 io, 29961.75619131328 network, 136548.02871333694 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 166.03128364844173, cumulative cost = {360576.6882402658 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.03128364844173, cumulative cost = {360410.6569566174 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     +- Calc(select=[x, X1]): rowcount = 39816.30432486584, cumulative cost = {5646983.137363762 rows, 1.5035766606119207E8 cpu, 7.3935768E7 io, 1.753956933846747E7 network, 1.4260090888658335E7 memory}
         :  :        +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39816.30432486584, cumulative cost = {5607166.833038895 rows, 1.5035766606119207E8 cpu, 7.3935768E7 io, 1.753956933846747E7 network, 1.4260090888658335E7 memory}
         :  :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           +- Exchange(distribution=[broadcast]): rowcount = 8743.02883243897, cumulative cost = {5310651.528714029 rows, 1.4823412983053255E8 cpu, 6.7774992E7 io, 1.753956933846747E7 network, 1.3770481274041753E7 memory}
         :  :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8743.02883243897, cumulative cost = {5301908.49988159 rows, 1.4683524521734232E8 cpu, 6.7774992E7 io, 1.7329736646488935E7 network, 1.3770481274041753E7 memory}
         :  :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8743.02883243897, cumulative cost = {5293165.47104915 rows, 1.466953567560233E8 cpu, 6.7774992E7 io, 1.7329736646488935E7 network, 1.3210927428765658E7 memory}
         :  :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8743.02883243897, cumulative cost = {5284422.442216711 rows, 1.4515658368151402E8 cpu, 6.7774992E7 io, 1.71199039545104E7 network, 1.3210927428765658E7 memory}
         :  :                       +- Union(all=[true], union=[X0, X1]): rowcount = 48232.27867328323, cumulative cost = {5275679.413384272 rows, 1.4438486722274148E8 cpu, 6.7774992E7 io, 1.71199039545104E7 network, 1.2651373583489563E7 memory}
         :  :                          :- Calc(select=[X10 AS X0, X1]): rowcount = 9231.38329026783, cumulative cost = {2849416.0568825947 rows, 7.892754513662064E7 cpu, 3.6967836E7 io, 9426168.018011495 network, 7490707.439342812 memory}
         :  :                          :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 9231.38329026783, cumulative cost = {2840184.6735923267 rows, 7.892754513662064E7 cpu, 3.6967836E7 io, 9426168.018011495 network, 7490707.439342812 memory}
         :  :                          :     :- Exchange(distribution=[hash[X0]]): rowcount = 21989.461467351553, cumulative cost = {2055284.8408694062 rows, 6.630866481324656E7 cpu, 2.4645696E7 io, 8141431.750432873 network, 4973423.867820999 memory}
         :  :                          :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 21989.461467351553, cumulative cost = {2033295.3794020547 rows, 6.2614435286731504E7 cpu, 2.4645696E7 io, 7613684.675216436 network, 4973423.867820999 memory}
         :  :                          :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 21989.461467351553, cumulative cost = {2011305.9179347032 rows, 6.2262603903253876E7 cpu, 2.4645696E7 io, 7613684.675216436 network, 3566098.3339104997 memory}
         :  :                          :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 21989.461467351553, cumulative cost = {1989316.4564673516 rows, 5.8392458685E7 cpu, 2.4645696E7 io, 7085937.6 network, 3566098.3339104997 memory}
         :  :                          :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 121308.285, cumulative cost = {1967326.995 rows, 5.6451526125E7 cpu, 2.4645696E7 io, 7085937.6 network, 2158772.8000000003 memory}
         :  :                          :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 121292.685, cumulative cost = {1845836.5100000002 rows, 5.632186584E7 cpu, 2.4644448E7 io, 7085373.6 network, 2157080.8000000003 memory}
         :  :                          :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 82786.755, cumulative cost = {1390762.3650000002 rows, 5.4350981355000004E7 cpu, 1.8483084E7 io, 7085176.8 network, 2156851.2 memory}
         :  :                          :     :              :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974179.2 rows, 5.2212924E7 cpu, 1.23216E7 io, 7084944.0 network, 2156336.0 memory}
         :  :                          :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 44280.6, cumulative cost = {929898.6 rows, 5.2212924E7 cpu, 1.23216E7 io, 7084944.0 network, 2156336.0 memory}
         :  :                          :     :              :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :                          :     :              :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 38505.0, cumulative cost = {372220.0 rows, 6725860.0 cpu, 6160824.0 io, 924168.0 network, 56.0 memory}
         :  :                          :     :              :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 38505.0, cumulative cost = {333715.0 rows, 257020.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :                          :     :              :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295210.0 rows, 257020.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :                          :     :              :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :                          :     :              :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :              :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :              :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :              :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 38506.155, cumulative cost = {333796.41000000003 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :  :                          :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 38506.155, cumulative cost = {295290.255 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :  :                          :     :              :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
         :  :                          :     :              :  :           +- Calc(select=[x0, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :              :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :              :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :              :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.93, cumulative cost = {333781.45999999996 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :  :                          :     :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.93, cumulative cost = {295275.52999999997 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :  :                          :     :              :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :        +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :  :                          :     :              :           +- Calc(select=[x, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :                          :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :                          :     :                    :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :                          :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                          :     +- Exchange(distribution=[hash[y]]): rowcount = 39553.09380110065, cumulative cost = {775668.4494326526 rows, 1.2126539881226461E7 cpu, 1.232214E7 io, 1284736.2675786226 network, 1285873.7293501266 memory}
         :  :                          :        +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :                          :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :                          :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :              +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
         :  :                          :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
         :  :                          :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
         :  :                          :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
         :  :                          :                          +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
         :  :                          :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                          :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                          :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          +- Calc(select=[x AS X0, X1]): rowcount = 39000.895383015406, cumulative cost = {2378031.077828394 rows, 6.5409089807447575E7 cpu, 3.0807156E7 io, 7693735.936498902 network, 5160666.144146752 memory}
         :  :                             +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39000.895383015406, cumulative cost = {2339030.1824453785 rows, 6.5409089807447575E7 cpu, 3.0807156E7 io, 7693735.936498902 network, 5160666.144146752 memory}
         :  :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                +- Exchange(distribution=[broadcast]): rowcount = 3306.969220102733, cumulative cost = {2043330.287062363 rows, 6.332904205368675E7 cpu, 2.464638E7 io, 7693735.936498902 network, 4975475.867820999 memory}
         :  :                                   +- Calc(select=[X0, X1]): rowcount = 3306.969220102733, cumulative cost = {2040023.3178422602 rows, 6.279992697847032E7 cpu, 2.464638E7 io, 7614368.675216436 network, 4975475.867820999 memory}
         :  :                                      +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 3306.969220102733, cumulative cost = {2036716.3486221575 rows, 6.279992697847032E7 cpu, 2.464638E7 io, 7614368.675216436 network, 4975475.867820999 memory}
         :  :                                         :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 21989.461467351553, cumulative cost = {2033295.3794020547 rows, 6.2614435286731504E7 cpu, 2.4645696E7 io, 7613684.675216436 network, 4973423.867820999 memory}
         :  :                                         :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 21989.461467351553, cumulative cost = {2011305.9179347032 rows, 6.2262603903253876E7 cpu, 2.4645696E7 io, 7613684.675216436 network, 3566098.3339104997 memory}
         :  :                                         :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 21989.461467351553, cumulative cost = {1989316.4564673516 rows, 5.8392458685E7 cpu, 2.4645696E7 io, 7085937.6 network, 3566098.3339104997 memory}
         :  :                                         :        +- Union(all=[true], union=[X0, X1]): rowcount = 121308.285, cumulative cost = {1967326.995 rows, 5.6451526125E7 cpu, 2.4645696E7 io, 7085937.6 network, 2158772.8000000003 memory}
         :  :                                         :           :- Union(all=[true], union=[X0, X1]): rowcount = 121292.685, cumulative cost = {1845836.5100000002 rows, 5.632186584E7 cpu, 2.4644448E7 io, 7085373.6 network, 2157080.8000000003 memory}
         :  :                                         :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 82786.755, cumulative cost = {1390762.3650000002 rows, 5.4350981355000004E7 cpu, 1.8483084E7 io, 7085176.8 network, 2156851.2 memory}
         :  :                                         :           :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974179.2 rows, 5.2212924E7 cpu, 1.23216E7 io, 7084944.0 network, 2156336.0 memory}
         :  :                                         :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 44280.6, cumulative cost = {929898.6 rows, 5.2212924E7 cpu, 1.23216E7 io, 7084944.0 network, 2156336.0 memory}
         :  :                                         :           :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :                                         :           :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 38505.0, cumulative cost = {372220.0 rows, 6725860.0 cpu, 6160824.0 io, 924168.0 network, 56.0 memory}
         :  :                                         :           :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 38505.0, cumulative cost = {333715.0 rows, 257020.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :                                         :           :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295210.0 rows, 257020.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :                                         :           :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :                                         :           :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                                         :           :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                                         :           :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                         :           :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 38506.155, cumulative cost = {333796.41000000003 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :  :                                         :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 38506.155, cumulative cost = {295290.255 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
         :  :                                         :           :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
         :  :                                         :           :  :           +- Calc(select=[x0, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :                                         :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :                                         :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                         :           :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.93, cumulative cost = {333781.45999999996 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :  :                                         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.93, cumulative cost = {295275.52999999997 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :  :                                         :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :        +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :  :                                         :           :           +- Calc(select=[x, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :                                         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :                                         :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                         :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :                                         :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :                                         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                         :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :                                         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                                         +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :                                            +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 1485.9692727843437, cumulative cost = {5390210.951913922 rows, 1.814012748597676E8 cpu, 7.3936164E7 io, 2.2685733691659894E7 network, 1.2910498580036838E7 memory}
         :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], build=[right]): rowcount = 1485.9692727843437, cumulative cost = {5388724.982641138 rows, 1.814012748597676E8 cpu, 7.3936164E7 io, 2.2685733691659894E7 network, 1.2910498580036838E7 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9899.26181856229, cumulative cost = {5387168.413368355 rows, 1.8132864117467394E8 cpu, 7.3935576E7 io, 2.2685536891659893E7 network, 1.2910268980036838E7 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9899.26181856229, cumulative cost = {5377269.151549792 rows, 1.8117025298557696E8 cpu, 7.3935576E7 io, 2.2685536891659893E7 network, 1.2276716223648852E7 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9899.26181856229, cumulative cost = {5367369.889731229 rows, 1.7942798290551E8 cpu, 7.3935576E7 io, 2.2447954608014397E7 network, 1.2276716223648852E7 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 54610.81781192009, cumulative cost = {5357470.627912667 rows, 1.785542098205193E8 cpu, 7.3935576E7 io, 2.2447954608014397E7 network, 1.1643163467260865E7 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 10326.504608038007, cumulative cost = {3967862.2000914263 rows, 1.2383810867630154E8 cpu, 5.545122E7 io, 1.5332502739201952E7 network, 9339651.42388057 memory}
         :        :           :  :- Calc(select=[X0, X00 AS X1]): rowcount = 2275.994796622063, cumulative cost = {1795415.0758928033 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2275.994796622063, cumulative cost = {1793139.0810961812 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :           :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :           :  :     :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 165.56451835589723, cumulative cost = {355055.38392218563 rows, 917640.6140781399 cpu, 6162492.0 io, 30487.87137748509 network, 138677.72233036565 memory}
         :        :           :  :        +- Calc(select=[X0, X1]): rowcount = 165.56451835589723, cumulative cost = {354889.81940382975 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 165.56451835589723, cumulative cost = {354724.25488547387 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {354464.690367118 rows, 874800.1834955486 cpu, 6161928.0 io, 25950.322936943558 network, 136985.72233036565 memory}
         :        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1056.7634557059816, cumulative cost = {353407.926911412 rows, 857891.9682042529 cpu, 6161928.0 io, 25950.322936943558 network, 69352.86116518283 memory}
         :        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {352351.163455706 rows, 671901.6000000001 cpu, 6161928.0 io, 588.0 network, 69352.86116518283 memory}
         :        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5829.8, cumulative cost = {351294.39999999997 rows, 578624.8 cpu, 6161928.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 8050.509811415945, cumulative cost = {2162120.619590585 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], isBroadcast=[true], build=[left]): rowcount = 8050.509811415945, cumulative cost = {2154070.1097791693 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :        :           :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Calc(select=[x, X0]): rowcount = 38662.33128364844, cumulative cost = {695204.1634645888 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38662.33128364844, cumulative cost = {656541.8321809403 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :              +- Exchange(distribution=[broadcast]): rowcount = 1049.8752243229449, cumulative cost = {361180.5008972919 rows, 769749.2789616765 cpu, 6162120.0 io, 50490.01076750136 network, 134496.02871333694 memory}
         :        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :        :           :                             :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :        :           :                             :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :           :                             :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :           :                             :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :                             :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :                             :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :                             :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                             :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                             :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                             :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                             :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :                             :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :                             :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :           :                             :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                             :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                             +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 44284.313203882084, cumulative cost = {1334997.6100093203 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 44284.313203882084, cumulative cost = {1290713.2968054381 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 38529.75469254726, cumulative cost = {733030.983601556 rows, 9174228.288865468 cpu, 1.232358E7 io, 954675.8688124476 network, 145845.7805976497 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 38529.75469254726, cumulative cost = {694501.2289090088 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.75469254726, cumulative cost = {655971.4742164615 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 166.03128364844173, cumulative cost = {360742.7195239143 rows, 646309.2502483395 cpu, 6162804.0 io, 29961.75619131328 network, 136548.02871333694 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 166.03128364844173, cumulative cost = {360576.6882402658 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.03128364844173, cumulative cost = {360410.6569566174 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 1653.9859729860166, cumulative cost = {1.0733445292730566E7 rows, 3.330078801312034E8 cpu, 1.4171088E8 io, 4.0375865948925406E7 network, 2.7435107768978287E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1653.9859729860166, cumulative cost = {1.073179130675758E7 rows, 3.330078801312034E8 cpu, 1.4171088E8 io, 4.0375865948925406E7 network, 2.7435107768978287E7 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9706.568828374266, cumulative cost = {5424154.807928408 rows, 1.8579370140599713E8 cpu, 7.3935204E7 io, 2.3013765198639687E7 network, 1.3588654252744045E7 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9706.568828374266, cumulative cost = {5414448.239100033 rows, 1.8563839630474314E8 cpu, 7.3935204E7 io, 2.3013765198639687E7 network, 1.2967433847728092E7 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9706.568828374266, cumulative cost = {5404741.670271659 rows, 1.8393004019094926E8 cpu, 7.3935204E7 io, 2.2780807546758704E7 network, 1.2967433847728092E7 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 53547.79695504566, cumulative cost = {5395035.101443285 rows, 1.8307327543966854E8 cpu, 7.3935204E7 io, 2.2780807546758704E7 network, 1.234621344271214E7 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 52335.05518721536, cumulative cost = {3538259.6942116767 rows, 1.1949183709647769E8 cpu, 4.9290264E7 io, 1.4973704308720727E7 network, 7423046.363566561 memory}
               :           :  :- Calc(select=[x AS X0, X1]): rowcount = 44284.343487175654, cumulative cost = {1329397.1324974215 rows, 5.493713043960676E7 cpu, 1.8484404E7 io, 7116316.364184562 network, 2306715.2428445946 memory}
               :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 44284.343487175654, cumulative cost = {1285112.7890102458 rows, 5.493713043960676E7 cpu, 1.8484404E7 io, 7116316.364184562 network, 2306715.2428445946 memory}
               :           :  :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :     +- Exchange(distribution=[hash[x]]): rowcount = 38529.95658117102, cumulative cost = {727430.4455230703 rows, 9449866.786957398 cpu, 1.2323628E7 io, 955540.3641845626 network, 149037.67429901776 memory}
               :           :  :        +- Calc(select=[x, X1]): rowcount = 38529.95658117102, cumulative cost = {688900.4889418993 rows, 2976834.081320666 cpu, 1.2323628E7 io, 30821.40623645814 network, 149037.67429901776 memory}
               :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.95658117102, cumulative cost = {650370.5323607282 rows, 2976834.081320666 cpu, 1.2323628E7 io, 30821.40623645814 network, 149037.67429901776 memory}
               :           :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 167.37720780683773, cumulative cost = {355141.5757795572 rows, 921903.063658211 cpu, 6162852.0 io, 30821.40623645814 network, 139664.55066183486 memory}
               :           :  :                 +- Calc(select=[X0, X1]): rowcount = 167.37720780683773, cumulative cost = {354974.19857175037 rows, 895122.710409117 cpu, 6162852.0 io, 26804.353249094034 network, 139664.55066183486 memory}
               :           :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 167.37720780683773, cumulative cost = {354806.8213639435 rows, 895122.710409117 cpu, 6162852.0 io, 26804.353249094034 network, 139664.55066183486 memory}
               :           :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :           :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :           :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :           :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :           :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :                       +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[X0, X10 AS X1]): rowcount = 8050.711700039704, cumulative cost = {2156527.50652704 rows, 6.45023716016837E7 cpu, 3.080586E7 io, 7857387.944536165 network, 5116331.120721966 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left]): rowcount = 8050.711700039704, cumulative cost = {2148476.7948270002 rows, 6.45023716016837E7 cpu, 3.080586E7 io, 7857387.944536165 network, 5116331.120721966 memory}
               :           :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
               :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
               :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
               :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
               :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
               :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :           :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :        +- Calc(select=[x, X1]): rowcount = 38663.67720780684, cumulative cost = {689610.6466237959 rows, 3108554.398736411 cpu, 1.2322944E7 io, 51532.70649818807 network, 196908.0415763876 memory}
               :           :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38663.67720780684, cumulative cost = {650946.969415989 rows, 3108554.398736411 cpu, 1.2322944E7 io, 51532.70649818807 network, 196908.0415763876 memory}
               :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :              +- Exchange(distribution=[broadcast]): rowcount = 1058.8480520455848, cumulative cost = {355584.2922081822 rows, 1046491.614320046 cpu, 6162168.0 io, 51532.70649818807 network, 137612.55066183486 memory}
               :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :           :                             :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :                             :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :                             :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :                             :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :                             :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                             :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :                             :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :                             :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :                             +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, y AS X1]): rowcount = 1212.7417678303016, cumulative cost = {1803227.6102765624 rows, 6.3527890546235785E7 cpu, 2.464494E7 io, 7807103.238037977 network, 4923167.079145579 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[X0, y, x], isBroadcast=[true], build=[right]): rowcount = 1212.7417678303016, cumulative cost = {1802014.8685087322 rows, 6.3527890546235785E7 cpu, 2.464494E7 io, 7807103.238037977 network, 4923167.079145579 memory}
               :                 :- Calc(select=[X0, y]): rowcount = 8027.945118868678, cumulative cost = {1800688.126740902 rows, 6.3454090985284835E7 cpu, 2.4644256E7 io, 7806419.238037977 network, 4921115.079145579 memory}
               :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[left]): rowcount = 8027.945118868678, cumulative cost = {1792660.1816220332 rows, 6.3454090985284835E7 cpu, 2.4644256E7 io, 7806419.238037977 network, 4921115.079145579 memory}
               :                 :     :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
               :                 :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
               :                 :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
               :                 :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
               :                 :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
               :                 :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                 :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                 :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                 :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                 :     :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :     +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :        +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :           +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 1320.0043248658453, cumulative cost = {5305982.512856186 rows, 1.4712596613998038E8 cpu, 6.7775676E7 io, 1.7362100750285715E7 network, 1.3772533274041753E7 memory}
                  +- Calc(select=[X0, X1]): rowcount = 1320.0043248658453, cumulative cost = {5304662.508531321 rows, 1.4691476544800183E8 cpu, 6.7775676E7 io, 1.7330420646488935E7 network, 1.3772533274041753E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1320.0043248658453, cumulative cost = {5303342.504206455 rows, 1.4691476544800183E8 cpu, 6.7775676E7 io, 1.7330420646488935E7 network, 1.3772533274041753E7 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8743.02883243897, cumulative cost = {5301908.49988159 rows, 1.4683524521734232E8 cpu, 6.7774992E7 io, 1.7329736646488935E7 network, 1.3770481274041753E7 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8743.02883243897, cumulative cost = {5293165.47104915 rows, 1.466953567560233E8 cpu, 6.7774992E7 io, 1.7329736646488935E7 network, 1.3210927428765658E7 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8743.02883243897, cumulative cost = {5284422.442216711 rows, 1.4515658368151402E8 cpu, 6.7774992E7 io, 1.71199039545104E7 network, 1.3210927428765658E7 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 48232.27867328323, cumulative cost = {5275679.413384272 rows, 1.4438486722274148E8 cpu, 6.7774992E7 io, 1.71199039545104E7 network, 1.2651373583489563E7 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 9231.38329026783, cumulative cost = {2849416.0568825947 rows, 7.892754513662064E7 cpu, 3.6967836E7 io, 9426168.018011495 network, 7490707.439342812 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 9231.38329026783, cumulative cost = {2840184.6735923267 rows, 7.892754513662064E7 cpu, 3.6967836E7 io, 9426168.018011495 network, 7490707.439342812 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 21989.461467351553, cumulative cost = {2055284.8408694062 rows, 6.630866481324656E7 cpu, 2.4645696E7 io, 8141431.750432873 network, 4973423.867820999 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 21989.461467351553, cumulative cost = {2033295.3794020547 rows, 6.2614435286731504E7 cpu, 2.4645696E7 io, 7613684.675216436 network, 4973423.867820999 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 21989.461467351553, cumulative cost = {2011305.9179347032 rows, 6.2262603903253876E7 cpu, 2.4645696E7 io, 7613684.675216436 network, 3566098.3339104997 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 21989.461467351553, cumulative cost = {1989316.4564673516 rows, 5.8392458685E7 cpu, 2.4645696E7 io, 7085937.6 network, 3566098.3339104997 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 121308.285, cumulative cost = {1967326.995 rows, 5.6451526125E7 cpu, 2.4645696E7 io, 7085937.6 network, 2158772.8000000003 memory}
                        :           :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 121292.685, cumulative cost = {1845836.5100000002 rows, 5.632186584E7 cpu, 2.4644448E7 io, 7085373.6 network, 2157080.8000000003 memory}
                        :           :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 82786.755, cumulative cost = {1390762.3650000002 rows, 5.4350981355000004E7 cpu, 1.8483084E7 io, 7085176.8 network, 2156851.2 memory}
                        :           :     :              :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974179.2 rows, 5.2212924E7 cpu, 1.23216E7 io, 7084944.0 network, 2156336.0 memory}
                        :           :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 44280.6, cumulative cost = {929898.6 rows, 5.2212924E7 cpu, 1.23216E7 io, 7084944.0 network, 2156336.0 memory}
                        :           :     :              :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                        :           :     :              :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 38505.0, cumulative cost = {372220.0 rows, 6725860.0 cpu, 6160824.0 io, 924168.0 network, 56.0 memory}
                        :           :     :              :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 38505.0, cumulative cost = {333715.0 rows, 257020.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
                        :           :     :              :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295210.0 rows, 257020.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
                        :           :     :              :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
                        :           :     :              :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 38506.155, cumulative cost = {333796.41000000003 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
                        :           :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 38506.155, cumulative cost = {295290.255 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
                        :           :     :              :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
                        :           :     :              :  :           +- Calc(select=[x0, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.93, cumulative cost = {333781.45999999996 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
                        :           :     :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.93, cumulative cost = {295275.52999999997 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
                        :           :     :              :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :        +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
                        :           :     :              :           +- Calc(select=[x, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                        :           :     :                    :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 39553.09380110065, cumulative cost = {775668.4494326526 rows, 1.2126539881226461E7 cpu, 1.232214E7 io, 1284736.2675786226 network, 1285873.7293501266 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
                        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 39000.895383015406, cumulative cost = {2378031.077828394 rows, 6.5409089807447575E7 cpu, 3.0807156E7 io, 7693735.936498902 network, 5160666.144146752 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39000.895383015406, cumulative cost = {2339030.1824453785 rows, 6.5409089807447575E7 cpu, 3.0807156E7 io, 7693735.936498902 network, 5160666.144146752 memory}
                        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 3306.969220102733, cumulative cost = {2043330.287062363 rows, 6.332904205368675E7 cpu, 2.464638E7 io, 7693735.936498902 network, 4975475.867820999 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 3306.969220102733, cumulative cost = {2040023.3178422602 rows, 6.279992697847032E7 cpu, 2.464638E7 io, 7614368.675216436 network, 4975475.867820999 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 3306.969220102733, cumulative cost = {2036716.3486221575 rows, 6.279992697847032E7 cpu, 2.464638E7 io, 7614368.675216436 network, 4975475.867820999 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 21989.461467351553, cumulative cost = {2033295.3794020547 rows, 6.2614435286731504E7 cpu, 2.4645696E7 io, 7613684.675216436 network, 4973423.867820999 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 21989.461467351553, cumulative cost = {2011305.9179347032 rows, 6.2262603903253876E7 cpu, 2.4645696E7 io, 7613684.675216436 network, 3566098.3339104997 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 21989.461467351553, cumulative cost = {1989316.4564673516 rows, 5.8392458685E7 cpu, 2.4645696E7 io, 7085937.6 network, 3566098.3339104997 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 121308.285, cumulative cost = {1967326.995 rows, 5.6451526125E7 cpu, 2.4645696E7 io, 7085937.6 network, 2158772.8000000003 memory}
                        :                          :           :- Union(all=[true], union=[X0, X1]): rowcount = 121292.685, cumulative cost = {1845836.5100000002 rows, 5.632186584E7 cpu, 2.4644448E7 io, 7085373.6 network, 2157080.8000000003 memory}
                        :                          :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 82786.755, cumulative cost = {1390762.3650000002 rows, 5.4350981355000004E7 cpu, 1.8483084E7 io, 7085176.8 network, 2156851.2 memory}
                        :                          :           :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974179.2 rows, 5.2212924E7 cpu, 1.23216E7 io, 7084944.0 network, 2156336.0 memory}
                        :                          :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 44280.6, cumulative cost = {929898.6 rows, 5.2212924E7 cpu, 1.23216E7 io, 7084944.0 network, 2156336.0 memory}
                        :                          :           :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                        :                          :           :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 38505.0, cumulative cost = {372220.0 rows, 6725860.0 cpu, 6160824.0 io, 924168.0 network, 56.0 memory}
                        :                          :           :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 38505.0, cumulative cost = {333715.0 rows, 257020.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
                        :                          :           :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295210.0 rows, 257020.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
                        :                          :           :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
                        :                          :           :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 38506.155, cumulative cost = {333796.41000000003 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
                        :                          :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 38506.155, cumulative cost = {295290.255 rows, 2055270.6 cpu, 6161484.0 io, 232.79999999999998 network, 515.2 memory}
                        :                          :           :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
                        :                          :           :  :           +- Calc(select=[x0, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.93, cumulative cost = {333781.45999999996 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
                        :                          :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.93, cumulative cost = {295275.52999999997 rows, 1849591.7999999998 cpu, 6161364.0 io, 196.79999999999998 network, 229.59999999999997 memory}
                        :                          :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :        +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
                        :                          :           :           +- Calc(select=[x, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
                        :                          :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :                          :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                        :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,1,0,1,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left])\n:  :     :- [#2] Exchange(distribution=[broadcast])\n:  :     +- Calc(select=[x, X1])\n:  :        +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:  :           :- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :           +- [#7] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], build=[right])\n:        :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#5] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[20])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[6])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[1,0,2,0,3,2,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[x0 AS X0, y AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y, x0, y00], build=[right])\n:  :  :     :- [#5] Exchange(distribution=[hash[x]])\n:  :  :     +- [#6] Exchange(distribution=[hash[y00]])\n:  :  +- Calc(select=[x AS X0, y0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])\n:  :        :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:  :        +- [#8] Exchange(distribution=[broadcast])\n:  +- Calc(select=[x0 AS X0, y AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])\n:        :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0], isBroadcast=[true], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[5])
         :        :           :              :- Exchange(distribution=[broadcast])(reuse_id=[8])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[1])
         :        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[2])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[x, y])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])
         :        :           :              :        :- Reused(reference_id=[1])
         :        :           :              :        +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :        :           :              :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[4])
         :        :           :              :- Exchange(distribution=[hash[x]])
         :        :           :              :  +- Reused(reference_id=[2])
         :        :           :              :- Exchange(distribution=[hash[y00]])
         :        :           :              :  +- Calc(select=[x, y0 AS y00])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :              :        :- Reused(reference_id=[2])
         :        :           :              :        +- Exchange(distribution=[broadcast])
         :        :           :              :           +- Calc(select=[x, y0])
         :        :           :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[left])
         :        :           :              :                 :- Reused(reference_id=[3])
         :        :           :              :                 +- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :                    +- Reused(reference_id=[4])
         :        :           :              :- Reused(reference_id=[2])
         :        :           :              +- Exchange(distribution=[broadcast])
         :        :           :                 +- Calc(select=[x0, y])
         :        :           :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])
         :        :           :                       :- Reused(reference_id=[5])
         :        :           :                       +- Reused(reference_id=[3])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :           :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :        :  +- Reused(reference_id=[2])
         :        :           :        +- Exchange(distribution=[broadcast])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[12])
         :        :           :                       :  +- Reused(reference_id=[1])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[10])
         :        :           :                             :- Reused(reference_id=[2])
         :        :           :                             +- Reused(reference_id=[3])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[2])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[6])
         :        :                    +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :                       +- Reused(reference_id=[5])
         :        +- Reused(reference_id=[7])
         :- Exchange(distribution=[broadcast])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], isBroadcast=[true], build=[left])\n:        :- [#5] Exchange(distribution=[broadcast])\n:        +- Calc(select=[x, X0])\n:           +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:              :- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:              +- [#7] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[9])
         :              :  +- Reused(reference_id=[2])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[2])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[14])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Calc(select=[y, x0])(reuse_id=[17])
         :              :                 :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :              :                 :           :  :     :- Reused(reference_id=[2])
         :              :                 :           :  :     +- Reused(reference_id=[3])
         :              :                 :           :  :- Reused(reference_id=[3])
         :              :                 :           :  :- Reused(reference_id=[5])
         :              :                 :           :  +- Reused(reference_id=[3])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[16])
         :              :                 :                 :- Reused(reference_id=[1])
         :              :                 :                 +- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[7])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[13])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :           :- Reused(reference_id=[2])
         :              :           :- Reused(reference_id=[8])
         :              :           :- Reused(reference_id=[9])
         :              :           +- Exchange(distribution=[hash[x]])
         :              :              +- Calc(select=[x, y0])(reuse_id=[11])
         :              :                 +- Reused(reference_id=[10])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[8])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[11])
         :              :                 :     +- Reused(reference_id=[8])
         :              :                 +- Reused(reference_id=[12])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[18])
         :              :  +- Reused(reference_id=[13])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[2])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Reused(reference_id=[14])
         :- Reused(reference_id=[15])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[x, x0])
         :     +- Reused(reference_id=[16])
         :- Exchange(distribution=[hash[X0, X1]])
         :  +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :     +- MultipleInput(readOrder=[0,1,0,1,1,2,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#2] Exchange(distribution=[hash[y]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left])\n:        :- [#4] Exchange(distribution=[broadcast])\n:        +- Calc(select=[x, X1])\n:           +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:              :- [#7] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:              +- [#8] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[X0, y, x], isBroadcast=[true], build=[right])\n      :- Calc(select=[X0, y])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], isBroadcast=[true], build=[left])\n      :     :- [#4] Exchange(distribution=[broadcast])\n      :     +- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[7])
         :        :- Reused(reference_id=[9])
         :        :- Exchange(distribution=[hash[x]])
         :        :  +- Calc(select=[x, X1])
         :        :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :        :  +- Reused(reference_id=[2])
         :        :        +- Exchange(distribution=[broadcast])
         :        :           +- Calc(select=[X0, X1])
         :        :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :        :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :                 :        +- Union(all=[true], union=[X0, X1])
         :        :                 :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :        :                 :           :     :- Reused(reference_id=[17])
         :        :                 :           :     +- Reused(reference_id=[7])
         :        :                 :           +- Calc(select=[x AS X0, x AS X1])
         :        :                 :              +- Reused(reference_id=[5])
         :        :                 +- Reused(reference_id=[7])
         :        :- Reused(reference_id=[18])
         :        :- Reused(reference_id=[18])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Calc(select=[x, y])
         :        :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :        :        :- Reused(reference_id=[2])
         :        :        +- Reused(reference_id=[8])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[2])
         :        +- Exchange(distribution=[broadcast])
         :           +- Reused(reference_id=[19])
         :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[2])
         +- Exchange(distribution=[broadcast])
            +- Reused(reference_id=[20])

Job has been submitted with JobID 8d25504d01a6a7618c73015e3d4337e5
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, r_3.y AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x UNION (SELECT r_0.x AS X0, s_1.y AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x) UNION (SELECT b_0.x AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN s AS s_1 ON b_0.x = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x) UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 6c5a9a0f_5603_4e1d_ad43_3cfdcd0255b3

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, r_3.y AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN s AS s_2 ON s_1.y = s_2.x
                      INNER JOIN r AS r_3 ON s_2.y = r_3.x
             UNION
             (SELECT r_0.x AS X0, s_1.y AS X1
              FROM r AS r_0
                       INNER JOIN s AS s_1 ON r_0.y = s_1.x
                       INNER JOIN a AS a_2 ON s_1.y = a_2.x)
             UNION
             (SELECT b_0.x AS X0, r_2.y AS X1
              FROM b AS b_0
                       INNER JOIN s AS s_1 ON b_0.x = s_1.x
                       INNER JOIN r AS r_2 ON s_1.y = r_2.x)
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1
              FROM b AS b_0
                       INNER JOIN a AS a_1 ON b_0.x = a_1.x)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0)
            UNION
            (SELECT p19_0.X0 AS X0, r_2.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)),
     p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1
             FROM p19 AS p19_0
                      INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1
                      INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalUnion(all=[false])
   :  :        :        :  :- LogicalUnion(all=[false])
   :  :        :        :  :  :- LogicalProject(X0=[$0], X1=[$7])
   :  :        :        :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :        :        :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :        :        :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalUnion(all=[false])
   :  :              :  :  :  :- LogicalUnion(all=[false])
   :  :              :  :  :  :  :- LogicalProject(X0=[$0], X1=[$7])
   :  :              :  :  :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :              :  :  :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :              :  :  :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  +- LogicalUnion(all=[false])
   :        :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalUnion(all=[false])
         :     :        :  :- LogicalUnion(all=[false])
         :     :        :  :  :- LogicalProject(X0=[$0], X1=[$7])
         :     :        :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :     :        :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :     :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        :  +- LogicalProject(X0=[$0], X1=[$4])
         :     :        :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
         :     :        :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalUnion(all=[false])
         :           :  :  :  :- LogicalUnion(all=[false])
         :           :  :  :  :  :- LogicalProject(X0=[$0], X1=[$7])
         :           :  :  :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :           :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :           :  :  :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
         :           :  :  :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 17347.79516466555, cumulative cost = {2.5752362429138294E8 rows, 9.823632086840284E9 cpu, 3.267002232E9 io, 1.2425473257456965E9 network, 6.096006174210045E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 17347.79516466555, cumulative cost = {2.5750627649621826E8 rows, 9.82335452211765E9 cpu, 3.267002232E9 io, 1.2425473257456965E9 network, 6.08490358530466E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 17347.79516466555, cumulative cost = {2.574889287010536E8 rows, 9.820301310168669E9 cpu, 3.267002232E9 io, 1.2421309786617446E9 network, 6.08490358530466E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 95701.81075518315, cumulative cost = {2.5747158090588892E8 rows, 9.818770081196587E9 cpu, 3.267002232E9 io, 1.2421309786617446E9 network, 6.073800996399274E8 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 80375.11887679026, cumulative cost = {1.5588200931702283E8 rows, 5.976513774575071E9 cpu, 1.993425456E9 io, 7.588852199693956E8 network, 3.651328270182655E8 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 67021.86945464215, cumulative cost = {1.0701273659026477E8 rows, 4.2866934462409286E9 cpu, 1.328947248E9 io, 5.466702654017951E8 network, 2.4912561735181046E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 67021.86945464215, cumulative cost = {1.0694571472081013E8 rows, 4.2866934462409286E9 cpu, 1.328947248E9 io, 5.466702654017951E8 network, 2.4912561735181046E8 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 88967.96281432081, cumulative cost = {4.885063897185131E7 rows, 1.7039652886655567E9 cpu, 6.644739E8 io, 2.1434887287514418E8 network, 1.1600417446645501E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 88967.96281432081, cumulative cost = {4.876167100903699E7 rows, 1.6890186709127507E9 cpu, 6.644739E8 io, 2.1221364176760048E8 network, 1.1600417446645501E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 88967.96281432081, cumulative cost = {4.8672703046222664E7 rows, 1.6875951835077217E9 cpu, 6.644739E8 io, 2.1221364176760048E8 network, 1.1031022484633848E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 88967.96281432081, cumulative cost = {4.858373508340834E7 rows, 1.6719368220524013E9 cpu, 6.644739E8 io, 2.1007841066005677E8 network, 1.1031022484633848E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 490805.6072666023, cumulative cost = {4.849476712059402E7 rows, 1.6640839323361356E9 cpu, 6.644739E8 io, 2.1007841066005677E8 network, 1.0461627522622195E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 92805.83747645898, cumulative cost = {3.600674510913113E7 rows, 1.1723714832640958E9 cpu, 4.98353568E8 io, 1.461328865431288E8 network, 8.39236567636666E7 memory}
         :  :     :              :  :- Calc(select=[X0, X00 AS X1]): rowcount = 20453.201813503878, cumulative cost = {1.6135322648430951E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :  :     :              :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20453.201813503878, cumulative cost = {1.6114869446617447E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :  :     :              :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :     :              :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :     :              :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :  :     :                    +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     +- Exchange(distribution=[broadcast]): rowcount = 1476.1316766932337, cumulative cost = {3190438.391063945 rows, 8218016.524695228 cpu, 5.5382172E7 io, 271632.228511555 network, 1239668.3641115595 memory}
         :  :     :              :  :        +- Calc(select=[X0, X1]): rowcount = 1476.1316766932337, cumulative cost = {3188962.2593872515 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :  :     :              :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1476.1316766932337, cumulative cost = {3187486.127710558 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :  :     :              :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3185295.9960338646 rows, 7845988.433667338 cpu, 5.5377888E7 io, 231921.0682709174 network, 1226816.3641115595 memory}
         :  :     :              :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9483.877844621558, cumulative cost = {3175812.118189243 rows, 7694246.388153394 cpu, 5.5377888E7 io, 231921.0682709174 network, 619848.1820557797 memory}
         :  :     :              :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3166328.2403446217 rows, 6025083.887499999 cpu, 5.5377888E7 io, 4308.0 network, 619848.1820557797 memory}
         :  :     :              :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52319.2875, cumulative cost = {3156844.3625000003 rows, 5187975.2875 cpu, 5.5377888E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 72352.6356629551, cumulative cost = {1.977861662322372E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 72352.6356629551, cumulative cost = {1.9706263987560764E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :  :     :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 347472.35733970144, cumulative cost = {6595054.951077811 rows, 8.381663367335334E7 cpu, 1.10747004E8 io, 8791994.924857302 network, 1734934.3367004544 memory}
         :  :     :              :           +- Calc(select=[x, X0]): rowcount = 347472.35733970144, cumulative cost = {6247582.59373811 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347472.35733970144, cumulative cost = {5900110.236398408 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 9428.382264676382, cumulative cost = {3245583.8790587066 rows, 6909418.582166087 cpu, 5.5377708E7 io, 452658.34870446636 network, 1206944.929878577 memory}
         :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 397999.7697901433, cumulative cost = {1.1997216404196285E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 397999.7697901433, cumulative cost = {1.1599216634406142E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 346277.7986009552, cumulative cost = {6587108.864615999 rows, 8.24099170759656E7 cpu, 1.10751036E8 io, 8576228.116927994 network, 1301061.7409018585 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 346277.7986009552, cumulative cost = {6240831.066015044 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346277.7986009552, cumulative cost = {5894553.267414089 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1464.6573397014572, cumulative cost = {3241221.4688131344 rows, 5767097.65228751 cpu, 5.538174E7 io, 265560.9505050682 network, 1219040.929878577 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 1464.6573397014572, cumulative cost = {3239756.811473433 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1464.6573397014572, cumulative cost = {3238292.1541337315 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 357844.50021662685, cumulative cost = {5.8028053879504174E7 rows, 2.5791536578711247E9 cpu, 6.64473348E8 io, 3.32321392526651E8 network, 1.2813923696775347E8 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 357844.50021662685, cumulative cost = {5.767020937928755E7 rows, 2.5190357818347316E9 cpu, 6.64473348E8 io, 3.2373312452145195E8 network, 1.2813923696775347E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 357844.50021662685, cumulative cost = {5.731236487907092E7 rows, 2.5190357818347316E9 cpu, 6.64473348E8 io, 3.2373312452145195E8 network, 1.2813923696775347E8 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 78576.00144417898, cumulative cost = {5.23404123788543E7 rows, 2.112365669823178E9 cpu, 6.09104052E8 io, 2.6836382852145195E8 network, 1.2373898088687944E8 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 78576.00144417898, cumulative cost = {5.226183637741012E7 rows, 2.099164901580556E9 cpu, 6.09104052E8 io, 2.6647800448679164E8 network, 1.2373898088687944E8 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 78576.00144417898, cumulative cost = {5.2183260375965945E7 rows, 2.097907685557449E9 cpu, 6.09104052E8 io, 2.6647800448679164E8 network, 1.1871011679445198E8 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 78576.00144417898, cumulative cost = {5.210468437452177E7 rows, 2.0840783093032737E9 cpu, 6.09104052E8 io, 2.6459218045213133E8 network, 1.1871011679445198E8 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 433476.7357310327, cumulative cost = {5.2026108373077594E7 rows, 2.077142681531577E9 cpu, 6.09104052E8 io, 2.6459218045213133E8 network, 1.1368125270202452E8 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 82964.62103244415, cumulative cost = {2.791465791749914E7 rows, 1.099247765297604E9 cpu, 3.32236812E8 io, 1.4008200108852938E8 network, 6.731362981813665E7 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 82964.62103244415, cumulative cost = {2.7831693296466697E7 rows, 1.099247765297604E9 cpu, 3.32236812E8 io, 1.4008200108852938E8 network, 6.731362981813665E7 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 197620.20882615735, cumulative cost = {1.8470709405304633E7 rows, 5.977566769974166E8 cpu, 2.21493912E8 io, 7.316709402365556E7 network, 4.4692694729748145E7 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 197620.20882615735, cumulative cost = {1.8273089196478475E7 rows, 5.645564819146222E8 cpu, 2.21493912E8 io, 6.842420901182778E7 network, 4.4692694729748145E7 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 197620.20882615735, cumulative cost = {1.8075468987652317E7 rows, 5.613945585734037E8 cpu, 2.21493912E8 io, 6.842420901182778E7 network, 3.2045001364874072E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 197620.20882615735, cumulative cost = {1.787784877882616E7 rows, 5.2661340182E8 cpu, 2.21493912E8 io, 6.3681324E7 network, 3.2045001364874072E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1090202.6249999998, cumulative cost = {1.768022857E7 rows, 5.0917015982E8 cpu, 2.21493912E8 io, 6.3681324E7 network, 1.9397308E7 memory}
         :  :                             :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 1090098.6749999998, cumulative cost = {1.6588789045000002E7 rows, 5.08020653195E8 cpu, 2.21485596E8 io, 6.3677292E7 network, 1.9385212E7 memory}
         :  :                             :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 744032.5199999999, cumulative cost = {1.249898396E7 rows, 4.8846458391999996E8 cpu, 1.66111992E8 io, 6.36759792E7 network, 1.93821768E7 memory}
         :  :                             :     :              :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755276.425 rows, 4.69255131E8 cpu, 1.1073864E8 io, 6.3674742E7 network, 1.9379318E7 memory}
         :  :                             :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357309.5875 rows, 4.69255131E8 cpu, 1.1073864E8 io, 6.3674742E7 network, 1.9379318E7 memory}
         :  :                             :     :              :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :                             :     :              :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 346058.25, cumulative cost = {3345234.75 rows, 6.0445161E7 cpu, 5.5369344E7 io, 8305446.0 network, 56.0 memory}
         :  :                             :     :              :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 346058.25, cumulative cost = {2999176.5 rows, 2307375.0 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :                             :     :              :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653118.25 rows, 2307375.0 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :                             :     :              :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :                             :     :              :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 346065.68249999994, cumulative cost = {2999675.015 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :                             :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346065.68249999994, cumulative cost = {2653609.3325 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :                             :     :              :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :  :                             :     :              :  :           +- Calc(select=[x0, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346066.155, cumulative cost = {2999706.41 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
         :  :                             :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346066.155, cumulative cost = {2653640.2550000004 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
         :  :                             :     :              :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :        +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :  :                             :     :              :           +- Calc(select=[x, y]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :                             :     :                    :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 350512.11469858856, cumulative cost = {2.3677973719847422E7 rows, 9.774614394982419E8 cpu, 2.7686724E8 io, 1.2451017936360195E8 network, 4.6367622883887865E7 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 350512.11469858856, cumulative cost = {2.3327461605148833E7 rows, 9.774614394982419E8 cpu, 2.7686724E8 io, 1.2451017936360195E8 network, 4.6367622883887865E7 memory}
         :  :                                   :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :                                   :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[hash[X0]]): rowcount = 29693.4313239236, cumulative cost = {1.8362841490450244E7 rows, 5.711823880476506E8 cpu, 2.21497944E8 io, 6.914088336360195E7 network, 4.4704790729748145E7 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 29693.4313239236, cumulative cost = {1.833314805912632E7 rows, 5.661938915852314E8 cpu, 2.21497944E8 io, 6.842824101182778E7 network, 4.4704790729748145E7 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 29693.4313239236, cumulative cost = {1.8303454627802398E7 rows, 5.661938915852314E8 cpu, 2.21497944E8 io, 6.842824101182778E7 network, 4.4704790729748145E7 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 197620.20882615735, cumulative cost = {1.8273089196478475E7 rows, 5.645564819146222E8 cpu, 2.21493912E8 io, 6.842420901182778E7 network, 4.4692694729748145E7 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 197620.20882615735, cumulative cost = {1.8075468987652317E7 rows, 5.613945585734037E8 cpu, 2.21493912E8 io, 6.842420901182778E7 network, 3.2045001364874072E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 197620.20882615735, cumulative cost = {1.787784877882616E7 rows, 5.2661340182E8 cpu, 2.21493912E8 io, 6.3681324E7 network, 3.2045001364874072E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 1090202.6249999998, cumulative cost = {1.768022857E7 rows, 5.0917015982E8 cpu, 2.21493912E8 io, 6.3681324E7 network, 1.9397308E7 memory}
         :  :                                            :           :- Union(all=[true], union=[X0, X1]): rowcount = 1090098.6749999998, cumulative cost = {1.6588789045000002E7 rows, 5.08020653195E8 cpu, 2.21485596E8 io, 6.3677292E7 network, 1.9385212E7 memory}
         :  :                                            :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 744032.5199999999, cumulative cost = {1.249898396E7 rows, 4.8846458391999996E8 cpu, 1.66111992E8 io, 6.36759792E7 network, 1.93821768E7 memory}
         :  :                                            :           :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755276.425 rows, 4.69255131E8 cpu, 1.1073864E8 io, 6.3674742E7 network, 1.9379318E7 memory}
         :  :                                            :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357309.5875 rows, 4.69255131E8 cpu, 1.1073864E8 io, 6.3674742E7 network, 1.9379318E7 memory}
         :  :                                            :           :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :                                            :           :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 346058.25, cumulative cost = {3345234.75 rows, 6.0445161E7 cpu, 5.5369344E7 io, 8305446.0 network, 56.0 memory}
         :  :                                            :           :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 346058.25, cumulative cost = {2999176.5 rows, 2307375.0 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :                                            :           :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653118.25 rows, 2307375.0 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :                                            :           :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :                                            :           :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 346065.68249999994, cumulative cost = {2999675.015 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :                                            :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346065.68249999994, cumulative cost = {2653609.3325 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :                                            :           :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :  :                                            :           :  :           +- Calc(select=[x0, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346066.155, cumulative cost = {2999706.41 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
         :  :                                            :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346066.155, cumulative cost = {2653640.2550000004 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
         :  :                                            :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :        +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :  :                                            :           :           +- Calc(select=[x, y]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :                                            :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 13353.249422148121, cumulative cost = {4.8788897607881285E7 rows, 1.6897399532152653E9 cpu, 6.64478208E8 io, 2.122149545676005E8 network, 1.1600720966645502E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 13353.249422148121, cumulative cost = {4.877554435845914E7 rows, 1.6897399532152653E9 cpu, 6.64478208E8 io, 2.122149545676005E8 network, 1.1600720966645502E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 88967.96281432081, cumulative cost = {4.876167100903699E7 rows, 1.6890186709127507E9 cpu, 6.644739E8 io, 2.1221364176760048E8 network, 1.1600417446645501E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 88967.96281432081, cumulative cost = {4.8672703046222664E7 rows, 1.6875951835077217E9 cpu, 6.644739E8 io, 2.1221364176760048E8 network, 1.1031022484633848E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 88967.96281432081, cumulative cost = {4.858373508340834E7 rows, 1.6719368220524013E9 cpu, 6.644739E8 io, 2.1007841066005677E8 network, 1.1031022484633848E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 490805.6072666023, cumulative cost = {4.849476712059402E7 rows, 1.6640839323361356E9 cpu, 6.644739E8 io, 2.1007841066005677E8 network, 1.0461627522622195E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 92805.83747645898, cumulative cost = {3.600674510913113E7 rows, 1.1723714832640958E9 cpu, 4.98353568E8 io, 1.461328865431288E8 network, 8.39236567636666E7 memory}
         :        :           :  :- Calc(select=[X0, X00 AS X1]): rowcount = 20453.201813503878, cumulative cost = {1.6135322648430951E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20453.201813503878, cumulative cost = {1.6114869446617447E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :           :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :  :     :                    +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1476.1316766932337, cumulative cost = {3190438.391063945 rows, 8218016.524695228 cpu, 5.5382172E7 io, 271632.228511555 network, 1239668.3641115595 memory}
         :        :           :  :        +- Calc(select=[X0, X1]): rowcount = 1476.1316766932337, cumulative cost = {3188962.2593872515 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1476.1316766932337, cumulative cost = {3187486.127710558 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3185295.9960338646 rows, 7845988.433667338 cpu, 5.5377888E7 io, 231921.0682709174 network, 1226816.3641115595 memory}
         :        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9483.877844621558, cumulative cost = {3175812.118189243 rows, 7694246.388153394 cpu, 5.5377888E7 io, 231921.0682709174 network, 619848.1820557797 memory}
         :        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3166328.2403446217 rows, 6025083.887499999 cpu, 5.5377888E7 io, 4308.0 network, 619848.1820557797 memory}
         :        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52319.2875, cumulative cost = {3156844.3625000003 rows, 5187975.2875 cpu, 5.5377888E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 72352.6356629551, cumulative cost = {1.977861662322372E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 72352.6356629551, cumulative cost = {1.9706263987560764E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :        :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 347472.35733970144, cumulative cost = {6595054.951077811 rows, 8.381663367335334E7 cpu, 1.10747004E8 io, 8791994.924857302 network, 1734934.3367004544 memory}
         :        :           :           +- Calc(select=[x, X0]): rowcount = 347472.35733970144, cumulative cost = {6247582.59373811 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347472.35733970144, cumulative cost = {5900110.236398408 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 9428.382264676382, cumulative cost = {3245583.8790587066 rows, 6909418.582166087 cpu, 5.5377708E7 io, 452658.34870446636 network, 1206944.929878577 memory}
         :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 397999.7697901433, cumulative cost = {1.1997216404196285E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 397999.7697901433, cumulative cost = {1.1599216634406142E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 346277.7986009552, cumulative cost = {6587108.864615999 rows, 8.24099170759656E7 cpu, 1.10751036E8 io, 8576228.116927994 network, 1301061.7409018585 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 346277.7986009552, cumulative cost = {6240831.066015044 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346277.7986009552, cumulative cost = {5894553.267414089 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1464.6573397014572, cumulative cost = {3241221.4688131344 rows, 5767097.65228751 cpu, 5.538174E7 io, 265560.9505050682 network, 1219040.929878577 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 1464.6573397014572, cumulative cost = {3239756.811473433 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1464.6573397014572, cumulative cost = {3238292.1541337315 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 15326.691878392887, cumulative cost = {1.0149386977811088E8 rows, 3.8421606048107595E9 cpu, 1.273576776E9 io, 4.832457586923491E8 network, 2.4224727262166193E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 15326.691878392887, cumulative cost = {1.0147854308623248E8 rows, 3.8421606048107595E9 cpu, 1.273576776E9 io, 4.832457586923491E8 network, 2.4224727262166193E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 90341.14563932574, cumulative cost = {4.916519761629408E7 rows, 1.7395993356171422E9 cpu, 6.64468692E8 io, 2.164796390003584E8 network, 1.1783333492265138E8 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 90341.14563932574, cumulative cost = {4.9074856470654756E7 rows, 1.738153877286913E9 cpu, 6.64468692E8 io, 2.164796390003584E8 network, 1.1205150160173453E8 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 90341.14563932574, cumulative cost = {4.898451532501543E7 rows, 1.7222538356543915E9 cpu, 6.64468692E8 io, 2.143114515050146E8 network, 1.1205150160173453E8 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 498380.98394147574, cumulative cost = {4.889417417937611E7 rows, 1.7142797399113278E9 cpu, 6.64468692E8 io, 2.143114515050146E8 network, 1.0626966828081769E8 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 470353.72812947584, cumulative cost = {3.214431580799064E7 rows, 1.1332369281144466E9 cpu, 4.42978884E8 io, 1.4290268744517463E8 network, 6.667781405457778E7 memory}
               :           :  :- Calc(select=[x AS X0, X1]): rowcount = 397999.94231314905, cumulative cost = {1.1946256119052742E7 rows, 4.9366387496156937E8 cpu, 1.66120008E8 io, 6.395092257541156E7 network, 2.0711667356473174E7 memory}
               :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 397999.94231314905, cumulative cost = {1.1548256176739592E7 rows, 4.9366387496156937E8 cpu, 1.66120008E8 io, 6.395092257541156E7 network, 2.0711667356473174E7 memory}
               :           :  :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :     +- Exchange(distribution=[hash[x]]): rowcount = 346278.9487543269, cumulative cost = {6536148.234426444 rows, 8.485213937153476E7 cpu, 1.10750712E8 io, 8581626.575411558 network, 1320046.2262308649 memory}
               :           :  :        +- Calc(select=[x, X1]): rowcount = 346278.9487543269, cumulative cost = {6189869.285672117 rows, 2.667727598080785E7 cpu, 1.10750712E8 io, 270931.80530771165 network, 1320046.2262308649 memory}
               :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346278.9487543269, cumulative cost = {5843590.336917791 rows, 2.667727598080785E7 cpu, 1.10750712E8 io, 270931.80530771165 network, 1320046.2262308649 memory}
               :           :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 1472.3250288462589, cumulative cost = {3190257.3881634637 rows, 8209065.380577081 cpu, 5.5381416E7 io, 270931.80530771165 network, 1237596.0246154743 memory}
               :           :  :                 +- Calc(select=[X0, X1]): rowcount = 1472.3250288462589, cumulative cost = {3188785.0631346176 rows, 7973493.375961679 cpu, 5.5381416E7 io, 235596.00461540144 network, 1237596.0246154743 memory}
               :           :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1472.3250288462589, cumulative cost = {3187312.7381057716 rows, 7973493.375961679 cpu, 5.5381416E7 io, 235596.00461540144 network, 1237596.0246154743 memory}
               :           :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :           :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :           :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :           :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :                       +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[X0, X10 AS X1]): rowcount = 72353.78581632682, cumulative cost = {1.9727705960808422E7 rows, 6.391026994247477E8 cpu, 2.76858876E8 io, 7.895176486976308E7 network, 4.596614669810461E7 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 72353.78581632682, cumulative cost = {1.9655352174992096E7 rows, 6.391026994247477E8 cpu, 2.76858876E8 io, 7.895176486976308E7 network, 4.596614669810461E7 memory}
               :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
               :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
               :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
               :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
               :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
               :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :           :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :        +- Exchange(distribution=[hash[x]]): rowcount = 347480.0250288462, cumulative cost = {6544141.988355773 rows, 8.626684161157718E7 cpu, 1.1074668E8 io, 8798592.609923113 network, 1756352.0353847444 memory}
               :           :           +- Calc(select=[x, X1]): rowcount = 347480.0250288462, cumulative cost = {6196661.963326926 rows, 2.789019740673102E7 cpu, 1.1074668E8 io, 459072.0092308029 network, 1756352.0353847444 memory}
               :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347480.0250288462, cumulative cost = {5849181.93829808 rows, 2.789019740673102E7 cpu, 1.1074668E8 io, 459072.0092308029 network, 1756352.0353847444 memory}
               :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :                 +- Exchange(distribution=[broadcast]): rowcount = 9479.500192308393, cumulative cost = {3194647.913269234 rows, 9357929.405192554 cpu, 5.5377384E7 io, 459072.0092308029 network, 1225500.0246154743 memory}
               :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :           :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :                                :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :                                :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, y AS X1]): rowcount = 28027.255811999894, cumulative cost = {1.6251477387443997E7 rows, 5.805444308129398E8 cpu, 2.21489808E8 io, 7.140876405983996E7 network, 3.959185422623991E7 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x1)], select=[X0, X1, y, x1], build=[right]): rowcount = 28027.255811999894, cumulative cost = {1.6223450131631996E7 rows, 5.805444308129398E8 cpu, 2.21489808E8 io, 7.140876405983996E7 network, 3.959185422623991E7 memory}
               :                 :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
               :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
               :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
               :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
               :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
               :                 :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :                 :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                 :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[hash[x1]]): rowcount = 51969.825, cumulative cost = {3156566.4750000006 rows, 3.00726546E7 cpu, 5.5377612E7 io, 1255591.7999999998 network, 24948.0 memory}
               :                    +- Calc(select=[y, x0 AS x1]): rowcount = 51969.825, cumulative cost = {3104596.6500000004 rows, 2.1341724E7 cpu, 5.5377612E7 io, 8316.0 network, 24948.0 memory}
               :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 51969.825, cumulative cost = {3052626.825 rows, 2.1341724E7 cpu, 5.5377612E7 io, 8316.0 network, 24948.0 memory}
               :                          :- Calc(select=[x, y]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :                          :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :                          :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                          :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :                          :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 11836.800216626847, cumulative cost = {5.229801877806001E7 rows, 2.1017438456267698E9 cpu, 6.09108084E8 io, 2.6676611969199067E8 network, 1.2375107688687944E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 11836.800216626847, cumulative cost = {5.228618197784338E7 rows, 2.0998499575921094E9 cpu, 6.09108084E8 io, 2.6648203648679164E8 network, 1.2375107688687944E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 11836.800216626847, cumulative cost = {5.227434517762675E7 rows, 2.0998499575921094E9 cpu, 6.09108084E8 io, 2.6648203648679164E8 network, 1.2375107688687944E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 78576.00144417898, cumulative cost = {5.226183637741012E7 rows, 2.099164901580556E9 cpu, 6.09104052E8 io, 2.6647800448679164E8 network, 1.2373898088687944E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 78576.00144417898, cumulative cost = {5.2183260375965945E7 rows, 2.097907685557449E9 cpu, 6.09104052E8 io, 2.6647800448679164E8 network, 1.1871011679445198E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 78576.00144417898, cumulative cost = {5.210468437452177E7 rows, 2.0840783093032737E9 cpu, 6.09104052E8 io, 2.6459218045213133E8 network, 1.1871011679445198E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 433476.7357310327, cumulative cost = {5.2026108373077594E7 rows, 2.077142681531577E9 cpu, 6.09104052E8 io, 2.6459218045213133E8 network, 1.1368125270202452E8 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 82964.62103244415, cumulative cost = {2.791465791749914E7 rows, 1.099247765297604E9 cpu, 3.32236812E8 io, 1.4008200108852938E8 network, 6.731362981813665E7 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 82964.62103244415, cumulative cost = {2.7831693296466697E7 rows, 1.099247765297604E9 cpu, 3.32236812E8 io, 1.4008200108852938E8 network, 6.731362981813665E7 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 197620.20882615735, cumulative cost = {1.8470709405304633E7 rows, 5.977566769974166E8 cpu, 2.21493912E8 io, 7.316709402365556E7 network, 4.4692694729748145E7 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 197620.20882615735, cumulative cost = {1.8273089196478475E7 rows, 5.645564819146222E8 cpu, 2.21493912E8 io, 6.842420901182778E7 network, 4.4692694729748145E7 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 197620.20882615735, cumulative cost = {1.8075468987652317E7 rows, 5.613945585734037E8 cpu, 2.21493912E8 io, 6.842420901182778E7 network, 3.2045001364874072E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 197620.20882615735, cumulative cost = {1.787784877882616E7 rows, 5.2661340182E8 cpu, 2.21493912E8 io, 6.3681324E7 network, 3.2045001364874072E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1090202.6249999998, cumulative cost = {1.768022857E7 rows, 5.0917015982E8 cpu, 2.21493912E8 io, 6.3681324E7 network, 1.9397308E7 memory}
                        :           :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 1090098.6749999998, cumulative cost = {1.6588789045000002E7 rows, 5.08020653195E8 cpu, 2.21485596E8 io, 6.3677292E7 network, 1.9385212E7 memory}
                        :           :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 744032.5199999999, cumulative cost = {1.249898396E7 rows, 4.8846458391999996E8 cpu, 1.66111992E8 io, 6.36759792E7 network, 1.93821768E7 memory}
                        :           :     :              :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755276.425 rows, 4.69255131E8 cpu, 1.1073864E8 io, 6.3674742E7 network, 1.9379318E7 memory}
                        :           :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357309.5875 rows, 4.69255131E8 cpu, 1.1073864E8 io, 6.3674742E7 network, 1.9379318E7 memory}
                        :           :     :              :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :           :     :              :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 346058.25, cumulative cost = {3345234.75 rows, 6.0445161E7 cpu, 5.5369344E7 io, 8305446.0 network, 56.0 memory}
                        :           :     :              :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 346058.25, cumulative cost = {2999176.5 rows, 2307375.0 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
                        :           :     :              :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653118.25 rows, 2307375.0 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
                        :           :     :              :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
                        :           :     :              :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 346065.68249999994, cumulative cost = {2999675.015 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
                        :           :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346065.68249999994, cumulative cost = {2653609.3325 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
                        :           :     :              :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
                        :           :     :              :  :           +- Calc(select=[x0, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346066.155, cumulative cost = {2999706.41 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
                        :           :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346066.155, cumulative cost = {2653640.2550000004 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
                        :           :     :              :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :        +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
                        :           :     :              :           +- Calc(select=[x, y]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                        :           :     :                    :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 350512.11469858856, cumulative cost = {2.3677973719847422E7 rows, 9.774614394982419E8 cpu, 2.7686724E8 io, 1.2451017936360195E8 network, 4.6367622883887865E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 350512.11469858856, cumulative cost = {2.3327461605148833E7 rows, 9.774614394982419E8 cpu, 2.7686724E8 io, 1.2451017936360195E8 network, 4.6367622883887865E7 memory}
                        :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[hash[X0]]): rowcount = 29693.4313239236, cumulative cost = {1.8362841490450244E7 rows, 5.711823880476506E8 cpu, 2.21497944E8 io, 6.914088336360195E7 network, 4.4704790729748145E7 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 29693.4313239236, cumulative cost = {1.833314805912632E7 rows, 5.661938915852314E8 cpu, 2.21497944E8 io, 6.842824101182778E7 network, 4.4704790729748145E7 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 29693.4313239236, cumulative cost = {1.8303454627802398E7 rows, 5.661938915852314E8 cpu, 2.21497944E8 io, 6.842824101182778E7 network, 4.4704790729748145E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 197620.20882615735, cumulative cost = {1.8273089196478475E7 rows, 5.645564819146222E8 cpu, 2.21493912E8 io, 6.842420901182778E7 network, 4.4692694729748145E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 197620.20882615735, cumulative cost = {1.8075468987652317E7 rows, 5.613945585734037E8 cpu, 2.21493912E8 io, 6.842420901182778E7 network, 3.2045001364874072E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 197620.20882615735, cumulative cost = {1.787784877882616E7 rows, 5.2661340182E8 cpu, 2.21493912E8 io, 6.3681324E7 network, 3.2045001364874072E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 1090202.6249999998, cumulative cost = {1.768022857E7 rows, 5.0917015982E8 cpu, 2.21493912E8 io, 6.3681324E7 network, 1.9397308E7 memory}
                        :                          :           :- Union(all=[true], union=[X0, X1]): rowcount = 1090098.6749999998, cumulative cost = {1.6588789045000002E7 rows, 5.08020653195E8 cpu, 2.21485596E8 io, 6.3677292E7 network, 1.9385212E7 memory}
                        :                          :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 744032.5199999999, cumulative cost = {1.249898396E7 rows, 4.8846458391999996E8 cpu, 1.66111992E8 io, 6.36759792E7 network, 1.93821768E7 memory}
                        :                          :           :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755276.425 rows, 4.69255131E8 cpu, 1.1073864E8 io, 6.3674742E7 network, 1.9379318E7 memory}
                        :                          :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357309.5875 rows, 4.69255131E8 cpu, 1.1073864E8 io, 6.3674742E7 network, 1.9379318E7 memory}
                        :                          :           :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :                          :           :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 346058.25, cumulative cost = {3345234.75 rows, 6.0445161E7 cpu, 5.5369344E7 io, 8305446.0 network, 56.0 memory}
                        :                          :           :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 346058.25, cumulative cost = {2999176.5 rows, 2307375.0 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
                        :                          :           :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653118.25 rows, 2307375.0 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
                        :                          :           :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
                        :                          :           :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 346065.68249999994, cumulative cost = {2999675.015 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
                        :                          :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346065.68249999994, cumulative cost = {2653609.3325 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
                        :                          :           :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
                        :                          :           :  :           +- Calc(select=[x0, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346066.155, cumulative cost = {2999706.41 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
                        :                          :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346066.155, cumulative cost = {2653640.2550000004 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
                        :                          :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :        +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
                        :                          :           :           +- Calc(select=[x, y]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
                        :                          :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :                          :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                        :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,2,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#2] Exchange(distribution=[hash[X1]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[X0]])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[7])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[1,0,2,1,3,2,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[x0 AS X0, y AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y, x0, y00], build=[right])\n:  :  :     :- [#5] Exchange(distribution=[hash[x]])\n:  :  :     +- [#6] Exchange(distribution=[hash[y00]])\n:  :  +- Calc(select=[x AS X0, y0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])\n:  :        :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:  :        +- [#8] Exchange(distribution=[broadcast])\n:  +- Calc(select=[x0 AS X0, y AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])\n:        :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, x AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0], isBroadcast=[true], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[1])
         :        :           :              :- Exchange(distribution=[broadcast])(reuse_id=[8])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[5])
         :        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[2])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[x, y])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])
         :        :           :              :        :- Reused(reference_id=[1])
         :        :           :              :        +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :        :           :              :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[4])
         :        :           :              :- Exchange(distribution=[hash[x]])(reuse_id=[6])
         :        :           :              :  +- Reused(reference_id=[2])
         :        :           :              :- Exchange(distribution=[hash[y00]])
         :        :           :              :  +- Calc(select=[x, y0 AS y00])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :              :        :- Reused(reference_id=[2])
         :        :           :              :        +- Exchange(distribution=[broadcast])
         :        :           :              :           +- Calc(select=[x, y0])
         :        :           :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[left])
         :        :           :              :                 :- Reused(reference_id=[3])
         :        :           :              :                 +- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :                    +- Reused(reference_id=[4])
         :        :           :              :- Reused(reference_id=[2])
         :        :           :              +- Exchange(distribution=[broadcast])
         :        :           :                 +- Calc(select=[x0, y])
         :        :           :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])
         :        :           :                       :- Reused(reference_id=[5])
         :        :           :                       +- Reused(reference_id=[3])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Reused(reference_id=[6])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[13])
         :        :           :                       :  +- Reused(reference_id=[1])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[10])
         :        :           :                             :- Reused(reference_id=[2])
         :        :           :                             +- Reused(reference_id=[3])
         :        :           :- Exchange(distribution=[hash[y]])(reuse_id=[9])
         :        :           :  +- Reused(reference_id=[2])
         :        :           +- Exchange(distribution=[hash[X0]])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[7])
         :        :                    +- Reused(reference_id=[8])
         :        +- Reused(reference_id=[8])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[17])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], build=[left])\n:        :- [#5] Exchange(distribution=[hash[X1]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Reused(reference_id=[9])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[2])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Calc(select=[y, x0])(reuse_id=[20])
         :              :                 :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :              :                 :           :  :     :- Reused(reference_id=[2])
         :              :                 :           :  :     +- Reused(reference_id=[3])
         :              :                 :           :  :- Reused(reference_id=[3])
         :              :                 :           :  :- Reused(reference_id=[5])
         :              :                 :           :  +- Reused(reference_id=[3])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[18])
         :              :                 :                 :- Reused(reference_id=[1])
         :              :                 :                 +- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[8])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[14])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :           :- Reused(reference_id=[2])
         :              :           :- Exchange(distribution=[broadcast])(reuse_id=[11])
         :              :           :  +- Reused(reference_id=[1])
         :              :           :- Reused(reference_id=[9])
         :              :           +- Exchange(distribution=[hash[x]])
         :              :              +- Calc(select=[x, y0])(reuse_id=[12])
         :              :                 +- Reused(reference_id=[10])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[11])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[12])
         :              :                 :     +- Reused(reference_id=[11])
         :              :                 +- Reused(reference_id=[13])
         :              :- Exchange(distribution=[hash[X1]])(reuse_id=[19])
         :              :  +- Reused(reference_id=[14])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, X0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :                       :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                       :  +- Reused(reference_id=[2])
         :                       +- Exchange(distribution=[broadcast])
         :                          +- Reused(reference_id=[15])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[2])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[16])
         :- Reused(reference_id=[17])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[x, x0])
         :     +- Reused(reference_id=[18])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[1,0,1,0,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#3] Exchange(distribution=[hash[y]])\n:  :     +- [#4] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#1] Exchange(distribution=[hash[X1]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x1)], select=[X0, X1, y, x1], build=[right])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#2] Exchange(distribution=[hash[x1]])\n])
                  :- Reused(reference_id=[19])
                  :- Exchange(distribution=[hash[x1]])
                  :  +- Calc(select=[y, x0 AS x1])
                  :     +- MultipleInput(readOrder=[0,1,0], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:- Calc(select=[x, y])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#2] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#3] Exchange(distribution=[broadcast])\n+- [#1] Exchange(distribution=[broadcast])\n])
                  :        :- Reused(reference_id=[11])
                  :        :- Reused(reference_id=[2])
                  :        +- Reused(reference_id=[8])
                  :- Reused(reference_id=[9])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[2])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Calc(select=[X0, X1])
                  :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                  :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
                  :                 :  +- Exchange(distribution=[hash[X0, X1]])
                  :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :                 :        +- Union(all=[true], union=[X0, X1])
                  :                 :           :- Calc(select=[x0 AS X0, y AS X1])
                  :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :                 :           :     :- Reused(reference_id=[20])
                  :                 :           :     +- Reused(reference_id=[8])
                  :                 :           +- Calc(select=[x AS X0, x AS X1])
                  :                 :              +- Reused(reference_id=[5])
                  :                 +- Reused(reference_id=[8])
                  :- Reused(reference_id=[19])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, X1])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                           :  +- Reused(reference_id=[2])
                           +- Exchange(distribution=[broadcast])
                              +- Reused(reference_id=[21])

Job has been submitted with JobID cc9b981a07bac5bf001d4103fc770877
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, r_3.y AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x UNION (SELECT r_0.x AS X0, s_1.y AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x) UNION (SELECT b_0.x AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN s AS s_1 ON b_0.x = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x) UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...

------------> using sink uuid: 4a02725b_9370_4ed1_9147_5cd91bf4e8af

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, r_3.y AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN s AS s_2 ON s_1.y = s_2.x
                      INNER JOIN r AS r_3 ON s_2.y = r_3.x
             UNION
             (SELECT r_0.x AS X0, s_1.y AS X1
              FROM r AS r_0
                       INNER JOIN s AS s_1 ON r_0.y = s_1.x
                       INNER JOIN a AS a_2 ON s_1.y = a_2.x)
             UNION
             (SELECT b_0.x AS X0, r_2.y AS X1
              FROM b AS b_0
                       INNER JOIN s AS s_1 ON b_0.x = s_1.x
                       INNER JOIN r AS r_2 ON s_1.y = r_2.x)
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1
              FROM b AS b_0
                       INNER JOIN a AS a_1 ON b_0.x = a_1.x)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0)
            UNION
            (SELECT p19_0.X0 AS X0, r_2.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)),
     p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1
             FROM p19 AS p19_0
                      INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1
                      INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalUnion(all=[false])
   :  :        :        :  :- LogicalUnion(all=[false])
   :  :        :        :  :  :- LogicalProject(X0=[$0], X1=[$7])
   :  :        :        :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :        :        :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :        :        :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalUnion(all=[false])
   :  :              :  :  :  :- LogicalUnion(all=[false])
   :  :              :  :  :  :  :- LogicalProject(X0=[$0], X1=[$7])
   :  :              :  :  :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :              :  :  :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :              :  :  :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  +- LogicalUnion(all=[false])
   :        :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalUnion(all=[false])
         :     :        :  :- LogicalUnion(all=[false])
         :     :        :  :  :- LogicalProject(X0=[$0], X1=[$7])
         :     :        :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :     :        :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :     :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        :  +- LogicalProject(X0=[$0], X1=[$4])
         :     :        :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
         :     :        :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalUnion(all=[false])
         :           :  :  :  :- LogicalUnion(all=[false])
         :           :  :  :  :  :- LogicalProject(X0=[$0], X1=[$7])
         :           :  :  :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :           :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :           :  :  :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
         :           :  :  :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 17347.79516466555, cumulative cost = {2.5752362429138294E8 rows, 9.823632086840284E9 cpu, 3.267002232E9 io, 1.2425473257456965E9 network, 6.096006174210045E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 17347.79516466555, cumulative cost = {2.5750627649621826E8 rows, 9.82335452211765E9 cpu, 3.267002232E9 io, 1.2425473257456965E9 network, 6.08490358530466E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 17347.79516466555, cumulative cost = {2.574889287010536E8 rows, 9.820301310168669E9 cpu, 3.267002232E9 io, 1.2421309786617446E9 network, 6.08490358530466E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 95701.81075518315, cumulative cost = {2.5747158090588892E8 rows, 9.818770081196587E9 cpu, 3.267002232E9 io, 1.2421309786617446E9 network, 6.073800996399274E8 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 80375.11887679026, cumulative cost = {1.5588200931702283E8 rows, 5.976513774575071E9 cpu, 1.993425456E9 io, 7.588852199693956E8 network, 3.651328270182655E8 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 67021.86945464215, cumulative cost = {1.0701273659026477E8 rows, 4.2866934462409286E9 cpu, 1.328947248E9 io, 5.466702654017951E8 network, 2.4912561735181046E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 67021.86945464215, cumulative cost = {1.0694571472081013E8 rows, 4.2866934462409286E9 cpu, 1.328947248E9 io, 5.466702654017951E8 network, 2.4912561735181046E8 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 88967.96281432081, cumulative cost = {4.885063897185131E7 rows, 1.7039652886655567E9 cpu, 6.644739E8 io, 2.1434887287514418E8 network, 1.1600417446645501E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 88967.96281432081, cumulative cost = {4.876167100903699E7 rows, 1.6890186709127507E9 cpu, 6.644739E8 io, 2.1221364176760048E8 network, 1.1600417446645501E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 88967.96281432081, cumulative cost = {4.8672703046222664E7 rows, 1.6875951835077217E9 cpu, 6.644739E8 io, 2.1221364176760048E8 network, 1.1031022484633848E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 88967.96281432081, cumulative cost = {4.858373508340834E7 rows, 1.6719368220524013E9 cpu, 6.644739E8 io, 2.1007841066005677E8 network, 1.1031022484633848E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 490805.6072666023, cumulative cost = {4.849476712059402E7 rows, 1.6640839323361356E9 cpu, 6.644739E8 io, 2.1007841066005677E8 network, 1.0461627522622195E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 92805.83747645898, cumulative cost = {3.600674510913113E7 rows, 1.1723714832640958E9 cpu, 4.98353568E8 io, 1.461328865431288E8 network, 8.39236567636666E7 memory}
         :  :     :              :  :- Calc(select=[X0, X00 AS X1]): rowcount = 20453.201813503878, cumulative cost = {1.6135322648430951E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :  :     :              :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20453.201813503878, cumulative cost = {1.6114869446617447E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :  :     :              :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :     :              :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :     :              :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :  :     :                    +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     +- Exchange(distribution=[broadcast]): rowcount = 1476.1316766932337, cumulative cost = {3190438.391063945 rows, 8218016.524695228 cpu, 5.5382172E7 io, 271632.228511555 network, 1239668.3641115595 memory}
         :  :     :              :  :        +- Calc(select=[X0, X1]): rowcount = 1476.1316766932337, cumulative cost = {3188962.2593872515 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :  :     :              :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1476.1316766932337, cumulative cost = {3187486.127710558 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :  :     :              :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3185295.9960338646 rows, 7845988.433667338 cpu, 5.5377888E7 io, 231921.0682709174 network, 1226816.3641115595 memory}
         :  :     :              :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9483.877844621558, cumulative cost = {3175812.118189243 rows, 7694246.388153394 cpu, 5.5377888E7 io, 231921.0682709174 network, 619848.1820557797 memory}
         :  :     :              :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3166328.2403446217 rows, 6025083.887499999 cpu, 5.5377888E7 io, 4308.0 network, 619848.1820557797 memory}
         :  :     :              :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52319.2875, cumulative cost = {3156844.3625000003 rows, 5187975.2875 cpu, 5.5377888E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 72352.6356629551, cumulative cost = {1.977861662322372E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 72352.6356629551, cumulative cost = {1.9706263987560764E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :  :     :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 347472.35733970144, cumulative cost = {6595054.951077811 rows, 8.381663367335334E7 cpu, 1.10747004E8 io, 8791994.924857302 network, 1734934.3367004544 memory}
         :  :     :              :           +- Calc(select=[x, X0]): rowcount = 347472.35733970144, cumulative cost = {6247582.59373811 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347472.35733970144, cumulative cost = {5900110.236398408 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 9428.382264676382, cumulative cost = {3245583.8790587066 rows, 6909418.582166087 cpu, 5.5377708E7 io, 452658.34870446636 network, 1206944.929878577 memory}
         :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 397999.7697901433, cumulative cost = {1.1997216404196285E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 397999.7697901433, cumulative cost = {1.1599216634406142E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 346277.7986009552, cumulative cost = {6587108.864615999 rows, 8.24099170759656E7 cpu, 1.10751036E8 io, 8576228.116927994 network, 1301061.7409018585 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 346277.7986009552, cumulative cost = {6240831.066015044 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346277.7986009552, cumulative cost = {5894553.267414089 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1464.6573397014572, cumulative cost = {3241221.4688131344 rows, 5767097.65228751 cpu, 5.538174E7 io, 265560.9505050682 network, 1219040.929878577 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 1464.6573397014572, cumulative cost = {3239756.811473433 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1464.6573397014572, cumulative cost = {3238292.1541337315 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 357844.50021662685, cumulative cost = {5.8028053879504174E7 rows, 2.5791536578711247E9 cpu, 6.64473348E8 io, 3.32321392526651E8 network, 1.2813923696775347E8 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 357844.50021662685, cumulative cost = {5.767020937928755E7 rows, 2.5190357818347316E9 cpu, 6.64473348E8 io, 3.2373312452145195E8 network, 1.2813923696775347E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 357844.50021662685, cumulative cost = {5.731236487907092E7 rows, 2.5190357818347316E9 cpu, 6.64473348E8 io, 3.2373312452145195E8 network, 1.2813923696775347E8 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 78576.00144417898, cumulative cost = {5.23404123788543E7 rows, 2.112365669823178E9 cpu, 6.09104052E8 io, 2.6836382852145195E8 network, 1.2373898088687944E8 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 78576.00144417898, cumulative cost = {5.226183637741012E7 rows, 2.099164901580556E9 cpu, 6.09104052E8 io, 2.6647800448679164E8 network, 1.2373898088687944E8 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 78576.00144417898, cumulative cost = {5.2183260375965945E7 rows, 2.097907685557449E9 cpu, 6.09104052E8 io, 2.6647800448679164E8 network, 1.1871011679445198E8 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 78576.00144417898, cumulative cost = {5.210468437452177E7 rows, 2.0840783093032737E9 cpu, 6.09104052E8 io, 2.6459218045213133E8 network, 1.1871011679445198E8 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 433476.7357310327, cumulative cost = {5.2026108373077594E7 rows, 2.077142681531577E9 cpu, 6.09104052E8 io, 2.6459218045213133E8 network, 1.1368125270202452E8 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 82964.62103244415, cumulative cost = {2.791465791749914E7 rows, 1.099247765297604E9 cpu, 3.32236812E8 io, 1.4008200108852938E8 network, 6.731362981813665E7 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 82964.62103244415, cumulative cost = {2.7831693296466697E7 rows, 1.099247765297604E9 cpu, 3.32236812E8 io, 1.4008200108852938E8 network, 6.731362981813665E7 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 197620.20882615735, cumulative cost = {1.8470709405304633E7 rows, 5.977566769974166E8 cpu, 2.21493912E8 io, 7.316709402365556E7 network, 4.4692694729748145E7 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 197620.20882615735, cumulative cost = {1.8273089196478475E7 rows, 5.645564819146222E8 cpu, 2.21493912E8 io, 6.842420901182778E7 network, 4.4692694729748145E7 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 197620.20882615735, cumulative cost = {1.8075468987652317E7 rows, 5.613945585734037E8 cpu, 2.21493912E8 io, 6.842420901182778E7 network, 3.2045001364874072E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 197620.20882615735, cumulative cost = {1.787784877882616E7 rows, 5.2661340182E8 cpu, 2.21493912E8 io, 6.3681324E7 network, 3.2045001364874072E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1090202.6249999998, cumulative cost = {1.768022857E7 rows, 5.0917015982E8 cpu, 2.21493912E8 io, 6.3681324E7 network, 1.9397308E7 memory}
         :  :                             :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 1090098.6749999998, cumulative cost = {1.6588789045000002E7 rows, 5.08020653195E8 cpu, 2.21485596E8 io, 6.3677292E7 network, 1.9385212E7 memory}
         :  :                             :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 744032.5199999999, cumulative cost = {1.249898396E7 rows, 4.8846458391999996E8 cpu, 1.66111992E8 io, 6.36759792E7 network, 1.93821768E7 memory}
         :  :                             :     :              :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755276.425 rows, 4.69255131E8 cpu, 1.1073864E8 io, 6.3674742E7 network, 1.9379318E7 memory}
         :  :                             :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357309.5875 rows, 4.69255131E8 cpu, 1.1073864E8 io, 6.3674742E7 network, 1.9379318E7 memory}
         :  :                             :     :              :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :                             :     :              :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 346058.25, cumulative cost = {3345234.75 rows, 6.0445161E7 cpu, 5.5369344E7 io, 8305446.0 network, 56.0 memory}
         :  :                             :     :              :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 346058.25, cumulative cost = {2999176.5 rows, 2307375.0 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :                             :     :              :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653118.25 rows, 2307375.0 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :                             :     :              :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :                             :     :              :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 346065.68249999994, cumulative cost = {2999675.015 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :                             :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346065.68249999994, cumulative cost = {2653609.3325 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :                             :     :              :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :  :                             :     :              :  :           +- Calc(select=[x0, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346066.155, cumulative cost = {2999706.41 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
         :  :                             :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346066.155, cumulative cost = {2653640.2550000004 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
         :  :                             :     :              :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :        +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :  :                             :     :              :           +- Calc(select=[x, y]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :                             :     :                    :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 350512.11469858856, cumulative cost = {2.3677973719847422E7 rows, 9.774614394982419E8 cpu, 2.7686724E8 io, 1.2451017936360195E8 network, 4.6367622883887865E7 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 350512.11469858856, cumulative cost = {2.3327461605148833E7 rows, 9.774614394982419E8 cpu, 2.7686724E8 io, 1.2451017936360195E8 network, 4.6367622883887865E7 memory}
         :  :                                   :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :                                   :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[hash[X0]]): rowcount = 29693.4313239236, cumulative cost = {1.8362841490450244E7 rows, 5.711823880476506E8 cpu, 2.21497944E8 io, 6.914088336360195E7 network, 4.4704790729748145E7 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 29693.4313239236, cumulative cost = {1.833314805912632E7 rows, 5.661938915852314E8 cpu, 2.21497944E8 io, 6.842824101182778E7 network, 4.4704790729748145E7 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 29693.4313239236, cumulative cost = {1.8303454627802398E7 rows, 5.661938915852314E8 cpu, 2.21497944E8 io, 6.842824101182778E7 network, 4.4704790729748145E7 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 197620.20882615735, cumulative cost = {1.8273089196478475E7 rows, 5.645564819146222E8 cpu, 2.21493912E8 io, 6.842420901182778E7 network, 4.4692694729748145E7 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 197620.20882615735, cumulative cost = {1.8075468987652317E7 rows, 5.613945585734037E8 cpu, 2.21493912E8 io, 6.842420901182778E7 network, 3.2045001364874072E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 197620.20882615735, cumulative cost = {1.787784877882616E7 rows, 5.2661340182E8 cpu, 2.21493912E8 io, 6.3681324E7 network, 3.2045001364874072E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 1090202.6249999998, cumulative cost = {1.768022857E7 rows, 5.0917015982E8 cpu, 2.21493912E8 io, 6.3681324E7 network, 1.9397308E7 memory}
         :  :                                            :           :- Union(all=[true], union=[X0, X1]): rowcount = 1090098.6749999998, cumulative cost = {1.6588789045000002E7 rows, 5.08020653195E8 cpu, 2.21485596E8 io, 6.3677292E7 network, 1.9385212E7 memory}
         :  :                                            :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 744032.5199999999, cumulative cost = {1.249898396E7 rows, 4.8846458391999996E8 cpu, 1.66111992E8 io, 6.36759792E7 network, 1.93821768E7 memory}
         :  :                                            :           :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755276.425 rows, 4.69255131E8 cpu, 1.1073864E8 io, 6.3674742E7 network, 1.9379318E7 memory}
         :  :                                            :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357309.5875 rows, 4.69255131E8 cpu, 1.1073864E8 io, 6.3674742E7 network, 1.9379318E7 memory}
         :  :                                            :           :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :                                            :           :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 346058.25, cumulative cost = {3345234.75 rows, 6.0445161E7 cpu, 5.5369344E7 io, 8305446.0 network, 56.0 memory}
         :  :                                            :           :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 346058.25, cumulative cost = {2999176.5 rows, 2307375.0 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :                                            :           :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653118.25 rows, 2307375.0 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :                                            :           :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :                                            :           :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 346065.68249999994, cumulative cost = {2999675.015 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :                                            :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346065.68249999994, cumulative cost = {2653609.3325 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :                                            :           :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :  :                                            :           :  :           +- Calc(select=[x0, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346066.155, cumulative cost = {2999706.41 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
         :  :                                            :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346066.155, cumulative cost = {2653640.2550000004 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
         :  :                                            :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :        +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :  :                                            :           :           +- Calc(select=[x, y]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :                                            :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 13353.249422148121, cumulative cost = {4.8788897607881285E7 rows, 1.6897399532152653E9 cpu, 6.64478208E8 io, 2.122149545676005E8 network, 1.1600720966645502E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 13353.249422148121, cumulative cost = {4.877554435845914E7 rows, 1.6897399532152653E9 cpu, 6.64478208E8 io, 2.122149545676005E8 network, 1.1600720966645502E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 88967.96281432081, cumulative cost = {4.876167100903699E7 rows, 1.6890186709127507E9 cpu, 6.644739E8 io, 2.1221364176760048E8 network, 1.1600417446645501E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 88967.96281432081, cumulative cost = {4.8672703046222664E7 rows, 1.6875951835077217E9 cpu, 6.644739E8 io, 2.1221364176760048E8 network, 1.1031022484633848E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 88967.96281432081, cumulative cost = {4.858373508340834E7 rows, 1.6719368220524013E9 cpu, 6.644739E8 io, 2.1007841066005677E8 network, 1.1031022484633848E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 490805.6072666023, cumulative cost = {4.849476712059402E7 rows, 1.6640839323361356E9 cpu, 6.644739E8 io, 2.1007841066005677E8 network, 1.0461627522622195E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 92805.83747645898, cumulative cost = {3.600674510913113E7 rows, 1.1723714832640958E9 cpu, 4.98353568E8 io, 1.461328865431288E8 network, 8.39236567636666E7 memory}
         :        :           :  :- Calc(select=[X0, X00 AS X1]): rowcount = 20453.201813503878, cumulative cost = {1.6135322648430951E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20453.201813503878, cumulative cost = {1.6114869446617447E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :           :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :  :     :                    +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1476.1316766932337, cumulative cost = {3190438.391063945 rows, 8218016.524695228 cpu, 5.5382172E7 io, 271632.228511555 network, 1239668.3641115595 memory}
         :        :           :  :        +- Calc(select=[X0, X1]): rowcount = 1476.1316766932337, cumulative cost = {3188962.2593872515 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1476.1316766932337, cumulative cost = {3187486.127710558 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3185295.9960338646 rows, 7845988.433667338 cpu, 5.5377888E7 io, 231921.0682709174 network, 1226816.3641115595 memory}
         :        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9483.877844621558, cumulative cost = {3175812.118189243 rows, 7694246.388153394 cpu, 5.5377888E7 io, 231921.0682709174 network, 619848.1820557797 memory}
         :        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3166328.2403446217 rows, 6025083.887499999 cpu, 5.5377888E7 io, 4308.0 network, 619848.1820557797 memory}
         :        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52319.2875, cumulative cost = {3156844.3625000003 rows, 5187975.2875 cpu, 5.5377888E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 72352.6356629551, cumulative cost = {1.977861662322372E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 72352.6356629551, cumulative cost = {1.9706263987560764E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :        :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 347472.35733970144, cumulative cost = {6595054.951077811 rows, 8.381663367335334E7 cpu, 1.10747004E8 io, 8791994.924857302 network, 1734934.3367004544 memory}
         :        :           :           +- Calc(select=[x, X0]): rowcount = 347472.35733970144, cumulative cost = {6247582.59373811 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347472.35733970144, cumulative cost = {5900110.236398408 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 9428.382264676382, cumulative cost = {3245583.8790587066 rows, 6909418.582166087 cpu, 5.5377708E7 io, 452658.34870446636 network, 1206944.929878577 memory}
         :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 397999.7697901433, cumulative cost = {1.1997216404196285E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 397999.7697901433, cumulative cost = {1.1599216634406142E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 346277.7986009552, cumulative cost = {6587108.864615999 rows, 8.24099170759656E7 cpu, 1.10751036E8 io, 8576228.116927994 network, 1301061.7409018585 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 346277.7986009552, cumulative cost = {6240831.066015044 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346277.7986009552, cumulative cost = {5894553.267414089 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1464.6573397014572, cumulative cost = {3241221.4688131344 rows, 5767097.65228751 cpu, 5.538174E7 io, 265560.9505050682 network, 1219040.929878577 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 1464.6573397014572, cumulative cost = {3239756.811473433 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1464.6573397014572, cumulative cost = {3238292.1541337315 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 15326.691878392887, cumulative cost = {1.0149386977811088E8 rows, 3.8421606048107595E9 cpu, 1.273576776E9 io, 4.832457586923491E8 network, 2.4224727262166193E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 15326.691878392887, cumulative cost = {1.0147854308623248E8 rows, 3.8421606048107595E9 cpu, 1.273576776E9 io, 4.832457586923491E8 network, 2.4224727262166193E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 90341.14563932574, cumulative cost = {4.916519761629408E7 rows, 1.7395993356171422E9 cpu, 6.64468692E8 io, 2.164796390003584E8 network, 1.1783333492265138E8 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 90341.14563932574, cumulative cost = {4.9074856470654756E7 rows, 1.738153877286913E9 cpu, 6.64468692E8 io, 2.164796390003584E8 network, 1.1205150160173453E8 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 90341.14563932574, cumulative cost = {4.898451532501543E7 rows, 1.7222538356543915E9 cpu, 6.64468692E8 io, 2.143114515050146E8 network, 1.1205150160173453E8 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 498380.98394147574, cumulative cost = {4.889417417937611E7 rows, 1.7142797399113278E9 cpu, 6.64468692E8 io, 2.143114515050146E8 network, 1.0626966828081769E8 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 470353.72812947584, cumulative cost = {3.214431580799064E7 rows, 1.1332369281144466E9 cpu, 4.42978884E8 io, 1.4290268744517463E8 network, 6.667781405457778E7 memory}
               :           :  :- Calc(select=[x AS X0, X1]): rowcount = 397999.94231314905, cumulative cost = {1.1946256119052742E7 rows, 4.9366387496156937E8 cpu, 1.66120008E8 io, 6.395092257541156E7 network, 2.0711667356473174E7 memory}
               :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 397999.94231314905, cumulative cost = {1.1548256176739592E7 rows, 4.9366387496156937E8 cpu, 1.66120008E8 io, 6.395092257541156E7 network, 2.0711667356473174E7 memory}
               :           :  :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :     +- Exchange(distribution=[hash[x]]): rowcount = 346278.9487543269, cumulative cost = {6536148.234426444 rows, 8.485213937153476E7 cpu, 1.10750712E8 io, 8581626.575411558 network, 1320046.2262308649 memory}
               :           :  :        +- Calc(select=[x, X1]): rowcount = 346278.9487543269, cumulative cost = {6189869.285672117 rows, 2.667727598080785E7 cpu, 1.10750712E8 io, 270931.80530771165 network, 1320046.2262308649 memory}
               :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346278.9487543269, cumulative cost = {5843590.336917791 rows, 2.667727598080785E7 cpu, 1.10750712E8 io, 270931.80530771165 network, 1320046.2262308649 memory}
               :           :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 1472.3250288462589, cumulative cost = {3190257.3881634637 rows, 8209065.380577081 cpu, 5.5381416E7 io, 270931.80530771165 network, 1237596.0246154743 memory}
               :           :  :                 +- Calc(select=[X0, X1]): rowcount = 1472.3250288462589, cumulative cost = {3188785.0631346176 rows, 7973493.375961679 cpu, 5.5381416E7 io, 235596.00461540144 network, 1237596.0246154743 memory}
               :           :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1472.3250288462589, cumulative cost = {3187312.7381057716 rows, 7973493.375961679 cpu, 5.5381416E7 io, 235596.00461540144 network, 1237596.0246154743 memory}
               :           :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :           :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :           :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :           :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :                       +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[X0, X10 AS X1]): rowcount = 72353.78581632682, cumulative cost = {1.9727705960808422E7 rows, 6.391026994247477E8 cpu, 2.76858876E8 io, 7.895176486976308E7 network, 4.596614669810461E7 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 72353.78581632682, cumulative cost = {1.9655352174992096E7 rows, 6.391026994247477E8 cpu, 2.76858876E8 io, 7.895176486976308E7 network, 4.596614669810461E7 memory}
               :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
               :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
               :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
               :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
               :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
               :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :           :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :        +- Exchange(distribution=[hash[x]]): rowcount = 347480.0250288462, cumulative cost = {6544141.988355773 rows, 8.626684161157718E7 cpu, 1.1074668E8 io, 8798592.609923113 network, 1756352.0353847444 memory}
               :           :           +- Calc(select=[x, X1]): rowcount = 347480.0250288462, cumulative cost = {6196661.963326926 rows, 2.789019740673102E7 cpu, 1.1074668E8 io, 459072.0092308029 network, 1756352.0353847444 memory}
               :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347480.0250288462, cumulative cost = {5849181.93829808 rows, 2.789019740673102E7 cpu, 1.1074668E8 io, 459072.0092308029 network, 1756352.0353847444 memory}
               :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :                 +- Exchange(distribution=[broadcast]): rowcount = 9479.500192308393, cumulative cost = {3194647.913269234 rows, 9357929.405192554 cpu, 5.5377384E7 io, 459072.0092308029 network, 1225500.0246154743 memory}
               :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :           :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :                                :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :                                :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, y AS X1]): rowcount = 28027.255811999894, cumulative cost = {1.6251477387443997E7 rows, 5.805444308129398E8 cpu, 2.21489808E8 io, 7.140876405983996E7 network, 3.959185422623991E7 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x1)], select=[X0, X1, y, x1], build=[right]): rowcount = 28027.255811999894, cumulative cost = {1.6223450131631996E7 rows, 5.805444308129398E8 cpu, 2.21489808E8 io, 7.140876405983996E7 network, 3.959185422623991E7 memory}
               :                 :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
               :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
               :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
               :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
               :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
               :                 :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :                 :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                 :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[hash[x1]]): rowcount = 51969.825, cumulative cost = {3156566.4750000006 rows, 3.00726546E7 cpu, 5.5377612E7 io, 1255591.7999999998 network, 24948.0 memory}
               :                    +- Calc(select=[y, x0 AS x1]): rowcount = 51969.825, cumulative cost = {3104596.6500000004 rows, 2.1341724E7 cpu, 5.5377612E7 io, 8316.0 network, 24948.0 memory}
               :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 51969.825, cumulative cost = {3052626.825 rows, 2.1341724E7 cpu, 5.5377612E7 io, 8316.0 network, 24948.0 memory}
               :                          :- Calc(select=[x, y]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :                          :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :                          :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                          :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :                          :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 11836.800216626847, cumulative cost = {5.229801877806001E7 rows, 2.1017438456267698E9 cpu, 6.09108084E8 io, 2.6676611969199067E8 network, 1.2375107688687944E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 11836.800216626847, cumulative cost = {5.228618197784338E7 rows, 2.0998499575921094E9 cpu, 6.09108084E8 io, 2.6648203648679164E8 network, 1.2375107688687944E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 11836.800216626847, cumulative cost = {5.227434517762675E7 rows, 2.0998499575921094E9 cpu, 6.09108084E8 io, 2.6648203648679164E8 network, 1.2375107688687944E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 78576.00144417898, cumulative cost = {5.226183637741012E7 rows, 2.099164901580556E9 cpu, 6.09104052E8 io, 2.6647800448679164E8 network, 1.2373898088687944E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 78576.00144417898, cumulative cost = {5.2183260375965945E7 rows, 2.097907685557449E9 cpu, 6.09104052E8 io, 2.6647800448679164E8 network, 1.1871011679445198E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 78576.00144417898, cumulative cost = {5.210468437452177E7 rows, 2.0840783093032737E9 cpu, 6.09104052E8 io, 2.6459218045213133E8 network, 1.1871011679445198E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 433476.7357310327, cumulative cost = {5.2026108373077594E7 rows, 2.077142681531577E9 cpu, 6.09104052E8 io, 2.6459218045213133E8 network, 1.1368125270202452E8 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 82964.62103244415, cumulative cost = {2.791465791749914E7 rows, 1.099247765297604E9 cpu, 3.32236812E8 io, 1.4008200108852938E8 network, 6.731362981813665E7 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 82964.62103244415, cumulative cost = {2.7831693296466697E7 rows, 1.099247765297604E9 cpu, 3.32236812E8 io, 1.4008200108852938E8 network, 6.731362981813665E7 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 197620.20882615735, cumulative cost = {1.8470709405304633E7 rows, 5.977566769974166E8 cpu, 2.21493912E8 io, 7.316709402365556E7 network, 4.4692694729748145E7 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 197620.20882615735, cumulative cost = {1.8273089196478475E7 rows, 5.645564819146222E8 cpu, 2.21493912E8 io, 6.842420901182778E7 network, 4.4692694729748145E7 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 197620.20882615735, cumulative cost = {1.8075468987652317E7 rows, 5.613945585734037E8 cpu, 2.21493912E8 io, 6.842420901182778E7 network, 3.2045001364874072E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 197620.20882615735, cumulative cost = {1.787784877882616E7 rows, 5.2661340182E8 cpu, 2.21493912E8 io, 6.3681324E7 network, 3.2045001364874072E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1090202.6249999998, cumulative cost = {1.768022857E7 rows, 5.0917015982E8 cpu, 2.21493912E8 io, 6.3681324E7 network, 1.9397308E7 memory}
                        :           :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 1090098.6749999998, cumulative cost = {1.6588789045000002E7 rows, 5.08020653195E8 cpu, 2.21485596E8 io, 6.3677292E7 network, 1.9385212E7 memory}
                        :           :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 744032.5199999999, cumulative cost = {1.249898396E7 rows, 4.8846458391999996E8 cpu, 1.66111992E8 io, 6.36759792E7 network, 1.93821768E7 memory}
                        :           :     :              :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755276.425 rows, 4.69255131E8 cpu, 1.1073864E8 io, 6.3674742E7 network, 1.9379318E7 memory}
                        :           :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357309.5875 rows, 4.69255131E8 cpu, 1.1073864E8 io, 6.3674742E7 network, 1.9379318E7 memory}
                        :           :     :              :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :           :     :              :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 346058.25, cumulative cost = {3345234.75 rows, 6.0445161E7 cpu, 5.5369344E7 io, 8305446.0 network, 56.0 memory}
                        :           :     :              :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 346058.25, cumulative cost = {2999176.5 rows, 2307375.0 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
                        :           :     :              :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653118.25 rows, 2307375.0 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
                        :           :     :              :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
                        :           :     :              :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 346065.68249999994, cumulative cost = {2999675.015 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
                        :           :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346065.68249999994, cumulative cost = {2653609.3325 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
                        :           :     :              :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
                        :           :     :              :  :           +- Calc(select=[x0, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346066.155, cumulative cost = {2999706.41 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
                        :           :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346066.155, cumulative cost = {2653640.2550000004 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
                        :           :     :              :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :        +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
                        :           :     :              :           +- Calc(select=[x, y]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                        :           :     :                    :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 350512.11469858856, cumulative cost = {2.3677973719847422E7 rows, 9.774614394982419E8 cpu, 2.7686724E8 io, 1.2451017936360195E8 network, 4.6367622883887865E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 350512.11469858856, cumulative cost = {2.3327461605148833E7 rows, 9.774614394982419E8 cpu, 2.7686724E8 io, 1.2451017936360195E8 network, 4.6367622883887865E7 memory}
                        :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[hash[X0]]): rowcount = 29693.4313239236, cumulative cost = {1.8362841490450244E7 rows, 5.711823880476506E8 cpu, 2.21497944E8 io, 6.914088336360195E7 network, 4.4704790729748145E7 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 29693.4313239236, cumulative cost = {1.833314805912632E7 rows, 5.661938915852314E8 cpu, 2.21497944E8 io, 6.842824101182778E7 network, 4.4704790729748145E7 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 29693.4313239236, cumulative cost = {1.8303454627802398E7 rows, 5.661938915852314E8 cpu, 2.21497944E8 io, 6.842824101182778E7 network, 4.4704790729748145E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 197620.20882615735, cumulative cost = {1.8273089196478475E7 rows, 5.645564819146222E8 cpu, 2.21493912E8 io, 6.842420901182778E7 network, 4.4692694729748145E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 197620.20882615735, cumulative cost = {1.8075468987652317E7 rows, 5.613945585734037E8 cpu, 2.21493912E8 io, 6.842420901182778E7 network, 3.2045001364874072E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 197620.20882615735, cumulative cost = {1.787784877882616E7 rows, 5.2661340182E8 cpu, 2.21493912E8 io, 6.3681324E7 network, 3.2045001364874072E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 1090202.6249999998, cumulative cost = {1.768022857E7 rows, 5.0917015982E8 cpu, 2.21493912E8 io, 6.3681324E7 network, 1.9397308E7 memory}
                        :                          :           :- Union(all=[true], union=[X0, X1]): rowcount = 1090098.6749999998, cumulative cost = {1.6588789045000002E7 rows, 5.08020653195E8 cpu, 2.21485596E8 io, 6.3677292E7 network, 1.9385212E7 memory}
                        :                          :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 744032.5199999999, cumulative cost = {1.249898396E7 rows, 4.8846458391999996E8 cpu, 1.66111992E8 io, 6.36759792E7 network, 1.93821768E7 memory}
                        :                          :           :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755276.425 rows, 4.69255131E8 cpu, 1.1073864E8 io, 6.3674742E7 network, 1.9379318E7 memory}
                        :                          :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357309.5875 rows, 4.69255131E8 cpu, 1.1073864E8 io, 6.3674742E7 network, 1.9379318E7 memory}
                        :                          :           :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :                          :           :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 346058.25, cumulative cost = {3345234.75 rows, 6.0445161E7 cpu, 5.5369344E7 io, 8305446.0 network, 56.0 memory}
                        :                          :           :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 346058.25, cumulative cost = {2999176.5 rows, 2307375.0 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
                        :                          :           :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653118.25 rows, 2307375.0 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
                        :                          :           :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
                        :                          :           :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 346065.68249999994, cumulative cost = {2999675.015 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
                        :                          :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346065.68249999994, cumulative cost = {2653609.3325 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
                        :                          :           :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
                        :                          :           :  :           +- Calc(select=[x0, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346066.155, cumulative cost = {2999706.41 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
                        :                          :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346066.155, cumulative cost = {2653640.2550000004 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
                        :                          :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :        +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
                        :                          :           :           +- Calc(select=[x, y]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
                        :                          :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :                          :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                        :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,2,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#2] Exchange(distribution=[hash[X1]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[X0]])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[7])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[1,0,2,1,3,2,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[x0 AS X0, y AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y, x0, y00], build=[right])\n:  :  :     :- [#5] Exchange(distribution=[hash[x]])\n:  :  :     +- [#6] Exchange(distribution=[hash[y00]])\n:  :  +- Calc(select=[x AS X0, y0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])\n:  :        :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:  :        +- [#8] Exchange(distribution=[broadcast])\n:  +- Calc(select=[x0 AS X0, y AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])\n:        :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, x AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0], isBroadcast=[true], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[1])
         :        :           :              :- Exchange(distribution=[broadcast])(reuse_id=[8])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[5])
         :        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[2])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[x, y])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])
         :        :           :              :        :- Reused(reference_id=[1])
         :        :           :              :        +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :        :           :              :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[4])
         :        :           :              :- Exchange(distribution=[hash[x]])(reuse_id=[6])
         :        :           :              :  +- Reused(reference_id=[2])
         :        :           :              :- Exchange(distribution=[hash[y00]])
         :        :           :              :  +- Calc(select=[x, y0 AS y00])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :              :        :- Reused(reference_id=[2])
         :        :           :              :        +- Exchange(distribution=[broadcast])
         :        :           :              :           +- Calc(select=[x, y0])
         :        :           :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[left])
         :        :           :              :                 :- Reused(reference_id=[3])
         :        :           :              :                 +- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :                    +- Reused(reference_id=[4])
         :        :           :              :- Reused(reference_id=[2])
         :        :           :              +- Exchange(distribution=[broadcast])
         :        :           :                 +- Calc(select=[x0, y])
         :        :           :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])
         :        :           :                       :- Reused(reference_id=[5])
         :        :           :                       +- Reused(reference_id=[3])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Reused(reference_id=[6])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[13])
         :        :           :                       :  +- Reused(reference_id=[1])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[10])
         :        :           :                             :- Reused(reference_id=[2])
         :        :           :                             +- Reused(reference_id=[3])
         :        :           :- Exchange(distribution=[hash[y]])(reuse_id=[9])
         :        :           :  +- Reused(reference_id=[2])
         :        :           +- Exchange(distribution=[hash[X0]])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[7])
         :        :                    +- Reused(reference_id=[8])
         :        +- Reused(reference_id=[8])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[17])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], build=[left])\n:        :- [#5] Exchange(distribution=[hash[X1]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Reused(reference_id=[9])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[2])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Calc(select=[y, x0])(reuse_id=[20])
         :              :                 :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :              :                 :           :  :     :- Reused(reference_id=[2])
         :              :                 :           :  :     +- Reused(reference_id=[3])
         :              :                 :           :  :- Reused(reference_id=[3])
         :              :                 :           :  :- Reused(reference_id=[5])
         :              :                 :           :  +- Reused(reference_id=[3])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[18])
         :              :                 :                 :- Reused(reference_id=[1])
         :              :                 :                 +- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[8])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[14])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :           :- Reused(reference_id=[2])
         :              :           :- Exchange(distribution=[broadcast])(reuse_id=[11])
         :              :           :  +- Reused(reference_id=[1])
         :              :           :- Reused(reference_id=[9])
         :              :           +- Exchange(distribution=[hash[x]])
         :              :              +- Calc(select=[x, y0])(reuse_id=[12])
         :              :                 +- Reused(reference_id=[10])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[11])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[12])
         :              :                 :     +- Reused(reference_id=[11])
         :              :                 +- Reused(reference_id=[13])
         :              :- Exchange(distribution=[hash[X1]])(reuse_id=[19])
         :              :  +- Reused(reference_id=[14])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, X0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :                       :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                       :  +- Reused(reference_id=[2])
         :                       +- Exchange(distribution=[broadcast])
         :                          +- Reused(reference_id=[15])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[2])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[16])
         :- Reused(reference_id=[17])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[x, x0])
         :     +- Reused(reference_id=[18])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[1,0,1,0,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#3] Exchange(distribution=[hash[y]])\n:  :     +- [#4] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#1] Exchange(distribution=[hash[X1]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x1)], select=[X0, X1, y, x1], build=[right])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#2] Exchange(distribution=[hash[x1]])\n])
                  :- Reused(reference_id=[19])
                  :- Exchange(distribution=[hash[x1]])
                  :  +- Calc(select=[y, x0 AS x1])
                  :     +- MultipleInput(readOrder=[0,1,0], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:- Calc(select=[x, y])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#2] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#3] Exchange(distribution=[broadcast])\n+- [#1] Exchange(distribution=[broadcast])\n])
                  :        :- Reused(reference_id=[11])
                  :        :- Reused(reference_id=[2])
                  :        +- Reused(reference_id=[8])
                  :- Reused(reference_id=[9])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[2])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Calc(select=[X0, X1])
                  :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                  :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
                  :                 :  +- Exchange(distribution=[hash[X0, X1]])
                  :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :                 :        +- Union(all=[true], union=[X0, X1])
                  :                 :           :- Calc(select=[x0 AS X0, y AS X1])
                  :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :                 :           :     :- Reused(reference_id=[20])
                  :                 :           :     +- Reused(reference_id=[8])
                  :                 :           +- Calc(select=[x AS X0, x AS X1])
                  :                 :              +- Reused(reference_id=[5])
                  :                 +- Reused(reference_id=[8])
                  :- Reused(reference_id=[19])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, X1])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                           :  +- Reused(reference_id=[2])
                           +- Exchange(distribution=[broadcast])
                              +- Reused(reference_id=[21])

Job has been submitted with JobID 03fc4a34ce97b53072909ab6f5724419
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, r_3.y AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x UNION (SELECT r_0.x AS X0, s_1.y AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x) UNION (SELECT b_0.x AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN s AS s_1 ON b_0.x = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x) UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...

------------> using sink uuid: 91944c0c_19da_4c04_a4e8_8091c2fa2709

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, r_3.y AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN s AS s_2 ON s_1.y = s_2.x
                      INNER JOIN r AS r_3 ON s_2.y = r_3.x
             UNION
             (SELECT r_0.x AS X0, s_1.y AS X1
              FROM r AS r_0
                       INNER JOIN s AS s_1 ON r_0.y = s_1.x
                       INNER JOIN a AS a_2 ON s_1.y = a_2.x)
             UNION
             (SELECT b_0.x AS X0, r_2.y AS X1
              FROM b AS b_0
                       INNER JOIN s AS s_1 ON b_0.x = s_1.x
                       INNER JOIN r AS r_2 ON s_1.y = r_2.x)
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1
              FROM b AS b_0
                       INNER JOIN a AS a_1 ON b_0.x = a_1.x)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0)
            UNION
            (SELECT p19_0.X0 AS X0, r_2.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)),
     p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1
             FROM p19 AS p19_0
                      INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1
                      INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalUnion(all=[false])
   :  :        :        :  :- LogicalUnion(all=[false])
   :  :        :        :  :  :- LogicalProject(X0=[$0], X1=[$7])
   :  :        :        :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :        :        :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :        :        :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalUnion(all=[false])
   :  :              :  :  :  :- LogicalUnion(all=[false])
   :  :              :  :  :  :  :- LogicalProject(X0=[$0], X1=[$7])
   :  :              :  :  :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :              :  :  :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :              :  :  :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  +- LogicalUnion(all=[false])
   :        :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalUnion(all=[false])
         :     :        :  :- LogicalUnion(all=[false])
         :     :        :  :  :- LogicalProject(X0=[$0], X1=[$7])
         :     :        :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :     :        :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :     :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        :  +- LogicalProject(X0=[$0], X1=[$4])
         :     :        :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
         :     :        :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalUnion(all=[false])
         :           :  :  :  :- LogicalUnion(all=[false])
         :           :  :  :  :  :- LogicalProject(X0=[$0], X1=[$7])
         :           :  :  :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :           :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :           :  :  :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
         :           :  :  :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 17347.79516466555, cumulative cost = {2.5752362429138294E8 rows, 9.823632086840284E9 cpu, 3.267002232E9 io, 1.2425473257456965E9 network, 6.096006174210045E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 17347.79516466555, cumulative cost = {2.5750627649621826E8 rows, 9.82335452211765E9 cpu, 3.267002232E9 io, 1.2425473257456965E9 network, 6.08490358530466E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 17347.79516466555, cumulative cost = {2.574889287010536E8 rows, 9.820301310168669E9 cpu, 3.267002232E9 io, 1.2421309786617446E9 network, 6.08490358530466E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 95701.81075518315, cumulative cost = {2.5747158090588892E8 rows, 9.818770081196587E9 cpu, 3.267002232E9 io, 1.2421309786617446E9 network, 6.073800996399274E8 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 80375.11887679026, cumulative cost = {1.5588200931702283E8 rows, 5.976513774575071E9 cpu, 1.993425456E9 io, 7.588852199693956E8 network, 3.651328270182655E8 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 67021.86945464215, cumulative cost = {1.0701273659026477E8 rows, 4.2866934462409286E9 cpu, 1.328947248E9 io, 5.466702654017951E8 network, 2.4912561735181046E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 67021.86945464215, cumulative cost = {1.0694571472081013E8 rows, 4.2866934462409286E9 cpu, 1.328947248E9 io, 5.466702654017951E8 network, 2.4912561735181046E8 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 88967.96281432081, cumulative cost = {4.885063897185131E7 rows, 1.7039652886655567E9 cpu, 6.644739E8 io, 2.1434887287514418E8 network, 1.1600417446645501E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 88967.96281432081, cumulative cost = {4.876167100903699E7 rows, 1.6890186709127507E9 cpu, 6.644739E8 io, 2.1221364176760048E8 network, 1.1600417446645501E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 88967.96281432081, cumulative cost = {4.8672703046222664E7 rows, 1.6875951835077217E9 cpu, 6.644739E8 io, 2.1221364176760048E8 network, 1.1031022484633848E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 88967.96281432081, cumulative cost = {4.858373508340834E7 rows, 1.6719368220524013E9 cpu, 6.644739E8 io, 2.1007841066005677E8 network, 1.1031022484633848E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 490805.6072666023, cumulative cost = {4.849476712059402E7 rows, 1.6640839323361356E9 cpu, 6.644739E8 io, 2.1007841066005677E8 network, 1.0461627522622195E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 92805.83747645898, cumulative cost = {3.600674510913113E7 rows, 1.1723714832640958E9 cpu, 4.98353568E8 io, 1.461328865431288E8 network, 8.39236567636666E7 memory}
         :  :     :              :  :- Calc(select=[X0, X00 AS X1]): rowcount = 20453.201813503878, cumulative cost = {1.6135322648430951E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :  :     :              :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20453.201813503878, cumulative cost = {1.6114869446617447E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :  :     :              :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :     :              :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :     :              :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :  :     :                    +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     +- Exchange(distribution=[broadcast]): rowcount = 1476.1316766932337, cumulative cost = {3190438.391063945 rows, 8218016.524695228 cpu, 5.5382172E7 io, 271632.228511555 network, 1239668.3641115595 memory}
         :  :     :              :  :        +- Calc(select=[X0, X1]): rowcount = 1476.1316766932337, cumulative cost = {3188962.2593872515 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :  :     :              :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1476.1316766932337, cumulative cost = {3187486.127710558 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :  :     :              :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3185295.9960338646 rows, 7845988.433667338 cpu, 5.5377888E7 io, 231921.0682709174 network, 1226816.3641115595 memory}
         :  :     :              :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9483.877844621558, cumulative cost = {3175812.118189243 rows, 7694246.388153394 cpu, 5.5377888E7 io, 231921.0682709174 network, 619848.1820557797 memory}
         :  :     :              :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3166328.2403446217 rows, 6025083.887499999 cpu, 5.5377888E7 io, 4308.0 network, 619848.1820557797 memory}
         :  :     :              :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52319.2875, cumulative cost = {3156844.3625000003 rows, 5187975.2875 cpu, 5.5377888E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 72352.6356629551, cumulative cost = {1.977861662322372E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 72352.6356629551, cumulative cost = {1.9706263987560764E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :  :     :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 347472.35733970144, cumulative cost = {6595054.951077811 rows, 8.381663367335334E7 cpu, 1.10747004E8 io, 8791994.924857302 network, 1734934.3367004544 memory}
         :  :     :              :           +- Calc(select=[x, X0]): rowcount = 347472.35733970144, cumulative cost = {6247582.59373811 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347472.35733970144, cumulative cost = {5900110.236398408 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 9428.382264676382, cumulative cost = {3245583.8790587066 rows, 6909418.582166087 cpu, 5.5377708E7 io, 452658.34870446636 network, 1206944.929878577 memory}
         :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 397999.7697901433, cumulative cost = {1.1997216404196285E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 397999.7697901433, cumulative cost = {1.1599216634406142E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 346277.7986009552, cumulative cost = {6587108.864615999 rows, 8.24099170759656E7 cpu, 1.10751036E8 io, 8576228.116927994 network, 1301061.7409018585 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 346277.7986009552, cumulative cost = {6240831.066015044 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346277.7986009552, cumulative cost = {5894553.267414089 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1464.6573397014572, cumulative cost = {3241221.4688131344 rows, 5767097.65228751 cpu, 5.538174E7 io, 265560.9505050682 network, 1219040.929878577 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 1464.6573397014572, cumulative cost = {3239756.811473433 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1464.6573397014572, cumulative cost = {3238292.1541337315 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 357844.50021662685, cumulative cost = {5.8028053879504174E7 rows, 2.5791536578711247E9 cpu, 6.64473348E8 io, 3.32321392526651E8 network, 1.2813923696775347E8 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 357844.50021662685, cumulative cost = {5.767020937928755E7 rows, 2.5190357818347316E9 cpu, 6.64473348E8 io, 3.2373312452145195E8 network, 1.2813923696775347E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 357844.50021662685, cumulative cost = {5.731236487907092E7 rows, 2.5190357818347316E9 cpu, 6.64473348E8 io, 3.2373312452145195E8 network, 1.2813923696775347E8 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 78576.00144417898, cumulative cost = {5.23404123788543E7 rows, 2.112365669823178E9 cpu, 6.09104052E8 io, 2.6836382852145195E8 network, 1.2373898088687944E8 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 78576.00144417898, cumulative cost = {5.226183637741012E7 rows, 2.099164901580556E9 cpu, 6.09104052E8 io, 2.6647800448679164E8 network, 1.2373898088687944E8 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 78576.00144417898, cumulative cost = {5.2183260375965945E7 rows, 2.097907685557449E9 cpu, 6.09104052E8 io, 2.6647800448679164E8 network, 1.1871011679445198E8 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 78576.00144417898, cumulative cost = {5.210468437452177E7 rows, 2.0840783093032737E9 cpu, 6.09104052E8 io, 2.6459218045213133E8 network, 1.1871011679445198E8 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 433476.7357310327, cumulative cost = {5.2026108373077594E7 rows, 2.077142681531577E9 cpu, 6.09104052E8 io, 2.6459218045213133E8 network, 1.1368125270202452E8 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 82964.62103244415, cumulative cost = {2.791465791749914E7 rows, 1.099247765297604E9 cpu, 3.32236812E8 io, 1.4008200108852938E8 network, 6.731362981813665E7 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 82964.62103244415, cumulative cost = {2.7831693296466697E7 rows, 1.099247765297604E9 cpu, 3.32236812E8 io, 1.4008200108852938E8 network, 6.731362981813665E7 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 197620.20882615735, cumulative cost = {1.8470709405304633E7 rows, 5.977566769974166E8 cpu, 2.21493912E8 io, 7.316709402365556E7 network, 4.4692694729748145E7 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 197620.20882615735, cumulative cost = {1.8273089196478475E7 rows, 5.645564819146222E8 cpu, 2.21493912E8 io, 6.842420901182778E7 network, 4.4692694729748145E7 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 197620.20882615735, cumulative cost = {1.8075468987652317E7 rows, 5.613945585734037E8 cpu, 2.21493912E8 io, 6.842420901182778E7 network, 3.2045001364874072E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 197620.20882615735, cumulative cost = {1.787784877882616E7 rows, 5.2661340182E8 cpu, 2.21493912E8 io, 6.3681324E7 network, 3.2045001364874072E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1090202.6249999998, cumulative cost = {1.768022857E7 rows, 5.0917015982E8 cpu, 2.21493912E8 io, 6.3681324E7 network, 1.9397308E7 memory}
         :  :                             :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 1090098.6749999998, cumulative cost = {1.6588789045000002E7 rows, 5.08020653195E8 cpu, 2.21485596E8 io, 6.3677292E7 network, 1.9385212E7 memory}
         :  :                             :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 744032.5199999999, cumulative cost = {1.249898396E7 rows, 4.8846458391999996E8 cpu, 1.66111992E8 io, 6.36759792E7 network, 1.93821768E7 memory}
         :  :                             :     :              :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755276.425 rows, 4.69255131E8 cpu, 1.1073864E8 io, 6.3674742E7 network, 1.9379318E7 memory}
         :  :                             :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357309.5875 rows, 4.69255131E8 cpu, 1.1073864E8 io, 6.3674742E7 network, 1.9379318E7 memory}
         :  :                             :     :              :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :                             :     :              :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 346058.25, cumulative cost = {3345234.75 rows, 6.0445161E7 cpu, 5.5369344E7 io, 8305446.0 network, 56.0 memory}
         :  :                             :     :              :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 346058.25, cumulative cost = {2999176.5 rows, 2307375.0 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :                             :     :              :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653118.25 rows, 2307375.0 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :                             :     :              :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :                             :     :              :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 346065.68249999994, cumulative cost = {2999675.015 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :                             :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346065.68249999994, cumulative cost = {2653609.3325 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :                             :     :              :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :  :                             :     :              :  :           +- Calc(select=[x0, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346066.155, cumulative cost = {2999706.41 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
         :  :                             :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346066.155, cumulative cost = {2653640.2550000004 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
         :  :                             :     :              :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :        +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :  :                             :     :              :           +- Calc(select=[x, y]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :                             :     :                    :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 350512.11469858856, cumulative cost = {2.3677973719847422E7 rows, 9.774614394982419E8 cpu, 2.7686724E8 io, 1.2451017936360195E8 network, 4.6367622883887865E7 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 350512.11469858856, cumulative cost = {2.3327461605148833E7 rows, 9.774614394982419E8 cpu, 2.7686724E8 io, 1.2451017936360195E8 network, 4.6367622883887865E7 memory}
         :  :                                   :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :                                   :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[hash[X0]]): rowcount = 29693.4313239236, cumulative cost = {1.8362841490450244E7 rows, 5.711823880476506E8 cpu, 2.21497944E8 io, 6.914088336360195E7 network, 4.4704790729748145E7 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 29693.4313239236, cumulative cost = {1.833314805912632E7 rows, 5.661938915852314E8 cpu, 2.21497944E8 io, 6.842824101182778E7 network, 4.4704790729748145E7 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 29693.4313239236, cumulative cost = {1.8303454627802398E7 rows, 5.661938915852314E8 cpu, 2.21497944E8 io, 6.842824101182778E7 network, 4.4704790729748145E7 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 197620.20882615735, cumulative cost = {1.8273089196478475E7 rows, 5.645564819146222E8 cpu, 2.21493912E8 io, 6.842420901182778E7 network, 4.4692694729748145E7 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 197620.20882615735, cumulative cost = {1.8075468987652317E7 rows, 5.613945585734037E8 cpu, 2.21493912E8 io, 6.842420901182778E7 network, 3.2045001364874072E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 197620.20882615735, cumulative cost = {1.787784877882616E7 rows, 5.2661340182E8 cpu, 2.21493912E8 io, 6.3681324E7 network, 3.2045001364874072E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 1090202.6249999998, cumulative cost = {1.768022857E7 rows, 5.0917015982E8 cpu, 2.21493912E8 io, 6.3681324E7 network, 1.9397308E7 memory}
         :  :                                            :           :- Union(all=[true], union=[X0, X1]): rowcount = 1090098.6749999998, cumulative cost = {1.6588789045000002E7 rows, 5.08020653195E8 cpu, 2.21485596E8 io, 6.3677292E7 network, 1.9385212E7 memory}
         :  :                                            :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 744032.5199999999, cumulative cost = {1.249898396E7 rows, 4.8846458391999996E8 cpu, 1.66111992E8 io, 6.36759792E7 network, 1.93821768E7 memory}
         :  :                                            :           :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755276.425 rows, 4.69255131E8 cpu, 1.1073864E8 io, 6.3674742E7 network, 1.9379318E7 memory}
         :  :                                            :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357309.5875 rows, 4.69255131E8 cpu, 1.1073864E8 io, 6.3674742E7 network, 1.9379318E7 memory}
         :  :                                            :           :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :                                            :           :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 346058.25, cumulative cost = {3345234.75 rows, 6.0445161E7 cpu, 5.5369344E7 io, 8305446.0 network, 56.0 memory}
         :  :                                            :           :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 346058.25, cumulative cost = {2999176.5 rows, 2307375.0 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :                                            :           :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653118.25 rows, 2307375.0 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :                                            :           :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :                                            :           :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 346065.68249999994, cumulative cost = {2999675.015 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :                                            :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346065.68249999994, cumulative cost = {2653609.3325 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :                                            :           :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :  :                                            :           :  :           +- Calc(select=[x0, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346066.155, cumulative cost = {2999706.41 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
         :  :                                            :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346066.155, cumulative cost = {2653640.2550000004 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
         :  :                                            :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :        +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :  :                                            :           :           +- Calc(select=[x, y]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :                                            :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 13353.249422148121, cumulative cost = {4.8788897607881285E7 rows, 1.6897399532152653E9 cpu, 6.64478208E8 io, 2.122149545676005E8 network, 1.1600720966645502E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 13353.249422148121, cumulative cost = {4.877554435845914E7 rows, 1.6897399532152653E9 cpu, 6.64478208E8 io, 2.122149545676005E8 network, 1.1600720966645502E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 88967.96281432081, cumulative cost = {4.876167100903699E7 rows, 1.6890186709127507E9 cpu, 6.644739E8 io, 2.1221364176760048E8 network, 1.1600417446645501E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 88967.96281432081, cumulative cost = {4.8672703046222664E7 rows, 1.6875951835077217E9 cpu, 6.644739E8 io, 2.1221364176760048E8 network, 1.1031022484633848E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 88967.96281432081, cumulative cost = {4.858373508340834E7 rows, 1.6719368220524013E9 cpu, 6.644739E8 io, 2.1007841066005677E8 network, 1.1031022484633848E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 490805.6072666023, cumulative cost = {4.849476712059402E7 rows, 1.6640839323361356E9 cpu, 6.644739E8 io, 2.1007841066005677E8 network, 1.0461627522622195E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 92805.83747645898, cumulative cost = {3.600674510913113E7 rows, 1.1723714832640958E9 cpu, 4.98353568E8 io, 1.461328865431288E8 network, 8.39236567636666E7 memory}
         :        :           :  :- Calc(select=[X0, X00 AS X1]): rowcount = 20453.201813503878, cumulative cost = {1.6135322648430951E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20453.201813503878, cumulative cost = {1.6114869446617447E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :           :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :  :     :                    +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1476.1316766932337, cumulative cost = {3190438.391063945 rows, 8218016.524695228 cpu, 5.5382172E7 io, 271632.228511555 network, 1239668.3641115595 memory}
         :        :           :  :        +- Calc(select=[X0, X1]): rowcount = 1476.1316766932337, cumulative cost = {3188962.2593872515 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1476.1316766932337, cumulative cost = {3187486.127710558 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3185295.9960338646 rows, 7845988.433667338 cpu, 5.5377888E7 io, 231921.0682709174 network, 1226816.3641115595 memory}
         :        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9483.877844621558, cumulative cost = {3175812.118189243 rows, 7694246.388153394 cpu, 5.5377888E7 io, 231921.0682709174 network, 619848.1820557797 memory}
         :        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3166328.2403446217 rows, 6025083.887499999 cpu, 5.5377888E7 io, 4308.0 network, 619848.1820557797 memory}
         :        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52319.2875, cumulative cost = {3156844.3625000003 rows, 5187975.2875 cpu, 5.5377888E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 72352.6356629551, cumulative cost = {1.977861662322372E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 72352.6356629551, cumulative cost = {1.9706263987560764E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :        :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 347472.35733970144, cumulative cost = {6595054.951077811 rows, 8.381663367335334E7 cpu, 1.10747004E8 io, 8791994.924857302 network, 1734934.3367004544 memory}
         :        :           :           +- Calc(select=[x, X0]): rowcount = 347472.35733970144, cumulative cost = {6247582.59373811 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347472.35733970144, cumulative cost = {5900110.236398408 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 9428.382264676382, cumulative cost = {3245583.8790587066 rows, 6909418.582166087 cpu, 5.5377708E7 io, 452658.34870446636 network, 1206944.929878577 memory}
         :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 397999.7697901433, cumulative cost = {1.1997216404196285E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 397999.7697901433, cumulative cost = {1.1599216634406142E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 346277.7986009552, cumulative cost = {6587108.864615999 rows, 8.24099170759656E7 cpu, 1.10751036E8 io, 8576228.116927994 network, 1301061.7409018585 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 346277.7986009552, cumulative cost = {6240831.066015044 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346277.7986009552, cumulative cost = {5894553.267414089 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1464.6573397014572, cumulative cost = {3241221.4688131344 rows, 5767097.65228751 cpu, 5.538174E7 io, 265560.9505050682 network, 1219040.929878577 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 1464.6573397014572, cumulative cost = {3239756.811473433 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1464.6573397014572, cumulative cost = {3238292.1541337315 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 15326.691878392887, cumulative cost = {1.0149386977811088E8 rows, 3.8421606048107595E9 cpu, 1.273576776E9 io, 4.832457586923491E8 network, 2.4224727262166193E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 15326.691878392887, cumulative cost = {1.0147854308623248E8 rows, 3.8421606048107595E9 cpu, 1.273576776E9 io, 4.832457586923491E8 network, 2.4224727262166193E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 90341.14563932574, cumulative cost = {4.916519761629408E7 rows, 1.7395993356171422E9 cpu, 6.64468692E8 io, 2.164796390003584E8 network, 1.1783333492265138E8 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 90341.14563932574, cumulative cost = {4.9074856470654756E7 rows, 1.738153877286913E9 cpu, 6.64468692E8 io, 2.164796390003584E8 network, 1.1205150160173453E8 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 90341.14563932574, cumulative cost = {4.898451532501543E7 rows, 1.7222538356543915E9 cpu, 6.64468692E8 io, 2.143114515050146E8 network, 1.1205150160173453E8 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 498380.98394147574, cumulative cost = {4.889417417937611E7 rows, 1.7142797399113278E9 cpu, 6.64468692E8 io, 2.143114515050146E8 network, 1.0626966828081769E8 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 470353.72812947584, cumulative cost = {3.214431580799064E7 rows, 1.1332369281144466E9 cpu, 4.42978884E8 io, 1.4290268744517463E8 network, 6.667781405457778E7 memory}
               :           :  :- Calc(select=[x AS X0, X1]): rowcount = 397999.94231314905, cumulative cost = {1.1946256119052742E7 rows, 4.9366387496156937E8 cpu, 1.66120008E8 io, 6.395092257541156E7 network, 2.0711667356473174E7 memory}
               :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 397999.94231314905, cumulative cost = {1.1548256176739592E7 rows, 4.9366387496156937E8 cpu, 1.66120008E8 io, 6.395092257541156E7 network, 2.0711667356473174E7 memory}
               :           :  :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :     +- Exchange(distribution=[hash[x]]): rowcount = 346278.9487543269, cumulative cost = {6536148.234426444 rows, 8.485213937153476E7 cpu, 1.10750712E8 io, 8581626.575411558 network, 1320046.2262308649 memory}
               :           :  :        +- Calc(select=[x, X1]): rowcount = 346278.9487543269, cumulative cost = {6189869.285672117 rows, 2.667727598080785E7 cpu, 1.10750712E8 io, 270931.80530771165 network, 1320046.2262308649 memory}
               :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346278.9487543269, cumulative cost = {5843590.336917791 rows, 2.667727598080785E7 cpu, 1.10750712E8 io, 270931.80530771165 network, 1320046.2262308649 memory}
               :           :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 1472.3250288462589, cumulative cost = {3190257.3881634637 rows, 8209065.380577081 cpu, 5.5381416E7 io, 270931.80530771165 network, 1237596.0246154743 memory}
               :           :  :                 +- Calc(select=[X0, X1]): rowcount = 1472.3250288462589, cumulative cost = {3188785.0631346176 rows, 7973493.375961679 cpu, 5.5381416E7 io, 235596.00461540144 network, 1237596.0246154743 memory}
               :           :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1472.3250288462589, cumulative cost = {3187312.7381057716 rows, 7973493.375961679 cpu, 5.5381416E7 io, 235596.00461540144 network, 1237596.0246154743 memory}
               :           :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :           :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :           :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :           :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :                       +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[X0, X10 AS X1]): rowcount = 72353.78581632682, cumulative cost = {1.9727705960808422E7 rows, 6.391026994247477E8 cpu, 2.76858876E8 io, 7.895176486976308E7 network, 4.596614669810461E7 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 72353.78581632682, cumulative cost = {1.9655352174992096E7 rows, 6.391026994247477E8 cpu, 2.76858876E8 io, 7.895176486976308E7 network, 4.596614669810461E7 memory}
               :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
               :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
               :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
               :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
               :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
               :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :           :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :        +- Exchange(distribution=[hash[x]]): rowcount = 347480.0250288462, cumulative cost = {6544141.988355773 rows, 8.626684161157718E7 cpu, 1.1074668E8 io, 8798592.609923113 network, 1756352.0353847444 memory}
               :           :           +- Calc(select=[x, X1]): rowcount = 347480.0250288462, cumulative cost = {6196661.963326926 rows, 2.789019740673102E7 cpu, 1.1074668E8 io, 459072.0092308029 network, 1756352.0353847444 memory}
               :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347480.0250288462, cumulative cost = {5849181.93829808 rows, 2.789019740673102E7 cpu, 1.1074668E8 io, 459072.0092308029 network, 1756352.0353847444 memory}
               :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :                 +- Exchange(distribution=[broadcast]): rowcount = 9479.500192308393, cumulative cost = {3194647.913269234 rows, 9357929.405192554 cpu, 5.5377384E7 io, 459072.0092308029 network, 1225500.0246154743 memory}
               :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :           :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :                                :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :                                :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, y AS X1]): rowcount = 28027.255811999894, cumulative cost = {1.6251477387443997E7 rows, 5.805444308129398E8 cpu, 2.21489808E8 io, 7.140876405983996E7 network, 3.959185422623991E7 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x1)], select=[X0, X1, y, x1], build=[right]): rowcount = 28027.255811999894, cumulative cost = {1.6223450131631996E7 rows, 5.805444308129398E8 cpu, 2.21489808E8 io, 7.140876405983996E7 network, 3.959185422623991E7 memory}
               :                 :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
               :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
               :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
               :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
               :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
               :                 :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :                 :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                 :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[hash[x1]]): rowcount = 51969.825, cumulative cost = {3156566.4750000006 rows, 3.00726546E7 cpu, 5.5377612E7 io, 1255591.7999999998 network, 24948.0 memory}
               :                    +- Calc(select=[y, x0 AS x1]): rowcount = 51969.825, cumulative cost = {3104596.6500000004 rows, 2.1341724E7 cpu, 5.5377612E7 io, 8316.0 network, 24948.0 memory}
               :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 51969.825, cumulative cost = {3052626.825 rows, 2.1341724E7 cpu, 5.5377612E7 io, 8316.0 network, 24948.0 memory}
               :                          :- Calc(select=[x, y]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :                          :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :                          :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                          :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :                          :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 11836.800216626847, cumulative cost = {5.229801877806001E7 rows, 2.1017438456267698E9 cpu, 6.09108084E8 io, 2.6676611969199067E8 network, 1.2375107688687944E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 11836.800216626847, cumulative cost = {5.228618197784338E7 rows, 2.0998499575921094E9 cpu, 6.09108084E8 io, 2.6648203648679164E8 network, 1.2375107688687944E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 11836.800216626847, cumulative cost = {5.227434517762675E7 rows, 2.0998499575921094E9 cpu, 6.09108084E8 io, 2.6648203648679164E8 network, 1.2375107688687944E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 78576.00144417898, cumulative cost = {5.226183637741012E7 rows, 2.099164901580556E9 cpu, 6.09104052E8 io, 2.6647800448679164E8 network, 1.2373898088687944E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 78576.00144417898, cumulative cost = {5.2183260375965945E7 rows, 2.097907685557449E9 cpu, 6.09104052E8 io, 2.6647800448679164E8 network, 1.1871011679445198E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 78576.00144417898, cumulative cost = {5.210468437452177E7 rows, 2.0840783093032737E9 cpu, 6.09104052E8 io, 2.6459218045213133E8 network, 1.1871011679445198E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 433476.7357310327, cumulative cost = {5.2026108373077594E7 rows, 2.077142681531577E9 cpu, 6.09104052E8 io, 2.6459218045213133E8 network, 1.1368125270202452E8 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 82964.62103244415, cumulative cost = {2.791465791749914E7 rows, 1.099247765297604E9 cpu, 3.32236812E8 io, 1.4008200108852938E8 network, 6.731362981813665E7 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 82964.62103244415, cumulative cost = {2.7831693296466697E7 rows, 1.099247765297604E9 cpu, 3.32236812E8 io, 1.4008200108852938E8 network, 6.731362981813665E7 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 197620.20882615735, cumulative cost = {1.8470709405304633E7 rows, 5.977566769974166E8 cpu, 2.21493912E8 io, 7.316709402365556E7 network, 4.4692694729748145E7 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 197620.20882615735, cumulative cost = {1.8273089196478475E7 rows, 5.645564819146222E8 cpu, 2.21493912E8 io, 6.842420901182778E7 network, 4.4692694729748145E7 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 197620.20882615735, cumulative cost = {1.8075468987652317E7 rows, 5.613945585734037E8 cpu, 2.21493912E8 io, 6.842420901182778E7 network, 3.2045001364874072E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 197620.20882615735, cumulative cost = {1.787784877882616E7 rows, 5.2661340182E8 cpu, 2.21493912E8 io, 6.3681324E7 network, 3.2045001364874072E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1090202.6249999998, cumulative cost = {1.768022857E7 rows, 5.0917015982E8 cpu, 2.21493912E8 io, 6.3681324E7 network, 1.9397308E7 memory}
                        :           :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 1090098.6749999998, cumulative cost = {1.6588789045000002E7 rows, 5.08020653195E8 cpu, 2.21485596E8 io, 6.3677292E7 network, 1.9385212E7 memory}
                        :           :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 744032.5199999999, cumulative cost = {1.249898396E7 rows, 4.8846458391999996E8 cpu, 1.66111992E8 io, 6.36759792E7 network, 1.93821768E7 memory}
                        :           :     :              :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755276.425 rows, 4.69255131E8 cpu, 1.1073864E8 io, 6.3674742E7 network, 1.9379318E7 memory}
                        :           :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357309.5875 rows, 4.69255131E8 cpu, 1.1073864E8 io, 6.3674742E7 network, 1.9379318E7 memory}
                        :           :     :              :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :           :     :              :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 346058.25, cumulative cost = {3345234.75 rows, 6.0445161E7 cpu, 5.5369344E7 io, 8305446.0 network, 56.0 memory}
                        :           :     :              :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 346058.25, cumulative cost = {2999176.5 rows, 2307375.0 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
                        :           :     :              :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653118.25 rows, 2307375.0 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
                        :           :     :              :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
                        :           :     :              :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 346065.68249999994, cumulative cost = {2999675.015 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
                        :           :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346065.68249999994, cumulative cost = {2653609.3325 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
                        :           :     :              :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
                        :           :     :              :  :           +- Calc(select=[x0, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346066.155, cumulative cost = {2999706.41 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
                        :           :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346066.155, cumulative cost = {2653640.2550000004 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
                        :           :     :              :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :        +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
                        :           :     :              :           +- Calc(select=[x, y]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                        :           :     :                    :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 350512.11469858856, cumulative cost = {2.3677973719847422E7 rows, 9.774614394982419E8 cpu, 2.7686724E8 io, 1.2451017936360195E8 network, 4.6367622883887865E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 350512.11469858856, cumulative cost = {2.3327461605148833E7 rows, 9.774614394982419E8 cpu, 2.7686724E8 io, 1.2451017936360195E8 network, 4.6367622883887865E7 memory}
                        :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[hash[X0]]): rowcount = 29693.4313239236, cumulative cost = {1.8362841490450244E7 rows, 5.711823880476506E8 cpu, 2.21497944E8 io, 6.914088336360195E7 network, 4.4704790729748145E7 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 29693.4313239236, cumulative cost = {1.833314805912632E7 rows, 5.661938915852314E8 cpu, 2.21497944E8 io, 6.842824101182778E7 network, 4.4704790729748145E7 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 29693.4313239236, cumulative cost = {1.8303454627802398E7 rows, 5.661938915852314E8 cpu, 2.21497944E8 io, 6.842824101182778E7 network, 4.4704790729748145E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 197620.20882615735, cumulative cost = {1.8273089196478475E7 rows, 5.645564819146222E8 cpu, 2.21493912E8 io, 6.842420901182778E7 network, 4.4692694729748145E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 197620.20882615735, cumulative cost = {1.8075468987652317E7 rows, 5.613945585734037E8 cpu, 2.21493912E8 io, 6.842420901182778E7 network, 3.2045001364874072E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 197620.20882615735, cumulative cost = {1.787784877882616E7 rows, 5.2661340182E8 cpu, 2.21493912E8 io, 6.3681324E7 network, 3.2045001364874072E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 1090202.6249999998, cumulative cost = {1.768022857E7 rows, 5.0917015982E8 cpu, 2.21493912E8 io, 6.3681324E7 network, 1.9397308E7 memory}
                        :                          :           :- Union(all=[true], union=[X0, X1]): rowcount = 1090098.6749999998, cumulative cost = {1.6588789045000002E7 rows, 5.08020653195E8 cpu, 2.21485596E8 io, 6.3677292E7 network, 1.9385212E7 memory}
                        :                          :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 744032.5199999999, cumulative cost = {1.249898396E7 rows, 4.8846458391999996E8 cpu, 1.66111992E8 io, 6.36759792E7 network, 1.93821768E7 memory}
                        :                          :           :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755276.425 rows, 4.69255131E8 cpu, 1.1073864E8 io, 6.3674742E7 network, 1.9379318E7 memory}
                        :                          :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357309.5875 rows, 4.69255131E8 cpu, 1.1073864E8 io, 6.3674742E7 network, 1.9379318E7 memory}
                        :                          :           :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :                          :           :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 346058.25, cumulative cost = {3345234.75 rows, 6.0445161E7 cpu, 5.5369344E7 io, 8305446.0 network, 56.0 memory}
                        :                          :           :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 346058.25, cumulative cost = {2999176.5 rows, 2307375.0 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
                        :                          :           :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653118.25 rows, 2307375.0 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
                        :                          :           :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
                        :                          :           :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 346065.68249999994, cumulative cost = {2999675.015 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
                        :                          :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346065.68249999994, cumulative cost = {2653609.3325 rows, 1.84654204E7 cpu, 5.5373352E7 io, 1237.1999999999998 network, 2858.7999999999997 memory}
                        :                          :           :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
                        :                          :           :  :           +- Calc(select=[x0, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346066.155, cumulative cost = {2999706.41 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
                        :                          :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 346066.155, cumulative cost = {2653640.2550000004 rows, 1.84659706E7 cpu, 5.5373604E7 io, 1312.8 network, 3035.2 memory}
                        :                          :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :        +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
                        :                          :           :           +- Calc(select=[x, y]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
                        :                          :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :                          :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                        :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,2,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#2] Exchange(distribution=[hash[X1]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[X0]])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[7])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[1,0,2,1,3,2,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[x0 AS X0, y AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y, x0, y00], build=[right])\n:  :  :     :- [#5] Exchange(distribution=[hash[x]])\n:  :  :     +- [#6] Exchange(distribution=[hash[y00]])\n:  :  +- Calc(select=[x AS X0, y0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])\n:  :        :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:  :        +- [#8] Exchange(distribution=[broadcast])\n:  +- Calc(select=[x0 AS X0, y AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])\n:        :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, x AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0], isBroadcast=[true], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[1])
         :        :           :              :- Exchange(distribution=[broadcast])(reuse_id=[8])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[5])
         :        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[2])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[x, y])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])
         :        :           :              :        :- Reused(reference_id=[1])
         :        :           :              :        +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :        :           :              :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[4])
         :        :           :              :- Exchange(distribution=[hash[x]])(reuse_id=[6])
         :        :           :              :  +- Reused(reference_id=[2])
         :        :           :              :- Exchange(distribution=[hash[y00]])
         :        :           :              :  +- Calc(select=[x, y0 AS y00])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :              :        :- Reused(reference_id=[2])
         :        :           :              :        +- Exchange(distribution=[broadcast])
         :        :           :              :           +- Calc(select=[x, y0])
         :        :           :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[left])
         :        :           :              :                 :- Reused(reference_id=[3])
         :        :           :              :                 +- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :                    +- Reused(reference_id=[4])
         :        :           :              :- Reused(reference_id=[2])
         :        :           :              +- Exchange(distribution=[broadcast])
         :        :           :                 +- Calc(select=[x0, y])
         :        :           :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])
         :        :           :                       :- Reused(reference_id=[5])
         :        :           :                       +- Reused(reference_id=[3])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Reused(reference_id=[6])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[13])
         :        :           :                       :  +- Reused(reference_id=[1])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[10])
         :        :           :                             :- Reused(reference_id=[2])
         :        :           :                             +- Reused(reference_id=[3])
         :        :           :- Exchange(distribution=[hash[y]])(reuse_id=[9])
         :        :           :  +- Reused(reference_id=[2])
         :        :           +- Exchange(distribution=[hash[X0]])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[7])
         :        :                    +- Reused(reference_id=[8])
         :        +- Reused(reference_id=[8])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[17])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], build=[left])\n:        :- [#5] Exchange(distribution=[hash[X1]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Reused(reference_id=[9])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[2])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Calc(select=[y, x0])(reuse_id=[20])
         :              :                 :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :              :                 :           :  :     :- Reused(reference_id=[2])
         :              :                 :           :  :     +- Reused(reference_id=[3])
         :              :                 :           :  :- Reused(reference_id=[3])
         :              :                 :           :  :- Reused(reference_id=[5])
         :              :                 :           :  +- Reused(reference_id=[3])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[18])
         :              :                 :                 :- Reused(reference_id=[1])
         :              :                 :                 +- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[8])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[14])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :           :- Reused(reference_id=[2])
         :              :           :- Exchange(distribution=[broadcast])(reuse_id=[11])
         :              :           :  +- Reused(reference_id=[1])
         :              :           :- Reused(reference_id=[9])
         :              :           +- Exchange(distribution=[hash[x]])
         :              :              +- Calc(select=[x, y0])(reuse_id=[12])
         :              :                 +- Reused(reference_id=[10])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[11])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[12])
         :              :                 :     +- Reused(reference_id=[11])
         :              :                 +- Reused(reference_id=[13])
         :              :- Exchange(distribution=[hash[X1]])(reuse_id=[19])
         :              :  +- Reused(reference_id=[14])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, X0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :                       :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                       :  +- Reused(reference_id=[2])
         :                       +- Exchange(distribution=[broadcast])
         :                          +- Reused(reference_id=[15])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[2])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[16])
         :- Reused(reference_id=[17])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[x, x0])
         :     +- Reused(reference_id=[18])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[1,0,1,0,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#3] Exchange(distribution=[hash[y]])\n:  :     +- [#4] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#1] Exchange(distribution=[hash[X1]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x1)], select=[X0, X1, y, x1], build=[right])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#2] Exchange(distribution=[hash[x1]])\n])
                  :- Reused(reference_id=[19])
                  :- Exchange(distribution=[hash[x1]])
                  :  +- Calc(select=[y, x0 AS x1])
                  :     +- MultipleInput(readOrder=[0,1,0], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:- Calc(select=[x, y])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#2] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#3] Exchange(distribution=[broadcast])\n+- [#1] Exchange(distribution=[broadcast])\n])
                  :        :- Reused(reference_id=[11])
                  :        :- Reused(reference_id=[2])
                  :        +- Reused(reference_id=[8])
                  :- Reused(reference_id=[9])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[2])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Calc(select=[X0, X1])
                  :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                  :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
                  :                 :  +- Exchange(distribution=[hash[X0, X1]])
                  :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :                 :        +- Union(all=[true], union=[X0, X1])
                  :                 :           :- Calc(select=[x0 AS X0, y AS X1])
                  :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :                 :           :     :- Reused(reference_id=[20])
                  :                 :           :     +- Reused(reference_id=[8])
                  :                 :           +- Calc(select=[x AS X0, x AS X1])
                  :                 :              +- Reused(reference_id=[5])
                  :                 +- Reused(reference_id=[8])
                  :- Reused(reference_id=[19])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, X1])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                           :  +- Reused(reference_id=[2])
                           +- Exchange(distribution=[broadcast])
                              +- Reused(reference_id=[21])

Job has been submitted with JobID 161452e2c8ff6b79a052f9e686e7a5b3
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, r_3.y AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x UNION (SELECT r_0.x AS X0, s_1.y AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x) UNION (SELECT b_0.x AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN s AS s_1 ON b_0.x = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x) UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...

------------> using sink uuid: 8043d3d6_c784_4073_aadb_c665f47f1417

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, r_3.y AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN s AS s_2 ON s_1.y = s_2.x
                      INNER JOIN r AS r_3 ON s_2.y = r_3.x
             UNION
             (SELECT r_0.x AS X0, s_1.y AS X1
              FROM r AS r_0
                       INNER JOIN s AS s_1 ON r_0.y = s_1.x
                       INNER JOIN a AS a_2 ON s_1.y = a_2.x)
             UNION
             (SELECT b_0.x AS X0, r_2.y AS X1
              FROM b AS b_0
                       INNER JOIN s AS s_1 ON b_0.x = s_1.x
                       INNER JOIN r AS r_2 ON s_1.y = r_2.x)
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1
              FROM b AS b_0
                       INNER JOIN a AS a_1 ON b_0.x = a_1.x)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0)
            UNION
            (SELECT p19_0.X0 AS X0, r_2.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)),
     p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1
             FROM p19 AS p19_0
                      INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1
                      INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalUnion(all=[false])
   :  :        :        :  :- LogicalUnion(all=[false])
   :  :        :        :  :  :- LogicalProject(X0=[$0], X1=[$7])
   :  :        :        :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :        :        :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :        :        :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalUnion(all=[false])
   :  :              :  :  :  :- LogicalUnion(all=[false])
   :  :              :  :  :  :  :- LogicalProject(X0=[$0], X1=[$7])
   :  :              :  :  :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :              :  :  :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :              :  :  :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  +- LogicalUnion(all=[false])
   :        :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalUnion(all=[false])
         :     :        :  :- LogicalUnion(all=[false])
         :     :        :  :  :- LogicalProject(X0=[$0], X1=[$7])
         :     :        :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :     :        :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :     :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        :  +- LogicalProject(X0=[$0], X1=[$4])
         :     :        :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
         :     :        :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalUnion(all=[false])
         :           :  :  :  :- LogicalUnion(all=[false])
         :           :  :  :  :  :- LogicalProject(X0=[$0], X1=[$7])
         :           :  :  :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :           :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :           :  :  :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
         :           :  :  :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 47961.94351793923, cumulative cost = {7.357065575819783E8 rows, 3.0700124509499107E10 cpu, 9.07705104E9 io, 3.938967398686528E9 network, 1.705019151967318E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 47961.94351793923, cumulative cost = {7.356585956384604E8 rows, 3.069935711840282E10 cpu, 9.07705104E9 io, 3.938967398686528E9 network, 1.70194958758217E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 47961.94351793923, cumulative cost = {7.356106336949425E8 rows, 3.0690915816343662E10 cpu, 9.07705104E9 io, 3.9378163120420976E9 network, 1.70194958758217E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 264589.52267050795, cumulative cost = {7.355626717514246E8 rows, 3.0686682383980934E10 cpu, 9.07705104E9 io, 3.9378163120420976E9 network, 1.698880023197022E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 223309.75634724, cumulative cost = {4.45907417325717E8 rows, 1.8758659516140305E10 cpu, 5.538537648E9 io, 2.416135834122013E9 network, 1.0142246799813974E9 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 186218.16977028703, cumulative cost = {3.037251454382749E8 rows, 1.298686290543437E10 cpu, 3.69235416E9 io, 1.6726938272602322E9 network, 6.92008764442426E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 186218.16977028703, cumulative cost = {3.035389272685046E8 rows, 1.298686290543437E10 cpu, 3.69235416E9 io, 1.6726938272602322E9 network, 6.92008764442426E8 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 247192.34384635327, cumulative cost = {1.4213114960178733E8 rows, 5.811109087765004E9 cpu, 1.846176684E9 io, 7.493725615140934E8 network, 3.2221113313897145E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 247192.34384635327, cumulative cost = {1.4188395725794098E8 rows, 5.7695807739988165E9 cpu, 1.846176684E9 io, 7.43439945261781E8 network, 3.2221113313897145E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 247192.34384635327, cumulative cost = {1.4163676491409463E8 rows, 5.765625696497274E9 cpu, 1.846176684E9 io, 7.43439945261781E8 network, 3.063908231328048E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 247192.34384635327, cumulative cost = {1.4138957257024828E8 rows, 5.722119843980316E9 cpu, 1.846176684E9 io, 7.375073290094686E8 network, 3.063908231328048E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1363675.0195839624, cumulative cost = {1.4114238022640193E8 rows, 5.700301043666973E9 cpu, 1.846176684E9 io, 7.375073290094686E8 network, 2.905705131266382E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 257843.26407266557, cumulative cost = {1.064468090562436E8 rows, 4.334164087639591E9 cpu, 1.384628568E9 io, 5.598423426130545E8 network, 2.330948592940027E8 memory}
         :  :     :              :  :- Calc(select=[X0, X00 AS X1]): rowcount = 56815.38727619545, cumulative cost = {4.4826816665192574E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :  :     :              :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56815.38727619545, cumulative cost = {4.477000127791638E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :  :     :              :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :     :              :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :     :              :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :  :     :                    +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     +- Exchange(distribution=[broadcast]): rowcount = 4024.00925581335, cumulative cost = {8860873.74288371 rows, 2.2651304825347934E7 cpu, 1.53862644E8 io, 740441.7030696564 network, 3402209.231627392 memory}
         :  :     :              :  :        +- Calc(select=[X0, X1]): rowcount = 4024.00925581335, cumulative cost = {8856849.733627897 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :  :     :              :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4024.00925581335, cumulative cost = {8852825.724372083 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :  :     :              :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8847671.71511627 rows, 2.1702449517441086E7 cpu, 1.53855864E8 io, 637085.480930136 network, 3381869.231627392 memory}
         :  :     :              :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26261.728372089, cumulative cost = {8821409.98674418 rows, 2.128226186348766E7 cpu, 1.53855864E8 io, 637085.480930136 network, 1701118.615813696 memory}
         :  :     :              :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8795148.25837209 rows, 1.6660197669999998E7 cpu, 1.53855864E8 io, 6804.0 network, 1701118.615813696 memory}
         :  :     :              :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144876.90999999997, cumulative cost = {8768886.530000001 rows, 1.434216711E7 cpu, 1.53855864E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 201027.8767964701, cumulative cost = {6.136214912697835E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 201027.8767964701, cumulative cost = {6.116112125018188E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :  :     :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 965440.6060576444, cumulative cost = {2.4733035986376785E7 rows, 1.309975973992438E9 cpu, 3.07698636E8 io, 1.7826938448382965E8 network, 4816442.097377036 memory}
         :  :     :              :           +- Calc(select=[x, X0]): rowcount = 965440.6060576444, cumulative cost = {2.376759538031914E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 965440.6060576444, cumulative cost = {2.2802154774261497E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :  :     :              :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[hash[X1]]): rowcount = 26175.70705096215, cumulative cost = {9016524.168203853 rows, 1.9395826518346377E7 cpu, 1.53856356E8 io, 1256529.9384461832 network, 3350602.5025231554 memory}
         :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 1105831.755511297, cumulative cost = {3.3331896150574356E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 1105831.755511297, cumulative cost = {3.2226064395063058E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 962116.7034086465, cumulative cost = {1.8300042639551762E7 rows, 2.2889962738052928E8 cpu, 3.07705836E8 io, 2.382270639641407E7 network, 3597118.4417512375 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 962116.7034086465, cumulative cost = {1.7337925936143115E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962116.7034086465, cumulative cost = {1.6375809232734468E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 4016.3560576443224, cumulative cost = {9003597.529325822 rows, 1.5951130359415522E7 cpu, 1.53863556E8 io, 731905.5146065553 network, 3372202.5025231554 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 4016.3560576443224, cumulative cost = {8999581.173268178 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4016.3560576443224, cumulative cost = {8995564.817210535 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 994262.1212888937, cumulative cost = {1.61221559496947E8 rows, 7.165822181948284E9 cpu, 1.846177476E9 io, 9.233212657461388E8 network, 3.559548600480587E8 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 994262.1212888937, cumulative cost = {1.602272973756581E8 rows, 6.99878614557175E9 cpu, 1.846177476E9 io, 8.994589748352053E8 network, 3.559548600480587E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 994262.1212888937, cumulative cost = {1.592330352543692E8 rows, 6.99878614557175E9 cpu, 1.846177476E9 io, 8.994589748352053E8 network, 3.559548600480587E8 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 218319.14192595935, cumulative cost = {1.454185831330803E8 rows, 5.868862872436342E9 cpu, 1.692335196E9 io, 7.456166948352053E8 network, 3.4372898810020494E8 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 218319.14192595935, cumulative cost = {1.4520026399115434E8 rows, 5.832185256592781E9 cpu, 1.692335196E9 io, 7.403770354289823E8 network, 3.4372898810020494E8 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 218319.14192595935, cumulative cost = {1.4498194484922838E8 rows, 5.828692150321966E9 cpu, 1.692335196E9 io, 7.403770354289823E8 network, 3.297565630169436E8 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 218319.14192595935, cumulative cost = {1.4476362570730242E8 rows, 5.790267981342998E9 cpu, 1.692335196E9 io, 7.351373760227592E8 network, 3.297565630169436E8 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 1204391.5094979128, cumulative cost = {1.4454530656537646E8 rows, 5.7709977171910305E9 cpu, 1.692335196E9 io, 7.351373760227592E8 network, 3.157841379336822E8 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 230509.92576172462, cumulative cost = {7.755581092969063E7 rows, 3.054098570584121E9 cpu, 9.2308854E8 io, 3.8920199717303497E8 network, 1.869907513285236E8 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 230509.92576172462, cumulative cost = {7.73253010039289E7 rows, 3.054098570584121E9 cpu, 9.2308854E8 io, 3.8920199717303497E8 network, 1.869907513285236E8 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 549059.2771639194, cumulative cost = {5.1317663561155684E7 rows, 1.6607557145265112E9 cpu, 6.15397176E8 io, 2.032845481038681E8 network, 1.2415464867698169E8 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 549059.2771639194, cumulative cost = {5.076860428399176E7 rows, 1.5685137559629726E9 cpu, 6.15397176E8 io, 1.9010712545193404E8 network, 1.2415464867698169E8 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 549059.2771639194, cumulative cost = {5.021954500682784E7 rows, 1.5597288075283499E9 cpu, 6.15397176E8 io, 1.9010712545193404E8 network, 8.901485493849084E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 549059.2771639194, cumulative cost = {4.9670485729663916E7 rows, 1.4630943747475002E9 cpu, 6.15397176E8 io, 1.7692970279999998E8 network, 8.901485493849084E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 3028970.9175, cumulative cost = {4.912142645249999E7 rows, 1.4146308400675E9 cpu, 6.15397176E8 io, 1.7692970279999998E8 network, 5.3875061199999996E7 memory}
         :  :                             :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 3028796.1675, cumulative cost = {4.6090376035E7 rows, 1.41150214915E9 cpu, 6.15383196E8 io, 1.7692292279999998E8 network, 5.3854721199999996E7 memory}
         :  :                             :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 2067269.1824999999, cumulative cost = {3.47276091975E7 rows, 1.3571776047825E9 cpu, 4.61534112E8 io, 1.769208612E8 network, 5.38499388E7 memory}
         :  :                             :     :              :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631702E7 rows, 1.3038136704E9 cpu, 3.07684608E8 io, 1.769186736E8 network, 5.38448624E7 memory}
         :  :                             :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057561E7 rows, 1.3038136704E9 cpu, 3.07684608E8 io, 1.769186736E8 network, 5.38448624E7 memory}
         :  :                             :     :              :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                             :     :              :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 961514.3999999999, cumulative cost = {9294644.200000001 rows, 1.679448352E8 cpu, 1.53842328E8 io, 2.3076393599999998E7 network, 56.0 memory}
         :  :                             :     :              :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 961514.3999999999, cumulative cost = {8333129.800000001 rows, 6410416.0 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :                             :     :              :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371615.4 rows, 6410416.0 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :                             :     :              :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :                             :     :              :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 961527.7725, cumulative cost = {8334022.995 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :  :                             :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961527.7725, cumulative cost = {7372495.2225 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :  :                             :     :              :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
         :  :                             :     :              :  :           +- Calc(select=[x0, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961526.985, cumulative cost = {8333970.670000001 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
         :  :                             :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961526.985, cumulative cost = {7372443.6850000005 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
         :  :                             :     :              :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :        +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :  :                             :     :              :           +- Calc(select=[x, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :                             :     :                    :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 973881.5837361881, cumulative cost = {6.578510412618791E7 rows, 2.7156947550974116E9 cpu, 7.69246656E8 io, 3.459353788497242E8 network, 1.2879338660515861E8 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 973881.5837361881, cumulative cost = {6.4811222542451724E7 rows, 2.7156947550974116E9 cpu, 7.69246656E8 io, 3.459353788497242E8 network, 1.2879338660515861E8 memory}
         :  :                                   :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                                   :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[hash[X0]]): rowcount = 82448.8915745879, cumulative cost = {5.1017150958715536E7 rows, 1.586858443964815E9 cpu, 6.15404376E8 io, 1.9209309884972414E8 network, 1.2417624867698169E8 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 82448.8915745879, cumulative cost = {5.0934702067140944E7 rows, 1.573007030180284E9 cpu, 6.15404376E8 io, 1.9011432545193404E8 network, 1.2417624867698169E8 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 82448.8915745879, cumulative cost = {5.085225317556635E7 rows, 1.573007030180284E9 cpu, 6.15404376E8 io, 1.9011432545193404E8 network, 1.2417624867698169E8 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 549059.2771639194, cumulative cost = {5.076860428399176E7 rows, 1.5685137559629726E9 cpu, 6.15397176E8 io, 1.9010712545193404E8 network, 1.2415464867698169E8 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 549059.2771639194, cumulative cost = {5.021954500682784E7 rows, 1.5597288075283499E9 cpu, 6.15397176E8 io, 1.9010712545193404E8 network, 8.901485493849084E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 549059.2771639194, cumulative cost = {4.9670485729663916E7 rows, 1.4630943747475002E9 cpu, 6.15397176E8 io, 1.7692970279999998E8 network, 8.901485493849084E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 3028970.9175, cumulative cost = {4.912142645249999E7 rows, 1.4146308400675E9 cpu, 6.15397176E8 io, 1.7692970279999998E8 network, 5.3875061199999996E7 memory}
         :  :                                            :           :- Union(all=[true], union=[X0, X1]): rowcount = 3028796.1675, cumulative cost = {4.6090376035E7 rows, 1.41150214915E9 cpu, 6.15383196E8 io, 1.7692292279999998E8 network, 5.3854721199999996E7 memory}
         :  :                                            :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 2067269.1824999999, cumulative cost = {3.47276091975E7 rows, 1.3571776047825E9 cpu, 4.61534112E8 io, 1.769208612E8 network, 5.38499388E7 memory}
         :  :                                            :           :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631702E7 rows, 1.3038136704E9 cpu, 3.07684608E8 io, 1.769186736E8 network, 5.38448624E7 memory}
         :  :                                            :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057561E7 rows, 1.3038136704E9 cpu, 3.07684608E8 io, 1.769186736E8 network, 5.38448624E7 memory}
         :  :                                            :           :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                                            :           :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 961514.3999999999, cumulative cost = {9294644.200000001 rows, 1.679448352E8 cpu, 1.53842328E8 io, 2.3076393599999998E7 network, 56.0 memory}
         :  :                                            :           :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 961514.3999999999, cumulative cost = {8333129.800000001 rows, 6410416.0 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :                                            :           :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371615.4 rows, 6410416.0 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :                                            :           :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :                                            :           :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 961527.7725, cumulative cost = {8334022.995 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :  :                                            :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961527.7725, cumulative cost = {7372495.2225 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :  :                                            :           :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
         :  :                                            :           :  :           +- Calc(select=[x0, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961526.985, cumulative cost = {8333970.670000001 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
         :  :                                            :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961526.985, cumulative cost = {7372443.6850000005 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
         :  :                                            :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :           :        +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :  :                                            :           :           +- Calc(select=[x, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :                                            :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 37091.586576952985, cumulative cost = {1.4195896213109484E8 rows, 5.771573300949587E9 cpu, 1.846183488E9 io, 7.43442006861781E8 network, 3.222159155389714E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 37091.586576952985, cumulative cost = {1.419218705445179E8 rows, 5.771573300949587E9 cpu, 1.846183488E9 io, 7.43442006861781E8 network, 3.222159155389714E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 247192.34384635327, cumulative cost = {1.4188395725794098E8 rows, 5.7695807739988165E9 cpu, 1.846176684E9 io, 7.43439945261781E8 network, 3.2221113313897145E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 247192.34384635327, cumulative cost = {1.4163676491409463E8 rows, 5.765625696497274E9 cpu, 1.846176684E9 io, 7.43439945261781E8 network, 3.063908231328048E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 247192.34384635327, cumulative cost = {1.4138957257024828E8 rows, 5.722119843980316E9 cpu, 1.846176684E9 io, 7.375073290094686E8 network, 3.063908231328048E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1363675.0195839624, cumulative cost = {1.4114238022640193E8 rows, 5.700301043666973E9 cpu, 1.846176684E9 io, 7.375073290094686E8 network, 2.905705131266382E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 257843.26407266557, cumulative cost = {1.064468090562436E8 rows, 4.334164087639591E9 cpu, 1.384628568E9 io, 5.598423426130545E8 network, 2.330948592940027E8 memory}
         :        :           :  :- Calc(select=[X0, X00 AS X1]): rowcount = 56815.38727619545, cumulative cost = {4.4826816665192574E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56815.38727619545, cumulative cost = {4.477000127791638E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :           :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :  :     :                    +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 4024.00925581335, cumulative cost = {8860873.74288371 rows, 2.2651304825347934E7 cpu, 1.53862644E8 io, 740441.7030696564 network, 3402209.231627392 memory}
         :        :           :  :        +- Calc(select=[X0, X1]): rowcount = 4024.00925581335, cumulative cost = {8856849.733627897 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4024.00925581335, cumulative cost = {8852825.724372083 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8847671.71511627 rows, 2.1702449517441086E7 cpu, 1.53855864E8 io, 637085.480930136 network, 3381869.231627392 memory}
         :        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26261.728372089, cumulative cost = {8821409.98674418 rows, 2.128226186348766E7 cpu, 1.53855864E8 io, 637085.480930136 network, 1701118.615813696 memory}
         :        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8795148.25837209 rows, 1.6660197669999998E7 cpu, 1.53855864E8 io, 6804.0 network, 1701118.615813696 memory}
         :        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144876.90999999997, cumulative cost = {8768886.530000001 rows, 1.434216711E7 cpu, 1.53855864E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 201027.8767964701, cumulative cost = {6.136214912697835E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 201027.8767964701, cumulative cost = {6.116112125018188E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :        :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 965440.6060576444, cumulative cost = {2.4733035986376785E7 rows, 1.309975973992438E9 cpu, 3.07698636E8 io, 1.7826938448382965E8 network, 4816442.097377036 memory}
         :        :           :           +- Calc(select=[x, X0]): rowcount = 965440.6060576444, cumulative cost = {2.376759538031914E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 965440.6060576444, cumulative cost = {2.2802154774261497E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :        :           :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[hash[X1]]): rowcount = 26175.70705096215, cumulative cost = {9016524.168203853 rows, 1.9395826518346377E7 cpu, 1.53856356E8 io, 1256529.9384461832 network, 3350602.5025231554 memory}
         :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 1105831.755511297, cumulative cost = {3.3331896150574356E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 1105831.755511297, cumulative cost = {3.2226064395063058E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 962116.7034086465, cumulative cost = {1.8300042639551762E7 rows, 2.2889962738052928E8 cpu, 3.07705836E8 io, 2.382270639641407E7 network, 3597118.4417512375 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 962116.7034086465, cumulative cost = {1.7337925936143115E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962116.7034086465, cumulative cost = {1.6375809232734468E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 4016.3560576443224, cumulative cost = {9003597.529325822 rows, 1.5951130359415522E7 cpu, 1.53863556E8 io, 731905.5146065553 network, 3372202.5025231554 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 4016.3560576443224, cumulative cost = {8999581.173268178 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4016.3560576443224, cumulative cost = {8995564.817210535 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 41279.76632326797, cumulative cost = {2.89390664903037E8 rows, 1.1927758278317959E10 cpu, 3.538513392E9 io, 1.5216804779200845E9 network, 6.846553432156247E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], build=[right]): rowcount = 41279.76632326797, cumulative cost = {2.8934938513671374E8 rows, 1.1927758278317959E10 cpu, 3.538513392E9 io, 1.5216804779200845E9 network, 6.846553432156247E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 242360.57086622587, cumulative cost = {1.4400812776536947E8 rows, 6.086007318675995E9 cpu, 1.846170996E9 io, 7.805081335801686E8 network, 3.390658343232417E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 242360.57086622587, cumulative cost = {1.4376576719450325E8 rows, 6.045290742770469E9 cpu, 1.846170996E9 io, 7.746914798793792E8 network, 3.390658343232417E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 242360.57086622587, cumulative cost = {1.4352340662363702E8 rows, 6.041412973636609E9 cpu, 1.846170996E9 io, 7.746914798793792E8 network, 3.2355475778780323E8 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 242360.57086622587, cumulative cost = {1.432810460527708E8 rows, 5.998757513164153E9 cpu, 1.846170996E9 io, 7.688748261785897E8 network, 3.2355475778780323E8 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1337019.7922788807, cumulative cost = {1.4303868548190457E8 rows, 5.977365196487691E9 cpu, 1.846170996E9 io, 7.688748261785897E8 network, 3.0804368125236475E8 memory}
               :              :- Union(all=[true], union=[X0, X1]): rowcount = 1306862.0468957073, cumulative cost = {9.571616754007506E7 rows, 4.2254664351935163E9 cpu, 1.230781092E9 io, 5.508692690944862E8 network, 1.8518344282996798E8 memory}
               :              :  :- Calc(select=[x AS X0, X1]): rowcount = 1105832.07045755, cumulative cost = {3.3189480964450616E7 rows, 1.371488855565088E9 cpu, 4.61548464E8 io, 1.7767474034828407E8 network, 5.7510015907064155E7 memory}
               :              :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 1105832.07045755, cumulative cost = {3.2083648893993065E7 rows, 1.371488855565088E9 cpu, 4.61548464E8 io, 1.7767474034828407E8 network, 5.7510015907064155E7 memory}
               :              :  :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :     +- Exchange(distribution=[hash[x]]): rowcount = 962118.8030503338, cumulative cost = {1.8157626823535513E7 rows, 2.3561518514068538E8 cpu, 3.07706184E8 io, 2.3832460348284073E7 network, 3631362.936245466 memory}
               :              :  :        +- Calc(select=[x, X1]): rowcount = 962118.8030503338, cumulative cost = {1.7195508020485178E7 rows, 7.397922622822931E7 cpu, 3.07706184E8 io, 741609.075076062 network, 3631362.936245466 memory}
               :              :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962118.8030503338, cumulative cost = {1.6233389217434842E7 rows, 7.397922622822931E7 cpu, 3.07706184E8 io, 741609.075076062 network, 3631362.936245466 memory}
               :              :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :              +- Exchange(distribution=[broadcast]): rowcount = 4030.3536688916415, cumulative cost = {8861175.414384509 rows, 2.2666223398878183E7 cpu, 1.53863904E8 io, 741609.075076062 network, 3405663.130787534 memory}
               :              :  :                 +- Calc(select=[X0, X1]): rowcount = 4030.3536688916415, cumulative cost = {8857145.060715618 rows, 2.202136681185552E7 cpu, 1.53863904E8 io, 644880.5870226626 network, 3405663.130787534 memory}
               :              :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4030.3536688916415, cumulative cost = {8853114.707046727 rows, 2.202136681185552E7 cpu, 1.53863904E8 io, 644880.5870226626 network, 3405663.130787534 memory}
               :              :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :              :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :              :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :              :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :                       +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  +- Calc(select=[X0, X10 AS X1]): rowcount = 201029.97643815717, cumulative cost = {6.121982452872873E7 rows, 2.8526707175815325E9 cpu, 7.69232628E8 io, 3.7319452874620223E8 network, 1.2767342692290384E8 memory}
               :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 201029.97643815717, cumulative cost = {6.101879455229057E7 rows, 2.8526707175815325E9 cpu, 7.69232628E8 io, 3.7319452874620223E8 network, 1.2767342692290384E8 memory}
               :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
               :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
               :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
               :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
               :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
               :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :              :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :        +- Exchange(distribution=[hash[x]]): rowcount = 965454.6036688916, cumulative cost = {2.4590707188843787E7 rows, 1.3167068563373878E9 cpu, 3.07698984E8 io, 1.782813276620987E8 network, 4855128.500507081 memory}
               :              :           +- Calc(select=[x, X1]): rowcount = 965454.6036688916, cumulative cost = {2.3625252585174896E7 rows, 1.154510482921014E9 cpu, 3.07698984E8 io, 1.5511041717404532E8 network, 4855128.500507081 memory}
               :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965454.6036688916, cumulative cost = {2.2659797981506005E7 rows, 1.154510482921014E9 cpu, 3.07698984E8 io, 1.5511041717404532E8 network, 4855128.500507081 memory}
               :              :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :                 +- Exchange(distribution=[hash[X0]]): rowcount = 26269.02445927761, cumulative cost = {8874153.377837114 rows, 2.6123610725339938E7 cpu, 1.53856704E8 io, 1268137.1740453253 network, 3384063.130787534 memory}
               :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :              :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :                                :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :                                :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[X0, y AS X1]): rowcount = 30157.745383173515, cumulative cost = {4.5985498149550624E7 rows, 1.7505617415018961E9 cpu, 6.15389904E8 io, 2.180055570841035E8 network, 1.2286023842239675E8 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[X0, y, x], isBroadcast=[true], build=[right]): rowcount = 30157.745383173515, cumulative cost = {4.595534040416745E7 rows, 1.7505617415018961E9 cpu, 6.15389904E8 io, 2.180055570841035E8 network, 1.2286023842239675E8 memory}
               :                    :- Calc(select=[X0, y]): rowcount = 200451.63588782345, cumulative cost = {4.592398265878428E7 rows, 1.7488573284147935E9 cpu, 6.15382704E8 io, 2.179983570841035E8 network, 1.2283863842239675E8 memory}
               :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], build=[left]): rowcount = 200451.63588782345, cumulative cost = {4.5723531022896454E7 rows, 1.7488573284147935E9 cpu, 6.15382704E8 io, 2.179983570841035E8 network, 1.2283863842239675E8 memory}
               :                    :     :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
               :                    :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
               :                    :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
               :                    :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
               :                    :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
               :                    :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                    :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                    :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                    :     :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                    :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                    :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                    :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                    :     +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
               :                    :        +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                    :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[X0]]): rowcount = 32837.871288893904, cumulative cost = {1.4529997760502103E8 rows, 5.839549372104723E9 cpu, 1.692342396E9 io, 7.411723443399158E8 network, 3.4375058810020494E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 32837.871288893904, cumulative cost = {1.4526713973373213E8 rows, 5.8340326097281885E9 cpu, 1.692342396E9 io, 7.403842354289823E8 network, 3.4375058810020494E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 32837.871288893904, cumulative cost = {1.4523430186244324E8 rows, 5.8340326097281885E9 cpu, 1.692342396E9 io, 7.403842354289823E8 network, 3.4375058810020494E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 218319.14192595935, cumulative cost = {1.4520026399115434E8 rows, 5.832185256592781E9 cpu, 1.692335196E9 io, 7.403770354289823E8 network, 3.4372898810020494E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 218319.14192595935, cumulative cost = {1.4498194484922838E8 rows, 5.828692150321966E9 cpu, 1.692335196E9 io, 7.403770354289823E8 network, 3.297565630169436E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 218319.14192595935, cumulative cost = {1.4476362570730242E8 rows, 5.790267981342998E9 cpu, 1.692335196E9 io, 7.351373760227592E8 network, 3.297565630169436E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1204391.5094979128, cumulative cost = {1.4454530656537646E8 rows, 5.7709977171910305E9 cpu, 1.692335196E9 io, 7.351373760227592E8 network, 3.157841379336822E8 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 230509.92576172462, cumulative cost = {7.755581092969063E7 rows, 3.054098570584121E9 cpu, 9.2308854E8 io, 3.8920199717303497E8 network, 1.869907513285236E8 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 230509.92576172462, cumulative cost = {7.73253010039289E7 rows, 3.054098570584121E9 cpu, 9.2308854E8 io, 3.8920199717303497E8 network, 1.869907513285236E8 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 549059.2771639194, cumulative cost = {5.1317663561155684E7 rows, 1.6607557145265112E9 cpu, 6.15397176E8 io, 2.032845481038681E8 network, 1.2415464867698169E8 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 549059.2771639194, cumulative cost = {5.076860428399176E7 rows, 1.5685137559629726E9 cpu, 6.15397176E8 io, 1.9010712545193404E8 network, 1.2415464867698169E8 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 549059.2771639194, cumulative cost = {5.021954500682784E7 rows, 1.5597288075283499E9 cpu, 6.15397176E8 io, 1.9010712545193404E8 network, 8.901485493849084E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 549059.2771639194, cumulative cost = {4.9670485729663916E7 rows, 1.4630943747475002E9 cpu, 6.15397176E8 io, 1.7692970279999998E8 network, 8.901485493849084E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 3028970.9175, cumulative cost = {4.912142645249999E7 rows, 1.4146308400675E9 cpu, 6.15397176E8 io, 1.7692970279999998E8 network, 5.3875061199999996E7 memory}
                        :           :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 3028796.1675, cumulative cost = {4.6090376035E7 rows, 1.41150214915E9 cpu, 6.15383196E8 io, 1.7692292279999998E8 network, 5.3854721199999996E7 memory}
                        :           :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 2067269.1824999999, cumulative cost = {3.47276091975E7 rows, 1.3571776047825E9 cpu, 4.61534112E8 io, 1.769208612E8 network, 5.38499388E7 memory}
                        :           :     :              :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631702E7 rows, 1.3038136704E9 cpu, 3.07684608E8 io, 1.769186736E8 network, 5.38448624E7 memory}
                        :           :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057561E7 rows, 1.3038136704E9 cpu, 3.07684608E8 io, 1.769186736E8 network, 5.38448624E7 memory}
                        :           :     :              :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :     :              :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 961514.3999999999, cumulative cost = {9294644.200000001 rows, 1.679448352E8 cpu, 1.53842328E8 io, 2.3076393599999998E7 network, 56.0 memory}
                        :           :     :              :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 961514.3999999999, cumulative cost = {8333129.800000001 rows, 6410416.0 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
                        :           :     :              :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371615.4 rows, 6410416.0 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
                        :           :     :              :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
                        :           :     :              :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 961527.7725, cumulative cost = {8334022.995 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
                        :           :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961527.7725, cumulative cost = {7372495.2225 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
                        :           :     :              :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
                        :           :     :              :  :           +- Calc(select=[x0, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961526.985, cumulative cost = {8333970.670000001 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
                        :           :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961526.985, cumulative cost = {7372443.6850000005 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
                        :           :     :              :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :              :        +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
                        :           :     :              :           +- Calc(select=[x, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                        :           :     :                    :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 973881.5837361881, cumulative cost = {6.578510412618791E7 rows, 2.7156947550974116E9 cpu, 7.69246656E8 io, 3.459353788497242E8 network, 1.2879338660515861E8 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 973881.5837361881, cumulative cost = {6.4811222542451724E7 rows, 2.7156947550974116E9 cpu, 7.69246656E8 io, 3.459353788497242E8 network, 1.2879338660515861E8 memory}
                        :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[hash[X0]]): rowcount = 82448.8915745879, cumulative cost = {5.1017150958715536E7 rows, 1.586858443964815E9 cpu, 6.15404376E8 io, 1.9209309884972414E8 network, 1.2417624867698169E8 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 82448.8915745879, cumulative cost = {5.0934702067140944E7 rows, 1.573007030180284E9 cpu, 6.15404376E8 io, 1.9011432545193404E8 network, 1.2417624867698169E8 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 82448.8915745879, cumulative cost = {5.085225317556635E7 rows, 1.573007030180284E9 cpu, 6.15404376E8 io, 1.9011432545193404E8 network, 1.2417624867698169E8 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 549059.2771639194, cumulative cost = {5.076860428399176E7 rows, 1.5685137559629726E9 cpu, 6.15397176E8 io, 1.9010712545193404E8 network, 1.2415464867698169E8 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 549059.2771639194, cumulative cost = {5.021954500682784E7 rows, 1.5597288075283499E9 cpu, 6.15397176E8 io, 1.9010712545193404E8 network, 8.901485493849084E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 549059.2771639194, cumulative cost = {4.9670485729663916E7 rows, 1.4630943747475002E9 cpu, 6.15397176E8 io, 1.7692970279999998E8 network, 8.901485493849084E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 3028970.9175, cumulative cost = {4.912142645249999E7 rows, 1.4146308400675E9 cpu, 6.15397176E8 io, 1.7692970279999998E8 network, 5.3875061199999996E7 memory}
                        :                          :           :- Union(all=[true], union=[X0, X1]): rowcount = 3028796.1675, cumulative cost = {4.6090376035E7 rows, 1.41150214915E9 cpu, 6.15383196E8 io, 1.7692292279999998E8 network, 5.3854721199999996E7 memory}
                        :                          :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 2067269.1824999999, cumulative cost = {3.47276091975E7 rows, 1.3571776047825E9 cpu, 4.61534112E8 io, 1.769208612E8 network, 5.38499388E7 memory}
                        :                          :           :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631702E7 rows, 1.3038136704E9 cpu, 3.07684608E8 io, 1.769186736E8 network, 5.38448624E7 memory}
                        :                          :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057561E7 rows, 1.3038136704E9 cpu, 3.07684608E8 io, 1.769186736E8 network, 5.38448624E7 memory}
                        :                          :           :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                          :           :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 961514.3999999999, cumulative cost = {9294644.200000001 rows, 1.679448352E8 cpu, 1.53842328E8 io, 2.3076393599999998E7 network, 56.0 memory}
                        :                          :           :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 961514.3999999999, cumulative cost = {8333129.800000001 rows, 6410416.0 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
                        :                          :           :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371615.4 rows, 6410416.0 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
                        :                          :           :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
                        :                          :           :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 961527.7725, cumulative cost = {8334022.995 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
                        :                          :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961527.7725, cumulative cost = {7372495.2225 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
                        :                          :           :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
                        :                          :           :  :           +- Calc(select=[x0, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961526.985, cumulative cost = {8333970.670000001 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
                        :                          :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961526.985, cumulative cost = {7372443.6850000005 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
                        :                          :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :        +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
                        :                          :           :           +- Calc(select=[x, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
                        :                          :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :                          :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                        :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[1,0,1,2,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#3] Exchange(distribution=[hash[X1]])\n:  :     +- [#4] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#5] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#6] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], build=[right])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#2] Exchange(distribution=[hash[X0]])\n])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[0,1,0,1,2,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#2] Exchange(distribution=[hash[y]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#4] Exchange(distribution=[hash[X1]])\n:        +- [#5] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[X0, y, x], isBroadcast=[true], build=[right])\n      :- Calc(select=[X0, y])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], build=[left])\n      :     :- [#4] Exchange(distribution=[hash[X1]])\n      :     +- [#7] Exchange(distribution=[hash[x]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[3])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[6])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- Calc(select=[x0 AS X0, y AS X1])
         :              :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :                 :           :     :- Calc(select=[y, x0])(reuse_id=[14])
         :              :                 :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :              :                 :           :     :     :- Reused(reference_id=[1])
         :              :                 :           :     :     +- Exchange(distribution=[broadcast])(reuse_id=[5])
         :              :                 :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[10])
         :              :                 :           :     +- Reused(reference_id=[2])
         :              :                 :           +- Calc(select=[x AS X0, x AS X1])
         :              :                 :              +- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[2])
         :              :- Exchange(distribution=[hash[X1]])(reuse_id=[7])
         :              :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :              :     +- Exchange(distribution=[hash[X0, X1]])
         :              :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :              :- Reused(reference_id=[1])
         :              :              :- Exchange(distribution=[broadcast])(reuse_id=[8])
         :              :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[9])
         :              :              :- Reused(reference_id=[4])
         :              :              +- Exchange(distribution=[hash[x]])
         :              :                 +- Calc(select=[x, y0])(reuse_id=[16])
         :              :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[12])
         :              :                       :- Reused(reference_id=[1])
         :              :                       +- Reused(reference_id=[5])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :              :        :- Reused(reference_id=[4])
         :              :        +- Exchange(distribution=[hash[X0]])
         :              :           +- Reused(reference_id=[6])
         :              :- Reused(reference_id=[7])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, y])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Reused(reference_id=[8])
         :- Exchange(distribution=[hash[X0]])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[X0]])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[13])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[1,0,2,0,3,2,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[x0 AS X0, y AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y, x0, y00], build=[right])\n:  :  :     :- [#5] Exchange(distribution=[hash[x]])\n:  :  :     +- [#6] Exchange(distribution=[hash[y00]])\n:  :  +- Calc(select=[x AS X0, y0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])\n:  :        :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:  :        +- [#8] Exchange(distribution=[broadcast])\n:  +- Calc(select=[x0 AS X0, y AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])\n:        :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0], isBroadcast=[true], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Reused(reference_id=[3])
         :        :           :              :- Reused(reference_id=[8])
         :        :           :              :- Reused(reference_id=[1])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[x, y])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])
         :        :           :              :        :- Reused(reference_id=[9])
         :        :           :              :        +- Reused(reference_id=[5])
         :        :           :              :- Exchange(distribution=[hash[x]])(reuse_id=[11])
         :        :           :              :  +- Reused(reference_id=[1])
         :        :           :              :- Exchange(distribution=[hash[y00]])
         :        :           :              :  +- Calc(select=[x, y0 AS y00])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :              :        :- Reused(reference_id=[1])
         :        :           :              :        +- Exchange(distribution=[broadcast])
         :        :           :              :           +- Calc(select=[x, y0])
         :        :           :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[left])
         :        :           :              :                 :- Reused(reference_id=[5])
         :        :           :              :                 +- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :                    +- Reused(reference_id=[10])
         :        :           :              :- Reused(reference_id=[1])
         :        :           :              +- Exchange(distribution=[broadcast])
         :        :           :                 +- Calc(select=[x0, y])
         :        :           :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])
         :        :           :                       :- Reused(reference_id=[3])
         :        :           :                       +- Reused(reference_id=[5])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Reused(reference_id=[11])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[17])
         :        :           :                       :  +- Reused(reference_id=[9])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- Reused(reference_id=[12])
         :        :           :- Reused(reference_id=[4])
         :        :           +- Exchange(distribution=[hash[X0]])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[13])
         :        :                    +- Reused(reference_id=[2])
         :        +- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[20])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], build=[left])\n:        :- [#5] Exchange(distribution=[hash[X1]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Reused(reference_id=[4])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Reused(reference_id=[14])
         :              :                 :           :  :- Reused(reference_id=[5])
         :              :                 :           :  :- Reused(reference_id=[3])
         :              :                 :           :  +- Reused(reference_id=[5])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[21])
         :              :                 :                 :- Reused(reference_id=[9])
         :              :                 :                 +- Reused(reference_id=[5])
         :              :                 +- Reused(reference_id=[2])
         :              :- Reused(reference_id=[15])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[8])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[16])
         :              :                 :     +- Reused(reference_id=[8])
         :              :                 +- Reused(reference_id=[17])
         :              :- Reused(reference_id=[7])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, X0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], build=[right])
         :                       :- Reused(reference_id=[4])
         :                       +- Exchange(distribution=[hash[X1]])
         :                          +- Reused(reference_id=[18])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[19])
         :- Reused(reference_id=[20])
         +- Exchange(distribution=[broadcast])
            +- Calc(select=[x, x0])
               +- Reused(reference_id=[21])

Job has been submitted with JobID a4ede622b27ac9b195ec2defa87d89b9
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, r_3.y AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x UNION (SELECT r_0.x AS X0, s_1.y AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x) UNION (SELECT b_0.x AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN s AS s_1 ON b_0.x = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x) UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: a64ba31d_9037_4fae_ab0c_7eae1a119f7a

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, r_3.y AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN s AS s_2 ON s_1.y = s_2.x
                      INNER JOIN r AS r_3 ON s_2.y = r_3.x
             UNION
             (SELECT r_0.x AS X0, s_1.y AS X1
              FROM r AS r_0
                       INNER JOIN s AS s_1 ON r_0.y = s_1.x
                       INNER JOIN a AS a_2 ON s_1.y = a_2.x)
             UNION
             (SELECT b_0.x AS X0, r_2.y AS X1
              FROM b AS b_0
                       INNER JOIN s AS s_1 ON b_0.x = s_1.x
                       INNER JOIN r AS r_2 ON s_1.y = r_2.x)
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1
              FROM b AS b_0
                       INNER JOIN a AS a_1 ON b_0.x = a_1.x)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0)
            UNION
            (SELECT p19_0.X0 AS X0, r_2.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)),
     p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1
             FROM p19 AS p19_0
                      INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1
                      INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalUnion(all=[false])
   :  :        :        :  :- LogicalUnion(all=[false])
   :  :        :        :  :  :- LogicalProject(X0=[$0], X1=[$7])
   :  :        :        :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :        :        :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :        :        :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalUnion(all=[false])
   :  :              :  :  :  :- LogicalUnion(all=[false])
   :  :              :  :  :  :  :- LogicalProject(X0=[$0], X1=[$7])
   :  :              :  :  :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :              :  :  :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :              :  :  :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  +- LogicalUnion(all=[false])
   :        :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalUnion(all=[false])
         :     :        :  :- LogicalUnion(all=[false])
         :     :        :  :  :- LogicalProject(X0=[$0], X1=[$7])
         :     :        :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :     :        :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :     :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        :  +- LogicalProject(X0=[$0], X1=[$4])
         :     :        :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
         :     :        :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalUnion(all=[false])
         :           :  :  :  :- LogicalUnion(all=[false])
         :           :  :  :  :  :- LogicalProject(X0=[$0], X1=[$7])
         :           :  :  :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :           :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :           :  :  :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
         :           :  :  :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 47961.94351793923, cumulative cost = {7.357065575819783E8 rows, 3.0700124509499107E10 cpu, 9.07705104E9 io, 3.938967398686528E9 network, 1.705019151967318E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 47961.94351793923, cumulative cost = {7.356585956384604E8 rows, 3.069935711840282E10 cpu, 9.07705104E9 io, 3.938967398686528E9 network, 1.70194958758217E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 47961.94351793923, cumulative cost = {7.356106336949425E8 rows, 3.0690915816343662E10 cpu, 9.07705104E9 io, 3.9378163120420976E9 network, 1.70194958758217E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 264589.52267050795, cumulative cost = {7.355626717514246E8 rows, 3.0686682383980934E10 cpu, 9.07705104E9 io, 3.9378163120420976E9 network, 1.698880023197022E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 223309.75634724, cumulative cost = {4.45907417325717E8 rows, 1.8758659516140305E10 cpu, 5.538537648E9 io, 2.416135834122013E9 network, 1.0142246799813974E9 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 186218.16977028703, cumulative cost = {3.037251454382749E8 rows, 1.298686290543437E10 cpu, 3.69235416E9 io, 1.6726938272602322E9 network, 6.92008764442426E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 186218.16977028703, cumulative cost = {3.035389272685046E8 rows, 1.298686290543437E10 cpu, 3.69235416E9 io, 1.6726938272602322E9 network, 6.92008764442426E8 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 247192.34384635327, cumulative cost = {1.4213114960178733E8 rows, 5.811109087765004E9 cpu, 1.846176684E9 io, 7.493725615140934E8 network, 3.2221113313897145E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 247192.34384635327, cumulative cost = {1.4188395725794098E8 rows, 5.7695807739988165E9 cpu, 1.846176684E9 io, 7.43439945261781E8 network, 3.2221113313897145E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 247192.34384635327, cumulative cost = {1.4163676491409463E8 rows, 5.765625696497274E9 cpu, 1.846176684E9 io, 7.43439945261781E8 network, 3.063908231328048E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 247192.34384635327, cumulative cost = {1.4138957257024828E8 rows, 5.722119843980316E9 cpu, 1.846176684E9 io, 7.375073290094686E8 network, 3.063908231328048E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1363675.0195839624, cumulative cost = {1.4114238022640193E8 rows, 5.700301043666973E9 cpu, 1.846176684E9 io, 7.375073290094686E8 network, 2.905705131266382E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 257843.26407266557, cumulative cost = {1.064468090562436E8 rows, 4.334164087639591E9 cpu, 1.384628568E9 io, 5.598423426130545E8 network, 2.330948592940027E8 memory}
         :  :     :              :  :- Calc(select=[X0, X00 AS X1]): rowcount = 56815.38727619545, cumulative cost = {4.4826816665192574E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :  :     :              :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56815.38727619545, cumulative cost = {4.477000127791638E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :  :     :              :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :     :              :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :     :              :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :  :     :                    +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     +- Exchange(distribution=[broadcast]): rowcount = 4024.00925581335, cumulative cost = {8860873.74288371 rows, 2.2651304825347934E7 cpu, 1.53862644E8 io, 740441.7030696564 network, 3402209.231627392 memory}
         :  :     :              :  :        +- Calc(select=[X0, X1]): rowcount = 4024.00925581335, cumulative cost = {8856849.733627897 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :  :     :              :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4024.00925581335, cumulative cost = {8852825.724372083 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :  :     :              :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8847671.71511627 rows, 2.1702449517441086E7 cpu, 1.53855864E8 io, 637085.480930136 network, 3381869.231627392 memory}
         :  :     :              :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26261.728372089, cumulative cost = {8821409.98674418 rows, 2.128226186348766E7 cpu, 1.53855864E8 io, 637085.480930136 network, 1701118.615813696 memory}
         :  :     :              :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8795148.25837209 rows, 1.6660197669999998E7 cpu, 1.53855864E8 io, 6804.0 network, 1701118.615813696 memory}
         :  :     :              :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144876.90999999997, cumulative cost = {8768886.530000001 rows, 1.434216711E7 cpu, 1.53855864E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 201027.8767964701, cumulative cost = {6.136214912697835E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 201027.8767964701, cumulative cost = {6.116112125018188E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :  :     :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 965440.6060576444, cumulative cost = {2.4733035986376785E7 rows, 1.309975973992438E9 cpu, 3.07698636E8 io, 1.7826938448382965E8 network, 4816442.097377036 memory}
         :  :     :              :           +- Calc(select=[x, X0]): rowcount = 965440.6060576444, cumulative cost = {2.376759538031914E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 965440.6060576444, cumulative cost = {2.2802154774261497E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :  :     :              :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[hash[X1]]): rowcount = 26175.70705096215, cumulative cost = {9016524.168203853 rows, 1.9395826518346377E7 cpu, 1.53856356E8 io, 1256529.9384461832 network, 3350602.5025231554 memory}
         :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 1105831.755511297, cumulative cost = {3.3331896150574356E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 1105831.755511297, cumulative cost = {3.2226064395063058E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 962116.7034086465, cumulative cost = {1.8300042639551762E7 rows, 2.2889962738052928E8 cpu, 3.07705836E8 io, 2.382270639641407E7 network, 3597118.4417512375 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 962116.7034086465, cumulative cost = {1.7337925936143115E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962116.7034086465, cumulative cost = {1.6375809232734468E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 4016.3560576443224, cumulative cost = {9003597.529325822 rows, 1.5951130359415522E7 cpu, 1.53863556E8 io, 731905.5146065553 network, 3372202.5025231554 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 4016.3560576443224, cumulative cost = {8999581.173268178 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4016.3560576443224, cumulative cost = {8995564.817210535 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 994262.1212888937, cumulative cost = {1.61221559496947E8 rows, 7.165822181948284E9 cpu, 1.846177476E9 io, 9.233212657461388E8 network, 3.559548600480587E8 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 994262.1212888937, cumulative cost = {1.602272973756581E8 rows, 6.99878614557175E9 cpu, 1.846177476E9 io, 8.994589748352053E8 network, 3.559548600480587E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 994262.1212888937, cumulative cost = {1.592330352543692E8 rows, 6.99878614557175E9 cpu, 1.846177476E9 io, 8.994589748352053E8 network, 3.559548600480587E8 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 218319.14192595935, cumulative cost = {1.454185831330803E8 rows, 5.868862872436342E9 cpu, 1.692335196E9 io, 7.456166948352053E8 network, 3.4372898810020494E8 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 218319.14192595935, cumulative cost = {1.4520026399115434E8 rows, 5.832185256592781E9 cpu, 1.692335196E9 io, 7.403770354289823E8 network, 3.4372898810020494E8 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 218319.14192595935, cumulative cost = {1.4498194484922838E8 rows, 5.828692150321966E9 cpu, 1.692335196E9 io, 7.403770354289823E8 network, 3.297565630169436E8 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 218319.14192595935, cumulative cost = {1.4476362570730242E8 rows, 5.790267981342998E9 cpu, 1.692335196E9 io, 7.351373760227592E8 network, 3.297565630169436E8 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 1204391.5094979128, cumulative cost = {1.4454530656537646E8 rows, 5.7709977171910305E9 cpu, 1.692335196E9 io, 7.351373760227592E8 network, 3.157841379336822E8 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 230509.92576172462, cumulative cost = {7.755581092969063E7 rows, 3.054098570584121E9 cpu, 9.2308854E8 io, 3.8920199717303497E8 network, 1.869907513285236E8 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 230509.92576172462, cumulative cost = {7.73253010039289E7 rows, 3.054098570584121E9 cpu, 9.2308854E8 io, 3.8920199717303497E8 network, 1.869907513285236E8 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 549059.2771639194, cumulative cost = {5.1317663561155684E7 rows, 1.6607557145265112E9 cpu, 6.15397176E8 io, 2.032845481038681E8 network, 1.2415464867698169E8 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 549059.2771639194, cumulative cost = {5.076860428399176E7 rows, 1.5685137559629726E9 cpu, 6.15397176E8 io, 1.9010712545193404E8 network, 1.2415464867698169E8 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 549059.2771639194, cumulative cost = {5.021954500682784E7 rows, 1.5597288075283499E9 cpu, 6.15397176E8 io, 1.9010712545193404E8 network, 8.901485493849084E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 549059.2771639194, cumulative cost = {4.9670485729663916E7 rows, 1.4630943747475002E9 cpu, 6.15397176E8 io, 1.7692970279999998E8 network, 8.901485493849084E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 3028970.9175, cumulative cost = {4.912142645249999E7 rows, 1.4146308400675E9 cpu, 6.15397176E8 io, 1.7692970279999998E8 network, 5.3875061199999996E7 memory}
         :  :                             :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 3028796.1675, cumulative cost = {4.6090376035E7 rows, 1.41150214915E9 cpu, 6.15383196E8 io, 1.7692292279999998E8 network, 5.3854721199999996E7 memory}
         :  :                             :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 2067269.1824999999, cumulative cost = {3.47276091975E7 rows, 1.3571776047825E9 cpu, 4.61534112E8 io, 1.769208612E8 network, 5.38499388E7 memory}
         :  :                             :     :              :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631702E7 rows, 1.3038136704E9 cpu, 3.07684608E8 io, 1.769186736E8 network, 5.38448624E7 memory}
         :  :                             :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057561E7 rows, 1.3038136704E9 cpu, 3.07684608E8 io, 1.769186736E8 network, 5.38448624E7 memory}
         :  :                             :     :              :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                             :     :              :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 961514.3999999999, cumulative cost = {9294644.200000001 rows, 1.679448352E8 cpu, 1.53842328E8 io, 2.3076393599999998E7 network, 56.0 memory}
         :  :                             :     :              :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 961514.3999999999, cumulative cost = {8333129.800000001 rows, 6410416.0 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :                             :     :              :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371615.4 rows, 6410416.0 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :                             :     :              :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :                             :     :              :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 961527.7725, cumulative cost = {8334022.995 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :  :                             :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961527.7725, cumulative cost = {7372495.2225 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :  :                             :     :              :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
         :  :                             :     :              :  :           +- Calc(select=[x0, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961526.985, cumulative cost = {8333970.670000001 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
         :  :                             :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961526.985, cumulative cost = {7372443.6850000005 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
         :  :                             :     :              :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :        +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :  :                             :     :              :           +- Calc(select=[x, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :                             :     :                    :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 973881.5837361881, cumulative cost = {6.578510412618791E7 rows, 2.7156947550974116E9 cpu, 7.69246656E8 io, 3.459353788497242E8 network, 1.2879338660515861E8 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 973881.5837361881, cumulative cost = {6.4811222542451724E7 rows, 2.7156947550974116E9 cpu, 7.69246656E8 io, 3.459353788497242E8 network, 1.2879338660515861E8 memory}
         :  :                                   :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                                   :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[hash[X0]]): rowcount = 82448.8915745879, cumulative cost = {5.1017150958715536E7 rows, 1.586858443964815E9 cpu, 6.15404376E8 io, 1.9209309884972414E8 network, 1.2417624867698169E8 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 82448.8915745879, cumulative cost = {5.0934702067140944E7 rows, 1.573007030180284E9 cpu, 6.15404376E8 io, 1.9011432545193404E8 network, 1.2417624867698169E8 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 82448.8915745879, cumulative cost = {5.085225317556635E7 rows, 1.573007030180284E9 cpu, 6.15404376E8 io, 1.9011432545193404E8 network, 1.2417624867698169E8 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 549059.2771639194, cumulative cost = {5.076860428399176E7 rows, 1.5685137559629726E9 cpu, 6.15397176E8 io, 1.9010712545193404E8 network, 1.2415464867698169E8 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 549059.2771639194, cumulative cost = {5.021954500682784E7 rows, 1.5597288075283499E9 cpu, 6.15397176E8 io, 1.9010712545193404E8 network, 8.901485493849084E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 549059.2771639194, cumulative cost = {4.9670485729663916E7 rows, 1.4630943747475002E9 cpu, 6.15397176E8 io, 1.7692970279999998E8 network, 8.901485493849084E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 3028970.9175, cumulative cost = {4.912142645249999E7 rows, 1.4146308400675E9 cpu, 6.15397176E8 io, 1.7692970279999998E8 network, 5.3875061199999996E7 memory}
         :  :                                            :           :- Union(all=[true], union=[X0, X1]): rowcount = 3028796.1675, cumulative cost = {4.6090376035E7 rows, 1.41150214915E9 cpu, 6.15383196E8 io, 1.7692292279999998E8 network, 5.3854721199999996E7 memory}
         :  :                                            :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 2067269.1824999999, cumulative cost = {3.47276091975E7 rows, 1.3571776047825E9 cpu, 4.61534112E8 io, 1.769208612E8 network, 5.38499388E7 memory}
         :  :                                            :           :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631702E7 rows, 1.3038136704E9 cpu, 3.07684608E8 io, 1.769186736E8 network, 5.38448624E7 memory}
         :  :                                            :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057561E7 rows, 1.3038136704E9 cpu, 3.07684608E8 io, 1.769186736E8 network, 5.38448624E7 memory}
         :  :                                            :           :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                                            :           :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 961514.3999999999, cumulative cost = {9294644.200000001 rows, 1.679448352E8 cpu, 1.53842328E8 io, 2.3076393599999998E7 network, 56.0 memory}
         :  :                                            :           :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 961514.3999999999, cumulative cost = {8333129.800000001 rows, 6410416.0 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :                                            :           :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371615.4 rows, 6410416.0 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :                                            :           :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :                                            :           :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 961527.7725, cumulative cost = {8334022.995 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :  :                                            :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961527.7725, cumulative cost = {7372495.2225 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :  :                                            :           :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
         :  :                                            :           :  :           +- Calc(select=[x0, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961526.985, cumulative cost = {8333970.670000001 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
         :  :                                            :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961526.985, cumulative cost = {7372443.6850000005 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
         :  :                                            :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :           :        +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :  :                                            :           :           +- Calc(select=[x, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :                                            :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 37091.586576952985, cumulative cost = {1.4195896213109484E8 rows, 5.771573300949587E9 cpu, 1.846183488E9 io, 7.43442006861781E8 network, 3.222159155389714E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 37091.586576952985, cumulative cost = {1.419218705445179E8 rows, 5.771573300949587E9 cpu, 1.846183488E9 io, 7.43442006861781E8 network, 3.222159155389714E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 247192.34384635327, cumulative cost = {1.4188395725794098E8 rows, 5.7695807739988165E9 cpu, 1.846176684E9 io, 7.43439945261781E8 network, 3.2221113313897145E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 247192.34384635327, cumulative cost = {1.4163676491409463E8 rows, 5.765625696497274E9 cpu, 1.846176684E9 io, 7.43439945261781E8 network, 3.063908231328048E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 247192.34384635327, cumulative cost = {1.4138957257024828E8 rows, 5.722119843980316E9 cpu, 1.846176684E9 io, 7.375073290094686E8 network, 3.063908231328048E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1363675.0195839624, cumulative cost = {1.4114238022640193E8 rows, 5.700301043666973E9 cpu, 1.846176684E9 io, 7.375073290094686E8 network, 2.905705131266382E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 257843.26407266557, cumulative cost = {1.064468090562436E8 rows, 4.334164087639591E9 cpu, 1.384628568E9 io, 5.598423426130545E8 network, 2.330948592940027E8 memory}
         :        :           :  :- Calc(select=[X0, X00 AS X1]): rowcount = 56815.38727619545, cumulative cost = {4.4826816665192574E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56815.38727619545, cumulative cost = {4.477000127791638E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :           :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :  :     :                    +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 4024.00925581335, cumulative cost = {8860873.74288371 rows, 2.2651304825347934E7 cpu, 1.53862644E8 io, 740441.7030696564 network, 3402209.231627392 memory}
         :        :           :  :        +- Calc(select=[X0, X1]): rowcount = 4024.00925581335, cumulative cost = {8856849.733627897 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4024.00925581335, cumulative cost = {8852825.724372083 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8847671.71511627 rows, 2.1702449517441086E7 cpu, 1.53855864E8 io, 637085.480930136 network, 3381869.231627392 memory}
         :        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26261.728372089, cumulative cost = {8821409.98674418 rows, 2.128226186348766E7 cpu, 1.53855864E8 io, 637085.480930136 network, 1701118.615813696 memory}
         :        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8795148.25837209 rows, 1.6660197669999998E7 cpu, 1.53855864E8 io, 6804.0 network, 1701118.615813696 memory}
         :        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144876.90999999997, cumulative cost = {8768886.530000001 rows, 1.434216711E7 cpu, 1.53855864E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 201027.8767964701, cumulative cost = {6.136214912697835E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 201027.8767964701, cumulative cost = {6.116112125018188E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :        :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 965440.6060576444, cumulative cost = {2.4733035986376785E7 rows, 1.309975973992438E9 cpu, 3.07698636E8 io, 1.7826938448382965E8 network, 4816442.097377036 memory}
         :        :           :           +- Calc(select=[x, X0]): rowcount = 965440.6060576444, cumulative cost = {2.376759538031914E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 965440.6060576444, cumulative cost = {2.2802154774261497E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :        :           :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[hash[X1]]): rowcount = 26175.70705096215, cumulative cost = {9016524.168203853 rows, 1.9395826518346377E7 cpu, 1.53856356E8 io, 1256529.9384461832 network, 3350602.5025231554 memory}
         :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 1105831.755511297, cumulative cost = {3.3331896150574356E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 1105831.755511297, cumulative cost = {3.2226064395063058E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 962116.7034086465, cumulative cost = {1.8300042639551762E7 rows, 2.2889962738052928E8 cpu, 3.07705836E8 io, 2.382270639641407E7 network, 3597118.4417512375 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 962116.7034086465, cumulative cost = {1.7337925936143115E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962116.7034086465, cumulative cost = {1.6375809232734468E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 4016.3560576443224, cumulative cost = {9003597.529325822 rows, 1.5951130359415522E7 cpu, 1.53863556E8 io, 731905.5146065553 network, 3372202.5025231554 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 4016.3560576443224, cumulative cost = {8999581.173268178 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4016.3560576443224, cumulative cost = {8995564.817210535 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 41279.76632326797, cumulative cost = {2.89390664903037E8 rows, 1.1927758278317959E10 cpu, 3.538513392E9 io, 1.5216804779200845E9 network, 6.846553432156247E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], build=[right]): rowcount = 41279.76632326797, cumulative cost = {2.8934938513671374E8 rows, 1.1927758278317959E10 cpu, 3.538513392E9 io, 1.5216804779200845E9 network, 6.846553432156247E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 242360.57086622587, cumulative cost = {1.4400812776536947E8 rows, 6.086007318675995E9 cpu, 1.846170996E9 io, 7.805081335801686E8 network, 3.390658343232417E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 242360.57086622587, cumulative cost = {1.4376576719450325E8 rows, 6.045290742770469E9 cpu, 1.846170996E9 io, 7.746914798793792E8 network, 3.390658343232417E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 242360.57086622587, cumulative cost = {1.4352340662363702E8 rows, 6.041412973636609E9 cpu, 1.846170996E9 io, 7.746914798793792E8 network, 3.2355475778780323E8 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 242360.57086622587, cumulative cost = {1.432810460527708E8 rows, 5.998757513164153E9 cpu, 1.846170996E9 io, 7.688748261785897E8 network, 3.2355475778780323E8 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1337019.7922788807, cumulative cost = {1.4303868548190457E8 rows, 5.977365196487691E9 cpu, 1.846170996E9 io, 7.688748261785897E8 network, 3.0804368125236475E8 memory}
               :              :- Union(all=[true], union=[X0, X1]): rowcount = 1306862.0468957073, cumulative cost = {9.571616754007506E7 rows, 4.2254664351935163E9 cpu, 1.230781092E9 io, 5.508692690944862E8 network, 1.8518344282996798E8 memory}
               :              :  :- Calc(select=[x AS X0, X1]): rowcount = 1105832.07045755, cumulative cost = {3.3189480964450616E7 rows, 1.371488855565088E9 cpu, 4.61548464E8 io, 1.7767474034828407E8 network, 5.7510015907064155E7 memory}
               :              :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 1105832.07045755, cumulative cost = {3.2083648893993065E7 rows, 1.371488855565088E9 cpu, 4.61548464E8 io, 1.7767474034828407E8 network, 5.7510015907064155E7 memory}
               :              :  :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :     +- Exchange(distribution=[hash[x]]): rowcount = 962118.8030503338, cumulative cost = {1.8157626823535513E7 rows, 2.3561518514068538E8 cpu, 3.07706184E8 io, 2.3832460348284073E7 network, 3631362.936245466 memory}
               :              :  :        +- Calc(select=[x, X1]): rowcount = 962118.8030503338, cumulative cost = {1.7195508020485178E7 rows, 7.397922622822931E7 cpu, 3.07706184E8 io, 741609.075076062 network, 3631362.936245466 memory}
               :              :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962118.8030503338, cumulative cost = {1.6233389217434842E7 rows, 7.397922622822931E7 cpu, 3.07706184E8 io, 741609.075076062 network, 3631362.936245466 memory}
               :              :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :              +- Exchange(distribution=[broadcast]): rowcount = 4030.3536688916415, cumulative cost = {8861175.414384509 rows, 2.2666223398878183E7 cpu, 1.53863904E8 io, 741609.075076062 network, 3405663.130787534 memory}
               :              :  :                 +- Calc(select=[X0, X1]): rowcount = 4030.3536688916415, cumulative cost = {8857145.060715618 rows, 2.202136681185552E7 cpu, 1.53863904E8 io, 644880.5870226626 network, 3405663.130787534 memory}
               :              :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4030.3536688916415, cumulative cost = {8853114.707046727 rows, 2.202136681185552E7 cpu, 1.53863904E8 io, 644880.5870226626 network, 3405663.130787534 memory}
               :              :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :              :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :              :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :              :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :                       +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  +- Calc(select=[X0, X10 AS X1]): rowcount = 201029.97643815717, cumulative cost = {6.121982452872873E7 rows, 2.8526707175815325E9 cpu, 7.69232628E8 io, 3.7319452874620223E8 network, 1.2767342692290384E8 memory}
               :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 201029.97643815717, cumulative cost = {6.101879455229057E7 rows, 2.8526707175815325E9 cpu, 7.69232628E8 io, 3.7319452874620223E8 network, 1.2767342692290384E8 memory}
               :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
               :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
               :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
               :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
               :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
               :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :              :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :        +- Exchange(distribution=[hash[x]]): rowcount = 965454.6036688916, cumulative cost = {2.4590707188843787E7 rows, 1.3167068563373878E9 cpu, 3.07698984E8 io, 1.782813276620987E8 network, 4855128.500507081 memory}
               :              :           +- Calc(select=[x, X1]): rowcount = 965454.6036688916, cumulative cost = {2.3625252585174896E7 rows, 1.154510482921014E9 cpu, 3.07698984E8 io, 1.5511041717404532E8 network, 4855128.500507081 memory}
               :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965454.6036688916, cumulative cost = {2.2659797981506005E7 rows, 1.154510482921014E9 cpu, 3.07698984E8 io, 1.5511041717404532E8 network, 4855128.500507081 memory}
               :              :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :                 +- Exchange(distribution=[hash[X0]]): rowcount = 26269.02445927761, cumulative cost = {8874153.377837114 rows, 2.6123610725339938E7 cpu, 1.53856704E8 io, 1268137.1740453253 network, 3384063.130787534 memory}
               :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :              :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :                                :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :                                :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[X0, y AS X1]): rowcount = 30157.745383173515, cumulative cost = {4.5985498149550624E7 rows, 1.7505617415018961E9 cpu, 6.15389904E8 io, 2.180055570841035E8 network, 1.2286023842239675E8 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[X0, y, x], isBroadcast=[true], build=[right]): rowcount = 30157.745383173515, cumulative cost = {4.595534040416745E7 rows, 1.7505617415018961E9 cpu, 6.15389904E8 io, 2.180055570841035E8 network, 1.2286023842239675E8 memory}
               :                    :- Calc(select=[X0, y]): rowcount = 200451.63588782345, cumulative cost = {4.592398265878428E7 rows, 1.7488573284147935E9 cpu, 6.15382704E8 io, 2.179983570841035E8 network, 1.2283863842239675E8 memory}
               :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], build=[left]): rowcount = 200451.63588782345, cumulative cost = {4.5723531022896454E7 rows, 1.7488573284147935E9 cpu, 6.15382704E8 io, 2.179983570841035E8 network, 1.2283863842239675E8 memory}
               :                    :     :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
               :                    :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
               :                    :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
               :                    :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
               :                    :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
               :                    :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                    :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                    :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                    :     :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                    :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                    :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                    :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                    :     +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
               :                    :        +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                    :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[X0]]): rowcount = 32837.871288893904, cumulative cost = {1.4529997760502103E8 rows, 5.839549372104723E9 cpu, 1.692342396E9 io, 7.411723443399158E8 network, 3.4375058810020494E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 32837.871288893904, cumulative cost = {1.4526713973373213E8 rows, 5.8340326097281885E9 cpu, 1.692342396E9 io, 7.403842354289823E8 network, 3.4375058810020494E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 32837.871288893904, cumulative cost = {1.4523430186244324E8 rows, 5.8340326097281885E9 cpu, 1.692342396E9 io, 7.403842354289823E8 network, 3.4375058810020494E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 218319.14192595935, cumulative cost = {1.4520026399115434E8 rows, 5.832185256592781E9 cpu, 1.692335196E9 io, 7.403770354289823E8 network, 3.4372898810020494E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 218319.14192595935, cumulative cost = {1.4498194484922838E8 rows, 5.828692150321966E9 cpu, 1.692335196E9 io, 7.403770354289823E8 network, 3.297565630169436E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 218319.14192595935, cumulative cost = {1.4476362570730242E8 rows, 5.790267981342998E9 cpu, 1.692335196E9 io, 7.351373760227592E8 network, 3.297565630169436E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1204391.5094979128, cumulative cost = {1.4454530656537646E8 rows, 5.7709977171910305E9 cpu, 1.692335196E9 io, 7.351373760227592E8 network, 3.157841379336822E8 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 230509.92576172462, cumulative cost = {7.755581092969063E7 rows, 3.054098570584121E9 cpu, 9.2308854E8 io, 3.8920199717303497E8 network, 1.869907513285236E8 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 230509.92576172462, cumulative cost = {7.73253010039289E7 rows, 3.054098570584121E9 cpu, 9.2308854E8 io, 3.8920199717303497E8 network, 1.869907513285236E8 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 549059.2771639194, cumulative cost = {5.1317663561155684E7 rows, 1.6607557145265112E9 cpu, 6.15397176E8 io, 2.032845481038681E8 network, 1.2415464867698169E8 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 549059.2771639194, cumulative cost = {5.076860428399176E7 rows, 1.5685137559629726E9 cpu, 6.15397176E8 io, 1.9010712545193404E8 network, 1.2415464867698169E8 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 549059.2771639194, cumulative cost = {5.021954500682784E7 rows, 1.5597288075283499E9 cpu, 6.15397176E8 io, 1.9010712545193404E8 network, 8.901485493849084E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 549059.2771639194, cumulative cost = {4.9670485729663916E7 rows, 1.4630943747475002E9 cpu, 6.15397176E8 io, 1.7692970279999998E8 network, 8.901485493849084E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 3028970.9175, cumulative cost = {4.912142645249999E7 rows, 1.4146308400675E9 cpu, 6.15397176E8 io, 1.7692970279999998E8 network, 5.3875061199999996E7 memory}
                        :           :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 3028796.1675, cumulative cost = {4.6090376035E7 rows, 1.41150214915E9 cpu, 6.15383196E8 io, 1.7692292279999998E8 network, 5.3854721199999996E7 memory}
                        :           :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 2067269.1824999999, cumulative cost = {3.47276091975E7 rows, 1.3571776047825E9 cpu, 4.61534112E8 io, 1.769208612E8 network, 5.38499388E7 memory}
                        :           :     :              :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631702E7 rows, 1.3038136704E9 cpu, 3.07684608E8 io, 1.769186736E8 network, 5.38448624E7 memory}
                        :           :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057561E7 rows, 1.3038136704E9 cpu, 3.07684608E8 io, 1.769186736E8 network, 5.38448624E7 memory}
                        :           :     :              :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :     :              :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 961514.3999999999, cumulative cost = {9294644.200000001 rows, 1.679448352E8 cpu, 1.53842328E8 io, 2.3076393599999998E7 network, 56.0 memory}
                        :           :     :              :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 961514.3999999999, cumulative cost = {8333129.800000001 rows, 6410416.0 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
                        :           :     :              :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371615.4 rows, 6410416.0 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
                        :           :     :              :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
                        :           :     :              :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 961527.7725, cumulative cost = {8334022.995 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
                        :           :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961527.7725, cumulative cost = {7372495.2225 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
                        :           :     :              :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
                        :           :     :              :  :           +- Calc(select=[x0, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961526.985, cumulative cost = {8333970.670000001 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
                        :           :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961526.985, cumulative cost = {7372443.6850000005 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
                        :           :     :              :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :              :        +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
                        :           :     :              :           +- Calc(select=[x, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                        :           :     :                    :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 973881.5837361881, cumulative cost = {6.578510412618791E7 rows, 2.7156947550974116E9 cpu, 7.69246656E8 io, 3.459353788497242E8 network, 1.2879338660515861E8 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 973881.5837361881, cumulative cost = {6.4811222542451724E7 rows, 2.7156947550974116E9 cpu, 7.69246656E8 io, 3.459353788497242E8 network, 1.2879338660515861E8 memory}
                        :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[hash[X0]]): rowcount = 82448.8915745879, cumulative cost = {5.1017150958715536E7 rows, 1.586858443964815E9 cpu, 6.15404376E8 io, 1.9209309884972414E8 network, 1.2417624867698169E8 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 82448.8915745879, cumulative cost = {5.0934702067140944E7 rows, 1.573007030180284E9 cpu, 6.15404376E8 io, 1.9011432545193404E8 network, 1.2417624867698169E8 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 82448.8915745879, cumulative cost = {5.085225317556635E7 rows, 1.573007030180284E9 cpu, 6.15404376E8 io, 1.9011432545193404E8 network, 1.2417624867698169E8 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 549059.2771639194, cumulative cost = {5.076860428399176E7 rows, 1.5685137559629726E9 cpu, 6.15397176E8 io, 1.9010712545193404E8 network, 1.2415464867698169E8 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 549059.2771639194, cumulative cost = {5.021954500682784E7 rows, 1.5597288075283499E9 cpu, 6.15397176E8 io, 1.9010712545193404E8 network, 8.901485493849084E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 549059.2771639194, cumulative cost = {4.9670485729663916E7 rows, 1.4630943747475002E9 cpu, 6.15397176E8 io, 1.7692970279999998E8 network, 8.901485493849084E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 3028970.9175, cumulative cost = {4.912142645249999E7 rows, 1.4146308400675E9 cpu, 6.15397176E8 io, 1.7692970279999998E8 network, 5.3875061199999996E7 memory}
                        :                          :           :- Union(all=[true], union=[X0, X1]): rowcount = 3028796.1675, cumulative cost = {4.6090376035E7 rows, 1.41150214915E9 cpu, 6.15383196E8 io, 1.7692292279999998E8 network, 5.3854721199999996E7 memory}
                        :                          :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 2067269.1824999999, cumulative cost = {3.47276091975E7 rows, 1.3571776047825E9 cpu, 4.61534112E8 io, 1.769208612E8 network, 5.38499388E7 memory}
                        :                          :           :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631702E7 rows, 1.3038136704E9 cpu, 3.07684608E8 io, 1.769186736E8 network, 5.38448624E7 memory}
                        :                          :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057561E7 rows, 1.3038136704E9 cpu, 3.07684608E8 io, 1.769186736E8 network, 5.38448624E7 memory}
                        :                          :           :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                          :           :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 961514.3999999999, cumulative cost = {9294644.200000001 rows, 1.679448352E8 cpu, 1.53842328E8 io, 2.3076393599999998E7 network, 56.0 memory}
                        :                          :           :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 961514.3999999999, cumulative cost = {8333129.800000001 rows, 6410416.0 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
                        :                          :           :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371615.4 rows, 6410416.0 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
                        :                          :           :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
                        :                          :           :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 961527.7725, cumulative cost = {8334022.995 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
                        :                          :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961527.7725, cumulative cost = {7372495.2225 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
                        :                          :           :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
                        :                          :           :  :           +- Calc(select=[x0, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961526.985, cumulative cost = {8333970.670000001 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
                        :                          :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961526.985, cumulative cost = {7372443.6850000005 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
                        :                          :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :        +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
                        :                          :           :           +- Calc(select=[x, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
                        :                          :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :                          :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                        :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[1,0,1,2,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#3] Exchange(distribution=[hash[X1]])\n:  :     +- [#4] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#5] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#6] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], build=[right])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#2] Exchange(distribution=[hash[X0]])\n])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[0,1,0,1,2,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#2] Exchange(distribution=[hash[y]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#4] Exchange(distribution=[hash[X1]])\n:        +- [#5] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[X0, y, x], isBroadcast=[true], build=[right])\n      :- Calc(select=[X0, y])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], build=[left])\n      :     :- [#4] Exchange(distribution=[hash[X1]])\n      :     +- [#7] Exchange(distribution=[hash[x]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[3])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[6])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- Calc(select=[x0 AS X0, y AS X1])
         :              :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :                 :           :     :- Calc(select=[y, x0])(reuse_id=[14])
         :              :                 :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :              :                 :           :     :     :- Reused(reference_id=[1])
         :              :                 :           :     :     +- Exchange(distribution=[broadcast])(reuse_id=[5])
         :              :                 :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[10])
         :              :                 :           :     +- Reused(reference_id=[2])
         :              :                 :           +- Calc(select=[x AS X0, x AS X1])
         :              :                 :              +- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[2])
         :              :- Exchange(distribution=[hash[X1]])(reuse_id=[7])
         :              :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :              :     +- Exchange(distribution=[hash[X0, X1]])
         :              :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :              :- Reused(reference_id=[1])
         :              :              :- Exchange(distribution=[broadcast])(reuse_id=[8])
         :              :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[9])
         :              :              :- Reused(reference_id=[4])
         :              :              +- Exchange(distribution=[hash[x]])
         :              :                 +- Calc(select=[x, y0])(reuse_id=[16])
         :              :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[12])
         :              :                       :- Reused(reference_id=[1])
         :              :                       +- Reused(reference_id=[5])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :              :        :- Reused(reference_id=[4])
         :              :        +- Exchange(distribution=[hash[X0]])
         :              :           +- Reused(reference_id=[6])
         :              :- Reused(reference_id=[7])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, y])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Reused(reference_id=[8])
         :- Exchange(distribution=[hash[X0]])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[X0]])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[13])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[1,0,2,0,3,2,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[x0 AS X0, y AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y, x0, y00], build=[right])\n:  :  :     :- [#5] Exchange(distribution=[hash[x]])\n:  :  :     +- [#6] Exchange(distribution=[hash[y00]])\n:  :  +- Calc(select=[x AS X0, y0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])\n:  :        :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:  :        +- [#8] Exchange(distribution=[broadcast])\n:  +- Calc(select=[x0 AS X0, y AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])\n:        :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0], isBroadcast=[true], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Reused(reference_id=[3])
         :        :           :              :- Reused(reference_id=[8])
         :        :           :              :- Reused(reference_id=[1])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[x, y])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])
         :        :           :              :        :- Reused(reference_id=[9])
         :        :           :              :        +- Reused(reference_id=[5])
         :        :           :              :- Exchange(distribution=[hash[x]])(reuse_id=[11])
         :        :           :              :  +- Reused(reference_id=[1])
         :        :           :              :- Exchange(distribution=[hash[y00]])
         :        :           :              :  +- Calc(select=[x, y0 AS y00])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :              :        :- Reused(reference_id=[1])
         :        :           :              :        +- Exchange(distribution=[broadcast])
         :        :           :              :           +- Calc(select=[x, y0])
         :        :           :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[left])
         :        :           :              :                 :- Reused(reference_id=[5])
         :        :           :              :                 +- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :                    +- Reused(reference_id=[10])
         :        :           :              :- Reused(reference_id=[1])
         :        :           :              +- Exchange(distribution=[broadcast])
         :        :           :                 +- Calc(select=[x0, y])
         :        :           :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])
         :        :           :                       :- Reused(reference_id=[3])
         :        :           :                       +- Reused(reference_id=[5])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Reused(reference_id=[11])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[17])
         :        :           :                       :  +- Reused(reference_id=[9])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- Reused(reference_id=[12])
         :        :           :- Reused(reference_id=[4])
         :        :           +- Exchange(distribution=[hash[X0]])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[13])
         :        :                    +- Reused(reference_id=[2])
         :        +- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[20])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], build=[left])\n:        :- [#5] Exchange(distribution=[hash[X1]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Reused(reference_id=[4])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Reused(reference_id=[14])
         :              :                 :           :  :- Reused(reference_id=[5])
         :              :                 :           :  :- Reused(reference_id=[3])
         :              :                 :           :  +- Reused(reference_id=[5])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[21])
         :              :                 :                 :- Reused(reference_id=[9])
         :              :                 :                 +- Reused(reference_id=[5])
         :              :                 +- Reused(reference_id=[2])
         :              :- Reused(reference_id=[15])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[8])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[16])
         :              :                 :     +- Reused(reference_id=[8])
         :              :                 +- Reused(reference_id=[17])
         :              :- Reused(reference_id=[7])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, X0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], build=[right])
         :                       :- Reused(reference_id=[4])
         :                       +- Exchange(distribution=[hash[X1]])
         :                          +- Reused(reference_id=[18])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[19])
         :- Reused(reference_id=[20])
         +- Exchange(distribution=[broadcast])
            +- Calc(select=[x, x0])
               +- Reused(reference_id=[21])

Job has been submitted with JobID 8f4800659baa80b823bbcc52899e924f
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, r_3.y AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x UNION (SELECT r_0.x AS X0, s_1.y AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x) UNION (SELECT b_0.x AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN s AS s_1 ON b_0.x = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x) UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 84cc4d0b_5233_4730_8d7f_d03b88a4086b

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, r_3.y AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN s AS s_2 ON s_1.y = s_2.x
                      INNER JOIN r AS r_3 ON s_2.y = r_3.x
             UNION
             (SELECT r_0.x AS X0, s_1.y AS X1
              FROM r AS r_0
                       INNER JOIN s AS s_1 ON r_0.y = s_1.x
                       INNER JOIN a AS a_2 ON s_1.y = a_2.x)
             UNION
             (SELECT b_0.x AS X0, r_2.y AS X1
              FROM b AS b_0
                       INNER JOIN s AS s_1 ON b_0.x = s_1.x
                       INNER JOIN r AS r_2 ON s_1.y = r_2.x)
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1
              FROM b AS b_0
                       INNER JOIN a AS a_1 ON b_0.x = a_1.x)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0)
            UNION
            (SELECT p19_0.X0 AS X0, r_2.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)),
     p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1
             FROM p19 AS p19_0
                      INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1
                      INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalUnion(all=[false])
   :  :        :        :  :- LogicalUnion(all=[false])
   :  :        :        :  :  :- LogicalProject(X0=[$0], X1=[$7])
   :  :        :        :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :        :        :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :        :        :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalUnion(all=[false])
   :  :              :  :  :  :- LogicalUnion(all=[false])
   :  :              :  :  :  :  :- LogicalProject(X0=[$0], X1=[$7])
   :  :              :  :  :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :              :  :  :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :              :  :  :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  +- LogicalUnion(all=[false])
   :        :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalUnion(all=[false])
         :     :        :  :- LogicalUnion(all=[false])
         :     :        :  :  :- LogicalProject(X0=[$0], X1=[$7])
         :     :        :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :     :        :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :     :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        :  +- LogicalProject(X0=[$0], X1=[$4])
         :     :        :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
         :     :        :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalUnion(all=[false])
         :           :  :  :  :- LogicalUnion(all=[false])
         :           :  :  :  :  :- LogicalProject(X0=[$0], X1=[$7])
         :           :  :  :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :           :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :           :  :  :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
         :           :  :  :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 47961.94351793923, cumulative cost = {7.357065575819783E8 rows, 3.0700124509499107E10 cpu, 9.07705104E9 io, 3.938967398686528E9 network, 1.705019151967318E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 47961.94351793923, cumulative cost = {7.356585956384604E8 rows, 3.069935711840282E10 cpu, 9.07705104E9 io, 3.938967398686528E9 network, 1.70194958758217E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 47961.94351793923, cumulative cost = {7.356106336949425E8 rows, 3.0690915816343662E10 cpu, 9.07705104E9 io, 3.9378163120420976E9 network, 1.70194958758217E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 264589.52267050795, cumulative cost = {7.355626717514246E8 rows, 3.0686682383980934E10 cpu, 9.07705104E9 io, 3.9378163120420976E9 network, 1.698880023197022E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 223309.75634724, cumulative cost = {4.45907417325717E8 rows, 1.8758659516140305E10 cpu, 5.538537648E9 io, 2.416135834122013E9 network, 1.0142246799813974E9 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 186218.16977028703, cumulative cost = {3.037251454382749E8 rows, 1.298686290543437E10 cpu, 3.69235416E9 io, 1.6726938272602322E9 network, 6.92008764442426E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 186218.16977028703, cumulative cost = {3.035389272685046E8 rows, 1.298686290543437E10 cpu, 3.69235416E9 io, 1.6726938272602322E9 network, 6.92008764442426E8 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 247192.34384635327, cumulative cost = {1.4213114960178733E8 rows, 5.811109087765004E9 cpu, 1.846176684E9 io, 7.493725615140934E8 network, 3.2221113313897145E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 247192.34384635327, cumulative cost = {1.4188395725794098E8 rows, 5.7695807739988165E9 cpu, 1.846176684E9 io, 7.43439945261781E8 network, 3.2221113313897145E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 247192.34384635327, cumulative cost = {1.4163676491409463E8 rows, 5.765625696497274E9 cpu, 1.846176684E9 io, 7.43439945261781E8 network, 3.063908231328048E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 247192.34384635327, cumulative cost = {1.4138957257024828E8 rows, 5.722119843980316E9 cpu, 1.846176684E9 io, 7.375073290094686E8 network, 3.063908231328048E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1363675.0195839624, cumulative cost = {1.4114238022640193E8 rows, 5.700301043666973E9 cpu, 1.846176684E9 io, 7.375073290094686E8 network, 2.905705131266382E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 257843.26407266557, cumulative cost = {1.064468090562436E8 rows, 4.334164087639591E9 cpu, 1.384628568E9 io, 5.598423426130545E8 network, 2.330948592940027E8 memory}
         :  :     :              :  :- Calc(select=[X0, X00 AS X1]): rowcount = 56815.38727619545, cumulative cost = {4.4826816665192574E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :  :     :              :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56815.38727619545, cumulative cost = {4.477000127791638E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :  :     :              :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :     :              :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :     :              :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :  :     :                    +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     +- Exchange(distribution=[broadcast]): rowcount = 4024.00925581335, cumulative cost = {8860873.74288371 rows, 2.2651304825347934E7 cpu, 1.53862644E8 io, 740441.7030696564 network, 3402209.231627392 memory}
         :  :     :              :  :        +- Calc(select=[X0, X1]): rowcount = 4024.00925581335, cumulative cost = {8856849.733627897 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :  :     :              :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4024.00925581335, cumulative cost = {8852825.724372083 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :  :     :              :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8847671.71511627 rows, 2.1702449517441086E7 cpu, 1.53855864E8 io, 637085.480930136 network, 3381869.231627392 memory}
         :  :     :              :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26261.728372089, cumulative cost = {8821409.98674418 rows, 2.128226186348766E7 cpu, 1.53855864E8 io, 637085.480930136 network, 1701118.615813696 memory}
         :  :     :              :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8795148.25837209 rows, 1.6660197669999998E7 cpu, 1.53855864E8 io, 6804.0 network, 1701118.615813696 memory}
         :  :     :              :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144876.90999999997, cumulative cost = {8768886.530000001 rows, 1.434216711E7 cpu, 1.53855864E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 201027.8767964701, cumulative cost = {6.136214912697835E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 201027.8767964701, cumulative cost = {6.116112125018188E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :  :     :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 965440.6060576444, cumulative cost = {2.4733035986376785E7 rows, 1.309975973992438E9 cpu, 3.07698636E8 io, 1.7826938448382965E8 network, 4816442.097377036 memory}
         :  :     :              :           +- Calc(select=[x, X0]): rowcount = 965440.6060576444, cumulative cost = {2.376759538031914E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 965440.6060576444, cumulative cost = {2.2802154774261497E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :  :     :              :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[hash[X1]]): rowcount = 26175.70705096215, cumulative cost = {9016524.168203853 rows, 1.9395826518346377E7 cpu, 1.53856356E8 io, 1256529.9384461832 network, 3350602.5025231554 memory}
         :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 1105831.755511297, cumulative cost = {3.3331896150574356E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 1105831.755511297, cumulative cost = {3.2226064395063058E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 962116.7034086465, cumulative cost = {1.8300042639551762E7 rows, 2.2889962738052928E8 cpu, 3.07705836E8 io, 2.382270639641407E7 network, 3597118.4417512375 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 962116.7034086465, cumulative cost = {1.7337925936143115E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962116.7034086465, cumulative cost = {1.6375809232734468E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 4016.3560576443224, cumulative cost = {9003597.529325822 rows, 1.5951130359415522E7 cpu, 1.53863556E8 io, 731905.5146065553 network, 3372202.5025231554 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 4016.3560576443224, cumulative cost = {8999581.173268178 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4016.3560576443224, cumulative cost = {8995564.817210535 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 994262.1212888937, cumulative cost = {1.61221559496947E8 rows, 7.165822181948284E9 cpu, 1.846177476E9 io, 9.233212657461388E8 network, 3.559548600480587E8 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 994262.1212888937, cumulative cost = {1.602272973756581E8 rows, 6.99878614557175E9 cpu, 1.846177476E9 io, 8.994589748352053E8 network, 3.559548600480587E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 994262.1212888937, cumulative cost = {1.592330352543692E8 rows, 6.99878614557175E9 cpu, 1.846177476E9 io, 8.994589748352053E8 network, 3.559548600480587E8 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 218319.14192595935, cumulative cost = {1.454185831330803E8 rows, 5.868862872436342E9 cpu, 1.692335196E9 io, 7.456166948352053E8 network, 3.4372898810020494E8 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 218319.14192595935, cumulative cost = {1.4520026399115434E8 rows, 5.832185256592781E9 cpu, 1.692335196E9 io, 7.403770354289823E8 network, 3.4372898810020494E8 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 218319.14192595935, cumulative cost = {1.4498194484922838E8 rows, 5.828692150321966E9 cpu, 1.692335196E9 io, 7.403770354289823E8 network, 3.297565630169436E8 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 218319.14192595935, cumulative cost = {1.4476362570730242E8 rows, 5.790267981342998E9 cpu, 1.692335196E9 io, 7.351373760227592E8 network, 3.297565630169436E8 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 1204391.5094979128, cumulative cost = {1.4454530656537646E8 rows, 5.7709977171910305E9 cpu, 1.692335196E9 io, 7.351373760227592E8 network, 3.157841379336822E8 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 230509.92576172462, cumulative cost = {7.755581092969063E7 rows, 3.054098570584121E9 cpu, 9.2308854E8 io, 3.8920199717303497E8 network, 1.869907513285236E8 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 230509.92576172462, cumulative cost = {7.73253010039289E7 rows, 3.054098570584121E9 cpu, 9.2308854E8 io, 3.8920199717303497E8 network, 1.869907513285236E8 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 549059.2771639194, cumulative cost = {5.1317663561155684E7 rows, 1.6607557145265112E9 cpu, 6.15397176E8 io, 2.032845481038681E8 network, 1.2415464867698169E8 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 549059.2771639194, cumulative cost = {5.076860428399176E7 rows, 1.5685137559629726E9 cpu, 6.15397176E8 io, 1.9010712545193404E8 network, 1.2415464867698169E8 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 549059.2771639194, cumulative cost = {5.021954500682784E7 rows, 1.5597288075283499E9 cpu, 6.15397176E8 io, 1.9010712545193404E8 network, 8.901485493849084E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 549059.2771639194, cumulative cost = {4.9670485729663916E7 rows, 1.4630943747475002E9 cpu, 6.15397176E8 io, 1.7692970279999998E8 network, 8.901485493849084E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 3028970.9175, cumulative cost = {4.912142645249999E7 rows, 1.4146308400675E9 cpu, 6.15397176E8 io, 1.7692970279999998E8 network, 5.3875061199999996E7 memory}
         :  :                             :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 3028796.1675, cumulative cost = {4.6090376035E7 rows, 1.41150214915E9 cpu, 6.15383196E8 io, 1.7692292279999998E8 network, 5.3854721199999996E7 memory}
         :  :                             :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 2067269.1824999999, cumulative cost = {3.47276091975E7 rows, 1.3571776047825E9 cpu, 4.61534112E8 io, 1.769208612E8 network, 5.38499388E7 memory}
         :  :                             :     :              :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631702E7 rows, 1.3038136704E9 cpu, 3.07684608E8 io, 1.769186736E8 network, 5.38448624E7 memory}
         :  :                             :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057561E7 rows, 1.3038136704E9 cpu, 3.07684608E8 io, 1.769186736E8 network, 5.38448624E7 memory}
         :  :                             :     :              :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                             :     :              :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 961514.3999999999, cumulative cost = {9294644.200000001 rows, 1.679448352E8 cpu, 1.53842328E8 io, 2.3076393599999998E7 network, 56.0 memory}
         :  :                             :     :              :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 961514.3999999999, cumulative cost = {8333129.800000001 rows, 6410416.0 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :                             :     :              :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371615.4 rows, 6410416.0 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :                             :     :              :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :                             :     :              :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 961527.7725, cumulative cost = {8334022.995 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :  :                             :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961527.7725, cumulative cost = {7372495.2225 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :  :                             :     :              :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
         :  :                             :     :              :  :           +- Calc(select=[x0, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961526.985, cumulative cost = {8333970.670000001 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
         :  :                             :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961526.985, cumulative cost = {7372443.6850000005 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
         :  :                             :     :              :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :        +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :  :                             :     :              :           +- Calc(select=[x, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :                             :     :                    :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 973881.5837361881, cumulative cost = {6.578510412618791E7 rows, 2.7156947550974116E9 cpu, 7.69246656E8 io, 3.459353788497242E8 network, 1.2879338660515861E8 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 973881.5837361881, cumulative cost = {6.4811222542451724E7 rows, 2.7156947550974116E9 cpu, 7.69246656E8 io, 3.459353788497242E8 network, 1.2879338660515861E8 memory}
         :  :                                   :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                                   :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[hash[X0]]): rowcount = 82448.8915745879, cumulative cost = {5.1017150958715536E7 rows, 1.586858443964815E9 cpu, 6.15404376E8 io, 1.9209309884972414E8 network, 1.2417624867698169E8 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 82448.8915745879, cumulative cost = {5.0934702067140944E7 rows, 1.573007030180284E9 cpu, 6.15404376E8 io, 1.9011432545193404E8 network, 1.2417624867698169E8 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 82448.8915745879, cumulative cost = {5.085225317556635E7 rows, 1.573007030180284E9 cpu, 6.15404376E8 io, 1.9011432545193404E8 network, 1.2417624867698169E8 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 549059.2771639194, cumulative cost = {5.076860428399176E7 rows, 1.5685137559629726E9 cpu, 6.15397176E8 io, 1.9010712545193404E8 network, 1.2415464867698169E8 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 549059.2771639194, cumulative cost = {5.021954500682784E7 rows, 1.5597288075283499E9 cpu, 6.15397176E8 io, 1.9010712545193404E8 network, 8.901485493849084E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 549059.2771639194, cumulative cost = {4.9670485729663916E7 rows, 1.4630943747475002E9 cpu, 6.15397176E8 io, 1.7692970279999998E8 network, 8.901485493849084E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 3028970.9175, cumulative cost = {4.912142645249999E7 rows, 1.4146308400675E9 cpu, 6.15397176E8 io, 1.7692970279999998E8 network, 5.3875061199999996E7 memory}
         :  :                                            :           :- Union(all=[true], union=[X0, X1]): rowcount = 3028796.1675, cumulative cost = {4.6090376035E7 rows, 1.41150214915E9 cpu, 6.15383196E8 io, 1.7692292279999998E8 network, 5.3854721199999996E7 memory}
         :  :                                            :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 2067269.1824999999, cumulative cost = {3.47276091975E7 rows, 1.3571776047825E9 cpu, 4.61534112E8 io, 1.769208612E8 network, 5.38499388E7 memory}
         :  :                                            :           :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631702E7 rows, 1.3038136704E9 cpu, 3.07684608E8 io, 1.769186736E8 network, 5.38448624E7 memory}
         :  :                                            :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057561E7 rows, 1.3038136704E9 cpu, 3.07684608E8 io, 1.769186736E8 network, 5.38448624E7 memory}
         :  :                                            :           :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                                            :           :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 961514.3999999999, cumulative cost = {9294644.200000001 rows, 1.679448352E8 cpu, 1.53842328E8 io, 2.3076393599999998E7 network, 56.0 memory}
         :  :                                            :           :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 961514.3999999999, cumulative cost = {8333129.800000001 rows, 6410416.0 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :                                            :           :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371615.4 rows, 6410416.0 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :                                            :           :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :                                            :           :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 961527.7725, cumulative cost = {8334022.995 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :  :                                            :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961527.7725, cumulative cost = {7372495.2225 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
         :  :                                            :           :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
         :  :                                            :           :  :           +- Calc(select=[x0, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961526.985, cumulative cost = {8333970.670000001 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
         :  :                                            :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961526.985, cumulative cost = {7372443.6850000005 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
         :  :                                            :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :           :        +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :  :                                            :           :           +- Calc(select=[x, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :                                            :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 37091.586576952985, cumulative cost = {1.4195896213109484E8 rows, 5.771573300949587E9 cpu, 1.846183488E9 io, 7.43442006861781E8 network, 3.222159155389714E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 37091.586576952985, cumulative cost = {1.419218705445179E8 rows, 5.771573300949587E9 cpu, 1.846183488E9 io, 7.43442006861781E8 network, 3.222159155389714E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 247192.34384635327, cumulative cost = {1.4188395725794098E8 rows, 5.7695807739988165E9 cpu, 1.846176684E9 io, 7.43439945261781E8 network, 3.2221113313897145E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 247192.34384635327, cumulative cost = {1.4163676491409463E8 rows, 5.765625696497274E9 cpu, 1.846176684E9 io, 7.43439945261781E8 network, 3.063908231328048E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 247192.34384635327, cumulative cost = {1.4138957257024828E8 rows, 5.722119843980316E9 cpu, 1.846176684E9 io, 7.375073290094686E8 network, 3.063908231328048E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1363675.0195839624, cumulative cost = {1.4114238022640193E8 rows, 5.700301043666973E9 cpu, 1.846176684E9 io, 7.375073290094686E8 network, 2.905705131266382E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 257843.26407266557, cumulative cost = {1.064468090562436E8 rows, 4.334164087639591E9 cpu, 1.384628568E9 io, 5.598423426130545E8 network, 2.330948592940027E8 memory}
         :        :           :  :- Calc(select=[X0, X00 AS X1]): rowcount = 56815.38727619545, cumulative cost = {4.4826816665192574E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56815.38727619545, cumulative cost = {4.477000127791638E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :           :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :  :     :                    +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 4024.00925581335, cumulative cost = {8860873.74288371 rows, 2.2651304825347934E7 cpu, 1.53862644E8 io, 740441.7030696564 network, 3402209.231627392 memory}
         :        :           :  :        +- Calc(select=[X0, X1]): rowcount = 4024.00925581335, cumulative cost = {8856849.733627897 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4024.00925581335, cumulative cost = {8852825.724372083 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8847671.71511627 rows, 2.1702449517441086E7 cpu, 1.53855864E8 io, 637085.480930136 network, 3381869.231627392 memory}
         :        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26261.728372089, cumulative cost = {8821409.98674418 rows, 2.128226186348766E7 cpu, 1.53855864E8 io, 637085.480930136 network, 1701118.615813696 memory}
         :        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8795148.25837209 rows, 1.6660197669999998E7 cpu, 1.53855864E8 io, 6804.0 network, 1701118.615813696 memory}
         :        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144876.90999999997, cumulative cost = {8768886.530000001 rows, 1.434216711E7 cpu, 1.53855864E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 201027.8767964701, cumulative cost = {6.136214912697835E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 201027.8767964701, cumulative cost = {6.116112125018188E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :        :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 965440.6060576444, cumulative cost = {2.4733035986376785E7 rows, 1.309975973992438E9 cpu, 3.07698636E8 io, 1.7826938448382965E8 network, 4816442.097377036 memory}
         :        :           :           +- Calc(select=[x, X0]): rowcount = 965440.6060576444, cumulative cost = {2.376759538031914E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 965440.6060576444, cumulative cost = {2.2802154774261497E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :        :           :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[hash[X1]]): rowcount = 26175.70705096215, cumulative cost = {9016524.168203853 rows, 1.9395826518346377E7 cpu, 1.53856356E8 io, 1256529.9384461832 network, 3350602.5025231554 memory}
         :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 1105831.755511297, cumulative cost = {3.3331896150574356E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 1105831.755511297, cumulative cost = {3.2226064395063058E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 962116.7034086465, cumulative cost = {1.8300042639551762E7 rows, 2.2889962738052928E8 cpu, 3.07705836E8 io, 2.382270639641407E7 network, 3597118.4417512375 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 962116.7034086465, cumulative cost = {1.7337925936143115E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962116.7034086465, cumulative cost = {1.6375809232734468E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 4016.3560576443224, cumulative cost = {9003597.529325822 rows, 1.5951130359415522E7 cpu, 1.53863556E8 io, 731905.5146065553 network, 3372202.5025231554 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 4016.3560576443224, cumulative cost = {8999581.173268178 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4016.3560576443224, cumulative cost = {8995564.817210535 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 41279.76632326797, cumulative cost = {2.89390664903037E8 rows, 1.1927758278317959E10 cpu, 3.538513392E9 io, 1.5216804779200845E9 network, 6.846553432156247E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], build=[right]): rowcount = 41279.76632326797, cumulative cost = {2.8934938513671374E8 rows, 1.1927758278317959E10 cpu, 3.538513392E9 io, 1.5216804779200845E9 network, 6.846553432156247E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 242360.57086622587, cumulative cost = {1.4400812776536947E8 rows, 6.086007318675995E9 cpu, 1.846170996E9 io, 7.805081335801686E8 network, 3.390658343232417E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 242360.57086622587, cumulative cost = {1.4376576719450325E8 rows, 6.045290742770469E9 cpu, 1.846170996E9 io, 7.746914798793792E8 network, 3.390658343232417E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 242360.57086622587, cumulative cost = {1.4352340662363702E8 rows, 6.041412973636609E9 cpu, 1.846170996E9 io, 7.746914798793792E8 network, 3.2355475778780323E8 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 242360.57086622587, cumulative cost = {1.432810460527708E8 rows, 5.998757513164153E9 cpu, 1.846170996E9 io, 7.688748261785897E8 network, 3.2355475778780323E8 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1337019.7922788807, cumulative cost = {1.4303868548190457E8 rows, 5.977365196487691E9 cpu, 1.846170996E9 io, 7.688748261785897E8 network, 3.0804368125236475E8 memory}
               :              :- Union(all=[true], union=[X0, X1]): rowcount = 1306862.0468957073, cumulative cost = {9.571616754007506E7 rows, 4.2254664351935163E9 cpu, 1.230781092E9 io, 5.508692690944862E8 network, 1.8518344282996798E8 memory}
               :              :  :- Calc(select=[x AS X0, X1]): rowcount = 1105832.07045755, cumulative cost = {3.3189480964450616E7 rows, 1.371488855565088E9 cpu, 4.61548464E8 io, 1.7767474034828407E8 network, 5.7510015907064155E7 memory}
               :              :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 1105832.07045755, cumulative cost = {3.2083648893993065E7 rows, 1.371488855565088E9 cpu, 4.61548464E8 io, 1.7767474034828407E8 network, 5.7510015907064155E7 memory}
               :              :  :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :     +- Exchange(distribution=[hash[x]]): rowcount = 962118.8030503338, cumulative cost = {1.8157626823535513E7 rows, 2.3561518514068538E8 cpu, 3.07706184E8 io, 2.3832460348284073E7 network, 3631362.936245466 memory}
               :              :  :        +- Calc(select=[x, X1]): rowcount = 962118.8030503338, cumulative cost = {1.7195508020485178E7 rows, 7.397922622822931E7 cpu, 3.07706184E8 io, 741609.075076062 network, 3631362.936245466 memory}
               :              :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962118.8030503338, cumulative cost = {1.6233389217434842E7 rows, 7.397922622822931E7 cpu, 3.07706184E8 io, 741609.075076062 network, 3631362.936245466 memory}
               :              :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :              +- Exchange(distribution=[broadcast]): rowcount = 4030.3536688916415, cumulative cost = {8861175.414384509 rows, 2.2666223398878183E7 cpu, 1.53863904E8 io, 741609.075076062 network, 3405663.130787534 memory}
               :              :  :                 +- Calc(select=[X0, X1]): rowcount = 4030.3536688916415, cumulative cost = {8857145.060715618 rows, 2.202136681185552E7 cpu, 1.53863904E8 io, 644880.5870226626 network, 3405663.130787534 memory}
               :              :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4030.3536688916415, cumulative cost = {8853114.707046727 rows, 2.202136681185552E7 cpu, 1.53863904E8 io, 644880.5870226626 network, 3405663.130787534 memory}
               :              :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :              :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :              :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :              :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :                       +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  +- Calc(select=[X0, X10 AS X1]): rowcount = 201029.97643815717, cumulative cost = {6.121982452872873E7 rows, 2.8526707175815325E9 cpu, 7.69232628E8 io, 3.7319452874620223E8 network, 1.2767342692290384E8 memory}
               :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 201029.97643815717, cumulative cost = {6.101879455229057E7 rows, 2.8526707175815325E9 cpu, 7.69232628E8 io, 3.7319452874620223E8 network, 1.2767342692290384E8 memory}
               :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
               :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
               :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
               :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
               :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
               :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :              :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :        +- Exchange(distribution=[hash[x]]): rowcount = 965454.6036688916, cumulative cost = {2.4590707188843787E7 rows, 1.3167068563373878E9 cpu, 3.07698984E8 io, 1.782813276620987E8 network, 4855128.500507081 memory}
               :              :           +- Calc(select=[x, X1]): rowcount = 965454.6036688916, cumulative cost = {2.3625252585174896E7 rows, 1.154510482921014E9 cpu, 3.07698984E8 io, 1.5511041717404532E8 network, 4855128.500507081 memory}
               :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965454.6036688916, cumulative cost = {2.2659797981506005E7 rows, 1.154510482921014E9 cpu, 3.07698984E8 io, 1.5511041717404532E8 network, 4855128.500507081 memory}
               :              :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :                 +- Exchange(distribution=[hash[X0]]): rowcount = 26269.02445927761, cumulative cost = {8874153.377837114 rows, 2.6123610725339938E7 cpu, 1.53856704E8 io, 1268137.1740453253 network, 3384063.130787534 memory}
               :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :              :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :                                :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :                                :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[X0, y AS X1]): rowcount = 30157.745383173515, cumulative cost = {4.5985498149550624E7 rows, 1.7505617415018961E9 cpu, 6.15389904E8 io, 2.180055570841035E8 network, 1.2286023842239675E8 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[X0, y, x], isBroadcast=[true], build=[right]): rowcount = 30157.745383173515, cumulative cost = {4.595534040416745E7 rows, 1.7505617415018961E9 cpu, 6.15389904E8 io, 2.180055570841035E8 network, 1.2286023842239675E8 memory}
               :                    :- Calc(select=[X0, y]): rowcount = 200451.63588782345, cumulative cost = {4.592398265878428E7 rows, 1.7488573284147935E9 cpu, 6.15382704E8 io, 2.179983570841035E8 network, 1.2283863842239675E8 memory}
               :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], build=[left]): rowcount = 200451.63588782345, cumulative cost = {4.5723531022896454E7 rows, 1.7488573284147935E9 cpu, 6.15382704E8 io, 2.179983570841035E8 network, 1.2283863842239675E8 memory}
               :                    :     :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
               :                    :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
               :                    :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
               :                    :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
               :                    :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
               :                    :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                    :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                    :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                    :     :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                    :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                    :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                    :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                    :     +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
               :                    :        +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                    :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[X0]]): rowcount = 32837.871288893904, cumulative cost = {1.4529997760502103E8 rows, 5.839549372104723E9 cpu, 1.692342396E9 io, 7.411723443399158E8 network, 3.4375058810020494E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 32837.871288893904, cumulative cost = {1.4526713973373213E8 rows, 5.8340326097281885E9 cpu, 1.692342396E9 io, 7.403842354289823E8 network, 3.4375058810020494E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 32837.871288893904, cumulative cost = {1.4523430186244324E8 rows, 5.8340326097281885E9 cpu, 1.692342396E9 io, 7.403842354289823E8 network, 3.4375058810020494E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 218319.14192595935, cumulative cost = {1.4520026399115434E8 rows, 5.832185256592781E9 cpu, 1.692335196E9 io, 7.403770354289823E8 network, 3.4372898810020494E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 218319.14192595935, cumulative cost = {1.4498194484922838E8 rows, 5.828692150321966E9 cpu, 1.692335196E9 io, 7.403770354289823E8 network, 3.297565630169436E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 218319.14192595935, cumulative cost = {1.4476362570730242E8 rows, 5.790267981342998E9 cpu, 1.692335196E9 io, 7.351373760227592E8 network, 3.297565630169436E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1204391.5094979128, cumulative cost = {1.4454530656537646E8 rows, 5.7709977171910305E9 cpu, 1.692335196E9 io, 7.351373760227592E8 network, 3.157841379336822E8 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 230509.92576172462, cumulative cost = {7.755581092969063E7 rows, 3.054098570584121E9 cpu, 9.2308854E8 io, 3.8920199717303497E8 network, 1.869907513285236E8 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 230509.92576172462, cumulative cost = {7.73253010039289E7 rows, 3.054098570584121E9 cpu, 9.2308854E8 io, 3.8920199717303497E8 network, 1.869907513285236E8 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 549059.2771639194, cumulative cost = {5.1317663561155684E7 rows, 1.6607557145265112E9 cpu, 6.15397176E8 io, 2.032845481038681E8 network, 1.2415464867698169E8 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 549059.2771639194, cumulative cost = {5.076860428399176E7 rows, 1.5685137559629726E9 cpu, 6.15397176E8 io, 1.9010712545193404E8 network, 1.2415464867698169E8 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 549059.2771639194, cumulative cost = {5.021954500682784E7 rows, 1.5597288075283499E9 cpu, 6.15397176E8 io, 1.9010712545193404E8 network, 8.901485493849084E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 549059.2771639194, cumulative cost = {4.9670485729663916E7 rows, 1.4630943747475002E9 cpu, 6.15397176E8 io, 1.7692970279999998E8 network, 8.901485493849084E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 3028970.9175, cumulative cost = {4.912142645249999E7 rows, 1.4146308400675E9 cpu, 6.15397176E8 io, 1.7692970279999998E8 network, 5.3875061199999996E7 memory}
                        :           :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 3028796.1675, cumulative cost = {4.6090376035E7 rows, 1.41150214915E9 cpu, 6.15383196E8 io, 1.7692292279999998E8 network, 5.3854721199999996E7 memory}
                        :           :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 2067269.1824999999, cumulative cost = {3.47276091975E7 rows, 1.3571776047825E9 cpu, 4.61534112E8 io, 1.769208612E8 network, 5.38499388E7 memory}
                        :           :     :              :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631702E7 rows, 1.3038136704E9 cpu, 3.07684608E8 io, 1.769186736E8 network, 5.38448624E7 memory}
                        :           :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057561E7 rows, 1.3038136704E9 cpu, 3.07684608E8 io, 1.769186736E8 network, 5.38448624E7 memory}
                        :           :     :              :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :     :              :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 961514.3999999999, cumulative cost = {9294644.200000001 rows, 1.679448352E8 cpu, 1.53842328E8 io, 2.3076393599999998E7 network, 56.0 memory}
                        :           :     :              :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 961514.3999999999, cumulative cost = {8333129.800000001 rows, 6410416.0 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
                        :           :     :              :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371615.4 rows, 6410416.0 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
                        :           :     :              :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
                        :           :     :              :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 961527.7725, cumulative cost = {8334022.995 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
                        :           :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961527.7725, cumulative cost = {7372495.2225 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
                        :           :     :              :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
                        :           :     :              :  :           +- Calc(select=[x0, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961526.985, cumulative cost = {8333970.670000001 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
                        :           :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961526.985, cumulative cost = {7372443.6850000005 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
                        :           :     :              :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :              :        +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
                        :           :     :              :           +- Calc(select=[x, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                        :           :     :                    :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 973881.5837361881, cumulative cost = {6.578510412618791E7 rows, 2.7156947550974116E9 cpu, 7.69246656E8 io, 3.459353788497242E8 network, 1.2879338660515861E8 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 973881.5837361881, cumulative cost = {6.4811222542451724E7 rows, 2.7156947550974116E9 cpu, 7.69246656E8 io, 3.459353788497242E8 network, 1.2879338660515861E8 memory}
                        :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[hash[X0]]): rowcount = 82448.8915745879, cumulative cost = {5.1017150958715536E7 rows, 1.586858443964815E9 cpu, 6.15404376E8 io, 1.9209309884972414E8 network, 1.2417624867698169E8 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 82448.8915745879, cumulative cost = {5.0934702067140944E7 rows, 1.573007030180284E9 cpu, 6.15404376E8 io, 1.9011432545193404E8 network, 1.2417624867698169E8 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 82448.8915745879, cumulative cost = {5.085225317556635E7 rows, 1.573007030180284E9 cpu, 6.15404376E8 io, 1.9011432545193404E8 network, 1.2417624867698169E8 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 549059.2771639194, cumulative cost = {5.076860428399176E7 rows, 1.5685137559629726E9 cpu, 6.15397176E8 io, 1.9010712545193404E8 network, 1.2415464867698169E8 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 549059.2771639194, cumulative cost = {5.021954500682784E7 rows, 1.5597288075283499E9 cpu, 6.15397176E8 io, 1.9010712545193404E8 network, 8.901485493849084E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 549059.2771639194, cumulative cost = {4.9670485729663916E7 rows, 1.4630943747475002E9 cpu, 6.15397176E8 io, 1.7692970279999998E8 network, 8.901485493849084E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 3028970.9175, cumulative cost = {4.912142645249999E7 rows, 1.4146308400675E9 cpu, 6.15397176E8 io, 1.7692970279999998E8 network, 5.3875061199999996E7 memory}
                        :                          :           :- Union(all=[true], union=[X0, X1]): rowcount = 3028796.1675, cumulative cost = {4.6090376035E7 rows, 1.41150214915E9 cpu, 6.15383196E8 io, 1.7692292279999998E8 network, 5.3854721199999996E7 memory}
                        :                          :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 2067269.1824999999, cumulative cost = {3.47276091975E7 rows, 1.3571776047825E9 cpu, 4.61534112E8 io, 1.769208612E8 network, 5.38499388E7 memory}
                        :                          :           :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631702E7 rows, 1.3038136704E9 cpu, 3.07684608E8 io, 1.769186736E8 network, 5.38448624E7 memory}
                        :                          :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057561E7 rows, 1.3038136704E9 cpu, 3.07684608E8 io, 1.769186736E8 network, 5.38448624E7 memory}
                        :                          :           :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                          :           :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 961514.3999999999, cumulative cost = {9294644.200000001 rows, 1.679448352E8 cpu, 1.53842328E8 io, 2.3076393599999998E7 network, 56.0 memory}
                        :                          :           :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 961514.3999999999, cumulative cost = {8333129.800000001 rows, 6410416.0 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
                        :                          :           :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371615.4 rows, 6410416.0 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
                        :                          :           :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
                        :                          :           :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 961527.7725, cumulative cost = {8334022.995 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
                        :                          :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961527.7725, cumulative cost = {7372495.2225 rows, 5.12966652E7 cpu, 1.53849504E8 io, 2187.6 network, 5076.4 memory}
                        :                          :           :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
                        :                          :           :  :           +- Calc(select=[x0, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961526.985, cumulative cost = {8333970.670000001 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
                        :                          :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 961526.985, cumulative cost = {7372443.6850000005 rows, 5.12957482E7 cpu, 1.53849084E8 io, 2061.6 network, 4782.4 memory}
                        :                          :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :        +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
                        :                          :           :           +- Calc(select=[x, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
                        :                          :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :                          :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                        :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[1,0,1,2,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#3] Exchange(distribution=[hash[X1]])\n:  :     +- [#4] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#5] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#6] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], build=[right])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#2] Exchange(distribution=[hash[X0]])\n])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[0,1,0,1,2,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#2] Exchange(distribution=[hash[y]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#4] Exchange(distribution=[hash[X1]])\n:        +- [#5] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[X0, y, x], isBroadcast=[true], build=[right])\n      :- Calc(select=[X0, y])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], build=[left])\n      :     :- [#4] Exchange(distribution=[hash[X1]])\n      :     +- [#7] Exchange(distribution=[hash[x]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[3])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[6])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- Calc(select=[x0 AS X0, y AS X1])
         :              :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :                 :           :     :- Calc(select=[y, x0])(reuse_id=[14])
         :              :                 :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :              :                 :           :     :     :- Reused(reference_id=[1])
         :              :                 :           :     :     +- Exchange(distribution=[broadcast])(reuse_id=[5])
         :              :                 :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[10])
         :              :                 :           :     +- Reused(reference_id=[2])
         :              :                 :           +- Calc(select=[x AS X0, x AS X1])
         :              :                 :              +- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[2])
         :              :- Exchange(distribution=[hash[X1]])(reuse_id=[7])
         :              :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :              :     +- Exchange(distribution=[hash[X0, X1]])
         :              :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :              :- Reused(reference_id=[1])
         :              :              :- Exchange(distribution=[broadcast])(reuse_id=[8])
         :              :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[9])
         :              :              :- Reused(reference_id=[4])
         :              :              +- Exchange(distribution=[hash[x]])
         :              :                 +- Calc(select=[x, y0])(reuse_id=[16])
         :              :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[12])
         :              :                       :- Reused(reference_id=[1])
         :              :                       +- Reused(reference_id=[5])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :              :        :- Reused(reference_id=[4])
         :              :        +- Exchange(distribution=[hash[X0]])
         :              :           +- Reused(reference_id=[6])
         :              :- Reused(reference_id=[7])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, y])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Reused(reference_id=[8])
         :- Exchange(distribution=[hash[X0]])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[X0]])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[13])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[1,0,2,0,3,2,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[x0 AS X0, y AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y, x0, y00], build=[right])\n:  :  :     :- [#5] Exchange(distribution=[hash[x]])\n:  :  :     +- [#6] Exchange(distribution=[hash[y00]])\n:  :  +- Calc(select=[x AS X0, y0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])\n:  :        :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:  :        +- [#8] Exchange(distribution=[broadcast])\n:  +- Calc(select=[x0 AS X0, y AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])\n:        :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0], isBroadcast=[true], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Reused(reference_id=[3])
         :        :           :              :- Reused(reference_id=[8])
         :        :           :              :- Reused(reference_id=[1])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[x, y])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])
         :        :           :              :        :- Reused(reference_id=[9])
         :        :           :              :        +- Reused(reference_id=[5])
         :        :           :              :- Exchange(distribution=[hash[x]])(reuse_id=[11])
         :        :           :              :  +- Reused(reference_id=[1])
         :        :           :              :- Exchange(distribution=[hash[y00]])
         :        :           :              :  +- Calc(select=[x, y0 AS y00])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :              :        :- Reused(reference_id=[1])
         :        :           :              :        +- Exchange(distribution=[broadcast])
         :        :           :              :           +- Calc(select=[x, y0])
         :        :           :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[left])
         :        :           :              :                 :- Reused(reference_id=[5])
         :        :           :              :                 +- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :                    +- Reused(reference_id=[10])
         :        :           :              :- Reused(reference_id=[1])
         :        :           :              +- Exchange(distribution=[broadcast])
         :        :           :                 +- Calc(select=[x0, y])
         :        :           :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])
         :        :           :                       :- Reused(reference_id=[3])
         :        :           :                       +- Reused(reference_id=[5])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Reused(reference_id=[11])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[17])
         :        :           :                       :  +- Reused(reference_id=[9])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- Reused(reference_id=[12])
         :        :           :- Reused(reference_id=[4])
         :        :           +- Exchange(distribution=[hash[X0]])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[13])
         :        :                    +- Reused(reference_id=[2])
         :        +- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[20])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], build=[left])\n:        :- [#5] Exchange(distribution=[hash[X1]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Reused(reference_id=[4])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Reused(reference_id=[14])
         :              :                 :           :  :- Reused(reference_id=[5])
         :              :                 :           :  :- Reused(reference_id=[3])
         :              :                 :           :  +- Reused(reference_id=[5])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[21])
         :              :                 :                 :- Reused(reference_id=[9])
         :              :                 :                 +- Reused(reference_id=[5])
         :              :                 +- Reused(reference_id=[2])
         :              :- Reused(reference_id=[15])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[8])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[16])
         :              :                 :     +- Reused(reference_id=[8])
         :              :                 +- Reused(reference_id=[17])
         :              :- Reused(reference_id=[7])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, X0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], build=[right])
         :                       :- Reused(reference_id=[4])
         :                       +- Exchange(distribution=[hash[X1]])
         :                          +- Reused(reference_id=[18])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[19])
         :- Reused(reference_id=[20])
         +- Exchange(distribution=[broadcast])
            +- Calc(select=[x, x0])
               +- Reused(reference_id=[21])

Job has been submitted with JobID b2b9e33af6047483b83d9a06e305ce3b
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, r_3.y AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x UNION (SELECT r_0.x AS X0, s_1.y AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x) UNION (SELECT b_0.x AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN s AS s_1 ON b_0.x = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x) UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: b325c042_59f5_4737_9c38_9ff2cec1ac43

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, r_3.y AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN s AS s_2 ON s_1.y = s_2.x
                      INNER JOIN r AS r_3 ON s_2.y = r_3.x
             UNION
             (SELECT r_0.x AS X0, s_1.y AS X1
              FROM r AS r_0
                       INNER JOIN s AS s_1 ON r_0.y = s_1.x
                       INNER JOIN a AS a_2 ON s_1.y = a_2.x)
             UNION
             (SELECT b_0.x AS X0, r_2.y AS X1
              FROM b AS b_0
                       INNER JOIN s AS s_1 ON b_0.x = s_1.x
                       INNER JOIN r AS r_2 ON s_1.y = r_2.x)
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1
              FROM b AS b_0
                       INNER JOIN a AS a_1 ON b_0.x = a_1.x)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0)
            UNION
            (SELECT p19_0.X0 AS X0, r_2.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)),
     p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1
             FROM p19 AS p19_0
                      INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1
                      INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalUnion(all=[false])
   :  :        :        :  :- LogicalUnion(all=[false])
   :  :        :        :  :  :- LogicalProject(X0=[$0], X1=[$7])
   :  :        :        :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :        :        :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :        :        :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalUnion(all=[false])
   :  :              :  :  :  :- LogicalUnion(all=[false])
   :  :              :  :  :  :  :- LogicalProject(X0=[$0], X1=[$7])
   :  :              :  :  :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :              :  :  :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :              :  :  :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  +- LogicalUnion(all=[false])
   :        :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalUnion(all=[false])
         :     :        :  :- LogicalUnion(all=[false])
         :     :        :  :  :- LogicalProject(X0=[$0], X1=[$7])
         :     :        :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :     :        :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :     :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        :  +- LogicalProject(X0=[$0], X1=[$4])
         :     :        :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
         :     :        :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalUnion(all=[false])
         :           :  :  :  :- LogicalUnion(all=[false])
         :           :  :  :  :  :- LogicalProject(X0=[$0], X1=[$7])
         :           :  :  :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :           :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :           :  :  :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
         :           :  :  :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 30690.508417542558, cumulative cost = {4.5831046205829173E8 rows, 1.7550861382187565E10 cpu, 5.808217512E9 io, 2.2214408305680866E9 network, 1.091131664419255E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 30690.508417542558, cumulative cost = {4.582797715498742E8 rows, 1.7550370334052883E10 cpu, 5.808217512E9 io, 2.2214408305680866E9 network, 1.0891674718805323E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 30690.508417542558, cumulative cost = {4.5824908104145664E8 rows, 1.7544968804571396E10 cpu, 5.808217512E9 io, 2.2207042583660655E9 network, 1.0891674718805323E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 169308.9640889035, cumulative cost = {4.582183905330391E8 rows, 1.7542259861145973E10 cpu, 5.808217512E9 io, 2.2207042583660655E9 network, 1.0872032793418095E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 142892.24978440162, cumulative cost = {2.771276005503068E8 rows, 1.0625025588324572E10 cpu, 3.54399552E9 io, 1.349163751986024E9 network, 6.4904890413396E8 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 119155.96959277545, cumulative cost = {1.9024821785298946E8 rows, 7.620913328467567E9 cpu, 2.362660176E9 io, 9.718865294368277E8 network, 4.428448106634288E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 119155.96959277545, cumulative cost = {1.901290618833967E8 rows, 7.620913328467567E9 cpu, 2.362660176E9 io, 9.718865294368277E8 network, 4.428448106634288E8 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 158172.26794417453, cumulative cost = {8.684651635509382E7 rows, 3.0292646146782875E9 cpu, 1.181329764E9 io, 3.810716625798564E8 network, 2.0620016787053126E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 158172.26794417453, cumulative cost = {8.668834408714965E7 rows, 3.0026916736636662E9 cpu, 1.181329764E9 io, 3.772755281491962E8 network, 2.0620016787053126E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 158172.26794417453, cumulative cost = {8.653017181920548E7 rows, 3.0001609173765593E9 cpu, 1.181329764E9 io, 3.772755281491962E8 network, 1.960771427221041E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 158172.26794417453, cumulative cost = {8.63719995512613E7 rows, 2.9723225982183847E9 cpu, 1.181329764E9 io, 3.73479393718536E8 network, 1.960771427221041E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 872581.9223611606, cumulative cost = {8.621382728331713E7 rows, 2.958361287460606E9 cpu, 1.181329764E9 io, 3.73479393718536E8 network, 1.8595411757367694E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 164990.46928463125, cumulative cost = {6.401247283393105E7 rows, 2.0841845215939853E9 cpu, 8.8599408E8 io, 2.597945565115611E8 network, 1.4917127712477264E8 memory}
         :  :     :              :  :- Calc(select=[X0, X00 AS X1]): rowcount = 36357.763662037716, cumulative cost = {2.8684576273294717E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :  :     :              :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.763662037716, cumulative cost = {2.864821850963268E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :  :     :              :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :     :              :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :     :              :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :  :     :                    +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     +- Exchange(distribution=[broadcast]): rowcount = 2593.245886494809, cumulative cost = {5670702.8078893805 rows, 1.4537252221332248E7 cpu, 9.84561E7 io, 477181.2431150449 network, 2187003.1564755705 memory}
         :  :     :              :  :        +- Calc(select=[X0, X1]): rowcount = 2593.245886494809, cumulative cost = {5668109.562002886 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :  :     :              :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2593.245886494809, cumulative cost = {5665516.316116392 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :  :     :              :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5661997.070229897 rows, 1.3909946432213355E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 2170335.1564755705 memory}
         :  :     :              :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16825.305909965395, cumulative cost = {5645171.764319932 rows, 1.3640741537653908E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 1093515.5782377853 memory}
         :  :     :              :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5628346.458409967 rows, 1.06794876975E7 cpu, 9.8450544E7 io, 5580.0 network, 1093515.5782377853 memory}
         :  :     :              :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92819.4175, cumulative cost = {5611521.152500002 rows, 9194377.0175 cpu, 9.8450544E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 128632.70562259354, cumulative cost = {3.51629060913517E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 128632.70562259354, cumulative cost = {3.503427338572911E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :  :     :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 617759.5256235336, cumulative cost = {1.17246908968315E7 rows, 1.4901064366623443E8 cpu, 1.96890372E8 io, 1.5630556814495582E7 network, 3083002.098201301 memory}
         :  :     :              :           +- Calc(select=[x, X0]): rowcount = 617759.5256235336, cumulative cost = {1.1106931371207966E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617759.5256235336, cumulative cost = {1.0489171845584432E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 16754.83749022446, cumulative cost = {5769770.319960898 rows, 1.2279868661559012E7 cpu, 9.8450964E7 io, 804328.1995307741 network, 2144731.198748731 memory}
         :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 707591.4530765294, cumulative cost = {2.132877252702493E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 707591.4530765294, cumulative cost = {2.06211810739484E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 615634.35384353, cumulative cost = {1.1710305620871866E7 rows, 1.464901171135116E8 cpu, 1.96896276E8 io, 1.5245429206974916E7 network, 2307316.6336666164 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 615634.35384353, cumulative cost = {1.1094671267028335E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615634.35384353, cumulative cost = {1.0479036913184805E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 2587.025623533669, cumulative cost = {5761760.559341275 rows, 1.022971346281028E7 cpu, 9.8456868E7 io, 470204.7147301951 network, 2162443.198748731 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 2587.025623533669, cumulative cost = {5759173.533717741 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2587.025623533669, cumulative cost = {5756586.508094207 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 636200.8626743286, cumulative cost = {1.0316338955871007E8 rows, 4.585293728744332E9 cpu, 1.181330412E9 io, 5.908148668569713E8 network, 2.2778699578802374E8 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 636200.8626743286, cumulative cost = {1.0252718869603574E8 rows, 4.478411983815045E9 cpu, 1.181330412E9 io, 5.755460461527873E8 network, 2.2778699578802374E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 636200.8626743286, cumulative cost = {1.0189098783336142E8 rows, 4.478411983815045E9 cpu, 1.181330412E9 io, 5.755460461527873E8 network, 2.2778699578802374E8 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 139697.08449552365, cumulative cost = {9.305150297068709E7 rows, 3.7554054151390815E9 cpu, 1.082891004E9 io, 4.771066381527873E8 network, 2.199639590562744E8 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 139697.08449552365, cumulative cost = {9.291180588619156E7 rows, 3.7319363049438334E9 cpu, 1.082891004E9 io, 4.7375390812489474E8 network, 2.199639590562744E8 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 139697.08449552365, cumulative cost = {9.277210880169603E7 rows, 3.729701151591905E9 cpu, 1.082891004E9 io, 4.7375390812489474E8 network, 2.110233456485609E8 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 139697.08449552365, cumulative cost = {9.26324117172005E7 rows, 3.705114464720693E9 cpu, 1.082891004E9 io, 4.7040117809700215E8 network, 2.110233456485609E8 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 770660.6987539436, cumulative cost = {9.249271463270497E7 rows, 3.69278389354063E9 cpu, 1.082891004E9 io, 4.7040117809700215E8 network, 2.020827322408474E8 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 147498.3056648156, cumulative cost = {4.962696319743981E7 rows, 1.9542687043372731E9 cpu, 5.90665044E8 io, 2.490428465743386E8 network, 1.1966026080275631E8 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 147498.3056648156, cumulative cost = {4.9479464891775E7 rows, 1.9542687043372731E9 cpu, 5.90665044E8 io, 2.490428465743386E8 network, 1.1966026080275631E8 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 351334.3595167969, cumulative cost = {3.283751044806718E7 rows, 1.0626981621360468E9 cpu, 3.93780648E8 io, 1.3007846925680625E8 network, 7.944941801815E7 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 351334.3595167969, cumulative cost = {3.2486176088550385E7 rows, 1.0036739897372249E9 cpu, 3.93780648E8 io, 1.2164644462840313E8 network, 7.944941801815E7 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 351334.3595167969, cumulative cost = {3.213484172903359E7 rows, 9.980526399849561E8 cpu, 3.93780648E8 io, 1.2164644462840313E8 network, 5.6964019009075E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 351334.3595167969, cumulative cost = {3.1783507369516794E7 rows, 9.362177927099999E8 cpu, 3.93780648E8 io, 1.1321442E8 network, 5.6964019009075E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1938190.65, cumulative cost = {3.1432173009999998E7 rows, 9.0520674231E8 cpu, 3.93780648E8 io, 1.1321442E8 network, 3.447862E7 memory}
         :  :                             :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 1938047.4, cumulative cost = {2.949227786E7 rows, 9.0318683166E8 cpu, 3.93769188E8 io, 1.13208864E8 network, 3.4461952E7 memory}
         :  :                             :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 1322790.66, cumulative cost = {2.222140118E7 rows, 8.6842333246E8 cpu, 2.953242E8 io, 1.132071696E8 network, 3.44580264E7 memory}
         :  :                             :     :              :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565737885E7 rows, 8.342743302E8 cpu, 1.96878864E8 io, 1.132053708E8 network, 3.4453857199999996E7 memory}
         :  :                             :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582046175E7 rows, 8.342743302E8 cpu, 1.96878864E8 io, 1.132053708E8 network, 3.4453857199999996E7 memory}
         :  :                             :     :              :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :                             :     :              :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 615246.45, cumulative cost = {5947387.350000001 rows, 1.074633666E8 cpu, 9.8439456E7 io, 1.4765962799999999E7 network, 56.0 memory}
         :  :                             :     :              :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 615246.45, cumulative cost = {5332140.9 rows, 4101963.0 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :                             :     :              :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716894.45 rows, 4101963.0 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :                             :     :              :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :                             :     :              :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 615257.3925, cumulative cost = {5332872.635 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :  :                             :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615257.3925, cumulative cost = {4717615.2425 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :  :                             :     :              :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
         :  :                             :     :              :  :           +- Calc(select=[x0, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615256.74, cumulative cost = {5332829.28 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
         :  :                             :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615256.74, cumulative cost = {4717572.54 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
         :  :                             :     :              :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :        +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :  :                             :     :              :           +- Calc(select=[x, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :                             :     :                    :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 623162.393089128, cumulative cost = {4.209509073651121E7 rows, 1.737744528504603E9 cpu, 4.9222596E8 io, 2.213583315226636E8 network, 8.24224714380911E7 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 623162.393089128, cumulative cost = {4.147192834342208E7 rows, 1.737744528504603E9 cpu, 4.9222596E8 io, 2.213583315226636E8 network, 8.24224714380911E7 memory}
         :  :                                   :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :                                   :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[hash[X0]]): rowcount = 52773.953927519535, cumulative cost = {3.2645481950332947E7 rows, 1.0154333448731827E9 cpu, 3.93786552E8 io, 1.229189235226636E8 network, 7.946713001815E7 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 52773.953927519535, cumulative cost = {3.2592707996405426E7 rows, 1.0065673206133593E9 cpu, 3.93786552E8 io, 1.2165234862840313E8 network, 7.946713001815E7 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 52773.953927519535, cumulative cost = {3.2539934042477906E7 rows, 1.0065673206133593E9 cpu, 3.93786552E8 io, 1.2165234862840313E8 network, 7.946713001815E7 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 351334.3595167969, cumulative cost = {3.2486176088550385E7 rows, 1.0036739897372249E9 cpu, 3.93780648E8 io, 1.2164644462840313E8 network, 7.944941801815E7 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 351334.3595167969, cumulative cost = {3.213484172903359E7 rows, 9.980526399849561E8 cpu, 3.93780648E8 io, 1.2164644462840313E8 network, 5.6964019009075E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 351334.3595167969, cumulative cost = {3.1783507369516794E7 rows, 9.362177927099999E8 cpu, 3.93780648E8 io, 1.1321442E8 network, 5.6964019009075E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 1938190.65, cumulative cost = {3.1432173009999998E7 rows, 9.0520674231E8 cpu, 3.93780648E8 io, 1.1321442E8 network, 3.447862E7 memory}
         :  :                                            :           :- Union(all=[true], union=[X0, X1]): rowcount = 1938047.4, cumulative cost = {2.949227786E7 rows, 9.0318683166E8 cpu, 3.93769188E8 io, 1.13208864E8 network, 3.4461952E7 memory}
         :  :                                            :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 1322790.66, cumulative cost = {2.222140118E7 rows, 8.6842333246E8 cpu, 2.953242E8 io, 1.132071696E8 network, 3.44580264E7 memory}
         :  :                                            :           :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565737885E7 rows, 8.342743302E8 cpu, 1.96878864E8 io, 1.132053708E8 network, 3.4453857199999996E7 memory}
         :  :                                            :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582046175E7 rows, 8.342743302E8 cpu, 1.96878864E8 io, 1.132053708E8 network, 3.4453857199999996E7 memory}
         :  :                                            :           :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :                                            :           :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 615246.45, cumulative cost = {5947387.350000001 rows, 1.074633666E8 cpu, 9.8439456E7 io, 1.4765962799999999E7 network, 56.0 memory}
         :  :                                            :           :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 615246.45, cumulative cost = {5332140.9 rows, 4101963.0 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :                                            :           :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716894.45 rows, 4101963.0 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :                                            :           :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :                                            :           :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 615257.3925, cumulative cost = {5332872.635 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :  :                                            :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615257.3925, cumulative cost = {4717615.2425 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :  :                                            :           :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
         :  :                                            :           :  :           +- Calc(select=[x0, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615256.74, cumulative cost = {5332829.28 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
         :  :                                            :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615256.74, cumulative cost = {4717572.54 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
         :  :                                            :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :        +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :  :                                            :           :           +- Calc(select=[x, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :                                            :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 23736.280191626178, cumulative cost = {8.67364904475329E7 rows, 3.0039693676072197E9 cpu, 1.181335344E9 io, 3.772772225491962E8 network, 2.0620409347053126E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 23736.280191626178, cumulative cost = {8.671275416734128E7 rows, 3.0039693676072197E9 cpu, 1.181335344E9 io, 3.772772225491962E8 network, 2.0620409347053126E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 158172.26794417453, cumulative cost = {8.668834408714965E7 rows, 3.0026916736636662E9 cpu, 1.181329764E9 io, 3.772755281491962E8 network, 2.0620016787053126E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 158172.26794417453, cumulative cost = {8.653017181920548E7 rows, 3.0001609173765593E9 cpu, 1.181329764E9 io, 3.772755281491962E8 network, 1.960771427221041E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 158172.26794417453, cumulative cost = {8.63719995512613E7 rows, 2.9723225982183847E9 cpu, 1.181329764E9 io, 3.73479393718536E8 network, 1.960771427221041E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 872581.9223611606, cumulative cost = {8.621382728331713E7 rows, 2.958361287460606E9 cpu, 1.181329764E9 io, 3.73479393718536E8 network, 1.8595411757367694E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 164990.46928463125, cumulative cost = {6.401247283393105E7 rows, 2.0841845215939853E9 cpu, 8.8599408E8 io, 2.597945565115611E8 network, 1.4917127712477264E8 memory}
         :        :           :  :- Calc(select=[X0, X00 AS X1]): rowcount = 36357.763662037716, cumulative cost = {2.8684576273294717E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.763662037716, cumulative cost = {2.864821850963268E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :           :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :  :     :                    +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 2593.245886494809, cumulative cost = {5670702.8078893805 rows, 1.4537252221332248E7 cpu, 9.84561E7 io, 477181.2431150449 network, 2187003.1564755705 memory}
         :        :           :  :        +- Calc(select=[X0, X1]): rowcount = 2593.245886494809, cumulative cost = {5668109.562002886 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2593.245886494809, cumulative cost = {5665516.316116392 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5661997.070229897 rows, 1.3909946432213355E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 2170335.1564755705 memory}
         :        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16825.305909965395, cumulative cost = {5645171.764319932 rows, 1.3640741537653908E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 1093515.5782377853 memory}
         :        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5628346.458409967 rows, 1.06794876975E7 cpu, 9.8450544E7 io, 5580.0 network, 1093515.5782377853 memory}
         :        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92819.4175, cumulative cost = {5611521.152500002 rows, 9194377.0175 cpu, 9.8450544E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 128632.70562259354, cumulative cost = {3.51629060913517E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 128632.70562259354, cumulative cost = {3.503427338572911E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :        :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 617759.5256235336, cumulative cost = {1.17246908968315E7 rows, 1.4901064366623443E8 cpu, 1.96890372E8 io, 1.5630556814495582E7 network, 3083002.098201301 memory}
         :        :           :           +- Calc(select=[x, X0]): rowcount = 617759.5256235336, cumulative cost = {1.1106931371207966E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617759.5256235336, cumulative cost = {1.0489171845584432E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 16754.83749022446, cumulative cost = {5769770.319960898 rows, 1.2279868661559012E7 cpu, 9.8450964E7 io, 804328.1995307741 network, 2144731.198748731 memory}
         :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 707591.4530765294, cumulative cost = {2.132877252702493E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 707591.4530765294, cumulative cost = {2.06211810739484E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 615634.35384353, cumulative cost = {1.1710305620871866E7 rows, 1.464901171135116E8 cpu, 1.96896276E8 io, 1.5245429206974916E7 network, 2307316.6336666164 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 615634.35384353, cumulative cost = {1.1094671267028335E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615634.35384353, cumulative cost = {1.0479036913184805E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 2587.025623533669, cumulative cost = {5761760.559341275 rows, 1.022971346281028E7 cpu, 9.8456868E7 io, 470204.7147301951 network, 2162443.198748731 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 2587.025623533669, cumulative cost = {5759173.533717741 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2587.025623533669, cumulative cost = {5756586.508094207 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 26416.714304501893, cumulative cost = {1.809214810186434E8 rows, 6.917064963857311E9 cpu, 2.264221992E9 io, 8.715405063800415E8 network, 4.381543752078495E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 26416.714304501893, cumulative cost = {1.808950643043389E8 rows, 6.917064963857311E9 cpu, 2.264221992E9 io, 8.715405063800415E8 network, 4.381543752078495E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 155083.06602235074, cumulative cost = {8.789277261581986E7 rows, 3.179154996780047E9 cpu, 1.181325084E9 io, 3.9727601355096287E8 network, 2.1699511584181273E8 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 155083.06602235074, cumulative cost = {8.77376895497975E7 rows, 3.1766736677236896E9 cpu, 1.181325084E9 io, 3.9727601355096287E8 network, 2.0706979961638227E8 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 155083.06602235074, cumulative cost = {8.758260648377515E7 rows, 3.149379048103756E9 cpu, 1.181325084E9 io, 3.9355401996642643E8 network, 2.0706979961638227E8 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 855539.8593842413, cumulative cost = {8.74275234177528E7 rows, 3.135690410353608E9 cpu, 1.181325084E9 io, 3.9355401996642643E8 network, 1.971444833909518E8 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 836226.1384923818, cumulative cost = {5.7146374804751694E7 rows, 2.0146426718511891E9 cpu, 7.87550412E8 io, 2.5405407059712613E8 network, 1.1851790667530061E8 memory}
               :           :  :- Calc(select=[x AS X0, X1]): rowcount = 707591.7113104329, cumulative cost = {2.123797041310528E7 rows, 8.776244786175095E8 cpu, 2.9533596E8 io, 1.1369282230387531E8 network, 3.681100133160895E7 memory}
               :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 707591.7113104329, cumulative cost = {2.0530378701794848E7 rows, 8.776244786175095E8 cpu, 2.9533596E8 io, 1.1369282230387531E8 network, 3.681100133160895E7 memory}
               :           :  :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :     +- Exchange(distribution=[hash[x]]): rowcount = 615636.0754028853, cumulative cost = {1.1619502990484416E7 rows, 1.508103980142864E8 cpu, 1.96896552E8 io, 1.5253414303875316E7 network, 2335381.109047373 memory}
               :           :  :        +- Calc(select=[x, X1]): rowcount = 615636.0754028853, cumulative cost = {1.100386691508153E7 rows, 4.738353734660167E7 cpu, 1.96896552E8 io, 478148.49420606665 network, 2335381.109047373 memory}
               :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615636.0754028853, cumulative cost = {1.0388230839678645E7 rows, 4.738353734660167E7 cpu, 1.96896552E8 io, 478148.49420606665 network, 2335381.109047373 memory}
               :           :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 2598.502685902536, cumulative cost = {5670952.76427576 rows, 1.4549613325114453E7 cpu, 9.8457144E7 io, 478148.49420606665 network, 2189864.958636831 memory}
               :           :  :                 +- Calc(select=[X0, X1]): rowcount = 2598.502685902536, cumulative cost = {5668354.261589858 rows, 1.4133852895370048E7 cpu, 9.8457144E7 io, 415784.4297444058 network, 2189864.958636831 memory}
               :           :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2598.502685902536, cumulative cost = {5665755.758903955 rows, 1.4133852895370048E7 cpu, 9.8457144E7 io, 415784.4297444058 network, 2189864.958636831 memory}
               :           :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :           :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :           :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :           :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :                       +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[X0, X10 AS X1]): rowcount = 128634.42718194886, cumulative cost = {3.507217825315403E7 rows, 1.1361819670951874E9 cpu, 4.92214452E8 io, 1.403612482932508E8 network, 8.170690534369166E7 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 128634.42718194886, cumulative cost = {3.494354382597208E7 rows, 1.1361819670951874E9 cpu, 4.92214452E8 io, 1.403612482932508E8 network, 8.170690534369166E7 memory}
               :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
               :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
               :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
               :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
               :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
               :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :           :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :        +- Exchange(distribution=[hash[x]]): rowcount = 617771.0026859025, cumulative cost = {1.1633959615515111E7 rows, 1.533428775448977E8 cpu, 1.96890648E8 io, 1.5640336923950471E7 network, 3114708.6280404446 memory}
               :           :           +- Calc(select=[x, X1]): rowcount = 617771.0026859025, cumulative cost = {1.1016188612829208E7 rows, 4.9557349093666084E7 cpu, 1.96890648E8 io, 813832.8594888116 network, 3114708.6280404446 memory}
               :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617771.0026859025, cumulative cost = {1.0398417610143306E7 rows, 4.9557349093666084E7 cpu, 1.96890648E8 io, 813832.8594888116 network, 3114708.6280404446 memory}
               :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :                 +- Exchange(distribution=[broadcast]): rowcount = 16831.351239350242, cumulative cost = {5679004.607457403 rows, 1.6609562283751285E7 cpu, 9.845124E7 io, 813832.8594888116 network, 2172152.958636831 memory}
               :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :           :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :                                :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :                                :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, y AS X1]): rowcount = 19313.72089185952, cumulative cost = {2.9425608753616866E7 rows, 1.120192198643035E9 cpu, 3.93774672E8 io, 1.394999493693003E8 network, 7.862657671565121E7 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[X0, y, x], isBroadcast=[true], build=[right]): rowcount = 19313.72089185952, cumulative cost = {2.9406295032725006E7 rows, 1.120192198643035E9 cpu, 3.93774672E8 io, 1.394999493693003E8 network, 7.862657671565121E7 memory}
               :                 :- Calc(select=[X0, y]): rowcount = 128266.13927906349, cumulative cost = {2.9385997311833147E7 rows, 1.1190834135288024E9 cpu, 3.93768768E8 io, 1.394940453693003E8 network, 7.860886471565121E7 memory}
               :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], build=[left]): rowcount = 128266.13927906349, cumulative cost = {2.9257731172554083E7 rows, 1.1190834135288024E9 cpu, 3.93768768E8 io, 1.394940453693003E8 network, 7.860886471565121E7 memory}
               :                 :     :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
               :                 :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
               :                 :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
               :                 :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
               :                 :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
               :                 :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                 :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                 :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                 :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                 :     :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :     +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
               :                 :        +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                 :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 21028.362674328546, cumulative cost = {9.297587497421454E7 rows, 3.7365010756476903E9 cpu, 1.082896908E9 io, 4.742644928290786E8 network, 2.199816710562744E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 21028.362674328546, cumulative cost = {9.295484661154021E7 rows, 3.7331365376197977E9 cpu, 1.082896908E9 io, 4.7375981212489474E8 network, 2.199816710562744E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 21028.362674328546, cumulative cost = {9.293381824886589E7 rows, 3.7331365376197977E9 cpu, 1.082896908E9 io, 4.7375981212489474E8 network, 2.199816710562744E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 139697.08449552365, cumulative cost = {9.291180588619156E7 rows, 3.7319363049438334E9 cpu, 1.082891004E9 io, 4.7375390812489474E8 network, 2.199639590562744E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 139697.08449552365, cumulative cost = {9.277210880169603E7 rows, 3.729701151591905E9 cpu, 1.082891004E9 io, 4.7375390812489474E8 network, 2.110233456485609E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 139697.08449552365, cumulative cost = {9.26324117172005E7 rows, 3.705114464720693E9 cpu, 1.082891004E9 io, 4.7040117809700215E8 network, 2.110233456485609E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 770660.6987539436, cumulative cost = {9.249271463270497E7 rows, 3.69278389354063E9 cpu, 1.082891004E9 io, 4.7040117809700215E8 network, 2.020827322408474E8 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 147498.3056648156, cumulative cost = {4.962696319743981E7 rows, 1.9542687043372731E9 cpu, 5.90665044E8 io, 2.490428465743386E8 network, 1.1966026080275631E8 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 147498.3056648156, cumulative cost = {4.9479464891775E7 rows, 1.9542687043372731E9 cpu, 5.90665044E8 io, 2.490428465743386E8 network, 1.1966026080275631E8 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 351334.3595167969, cumulative cost = {3.283751044806718E7 rows, 1.0626981621360468E9 cpu, 3.93780648E8 io, 1.3007846925680625E8 network, 7.944941801815E7 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 351334.3595167969, cumulative cost = {3.2486176088550385E7 rows, 1.0036739897372249E9 cpu, 3.93780648E8 io, 1.2164644462840313E8 network, 7.944941801815E7 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 351334.3595167969, cumulative cost = {3.213484172903359E7 rows, 9.980526399849561E8 cpu, 3.93780648E8 io, 1.2164644462840313E8 network, 5.6964019009075E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 351334.3595167969, cumulative cost = {3.1783507369516794E7 rows, 9.362177927099999E8 cpu, 3.93780648E8 io, 1.1321442E8 network, 5.6964019009075E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1938190.65, cumulative cost = {3.1432173009999998E7 rows, 9.0520674231E8 cpu, 3.93780648E8 io, 1.1321442E8 network, 3.447862E7 memory}
                        :           :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 1938047.4, cumulative cost = {2.949227786E7 rows, 9.0318683166E8 cpu, 3.93769188E8 io, 1.13208864E8 network, 3.4461952E7 memory}
                        :           :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 1322790.66, cumulative cost = {2.222140118E7 rows, 8.6842333246E8 cpu, 2.953242E8 io, 1.132071696E8 network, 3.44580264E7 memory}
                        :           :     :              :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565737885E7 rows, 8.342743302E8 cpu, 1.96878864E8 io, 1.132053708E8 network, 3.4453857199999996E7 memory}
                        :           :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582046175E7 rows, 8.342743302E8 cpu, 1.96878864E8 io, 1.132053708E8 network, 3.4453857199999996E7 memory}
                        :           :     :              :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :           :     :              :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 615246.45, cumulative cost = {5947387.350000001 rows, 1.074633666E8 cpu, 9.8439456E7 io, 1.4765962799999999E7 network, 56.0 memory}
                        :           :     :              :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 615246.45, cumulative cost = {5332140.9 rows, 4101963.0 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
                        :           :     :              :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716894.45 rows, 4101963.0 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
                        :           :     :              :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
                        :           :     :              :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 615257.3925, cumulative cost = {5332872.635 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
                        :           :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615257.3925, cumulative cost = {4717615.2425 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
                        :           :     :              :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
                        :           :     :              :  :           +- Calc(select=[x0, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615256.74, cumulative cost = {5332829.28 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
                        :           :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615256.74, cumulative cost = {4717572.54 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
                        :           :     :              :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :        +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
                        :           :     :              :           +- Calc(select=[x, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                        :           :     :                    :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 623162.393089128, cumulative cost = {4.209509073651121E7 rows, 1.737744528504603E9 cpu, 4.9222596E8 io, 2.213583315226636E8 network, 8.24224714380911E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 623162.393089128, cumulative cost = {4.147192834342208E7 rows, 1.737744528504603E9 cpu, 4.9222596E8 io, 2.213583315226636E8 network, 8.24224714380911E7 memory}
                        :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[hash[X0]]): rowcount = 52773.953927519535, cumulative cost = {3.2645481950332947E7 rows, 1.0154333448731827E9 cpu, 3.93786552E8 io, 1.229189235226636E8 network, 7.946713001815E7 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 52773.953927519535, cumulative cost = {3.2592707996405426E7 rows, 1.0065673206133593E9 cpu, 3.93786552E8 io, 1.2165234862840313E8 network, 7.946713001815E7 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 52773.953927519535, cumulative cost = {3.2539934042477906E7 rows, 1.0065673206133593E9 cpu, 3.93786552E8 io, 1.2165234862840313E8 network, 7.946713001815E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 351334.3595167969, cumulative cost = {3.2486176088550385E7 rows, 1.0036739897372249E9 cpu, 3.93780648E8 io, 1.2164644462840313E8 network, 7.944941801815E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 351334.3595167969, cumulative cost = {3.213484172903359E7 rows, 9.980526399849561E8 cpu, 3.93780648E8 io, 1.2164644462840313E8 network, 5.6964019009075E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 351334.3595167969, cumulative cost = {3.1783507369516794E7 rows, 9.362177927099999E8 cpu, 3.93780648E8 io, 1.1321442E8 network, 5.6964019009075E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 1938190.65, cumulative cost = {3.1432173009999998E7 rows, 9.0520674231E8 cpu, 3.93780648E8 io, 1.1321442E8 network, 3.447862E7 memory}
                        :                          :           :- Union(all=[true], union=[X0, X1]): rowcount = 1938047.4, cumulative cost = {2.949227786E7 rows, 9.0318683166E8 cpu, 3.93769188E8 io, 1.13208864E8 network, 3.4461952E7 memory}
                        :                          :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 1322790.66, cumulative cost = {2.222140118E7 rows, 8.6842333246E8 cpu, 2.953242E8 io, 1.132071696E8 network, 3.44580264E7 memory}
                        :                          :           :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565737885E7 rows, 8.342743302E8 cpu, 1.96878864E8 io, 1.132053708E8 network, 3.4453857199999996E7 memory}
                        :                          :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582046175E7 rows, 8.342743302E8 cpu, 1.96878864E8 io, 1.132053708E8 network, 3.4453857199999996E7 memory}
                        :                          :           :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :                          :           :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 615246.45, cumulative cost = {5947387.350000001 rows, 1.074633666E8 cpu, 9.8439456E7 io, 1.4765962799999999E7 network, 56.0 memory}
                        :                          :           :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 615246.45, cumulative cost = {5332140.9 rows, 4101963.0 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
                        :                          :           :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716894.45 rows, 4101963.0 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
                        :                          :           :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
                        :                          :           :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 615257.3925, cumulative cost = {5332872.635 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
                        :                          :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615257.3925, cumulative cost = {4717615.2425 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
                        :                          :           :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
                        :                          :           :  :           +- Calc(select=[x0, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615256.74, cumulative cost = {5332829.28 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
                        :                          :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615256.74, cumulative cost = {4717572.54 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
                        :                          :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :        +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
                        :                          :           :           +- Calc(select=[x, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
                        :                          :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :                          :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                        :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,2,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#2] Exchange(distribution=[hash[X1]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[X0]])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[7])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[1,0,2,0,3,2,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[x0 AS X0, y AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y, x0, y00], build=[right])\n:  :  :     :- [#5] Exchange(distribution=[hash[x]])\n:  :  :     +- [#6] Exchange(distribution=[hash[y00]])\n:  :  +- Calc(select=[x AS X0, y0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])\n:  :        :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:  :        +- [#8] Exchange(distribution=[broadcast])\n:  +- Calc(select=[x0 AS X0, y AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])\n:        :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0], isBroadcast=[true], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[5])
         :        :           :              :- Exchange(distribution=[broadcast])(reuse_id=[10])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[1])
         :        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[2])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[x, y])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])
         :        :           :              :        :- Reused(reference_id=[1])
         :        :           :              :        +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :        :           :              :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[4])
         :        :           :              :- Exchange(distribution=[hash[x]])(reuse_id=[6])
         :        :           :              :  +- Reused(reference_id=[2])
         :        :           :              :- Exchange(distribution=[hash[y00]])
         :        :           :              :  +- Calc(select=[x, y0 AS y00])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :              :        :- Reused(reference_id=[2])
         :        :           :              :        +- Exchange(distribution=[broadcast])
         :        :           :              :           +- Calc(select=[x, y0])
         :        :           :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[left])
         :        :           :              :                 :- Reused(reference_id=[3])
         :        :           :              :                 +- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :                    +- Reused(reference_id=[4])
         :        :           :              :- Reused(reference_id=[2])
         :        :           :              +- Exchange(distribution=[broadcast])
         :        :           :                 +- Calc(select=[x0, y])
         :        :           :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])
         :        :           :                       :- Reused(reference_id=[5])
         :        :           :                       +- Reused(reference_id=[3])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Reused(reference_id=[6])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[13])
         :        :           :                       :  +- Reused(reference_id=[1])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[11])
         :        :           :                             :- Reused(reference_id=[2])
         :        :           :                             +- Reused(reference_id=[3])
         :        :           :- Exchange(distribution=[hash[y]])(reuse_id=[9])
         :        :           :  +- Reused(reference_id=[2])
         :        :           +- Exchange(distribution=[hash[X0]])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[7])
         :        :                    +- Exchange(distribution=[broadcast])(reuse_id=[8])
         :        :                       +- Reused(reference_id=[5])
         :        +- Reused(reference_id=[8])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[17])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], build=[left])\n:        :- [#5] Exchange(distribution=[hash[X1]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Reused(reference_id=[9])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[2])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Calc(select=[y, x0])(reuse_id=[19])
         :              :                 :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :              :                 :           :  :     :- Reused(reference_id=[2])
         :              :                 :           :  :     +- Reused(reference_id=[3])
         :              :                 :           :  :- Reused(reference_id=[3])
         :              :                 :           :  :- Reused(reference_id=[5])
         :              :                 :           :  +- Reused(reference_id=[3])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[18])
         :              :                 :                 :- Reused(reference_id=[1])
         :              :                 :                 +- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[8])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[14])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :           :- Reused(reference_id=[2])
         :              :           :- Reused(reference_id=[10])
         :              :           :- Reused(reference_id=[9])
         :              :           +- Exchange(distribution=[hash[x]])
         :              :              +- Calc(select=[x, y0])(reuse_id=[12])
         :              :                 +- Reused(reference_id=[11])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[10])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[12])
         :              :                 :     +- Reused(reference_id=[10])
         :              :                 +- Reused(reference_id=[13])
         :              :- Exchange(distribution=[hash[X1]])(reuse_id=[20])
         :              :  +- Reused(reference_id=[14])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, X0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :                       :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                       :  +- Reused(reference_id=[2])
         :                       +- Exchange(distribution=[broadcast])
         :                          +- Reused(reference_id=[15])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[2])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[16])
         :- Reused(reference_id=[17])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[x, x0])
         :     +- Reused(reference_id=[18])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[0,1,0,1,2,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#2] Exchange(distribution=[hash[y]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#4] Exchange(distribution=[hash[X1]])\n:        +- [#5] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[X0, y, x], isBroadcast=[true], build=[right])\n      :- Calc(select=[X0, y])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], build=[left])\n      :     :- [#4] Exchange(distribution=[hash[X1]])\n      :     +- [#7] Exchange(distribution=[hash[x]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
                  :- Reused(reference_id=[8])
                  :- Reused(reference_id=[9])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[2])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Calc(select=[X0, X1])
                  :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                  :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
                  :                 :  +- Exchange(distribution=[hash[X0, X1]])
                  :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :                 :        +- Union(all=[true], union=[X0, X1])
                  :                 :           :- Calc(select=[x0 AS X0, y AS X1])
                  :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :                 :           :     :- Reused(reference_id=[19])
                  :                 :           :     +- Reused(reference_id=[8])
                  :                 :           +- Calc(select=[x AS X0, x AS X1])
                  :                 :              +- Reused(reference_id=[5])
                  :                 +- Reused(reference_id=[8])
                  :- Reused(reference_id=[20])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[2])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Reused(reference_id=[21])
                  :- Reused(reference_id=[20])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[2])
                           +- Reused(reference_id=[10])

Job has been submitted with JobID 35709660dfd4e85402fdf5cbe667d1f6
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, r_3.y AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x UNION (SELECT r_0.x AS X0, s_1.y AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x) UNION (SELECT b_0.x AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN s AS s_1 ON b_0.x = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x) UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 5891bacd_427c_423c_ad57_e0c3511c7424

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, r_3.y AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN s AS s_2 ON s_1.y = s_2.x
                      INNER JOIN r AS r_3 ON s_2.y = r_3.x
             UNION
             (SELECT r_0.x AS X0, s_1.y AS X1
              FROM r AS r_0
                       INNER JOIN s AS s_1 ON r_0.y = s_1.x
                       INNER JOIN a AS a_2 ON s_1.y = a_2.x)
             UNION
             (SELECT b_0.x AS X0, r_2.y AS X1
              FROM b AS b_0
                       INNER JOIN s AS s_1 ON b_0.x = s_1.x
                       INNER JOIN r AS r_2 ON s_1.y = r_2.x)
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1
              FROM b AS b_0
                       INNER JOIN a AS a_1 ON b_0.x = a_1.x)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0)
            UNION
            (SELECT p19_0.X0 AS X0, r_2.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)),
     p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1
             FROM p19 AS p19_0
                      INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1
                      INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalUnion(all=[false])
   :  :        :        :  :- LogicalUnion(all=[false])
   :  :        :        :  :  :- LogicalProject(X0=[$0], X1=[$7])
   :  :        :        :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :        :        :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :        :        :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalUnion(all=[false])
   :  :              :  :  :  :- LogicalUnion(all=[false])
   :  :              :  :  :  :  :- LogicalProject(X0=[$0], X1=[$7])
   :  :              :  :  :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :              :  :  :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :              :  :  :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  +- LogicalUnion(all=[false])
   :        :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalUnion(all=[false])
         :     :        :  :- LogicalUnion(all=[false])
         :     :        :  :  :- LogicalProject(X0=[$0], X1=[$7])
         :     :        :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :     :        :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :     :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        :  +- LogicalProject(X0=[$0], X1=[$4])
         :     :        :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
         :     :        :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalUnion(all=[false])
         :           :  :  :  :- LogicalUnion(all=[false])
         :           :  :  :  :  :- LogicalProject(X0=[$0], X1=[$7])
         :           :  :  :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :           :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :           :  :  :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
         :           :  :  :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 30690.508417542558, cumulative cost = {4.5831046205829173E8 rows, 1.7550861382187565E10 cpu, 5.808217512E9 io, 2.2214408305680866E9 network, 1.091131664419255E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 30690.508417542558, cumulative cost = {4.582797715498742E8 rows, 1.7550370334052883E10 cpu, 5.808217512E9 io, 2.2214408305680866E9 network, 1.0891674718805323E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 30690.508417542558, cumulative cost = {4.5824908104145664E8 rows, 1.7544968804571396E10 cpu, 5.808217512E9 io, 2.2207042583660655E9 network, 1.0891674718805323E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 169308.9640889035, cumulative cost = {4.582183905330391E8 rows, 1.7542259861145973E10 cpu, 5.808217512E9 io, 2.2207042583660655E9 network, 1.0872032793418095E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 142892.24978440162, cumulative cost = {2.771276005503068E8 rows, 1.0625025588324572E10 cpu, 3.54399552E9 io, 1.349163751986024E9 network, 6.4904890413396E8 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 119155.96959277545, cumulative cost = {1.9024821785298946E8 rows, 7.620913328467567E9 cpu, 2.362660176E9 io, 9.718865294368277E8 network, 4.428448106634288E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 119155.96959277545, cumulative cost = {1.901290618833967E8 rows, 7.620913328467567E9 cpu, 2.362660176E9 io, 9.718865294368277E8 network, 4.428448106634288E8 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 158172.26794417453, cumulative cost = {8.684651635509382E7 rows, 3.0292646146782875E9 cpu, 1.181329764E9 io, 3.810716625798564E8 network, 2.0620016787053126E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 158172.26794417453, cumulative cost = {8.668834408714965E7 rows, 3.0026916736636662E9 cpu, 1.181329764E9 io, 3.772755281491962E8 network, 2.0620016787053126E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 158172.26794417453, cumulative cost = {8.653017181920548E7 rows, 3.0001609173765593E9 cpu, 1.181329764E9 io, 3.772755281491962E8 network, 1.960771427221041E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 158172.26794417453, cumulative cost = {8.63719995512613E7 rows, 2.9723225982183847E9 cpu, 1.181329764E9 io, 3.73479393718536E8 network, 1.960771427221041E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 872581.9223611606, cumulative cost = {8.621382728331713E7 rows, 2.958361287460606E9 cpu, 1.181329764E9 io, 3.73479393718536E8 network, 1.8595411757367694E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 164990.46928463125, cumulative cost = {6.401247283393105E7 rows, 2.0841845215939853E9 cpu, 8.8599408E8 io, 2.597945565115611E8 network, 1.4917127712477264E8 memory}
         :  :     :              :  :- Calc(select=[X0, X00 AS X1]): rowcount = 36357.763662037716, cumulative cost = {2.8684576273294717E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :  :     :              :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.763662037716, cumulative cost = {2.864821850963268E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :  :     :              :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :     :              :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :     :              :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :  :     :                    +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     +- Exchange(distribution=[broadcast]): rowcount = 2593.245886494809, cumulative cost = {5670702.8078893805 rows, 1.4537252221332248E7 cpu, 9.84561E7 io, 477181.2431150449 network, 2187003.1564755705 memory}
         :  :     :              :  :        +- Calc(select=[X0, X1]): rowcount = 2593.245886494809, cumulative cost = {5668109.562002886 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :  :     :              :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2593.245886494809, cumulative cost = {5665516.316116392 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :  :     :              :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5661997.070229897 rows, 1.3909946432213355E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 2170335.1564755705 memory}
         :  :     :              :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16825.305909965395, cumulative cost = {5645171.764319932 rows, 1.3640741537653908E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 1093515.5782377853 memory}
         :  :     :              :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5628346.458409967 rows, 1.06794876975E7 cpu, 9.8450544E7 io, 5580.0 network, 1093515.5782377853 memory}
         :  :     :              :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92819.4175, cumulative cost = {5611521.152500002 rows, 9194377.0175 cpu, 9.8450544E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 128632.70562259354, cumulative cost = {3.51629060913517E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 128632.70562259354, cumulative cost = {3.503427338572911E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :  :     :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 617759.5256235336, cumulative cost = {1.17246908968315E7 rows, 1.4901064366623443E8 cpu, 1.96890372E8 io, 1.5630556814495582E7 network, 3083002.098201301 memory}
         :  :     :              :           +- Calc(select=[x, X0]): rowcount = 617759.5256235336, cumulative cost = {1.1106931371207966E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617759.5256235336, cumulative cost = {1.0489171845584432E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 16754.83749022446, cumulative cost = {5769770.319960898 rows, 1.2279868661559012E7 cpu, 9.8450964E7 io, 804328.1995307741 network, 2144731.198748731 memory}
         :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 707591.4530765294, cumulative cost = {2.132877252702493E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 707591.4530765294, cumulative cost = {2.06211810739484E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 615634.35384353, cumulative cost = {1.1710305620871866E7 rows, 1.464901171135116E8 cpu, 1.96896276E8 io, 1.5245429206974916E7 network, 2307316.6336666164 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 615634.35384353, cumulative cost = {1.1094671267028335E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615634.35384353, cumulative cost = {1.0479036913184805E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 2587.025623533669, cumulative cost = {5761760.559341275 rows, 1.022971346281028E7 cpu, 9.8456868E7 io, 470204.7147301951 network, 2162443.198748731 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 2587.025623533669, cumulative cost = {5759173.533717741 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2587.025623533669, cumulative cost = {5756586.508094207 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 636200.8626743286, cumulative cost = {1.0316338955871007E8 rows, 4.585293728744332E9 cpu, 1.181330412E9 io, 5.908148668569713E8 network, 2.2778699578802374E8 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 636200.8626743286, cumulative cost = {1.0252718869603574E8 rows, 4.478411983815045E9 cpu, 1.181330412E9 io, 5.755460461527873E8 network, 2.2778699578802374E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 636200.8626743286, cumulative cost = {1.0189098783336142E8 rows, 4.478411983815045E9 cpu, 1.181330412E9 io, 5.755460461527873E8 network, 2.2778699578802374E8 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 139697.08449552365, cumulative cost = {9.305150297068709E7 rows, 3.7554054151390815E9 cpu, 1.082891004E9 io, 4.771066381527873E8 network, 2.199639590562744E8 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 139697.08449552365, cumulative cost = {9.291180588619156E7 rows, 3.7319363049438334E9 cpu, 1.082891004E9 io, 4.7375390812489474E8 network, 2.199639590562744E8 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 139697.08449552365, cumulative cost = {9.277210880169603E7 rows, 3.729701151591905E9 cpu, 1.082891004E9 io, 4.7375390812489474E8 network, 2.110233456485609E8 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 139697.08449552365, cumulative cost = {9.26324117172005E7 rows, 3.705114464720693E9 cpu, 1.082891004E9 io, 4.7040117809700215E8 network, 2.110233456485609E8 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 770660.6987539436, cumulative cost = {9.249271463270497E7 rows, 3.69278389354063E9 cpu, 1.082891004E9 io, 4.7040117809700215E8 network, 2.020827322408474E8 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 147498.3056648156, cumulative cost = {4.962696319743981E7 rows, 1.9542687043372731E9 cpu, 5.90665044E8 io, 2.490428465743386E8 network, 1.1966026080275631E8 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 147498.3056648156, cumulative cost = {4.9479464891775E7 rows, 1.9542687043372731E9 cpu, 5.90665044E8 io, 2.490428465743386E8 network, 1.1966026080275631E8 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 351334.3595167969, cumulative cost = {3.283751044806718E7 rows, 1.0626981621360468E9 cpu, 3.93780648E8 io, 1.3007846925680625E8 network, 7.944941801815E7 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 351334.3595167969, cumulative cost = {3.2486176088550385E7 rows, 1.0036739897372249E9 cpu, 3.93780648E8 io, 1.2164644462840313E8 network, 7.944941801815E7 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 351334.3595167969, cumulative cost = {3.213484172903359E7 rows, 9.980526399849561E8 cpu, 3.93780648E8 io, 1.2164644462840313E8 network, 5.6964019009075E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 351334.3595167969, cumulative cost = {3.1783507369516794E7 rows, 9.362177927099999E8 cpu, 3.93780648E8 io, 1.1321442E8 network, 5.6964019009075E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1938190.65, cumulative cost = {3.1432173009999998E7 rows, 9.0520674231E8 cpu, 3.93780648E8 io, 1.1321442E8 network, 3.447862E7 memory}
         :  :                             :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 1938047.4, cumulative cost = {2.949227786E7 rows, 9.0318683166E8 cpu, 3.93769188E8 io, 1.13208864E8 network, 3.4461952E7 memory}
         :  :                             :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 1322790.66, cumulative cost = {2.222140118E7 rows, 8.6842333246E8 cpu, 2.953242E8 io, 1.132071696E8 network, 3.44580264E7 memory}
         :  :                             :     :              :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565737885E7 rows, 8.342743302E8 cpu, 1.96878864E8 io, 1.132053708E8 network, 3.4453857199999996E7 memory}
         :  :                             :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582046175E7 rows, 8.342743302E8 cpu, 1.96878864E8 io, 1.132053708E8 network, 3.4453857199999996E7 memory}
         :  :                             :     :              :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :                             :     :              :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 615246.45, cumulative cost = {5947387.350000001 rows, 1.074633666E8 cpu, 9.8439456E7 io, 1.4765962799999999E7 network, 56.0 memory}
         :  :                             :     :              :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 615246.45, cumulative cost = {5332140.9 rows, 4101963.0 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :                             :     :              :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716894.45 rows, 4101963.0 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :                             :     :              :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :                             :     :              :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 615257.3925, cumulative cost = {5332872.635 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :  :                             :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615257.3925, cumulative cost = {4717615.2425 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :  :                             :     :              :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
         :  :                             :     :              :  :           +- Calc(select=[x0, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615256.74, cumulative cost = {5332829.28 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
         :  :                             :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615256.74, cumulative cost = {4717572.54 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
         :  :                             :     :              :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :        +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :  :                             :     :              :           +- Calc(select=[x, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :                             :     :                    :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 623162.393089128, cumulative cost = {4.209509073651121E7 rows, 1.737744528504603E9 cpu, 4.9222596E8 io, 2.213583315226636E8 network, 8.24224714380911E7 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 623162.393089128, cumulative cost = {4.147192834342208E7 rows, 1.737744528504603E9 cpu, 4.9222596E8 io, 2.213583315226636E8 network, 8.24224714380911E7 memory}
         :  :                                   :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :                                   :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[hash[X0]]): rowcount = 52773.953927519535, cumulative cost = {3.2645481950332947E7 rows, 1.0154333448731827E9 cpu, 3.93786552E8 io, 1.229189235226636E8 network, 7.946713001815E7 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 52773.953927519535, cumulative cost = {3.2592707996405426E7 rows, 1.0065673206133593E9 cpu, 3.93786552E8 io, 1.2165234862840313E8 network, 7.946713001815E7 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 52773.953927519535, cumulative cost = {3.2539934042477906E7 rows, 1.0065673206133593E9 cpu, 3.93786552E8 io, 1.2165234862840313E8 network, 7.946713001815E7 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 351334.3595167969, cumulative cost = {3.2486176088550385E7 rows, 1.0036739897372249E9 cpu, 3.93780648E8 io, 1.2164644462840313E8 network, 7.944941801815E7 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 351334.3595167969, cumulative cost = {3.213484172903359E7 rows, 9.980526399849561E8 cpu, 3.93780648E8 io, 1.2164644462840313E8 network, 5.6964019009075E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 351334.3595167969, cumulative cost = {3.1783507369516794E7 rows, 9.362177927099999E8 cpu, 3.93780648E8 io, 1.1321442E8 network, 5.6964019009075E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 1938190.65, cumulative cost = {3.1432173009999998E7 rows, 9.0520674231E8 cpu, 3.93780648E8 io, 1.1321442E8 network, 3.447862E7 memory}
         :  :                                            :           :- Union(all=[true], union=[X0, X1]): rowcount = 1938047.4, cumulative cost = {2.949227786E7 rows, 9.0318683166E8 cpu, 3.93769188E8 io, 1.13208864E8 network, 3.4461952E7 memory}
         :  :                                            :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 1322790.66, cumulative cost = {2.222140118E7 rows, 8.6842333246E8 cpu, 2.953242E8 io, 1.132071696E8 network, 3.44580264E7 memory}
         :  :                                            :           :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565737885E7 rows, 8.342743302E8 cpu, 1.96878864E8 io, 1.132053708E8 network, 3.4453857199999996E7 memory}
         :  :                                            :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582046175E7 rows, 8.342743302E8 cpu, 1.96878864E8 io, 1.132053708E8 network, 3.4453857199999996E7 memory}
         :  :                                            :           :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :                                            :           :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 615246.45, cumulative cost = {5947387.350000001 rows, 1.074633666E8 cpu, 9.8439456E7 io, 1.4765962799999999E7 network, 56.0 memory}
         :  :                                            :           :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 615246.45, cumulative cost = {5332140.9 rows, 4101963.0 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :                                            :           :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716894.45 rows, 4101963.0 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :                                            :           :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :                                            :           :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 615257.3925, cumulative cost = {5332872.635 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :  :                                            :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615257.3925, cumulative cost = {4717615.2425 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :  :                                            :           :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
         :  :                                            :           :  :           +- Calc(select=[x0, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615256.74, cumulative cost = {5332829.28 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
         :  :                                            :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615256.74, cumulative cost = {4717572.54 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
         :  :                                            :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :        +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :  :                                            :           :           +- Calc(select=[x, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :                                            :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 23736.280191626178, cumulative cost = {8.67364904475329E7 rows, 3.0039693676072197E9 cpu, 1.181335344E9 io, 3.772772225491962E8 network, 2.0620409347053126E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 23736.280191626178, cumulative cost = {8.671275416734128E7 rows, 3.0039693676072197E9 cpu, 1.181335344E9 io, 3.772772225491962E8 network, 2.0620409347053126E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 158172.26794417453, cumulative cost = {8.668834408714965E7 rows, 3.0026916736636662E9 cpu, 1.181329764E9 io, 3.772755281491962E8 network, 2.0620016787053126E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 158172.26794417453, cumulative cost = {8.653017181920548E7 rows, 3.0001609173765593E9 cpu, 1.181329764E9 io, 3.772755281491962E8 network, 1.960771427221041E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 158172.26794417453, cumulative cost = {8.63719995512613E7 rows, 2.9723225982183847E9 cpu, 1.181329764E9 io, 3.73479393718536E8 network, 1.960771427221041E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 872581.9223611606, cumulative cost = {8.621382728331713E7 rows, 2.958361287460606E9 cpu, 1.181329764E9 io, 3.73479393718536E8 network, 1.8595411757367694E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 164990.46928463125, cumulative cost = {6.401247283393105E7 rows, 2.0841845215939853E9 cpu, 8.8599408E8 io, 2.597945565115611E8 network, 1.4917127712477264E8 memory}
         :        :           :  :- Calc(select=[X0, X00 AS X1]): rowcount = 36357.763662037716, cumulative cost = {2.8684576273294717E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.763662037716, cumulative cost = {2.864821850963268E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :           :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :  :     :                    +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 2593.245886494809, cumulative cost = {5670702.8078893805 rows, 1.4537252221332248E7 cpu, 9.84561E7 io, 477181.2431150449 network, 2187003.1564755705 memory}
         :        :           :  :        +- Calc(select=[X0, X1]): rowcount = 2593.245886494809, cumulative cost = {5668109.562002886 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2593.245886494809, cumulative cost = {5665516.316116392 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5661997.070229897 rows, 1.3909946432213355E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 2170335.1564755705 memory}
         :        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16825.305909965395, cumulative cost = {5645171.764319932 rows, 1.3640741537653908E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 1093515.5782377853 memory}
         :        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5628346.458409967 rows, 1.06794876975E7 cpu, 9.8450544E7 io, 5580.0 network, 1093515.5782377853 memory}
         :        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92819.4175, cumulative cost = {5611521.152500002 rows, 9194377.0175 cpu, 9.8450544E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 128632.70562259354, cumulative cost = {3.51629060913517E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 128632.70562259354, cumulative cost = {3.503427338572911E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :        :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 617759.5256235336, cumulative cost = {1.17246908968315E7 rows, 1.4901064366623443E8 cpu, 1.96890372E8 io, 1.5630556814495582E7 network, 3083002.098201301 memory}
         :        :           :           +- Calc(select=[x, X0]): rowcount = 617759.5256235336, cumulative cost = {1.1106931371207966E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617759.5256235336, cumulative cost = {1.0489171845584432E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 16754.83749022446, cumulative cost = {5769770.319960898 rows, 1.2279868661559012E7 cpu, 9.8450964E7 io, 804328.1995307741 network, 2144731.198748731 memory}
         :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 707591.4530765294, cumulative cost = {2.132877252702493E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 707591.4530765294, cumulative cost = {2.06211810739484E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 615634.35384353, cumulative cost = {1.1710305620871866E7 rows, 1.464901171135116E8 cpu, 1.96896276E8 io, 1.5245429206974916E7 network, 2307316.6336666164 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 615634.35384353, cumulative cost = {1.1094671267028335E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615634.35384353, cumulative cost = {1.0479036913184805E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 2587.025623533669, cumulative cost = {5761760.559341275 rows, 1.022971346281028E7 cpu, 9.8456868E7 io, 470204.7147301951 network, 2162443.198748731 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 2587.025623533669, cumulative cost = {5759173.533717741 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2587.025623533669, cumulative cost = {5756586.508094207 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 26416.714304501893, cumulative cost = {1.809214810186434E8 rows, 6.917064963857311E9 cpu, 2.264221992E9 io, 8.715405063800415E8 network, 4.381543752078495E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 26416.714304501893, cumulative cost = {1.808950643043389E8 rows, 6.917064963857311E9 cpu, 2.264221992E9 io, 8.715405063800415E8 network, 4.381543752078495E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 155083.06602235074, cumulative cost = {8.789277261581986E7 rows, 3.179154996780047E9 cpu, 1.181325084E9 io, 3.9727601355096287E8 network, 2.1699511584181273E8 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 155083.06602235074, cumulative cost = {8.77376895497975E7 rows, 3.1766736677236896E9 cpu, 1.181325084E9 io, 3.9727601355096287E8 network, 2.0706979961638227E8 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 155083.06602235074, cumulative cost = {8.758260648377515E7 rows, 3.149379048103756E9 cpu, 1.181325084E9 io, 3.9355401996642643E8 network, 2.0706979961638227E8 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 855539.8593842413, cumulative cost = {8.74275234177528E7 rows, 3.135690410353608E9 cpu, 1.181325084E9 io, 3.9355401996642643E8 network, 1.971444833909518E8 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 836226.1384923818, cumulative cost = {5.7146374804751694E7 rows, 2.0146426718511891E9 cpu, 7.87550412E8 io, 2.5405407059712613E8 network, 1.1851790667530061E8 memory}
               :           :  :- Calc(select=[x AS X0, X1]): rowcount = 707591.7113104329, cumulative cost = {2.123797041310528E7 rows, 8.776244786175095E8 cpu, 2.9533596E8 io, 1.1369282230387531E8 network, 3.681100133160895E7 memory}
               :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 707591.7113104329, cumulative cost = {2.0530378701794848E7 rows, 8.776244786175095E8 cpu, 2.9533596E8 io, 1.1369282230387531E8 network, 3.681100133160895E7 memory}
               :           :  :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :     +- Exchange(distribution=[hash[x]]): rowcount = 615636.0754028853, cumulative cost = {1.1619502990484416E7 rows, 1.508103980142864E8 cpu, 1.96896552E8 io, 1.5253414303875316E7 network, 2335381.109047373 memory}
               :           :  :        +- Calc(select=[x, X1]): rowcount = 615636.0754028853, cumulative cost = {1.100386691508153E7 rows, 4.738353734660167E7 cpu, 1.96896552E8 io, 478148.49420606665 network, 2335381.109047373 memory}
               :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615636.0754028853, cumulative cost = {1.0388230839678645E7 rows, 4.738353734660167E7 cpu, 1.96896552E8 io, 478148.49420606665 network, 2335381.109047373 memory}
               :           :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 2598.502685902536, cumulative cost = {5670952.76427576 rows, 1.4549613325114453E7 cpu, 9.8457144E7 io, 478148.49420606665 network, 2189864.958636831 memory}
               :           :  :                 +- Calc(select=[X0, X1]): rowcount = 2598.502685902536, cumulative cost = {5668354.261589858 rows, 1.4133852895370048E7 cpu, 9.8457144E7 io, 415784.4297444058 network, 2189864.958636831 memory}
               :           :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2598.502685902536, cumulative cost = {5665755.758903955 rows, 1.4133852895370048E7 cpu, 9.8457144E7 io, 415784.4297444058 network, 2189864.958636831 memory}
               :           :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :           :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :           :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :           :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :                       +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[X0, X10 AS X1]): rowcount = 128634.42718194886, cumulative cost = {3.507217825315403E7 rows, 1.1361819670951874E9 cpu, 4.92214452E8 io, 1.403612482932508E8 network, 8.170690534369166E7 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 128634.42718194886, cumulative cost = {3.494354382597208E7 rows, 1.1361819670951874E9 cpu, 4.92214452E8 io, 1.403612482932508E8 network, 8.170690534369166E7 memory}
               :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
               :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
               :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
               :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
               :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
               :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :           :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :        +- Exchange(distribution=[hash[x]]): rowcount = 617771.0026859025, cumulative cost = {1.1633959615515111E7 rows, 1.533428775448977E8 cpu, 1.96890648E8 io, 1.5640336923950471E7 network, 3114708.6280404446 memory}
               :           :           +- Calc(select=[x, X1]): rowcount = 617771.0026859025, cumulative cost = {1.1016188612829208E7 rows, 4.9557349093666084E7 cpu, 1.96890648E8 io, 813832.8594888116 network, 3114708.6280404446 memory}
               :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617771.0026859025, cumulative cost = {1.0398417610143306E7 rows, 4.9557349093666084E7 cpu, 1.96890648E8 io, 813832.8594888116 network, 3114708.6280404446 memory}
               :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :                 +- Exchange(distribution=[broadcast]): rowcount = 16831.351239350242, cumulative cost = {5679004.607457403 rows, 1.6609562283751285E7 cpu, 9.845124E7 io, 813832.8594888116 network, 2172152.958636831 memory}
               :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :           :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :                                :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :                                :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, y AS X1]): rowcount = 19313.72089185952, cumulative cost = {2.9425608753616866E7 rows, 1.120192198643035E9 cpu, 3.93774672E8 io, 1.394999493693003E8 network, 7.862657671565121E7 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[X0, y, x], isBroadcast=[true], build=[right]): rowcount = 19313.72089185952, cumulative cost = {2.9406295032725006E7 rows, 1.120192198643035E9 cpu, 3.93774672E8 io, 1.394999493693003E8 network, 7.862657671565121E7 memory}
               :                 :- Calc(select=[X0, y]): rowcount = 128266.13927906349, cumulative cost = {2.9385997311833147E7 rows, 1.1190834135288024E9 cpu, 3.93768768E8 io, 1.394940453693003E8 network, 7.860886471565121E7 memory}
               :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], build=[left]): rowcount = 128266.13927906349, cumulative cost = {2.9257731172554083E7 rows, 1.1190834135288024E9 cpu, 3.93768768E8 io, 1.394940453693003E8 network, 7.860886471565121E7 memory}
               :                 :     :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
               :                 :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
               :                 :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
               :                 :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
               :                 :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
               :                 :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                 :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                 :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                 :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                 :     :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :     +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
               :                 :        +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                 :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 21028.362674328546, cumulative cost = {9.297587497421454E7 rows, 3.7365010756476903E9 cpu, 1.082896908E9 io, 4.742644928290786E8 network, 2.199816710562744E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 21028.362674328546, cumulative cost = {9.295484661154021E7 rows, 3.7331365376197977E9 cpu, 1.082896908E9 io, 4.7375981212489474E8 network, 2.199816710562744E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 21028.362674328546, cumulative cost = {9.293381824886589E7 rows, 3.7331365376197977E9 cpu, 1.082896908E9 io, 4.7375981212489474E8 network, 2.199816710562744E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 139697.08449552365, cumulative cost = {9.291180588619156E7 rows, 3.7319363049438334E9 cpu, 1.082891004E9 io, 4.7375390812489474E8 network, 2.199639590562744E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 139697.08449552365, cumulative cost = {9.277210880169603E7 rows, 3.729701151591905E9 cpu, 1.082891004E9 io, 4.7375390812489474E8 network, 2.110233456485609E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 139697.08449552365, cumulative cost = {9.26324117172005E7 rows, 3.705114464720693E9 cpu, 1.082891004E9 io, 4.7040117809700215E8 network, 2.110233456485609E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 770660.6987539436, cumulative cost = {9.249271463270497E7 rows, 3.69278389354063E9 cpu, 1.082891004E9 io, 4.7040117809700215E8 network, 2.020827322408474E8 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 147498.3056648156, cumulative cost = {4.962696319743981E7 rows, 1.9542687043372731E9 cpu, 5.90665044E8 io, 2.490428465743386E8 network, 1.1966026080275631E8 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 147498.3056648156, cumulative cost = {4.9479464891775E7 rows, 1.9542687043372731E9 cpu, 5.90665044E8 io, 2.490428465743386E8 network, 1.1966026080275631E8 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 351334.3595167969, cumulative cost = {3.283751044806718E7 rows, 1.0626981621360468E9 cpu, 3.93780648E8 io, 1.3007846925680625E8 network, 7.944941801815E7 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 351334.3595167969, cumulative cost = {3.2486176088550385E7 rows, 1.0036739897372249E9 cpu, 3.93780648E8 io, 1.2164644462840313E8 network, 7.944941801815E7 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 351334.3595167969, cumulative cost = {3.213484172903359E7 rows, 9.980526399849561E8 cpu, 3.93780648E8 io, 1.2164644462840313E8 network, 5.6964019009075E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 351334.3595167969, cumulative cost = {3.1783507369516794E7 rows, 9.362177927099999E8 cpu, 3.93780648E8 io, 1.1321442E8 network, 5.6964019009075E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1938190.65, cumulative cost = {3.1432173009999998E7 rows, 9.0520674231E8 cpu, 3.93780648E8 io, 1.1321442E8 network, 3.447862E7 memory}
                        :           :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 1938047.4, cumulative cost = {2.949227786E7 rows, 9.0318683166E8 cpu, 3.93769188E8 io, 1.13208864E8 network, 3.4461952E7 memory}
                        :           :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 1322790.66, cumulative cost = {2.222140118E7 rows, 8.6842333246E8 cpu, 2.953242E8 io, 1.132071696E8 network, 3.44580264E7 memory}
                        :           :     :              :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565737885E7 rows, 8.342743302E8 cpu, 1.96878864E8 io, 1.132053708E8 network, 3.4453857199999996E7 memory}
                        :           :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582046175E7 rows, 8.342743302E8 cpu, 1.96878864E8 io, 1.132053708E8 network, 3.4453857199999996E7 memory}
                        :           :     :              :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :           :     :              :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 615246.45, cumulative cost = {5947387.350000001 rows, 1.074633666E8 cpu, 9.8439456E7 io, 1.4765962799999999E7 network, 56.0 memory}
                        :           :     :              :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 615246.45, cumulative cost = {5332140.9 rows, 4101963.0 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
                        :           :     :              :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716894.45 rows, 4101963.0 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
                        :           :     :              :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
                        :           :     :              :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 615257.3925, cumulative cost = {5332872.635 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
                        :           :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615257.3925, cumulative cost = {4717615.2425 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
                        :           :     :              :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
                        :           :     :              :  :           +- Calc(select=[x0, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615256.74, cumulative cost = {5332829.28 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
                        :           :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615256.74, cumulative cost = {4717572.54 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
                        :           :     :              :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :        +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
                        :           :     :              :           +- Calc(select=[x, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                        :           :     :                    :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 623162.393089128, cumulative cost = {4.209509073651121E7 rows, 1.737744528504603E9 cpu, 4.9222596E8 io, 2.213583315226636E8 network, 8.24224714380911E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 623162.393089128, cumulative cost = {4.147192834342208E7 rows, 1.737744528504603E9 cpu, 4.9222596E8 io, 2.213583315226636E8 network, 8.24224714380911E7 memory}
                        :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[hash[X0]]): rowcount = 52773.953927519535, cumulative cost = {3.2645481950332947E7 rows, 1.0154333448731827E9 cpu, 3.93786552E8 io, 1.229189235226636E8 network, 7.946713001815E7 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 52773.953927519535, cumulative cost = {3.2592707996405426E7 rows, 1.0065673206133593E9 cpu, 3.93786552E8 io, 1.2165234862840313E8 network, 7.946713001815E7 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 52773.953927519535, cumulative cost = {3.2539934042477906E7 rows, 1.0065673206133593E9 cpu, 3.93786552E8 io, 1.2165234862840313E8 network, 7.946713001815E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 351334.3595167969, cumulative cost = {3.2486176088550385E7 rows, 1.0036739897372249E9 cpu, 3.93780648E8 io, 1.2164644462840313E8 network, 7.944941801815E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 351334.3595167969, cumulative cost = {3.213484172903359E7 rows, 9.980526399849561E8 cpu, 3.93780648E8 io, 1.2164644462840313E8 network, 5.6964019009075E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 351334.3595167969, cumulative cost = {3.1783507369516794E7 rows, 9.362177927099999E8 cpu, 3.93780648E8 io, 1.1321442E8 network, 5.6964019009075E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 1938190.65, cumulative cost = {3.1432173009999998E7 rows, 9.0520674231E8 cpu, 3.93780648E8 io, 1.1321442E8 network, 3.447862E7 memory}
                        :                          :           :- Union(all=[true], union=[X0, X1]): rowcount = 1938047.4, cumulative cost = {2.949227786E7 rows, 9.0318683166E8 cpu, 3.93769188E8 io, 1.13208864E8 network, 3.4461952E7 memory}
                        :                          :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 1322790.66, cumulative cost = {2.222140118E7 rows, 8.6842333246E8 cpu, 2.953242E8 io, 1.132071696E8 network, 3.44580264E7 memory}
                        :                          :           :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565737885E7 rows, 8.342743302E8 cpu, 1.96878864E8 io, 1.132053708E8 network, 3.4453857199999996E7 memory}
                        :                          :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582046175E7 rows, 8.342743302E8 cpu, 1.96878864E8 io, 1.132053708E8 network, 3.4453857199999996E7 memory}
                        :                          :           :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :                          :           :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 615246.45, cumulative cost = {5947387.350000001 rows, 1.074633666E8 cpu, 9.8439456E7 io, 1.4765962799999999E7 network, 56.0 memory}
                        :                          :           :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 615246.45, cumulative cost = {5332140.9 rows, 4101963.0 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
                        :                          :           :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716894.45 rows, 4101963.0 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
                        :                          :           :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
                        :                          :           :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 615257.3925, cumulative cost = {5332872.635 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
                        :                          :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615257.3925, cumulative cost = {4717615.2425 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
                        :                          :           :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
                        :                          :           :  :           +- Calc(select=[x0, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615256.74, cumulative cost = {5332829.28 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
                        :                          :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615256.74, cumulative cost = {4717572.54 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
                        :                          :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :        +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
                        :                          :           :           +- Calc(select=[x, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
                        :                          :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :                          :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                        :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,2,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#2] Exchange(distribution=[hash[X1]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[X0]])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[7])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[1,0,2,0,3,2,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[x0 AS X0, y AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y, x0, y00], build=[right])\n:  :  :     :- [#5] Exchange(distribution=[hash[x]])\n:  :  :     +- [#6] Exchange(distribution=[hash[y00]])\n:  :  +- Calc(select=[x AS X0, y0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])\n:  :        :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:  :        +- [#8] Exchange(distribution=[broadcast])\n:  +- Calc(select=[x0 AS X0, y AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])\n:        :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0], isBroadcast=[true], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[5])
         :        :           :              :- Exchange(distribution=[broadcast])(reuse_id=[10])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[1])
         :        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[2])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[x, y])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])
         :        :           :              :        :- Reused(reference_id=[1])
         :        :           :              :        +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :        :           :              :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[4])
         :        :           :              :- Exchange(distribution=[hash[x]])(reuse_id=[6])
         :        :           :              :  +- Reused(reference_id=[2])
         :        :           :              :- Exchange(distribution=[hash[y00]])
         :        :           :              :  +- Calc(select=[x, y0 AS y00])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :              :        :- Reused(reference_id=[2])
         :        :           :              :        +- Exchange(distribution=[broadcast])
         :        :           :              :           +- Calc(select=[x, y0])
         :        :           :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[left])
         :        :           :              :                 :- Reused(reference_id=[3])
         :        :           :              :                 +- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :                    +- Reused(reference_id=[4])
         :        :           :              :- Reused(reference_id=[2])
         :        :           :              +- Exchange(distribution=[broadcast])
         :        :           :                 +- Calc(select=[x0, y])
         :        :           :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])
         :        :           :                       :- Reused(reference_id=[5])
         :        :           :                       +- Reused(reference_id=[3])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Reused(reference_id=[6])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[13])
         :        :           :                       :  +- Reused(reference_id=[1])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[11])
         :        :           :                             :- Reused(reference_id=[2])
         :        :           :                             +- Reused(reference_id=[3])
         :        :           :- Exchange(distribution=[hash[y]])(reuse_id=[9])
         :        :           :  +- Reused(reference_id=[2])
         :        :           +- Exchange(distribution=[hash[X0]])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[7])
         :        :                    +- Exchange(distribution=[broadcast])(reuse_id=[8])
         :        :                       +- Reused(reference_id=[5])
         :        +- Reused(reference_id=[8])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[17])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], build=[left])\n:        :- [#5] Exchange(distribution=[hash[X1]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Reused(reference_id=[9])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[2])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Calc(select=[y, x0])(reuse_id=[19])
         :              :                 :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :              :                 :           :  :     :- Reused(reference_id=[2])
         :              :                 :           :  :     +- Reused(reference_id=[3])
         :              :                 :           :  :- Reused(reference_id=[3])
         :              :                 :           :  :- Reused(reference_id=[5])
         :              :                 :           :  +- Reused(reference_id=[3])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[18])
         :              :                 :                 :- Reused(reference_id=[1])
         :              :                 :                 +- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[8])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[14])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :           :- Reused(reference_id=[2])
         :              :           :- Reused(reference_id=[10])
         :              :           :- Reused(reference_id=[9])
         :              :           +- Exchange(distribution=[hash[x]])
         :              :              +- Calc(select=[x, y0])(reuse_id=[12])
         :              :                 +- Reused(reference_id=[11])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[10])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[12])
         :              :                 :     +- Reused(reference_id=[10])
         :              :                 +- Reused(reference_id=[13])
         :              :- Exchange(distribution=[hash[X1]])(reuse_id=[20])
         :              :  +- Reused(reference_id=[14])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, X0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :                       :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                       :  +- Reused(reference_id=[2])
         :                       +- Exchange(distribution=[broadcast])
         :                          +- Reused(reference_id=[15])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[2])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[16])
         :- Reused(reference_id=[17])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[x, x0])
         :     +- Reused(reference_id=[18])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[0,1,0,1,2,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#2] Exchange(distribution=[hash[y]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#4] Exchange(distribution=[hash[X1]])\n:        +- [#5] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[X0, y, x], isBroadcast=[true], build=[right])\n      :- Calc(select=[X0, y])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], build=[left])\n      :     :- [#4] Exchange(distribution=[hash[X1]])\n      :     +- [#7] Exchange(distribution=[hash[x]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
                  :- Reused(reference_id=[8])
                  :- Reused(reference_id=[9])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[2])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Calc(select=[X0, X1])
                  :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                  :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
                  :                 :  +- Exchange(distribution=[hash[X0, X1]])
                  :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :                 :        +- Union(all=[true], union=[X0, X1])
                  :                 :           :- Calc(select=[x0 AS X0, y AS X1])
                  :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :                 :           :     :- Reused(reference_id=[19])
                  :                 :           :     +- Reused(reference_id=[8])
                  :                 :           +- Calc(select=[x AS X0, x AS X1])
                  :                 :              +- Reused(reference_id=[5])
                  :                 +- Reused(reference_id=[8])
                  :- Reused(reference_id=[20])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[2])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Reused(reference_id=[21])
                  :- Reused(reference_id=[20])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[2])
                           +- Reused(reference_id=[10])

Job has been submitted with JobID e040af5c051b277725ed8dff34b4c15d
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, r_3.y AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x UNION (SELECT r_0.x AS X0, s_1.y AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x) UNION (SELECT b_0.x AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN s AS s_1 ON b_0.x = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x) UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 5fba96e1_fdc7_48bf_be4e_3c33ea9c8f56

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, r_3.y AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN s AS s_2 ON s_1.y = s_2.x
                      INNER JOIN r AS r_3 ON s_2.y = r_3.x
             UNION
             (SELECT r_0.x AS X0, s_1.y AS X1
              FROM r AS r_0
                       INNER JOIN s AS s_1 ON r_0.y = s_1.x
                       INNER JOIN a AS a_2 ON s_1.y = a_2.x)
             UNION
             (SELECT b_0.x AS X0, r_2.y AS X1
              FROM b AS b_0
                       INNER JOIN s AS s_1 ON b_0.x = s_1.x
                       INNER JOIN r AS r_2 ON s_1.y = r_2.x)
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1
              FROM b AS b_0
                       INNER JOIN a AS a_1 ON b_0.x = a_1.x)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0)
            UNION
            (SELECT p19_0.X0 AS X0, r_2.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)),
     p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1
             FROM p19 AS p19_0
                      INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1
                      INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalUnion(all=[false])
   :  :        :        :  :- LogicalUnion(all=[false])
   :  :        :        :  :  :- LogicalProject(X0=[$0], X1=[$7])
   :  :        :        :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :        :        :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :        :        :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalUnion(all=[false])
   :  :              :  :  :  :- LogicalUnion(all=[false])
   :  :              :  :  :  :  :- LogicalProject(X0=[$0], X1=[$7])
   :  :              :  :  :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :              :  :  :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :              :  :  :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :  +- LogicalUnion(all=[false])
   :        :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalUnion(all=[false])
         :     :        :  :- LogicalUnion(all=[false])
         :     :        :  :  :- LogicalProject(X0=[$0], X1=[$7])
         :     :        :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :     :        :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :     :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        :  +- LogicalProject(X0=[$0], X1=[$4])
         :     :        :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
         :     :        :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalUnion(all=[false])
         :           :  :  :  :- LogicalUnion(all=[false])
         :           :  :  :  :  :- LogicalProject(X0=[$0], X1=[$7])
         :           :  :  :  :  :  +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :           :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :           :  :  :     +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
         :           :  :  :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 30690.508417542558, cumulative cost = {4.5831046205829173E8 rows, 1.7550861382187565E10 cpu, 5.808217512E9 io, 2.2214408305680866E9 network, 1.091131664419255E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 30690.508417542558, cumulative cost = {4.582797715498742E8 rows, 1.7550370334052883E10 cpu, 5.808217512E9 io, 2.2214408305680866E9 network, 1.0891674718805323E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 30690.508417542558, cumulative cost = {4.5824908104145664E8 rows, 1.7544968804571396E10 cpu, 5.808217512E9 io, 2.2207042583660655E9 network, 1.0891674718805323E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 169308.9640889035, cumulative cost = {4.582183905330391E8 rows, 1.7542259861145973E10 cpu, 5.808217512E9 io, 2.2207042583660655E9 network, 1.0872032793418095E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 142892.24978440162, cumulative cost = {2.771276005503068E8 rows, 1.0625025588324572E10 cpu, 3.54399552E9 io, 1.349163751986024E9 network, 6.4904890413396E8 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 119155.96959277545, cumulative cost = {1.9024821785298946E8 rows, 7.620913328467567E9 cpu, 2.362660176E9 io, 9.718865294368277E8 network, 4.428448106634288E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 119155.96959277545, cumulative cost = {1.901290618833967E8 rows, 7.620913328467567E9 cpu, 2.362660176E9 io, 9.718865294368277E8 network, 4.428448106634288E8 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 158172.26794417453, cumulative cost = {8.684651635509382E7 rows, 3.0292646146782875E9 cpu, 1.181329764E9 io, 3.810716625798564E8 network, 2.0620016787053126E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 158172.26794417453, cumulative cost = {8.668834408714965E7 rows, 3.0026916736636662E9 cpu, 1.181329764E9 io, 3.772755281491962E8 network, 2.0620016787053126E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 158172.26794417453, cumulative cost = {8.653017181920548E7 rows, 3.0001609173765593E9 cpu, 1.181329764E9 io, 3.772755281491962E8 network, 1.960771427221041E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 158172.26794417453, cumulative cost = {8.63719995512613E7 rows, 2.9723225982183847E9 cpu, 1.181329764E9 io, 3.73479393718536E8 network, 1.960771427221041E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 872581.9223611606, cumulative cost = {8.621382728331713E7 rows, 2.958361287460606E9 cpu, 1.181329764E9 io, 3.73479393718536E8 network, 1.8595411757367694E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 164990.46928463125, cumulative cost = {6.401247283393105E7 rows, 2.0841845215939853E9 cpu, 8.8599408E8 io, 2.597945565115611E8 network, 1.4917127712477264E8 memory}
         :  :     :              :  :- Calc(select=[X0, X00 AS X1]): rowcount = 36357.763662037716, cumulative cost = {2.8684576273294717E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :  :     :              :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.763662037716, cumulative cost = {2.864821850963268E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :  :     :              :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :     :              :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :     :              :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :  :     :                    +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :     +- Exchange(distribution=[broadcast]): rowcount = 2593.245886494809, cumulative cost = {5670702.8078893805 rows, 1.4537252221332248E7 cpu, 9.84561E7 io, 477181.2431150449 network, 2187003.1564755705 memory}
         :  :     :              :  :        +- Calc(select=[X0, X1]): rowcount = 2593.245886494809, cumulative cost = {5668109.562002886 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :  :     :              :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2593.245886494809, cumulative cost = {5665516.316116392 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :  :     :              :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5661997.070229897 rows, 1.3909946432213355E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 2170335.1564755705 memory}
         :  :     :              :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16825.305909965395, cumulative cost = {5645171.764319932 rows, 1.3640741537653908E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 1093515.5782377853 memory}
         :  :     :              :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5628346.458409967 rows, 1.06794876975E7 cpu, 9.8450544E7 io, 5580.0 network, 1093515.5782377853 memory}
         :  :     :              :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92819.4175, cumulative cost = {5611521.152500002 rows, 9194377.0175 cpu, 9.8450544E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 128632.70562259354, cumulative cost = {3.51629060913517E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 128632.70562259354, cumulative cost = {3.503427338572911E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :  :     :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 617759.5256235336, cumulative cost = {1.17246908968315E7 rows, 1.4901064366623443E8 cpu, 1.96890372E8 io, 1.5630556814495582E7 network, 3083002.098201301 memory}
         :  :     :              :           +- Calc(select=[x, X0]): rowcount = 617759.5256235336, cumulative cost = {1.1106931371207966E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617759.5256235336, cumulative cost = {1.0489171845584432E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 16754.83749022446, cumulative cost = {5769770.319960898 rows, 1.2279868661559012E7 cpu, 9.8450964E7 io, 804328.1995307741 network, 2144731.198748731 memory}
         :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 707591.4530765294, cumulative cost = {2.132877252702493E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 707591.4530765294, cumulative cost = {2.06211810739484E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 615634.35384353, cumulative cost = {1.1710305620871866E7 rows, 1.464901171135116E8 cpu, 1.96896276E8 io, 1.5245429206974916E7 network, 2307316.6336666164 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 615634.35384353, cumulative cost = {1.1094671267028335E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615634.35384353, cumulative cost = {1.0479036913184805E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 2587.025623533669, cumulative cost = {5761760.559341275 rows, 1.022971346281028E7 cpu, 9.8456868E7 io, 470204.7147301951 network, 2162443.198748731 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 2587.025623533669, cumulative cost = {5759173.533717741 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2587.025623533669, cumulative cost = {5756586.508094207 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 636200.8626743286, cumulative cost = {1.0316338955871007E8 rows, 4.585293728744332E9 cpu, 1.181330412E9 io, 5.908148668569713E8 network, 2.2778699578802374E8 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 636200.8626743286, cumulative cost = {1.0252718869603574E8 rows, 4.478411983815045E9 cpu, 1.181330412E9 io, 5.755460461527873E8 network, 2.2778699578802374E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 636200.8626743286, cumulative cost = {1.0189098783336142E8 rows, 4.478411983815045E9 cpu, 1.181330412E9 io, 5.755460461527873E8 network, 2.2778699578802374E8 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 139697.08449552365, cumulative cost = {9.305150297068709E7 rows, 3.7554054151390815E9 cpu, 1.082891004E9 io, 4.771066381527873E8 network, 2.199639590562744E8 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 139697.08449552365, cumulative cost = {9.291180588619156E7 rows, 3.7319363049438334E9 cpu, 1.082891004E9 io, 4.7375390812489474E8 network, 2.199639590562744E8 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 139697.08449552365, cumulative cost = {9.277210880169603E7 rows, 3.729701151591905E9 cpu, 1.082891004E9 io, 4.7375390812489474E8 network, 2.110233456485609E8 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 139697.08449552365, cumulative cost = {9.26324117172005E7 rows, 3.705114464720693E9 cpu, 1.082891004E9 io, 4.7040117809700215E8 network, 2.110233456485609E8 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 770660.6987539436, cumulative cost = {9.249271463270497E7 rows, 3.69278389354063E9 cpu, 1.082891004E9 io, 4.7040117809700215E8 network, 2.020827322408474E8 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 147498.3056648156, cumulative cost = {4.962696319743981E7 rows, 1.9542687043372731E9 cpu, 5.90665044E8 io, 2.490428465743386E8 network, 1.1966026080275631E8 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 147498.3056648156, cumulative cost = {4.9479464891775E7 rows, 1.9542687043372731E9 cpu, 5.90665044E8 io, 2.490428465743386E8 network, 1.1966026080275631E8 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 351334.3595167969, cumulative cost = {3.283751044806718E7 rows, 1.0626981621360468E9 cpu, 3.93780648E8 io, 1.3007846925680625E8 network, 7.944941801815E7 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 351334.3595167969, cumulative cost = {3.2486176088550385E7 rows, 1.0036739897372249E9 cpu, 3.93780648E8 io, 1.2164644462840313E8 network, 7.944941801815E7 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 351334.3595167969, cumulative cost = {3.213484172903359E7 rows, 9.980526399849561E8 cpu, 3.93780648E8 io, 1.2164644462840313E8 network, 5.6964019009075E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 351334.3595167969, cumulative cost = {3.1783507369516794E7 rows, 9.362177927099999E8 cpu, 3.93780648E8 io, 1.1321442E8 network, 5.6964019009075E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1938190.65, cumulative cost = {3.1432173009999998E7 rows, 9.0520674231E8 cpu, 3.93780648E8 io, 1.1321442E8 network, 3.447862E7 memory}
         :  :                             :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 1938047.4, cumulative cost = {2.949227786E7 rows, 9.0318683166E8 cpu, 3.93769188E8 io, 1.13208864E8 network, 3.4461952E7 memory}
         :  :                             :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 1322790.66, cumulative cost = {2.222140118E7 rows, 8.6842333246E8 cpu, 2.953242E8 io, 1.132071696E8 network, 3.44580264E7 memory}
         :  :                             :     :              :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565737885E7 rows, 8.342743302E8 cpu, 1.96878864E8 io, 1.132053708E8 network, 3.4453857199999996E7 memory}
         :  :                             :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582046175E7 rows, 8.342743302E8 cpu, 1.96878864E8 io, 1.132053708E8 network, 3.4453857199999996E7 memory}
         :  :                             :     :              :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :                             :     :              :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 615246.45, cumulative cost = {5947387.350000001 rows, 1.074633666E8 cpu, 9.8439456E7 io, 1.4765962799999999E7 network, 56.0 memory}
         :  :                             :     :              :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 615246.45, cumulative cost = {5332140.9 rows, 4101963.0 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :                             :     :              :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716894.45 rows, 4101963.0 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :                             :     :              :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :                             :     :              :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 615257.3925, cumulative cost = {5332872.635 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :  :                             :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615257.3925, cumulative cost = {4717615.2425 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :  :                             :     :              :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
         :  :                             :     :              :  :           +- Calc(select=[x0, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615256.74, cumulative cost = {5332829.28 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
         :  :                             :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615256.74, cumulative cost = {4717572.54 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
         :  :                             :     :              :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :        +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :  :                             :     :              :           +- Calc(select=[x, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :                             :     :                    :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 623162.393089128, cumulative cost = {4.209509073651121E7 rows, 1.737744528504603E9 cpu, 4.9222596E8 io, 2.213583315226636E8 network, 8.24224714380911E7 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 623162.393089128, cumulative cost = {4.147192834342208E7 rows, 1.737744528504603E9 cpu, 4.9222596E8 io, 2.213583315226636E8 network, 8.24224714380911E7 memory}
         :  :                                   :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :                                   :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[hash[X0]]): rowcount = 52773.953927519535, cumulative cost = {3.2645481950332947E7 rows, 1.0154333448731827E9 cpu, 3.93786552E8 io, 1.229189235226636E8 network, 7.946713001815E7 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 52773.953927519535, cumulative cost = {3.2592707996405426E7 rows, 1.0065673206133593E9 cpu, 3.93786552E8 io, 1.2165234862840313E8 network, 7.946713001815E7 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 52773.953927519535, cumulative cost = {3.2539934042477906E7 rows, 1.0065673206133593E9 cpu, 3.93786552E8 io, 1.2165234862840313E8 network, 7.946713001815E7 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 351334.3595167969, cumulative cost = {3.2486176088550385E7 rows, 1.0036739897372249E9 cpu, 3.93780648E8 io, 1.2164644462840313E8 network, 7.944941801815E7 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 351334.3595167969, cumulative cost = {3.213484172903359E7 rows, 9.980526399849561E8 cpu, 3.93780648E8 io, 1.2164644462840313E8 network, 5.6964019009075E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 351334.3595167969, cumulative cost = {3.1783507369516794E7 rows, 9.362177927099999E8 cpu, 3.93780648E8 io, 1.1321442E8 network, 5.6964019009075E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 1938190.65, cumulative cost = {3.1432173009999998E7 rows, 9.0520674231E8 cpu, 3.93780648E8 io, 1.1321442E8 network, 3.447862E7 memory}
         :  :                                            :           :- Union(all=[true], union=[X0, X1]): rowcount = 1938047.4, cumulative cost = {2.949227786E7 rows, 9.0318683166E8 cpu, 3.93769188E8 io, 1.13208864E8 network, 3.4461952E7 memory}
         :  :                                            :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 1322790.66, cumulative cost = {2.222140118E7 rows, 8.6842333246E8 cpu, 2.953242E8 io, 1.132071696E8 network, 3.44580264E7 memory}
         :  :                                            :           :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565737885E7 rows, 8.342743302E8 cpu, 1.96878864E8 io, 1.132053708E8 network, 3.4453857199999996E7 memory}
         :  :                                            :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582046175E7 rows, 8.342743302E8 cpu, 1.96878864E8 io, 1.132053708E8 network, 3.4453857199999996E7 memory}
         :  :                                            :           :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :                                            :           :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 615246.45, cumulative cost = {5947387.350000001 rows, 1.074633666E8 cpu, 9.8439456E7 io, 1.4765962799999999E7 network, 56.0 memory}
         :  :                                            :           :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 615246.45, cumulative cost = {5332140.9 rows, 4101963.0 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :                                            :           :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716894.45 rows, 4101963.0 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :                                            :           :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :                                            :           :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 615257.3925, cumulative cost = {5332872.635 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :  :                                            :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615257.3925, cumulative cost = {4717615.2425 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
         :  :                                            :           :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
         :  :                                            :           :  :           +- Calc(select=[x0, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615256.74, cumulative cost = {5332829.28 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
         :  :                                            :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615256.74, cumulative cost = {4717572.54 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
         :  :                                            :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :        +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :  :                                            :           :           +- Calc(select=[x, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :                                            :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 23736.280191626178, cumulative cost = {8.67364904475329E7 rows, 3.0039693676072197E9 cpu, 1.181335344E9 io, 3.772772225491962E8 network, 2.0620409347053126E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 23736.280191626178, cumulative cost = {8.671275416734128E7 rows, 3.0039693676072197E9 cpu, 1.181335344E9 io, 3.772772225491962E8 network, 2.0620409347053126E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 158172.26794417453, cumulative cost = {8.668834408714965E7 rows, 3.0026916736636662E9 cpu, 1.181329764E9 io, 3.772755281491962E8 network, 2.0620016787053126E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 158172.26794417453, cumulative cost = {8.653017181920548E7 rows, 3.0001609173765593E9 cpu, 1.181329764E9 io, 3.772755281491962E8 network, 1.960771427221041E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 158172.26794417453, cumulative cost = {8.63719995512613E7 rows, 2.9723225982183847E9 cpu, 1.181329764E9 io, 3.73479393718536E8 network, 1.960771427221041E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 872581.9223611606, cumulative cost = {8.621382728331713E7 rows, 2.958361287460606E9 cpu, 1.181329764E9 io, 3.73479393718536E8 network, 1.8595411757367694E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 164990.46928463125, cumulative cost = {6.401247283393105E7 rows, 2.0841845215939853E9 cpu, 8.8599408E8 io, 2.597945565115611E8 network, 1.4917127712477264E8 memory}
         :        :           :  :- Calc(select=[X0, X00 AS X1]): rowcount = 36357.763662037716, cumulative cost = {2.8684576273294717E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.763662037716, cumulative cost = {2.864821850963268E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :           :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :  :     :                    +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 2593.245886494809, cumulative cost = {5670702.8078893805 rows, 1.4537252221332248E7 cpu, 9.84561E7 io, 477181.2431150449 network, 2187003.1564755705 memory}
         :        :           :  :        +- Calc(select=[X0, X1]): rowcount = 2593.245886494809, cumulative cost = {5668109.562002886 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2593.245886494809, cumulative cost = {5665516.316116392 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5661997.070229897 rows, 1.3909946432213355E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 2170335.1564755705 memory}
         :        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16825.305909965395, cumulative cost = {5645171.764319932 rows, 1.3640741537653908E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 1093515.5782377853 memory}
         :        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5628346.458409967 rows, 1.06794876975E7 cpu, 9.8450544E7 io, 5580.0 network, 1093515.5782377853 memory}
         :        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92819.4175, cumulative cost = {5611521.152500002 rows, 9194377.0175 cpu, 9.8450544E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 128632.70562259354, cumulative cost = {3.51629060913517E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 128632.70562259354, cumulative cost = {3.503427338572911E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :        :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 617759.5256235336, cumulative cost = {1.17246908968315E7 rows, 1.4901064366623443E8 cpu, 1.96890372E8 io, 1.5630556814495582E7 network, 3083002.098201301 memory}
         :        :           :           +- Calc(select=[x, X0]): rowcount = 617759.5256235336, cumulative cost = {1.1106931371207966E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617759.5256235336, cumulative cost = {1.0489171845584432E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 16754.83749022446, cumulative cost = {5769770.319960898 rows, 1.2279868661559012E7 cpu, 9.8450964E7 io, 804328.1995307741 network, 2144731.198748731 memory}
         :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 707591.4530765294, cumulative cost = {2.132877252702493E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 707591.4530765294, cumulative cost = {2.06211810739484E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 615634.35384353, cumulative cost = {1.1710305620871866E7 rows, 1.464901171135116E8 cpu, 1.96896276E8 io, 1.5245429206974916E7 network, 2307316.6336666164 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 615634.35384353, cumulative cost = {1.1094671267028335E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615634.35384353, cumulative cost = {1.0479036913184805E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 2587.025623533669, cumulative cost = {5761760.559341275 rows, 1.022971346281028E7 cpu, 9.8456868E7 io, 470204.7147301951 network, 2162443.198748731 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 2587.025623533669, cumulative cost = {5759173.533717741 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2587.025623533669, cumulative cost = {5756586.508094207 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 26416.714304501893, cumulative cost = {1.809214810186434E8 rows, 6.917064963857311E9 cpu, 2.264221992E9 io, 8.715405063800415E8 network, 4.381543752078495E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 26416.714304501893, cumulative cost = {1.808950643043389E8 rows, 6.917064963857311E9 cpu, 2.264221992E9 io, 8.715405063800415E8 network, 4.381543752078495E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 155083.06602235074, cumulative cost = {8.789277261581986E7 rows, 3.179154996780047E9 cpu, 1.181325084E9 io, 3.9727601355096287E8 network, 2.1699511584181273E8 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 155083.06602235074, cumulative cost = {8.77376895497975E7 rows, 3.1766736677236896E9 cpu, 1.181325084E9 io, 3.9727601355096287E8 network, 2.0706979961638227E8 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 155083.06602235074, cumulative cost = {8.758260648377515E7 rows, 3.149379048103756E9 cpu, 1.181325084E9 io, 3.9355401996642643E8 network, 2.0706979961638227E8 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 855539.8593842413, cumulative cost = {8.74275234177528E7 rows, 3.135690410353608E9 cpu, 1.181325084E9 io, 3.9355401996642643E8 network, 1.971444833909518E8 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 836226.1384923818, cumulative cost = {5.7146374804751694E7 rows, 2.0146426718511891E9 cpu, 7.87550412E8 io, 2.5405407059712613E8 network, 1.1851790667530061E8 memory}
               :           :  :- Calc(select=[x AS X0, X1]): rowcount = 707591.7113104329, cumulative cost = {2.123797041310528E7 rows, 8.776244786175095E8 cpu, 2.9533596E8 io, 1.1369282230387531E8 network, 3.681100133160895E7 memory}
               :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 707591.7113104329, cumulative cost = {2.0530378701794848E7 rows, 8.776244786175095E8 cpu, 2.9533596E8 io, 1.1369282230387531E8 network, 3.681100133160895E7 memory}
               :           :  :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :     +- Exchange(distribution=[hash[x]]): rowcount = 615636.0754028853, cumulative cost = {1.1619502990484416E7 rows, 1.508103980142864E8 cpu, 1.96896552E8 io, 1.5253414303875316E7 network, 2335381.109047373 memory}
               :           :  :        +- Calc(select=[x, X1]): rowcount = 615636.0754028853, cumulative cost = {1.100386691508153E7 rows, 4.738353734660167E7 cpu, 1.96896552E8 io, 478148.49420606665 network, 2335381.109047373 memory}
               :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615636.0754028853, cumulative cost = {1.0388230839678645E7 rows, 4.738353734660167E7 cpu, 1.96896552E8 io, 478148.49420606665 network, 2335381.109047373 memory}
               :           :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 2598.502685902536, cumulative cost = {5670952.76427576 rows, 1.4549613325114453E7 cpu, 9.8457144E7 io, 478148.49420606665 network, 2189864.958636831 memory}
               :           :  :                 +- Calc(select=[X0, X1]): rowcount = 2598.502685902536, cumulative cost = {5668354.261589858 rows, 1.4133852895370048E7 cpu, 9.8457144E7 io, 415784.4297444058 network, 2189864.958636831 memory}
               :           :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2598.502685902536, cumulative cost = {5665755.758903955 rows, 1.4133852895370048E7 cpu, 9.8457144E7 io, 415784.4297444058 network, 2189864.958636831 memory}
               :           :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :           :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :           :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :           :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :                       +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[X0, X10 AS X1]): rowcount = 128634.42718194886, cumulative cost = {3.507217825315403E7 rows, 1.1361819670951874E9 cpu, 4.92214452E8 io, 1.403612482932508E8 network, 8.170690534369166E7 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 128634.42718194886, cumulative cost = {3.494354382597208E7 rows, 1.1361819670951874E9 cpu, 4.92214452E8 io, 1.403612482932508E8 network, 8.170690534369166E7 memory}
               :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
               :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
               :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
               :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
               :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
               :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :           :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :        +- Exchange(distribution=[hash[x]]): rowcount = 617771.0026859025, cumulative cost = {1.1633959615515111E7 rows, 1.533428775448977E8 cpu, 1.96890648E8 io, 1.5640336923950471E7 network, 3114708.6280404446 memory}
               :           :           +- Calc(select=[x, X1]): rowcount = 617771.0026859025, cumulative cost = {1.1016188612829208E7 rows, 4.9557349093666084E7 cpu, 1.96890648E8 io, 813832.8594888116 network, 3114708.6280404446 memory}
               :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617771.0026859025, cumulative cost = {1.0398417610143306E7 rows, 4.9557349093666084E7 cpu, 1.96890648E8 io, 813832.8594888116 network, 3114708.6280404446 memory}
               :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :                 +- Exchange(distribution=[broadcast]): rowcount = 16831.351239350242, cumulative cost = {5679004.607457403 rows, 1.6609562283751285E7 cpu, 9.845124E7 io, 813832.8594888116 network, 2172152.958636831 memory}
               :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :           :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :                                :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :                                :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, y AS X1]): rowcount = 19313.72089185952, cumulative cost = {2.9425608753616866E7 rows, 1.120192198643035E9 cpu, 3.93774672E8 io, 1.394999493693003E8 network, 7.862657671565121E7 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[X0, y, x], isBroadcast=[true], build=[right]): rowcount = 19313.72089185952, cumulative cost = {2.9406295032725006E7 rows, 1.120192198643035E9 cpu, 3.93774672E8 io, 1.394999493693003E8 network, 7.862657671565121E7 memory}
               :                 :- Calc(select=[X0, y]): rowcount = 128266.13927906349, cumulative cost = {2.9385997311833147E7 rows, 1.1190834135288024E9 cpu, 3.93768768E8 io, 1.394940453693003E8 network, 7.860886471565121E7 memory}
               :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], build=[left]): rowcount = 128266.13927906349, cumulative cost = {2.9257731172554083E7 rows, 1.1190834135288024E9 cpu, 3.93768768E8 io, 1.394940453693003E8 network, 7.860886471565121E7 memory}
               :                 :     :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
               :                 :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
               :                 :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
               :                 :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
               :                 :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
               :                 :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                 :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                 :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                 :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                 :     :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :     +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
               :                 :        +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                 :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 21028.362674328546, cumulative cost = {9.297587497421454E7 rows, 3.7365010756476903E9 cpu, 1.082896908E9 io, 4.742644928290786E8 network, 2.199816710562744E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 21028.362674328546, cumulative cost = {9.295484661154021E7 rows, 3.7331365376197977E9 cpu, 1.082896908E9 io, 4.7375981212489474E8 network, 2.199816710562744E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 21028.362674328546, cumulative cost = {9.293381824886589E7 rows, 3.7331365376197977E9 cpu, 1.082896908E9 io, 4.7375981212489474E8 network, 2.199816710562744E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 139697.08449552365, cumulative cost = {9.291180588619156E7 rows, 3.7319363049438334E9 cpu, 1.082891004E9 io, 4.7375390812489474E8 network, 2.199639590562744E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 139697.08449552365, cumulative cost = {9.277210880169603E7 rows, 3.729701151591905E9 cpu, 1.082891004E9 io, 4.7375390812489474E8 network, 2.110233456485609E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 139697.08449552365, cumulative cost = {9.26324117172005E7 rows, 3.705114464720693E9 cpu, 1.082891004E9 io, 4.7040117809700215E8 network, 2.110233456485609E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 770660.6987539436, cumulative cost = {9.249271463270497E7 rows, 3.69278389354063E9 cpu, 1.082891004E9 io, 4.7040117809700215E8 network, 2.020827322408474E8 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 147498.3056648156, cumulative cost = {4.962696319743981E7 rows, 1.9542687043372731E9 cpu, 5.90665044E8 io, 2.490428465743386E8 network, 1.1966026080275631E8 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 147498.3056648156, cumulative cost = {4.9479464891775E7 rows, 1.9542687043372731E9 cpu, 5.90665044E8 io, 2.490428465743386E8 network, 1.1966026080275631E8 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 351334.3595167969, cumulative cost = {3.283751044806718E7 rows, 1.0626981621360468E9 cpu, 3.93780648E8 io, 1.3007846925680625E8 network, 7.944941801815E7 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 351334.3595167969, cumulative cost = {3.2486176088550385E7 rows, 1.0036739897372249E9 cpu, 3.93780648E8 io, 1.2164644462840313E8 network, 7.944941801815E7 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 351334.3595167969, cumulative cost = {3.213484172903359E7 rows, 9.980526399849561E8 cpu, 3.93780648E8 io, 1.2164644462840313E8 network, 5.6964019009075E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 351334.3595167969, cumulative cost = {3.1783507369516794E7 rows, 9.362177927099999E8 cpu, 3.93780648E8 io, 1.1321442E8 network, 5.6964019009075E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1938190.65, cumulative cost = {3.1432173009999998E7 rows, 9.0520674231E8 cpu, 3.93780648E8 io, 1.1321442E8 network, 3.447862E7 memory}
                        :           :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 1938047.4, cumulative cost = {2.949227786E7 rows, 9.0318683166E8 cpu, 3.93769188E8 io, 1.13208864E8 network, 3.4461952E7 memory}
                        :           :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 1322790.66, cumulative cost = {2.222140118E7 rows, 8.6842333246E8 cpu, 2.953242E8 io, 1.132071696E8 network, 3.44580264E7 memory}
                        :           :     :              :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565737885E7 rows, 8.342743302E8 cpu, 1.96878864E8 io, 1.132053708E8 network, 3.4453857199999996E7 memory}
                        :           :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582046175E7 rows, 8.342743302E8 cpu, 1.96878864E8 io, 1.132053708E8 network, 3.4453857199999996E7 memory}
                        :           :     :              :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :           :     :              :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 615246.45, cumulative cost = {5947387.350000001 rows, 1.074633666E8 cpu, 9.8439456E7 io, 1.4765962799999999E7 network, 56.0 memory}
                        :           :     :              :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 615246.45, cumulative cost = {5332140.9 rows, 4101963.0 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
                        :           :     :              :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716894.45 rows, 4101963.0 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
                        :           :     :              :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
                        :           :     :              :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 615257.3925, cumulative cost = {5332872.635 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
                        :           :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615257.3925, cumulative cost = {4717615.2425 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
                        :           :     :              :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
                        :           :     :              :  :           +- Calc(select=[x0, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615256.74, cumulative cost = {5332829.28 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
                        :           :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615256.74, cumulative cost = {4717572.54 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
                        :           :     :              :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :        +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
                        :           :     :              :           +- Calc(select=[x, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                        :           :     :                    :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 623162.393089128, cumulative cost = {4.209509073651121E7 rows, 1.737744528504603E9 cpu, 4.9222596E8 io, 2.213583315226636E8 network, 8.24224714380911E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 623162.393089128, cumulative cost = {4.147192834342208E7 rows, 1.737744528504603E9 cpu, 4.9222596E8 io, 2.213583315226636E8 network, 8.24224714380911E7 memory}
                        :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[hash[X0]]): rowcount = 52773.953927519535, cumulative cost = {3.2645481950332947E7 rows, 1.0154333448731827E9 cpu, 3.93786552E8 io, 1.229189235226636E8 network, 7.946713001815E7 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 52773.953927519535, cumulative cost = {3.2592707996405426E7 rows, 1.0065673206133593E9 cpu, 3.93786552E8 io, 1.2165234862840313E8 network, 7.946713001815E7 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 52773.953927519535, cumulative cost = {3.2539934042477906E7 rows, 1.0065673206133593E9 cpu, 3.93786552E8 io, 1.2165234862840313E8 network, 7.946713001815E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 351334.3595167969, cumulative cost = {3.2486176088550385E7 rows, 1.0036739897372249E9 cpu, 3.93780648E8 io, 1.2164644462840313E8 network, 7.944941801815E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 351334.3595167969, cumulative cost = {3.213484172903359E7 rows, 9.980526399849561E8 cpu, 3.93780648E8 io, 1.2164644462840313E8 network, 5.6964019009075E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 351334.3595167969, cumulative cost = {3.1783507369516794E7 rows, 9.362177927099999E8 cpu, 3.93780648E8 io, 1.1321442E8 network, 5.6964019009075E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 1938190.65, cumulative cost = {3.1432173009999998E7 rows, 9.0520674231E8 cpu, 3.93780648E8 io, 1.1321442E8 network, 3.447862E7 memory}
                        :                          :           :- Union(all=[true], union=[X0, X1]): rowcount = 1938047.4, cumulative cost = {2.949227786E7 rows, 9.0318683166E8 cpu, 3.93769188E8 io, 1.13208864E8 network, 3.4461952E7 memory}
                        :                          :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 1322790.66, cumulative cost = {2.222140118E7 rows, 8.6842333246E8 cpu, 2.953242E8 io, 1.132071696E8 network, 3.44580264E7 memory}
                        :                          :           :  :  :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565737885E7 rows, 8.342743302E8 cpu, 1.96878864E8 io, 1.132053708E8 network, 3.4453857199999996E7 memory}
                        :                          :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582046175E7 rows, 8.342743302E8 cpu, 1.96878864E8 io, 1.132053708E8 network, 3.4453857199999996E7 memory}
                        :                          :           :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :                          :           :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :     +- Exchange(distribution=[hash[y00]]): rowcount = 615246.45, cumulative cost = {5947387.350000001 rows, 1.074633666E8 cpu, 9.8439456E7 io, 1.4765962799999999E7 network, 56.0 memory}
                        :                          :           :  :  :        +- Calc(select=[x, y0 AS y00]): rowcount = 615246.45, cumulative cost = {5332140.9 rows, 4101963.0 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
                        :                          :           :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716894.45 rows, 4101963.0 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
                        :                          :           :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
                        :                          :           :  :  :                 +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :  :                       :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :  :  :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 615257.3925, cumulative cost = {5332872.635 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
                        :                          :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615257.3925, cumulative cost = {4717615.2425 rows, 3.28262116E7 cpu, 9.8445336E7 io, 1798.8000000000002 network, 4169.2 memory}
                        :                          :           :  :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
                        :                          :           :  :           +- Calc(select=[x0, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
                        :                          :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :  +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615256.74, cumulative cost = {5332829.28 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
                        :                          :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right]): rowcount = 615256.74, cumulative cost = {4717572.54 rows, 3.28254518E7 cpu, 9.8444988E7 io, 1694.3999999999999 network, 3925.6 memory}
                        :                          :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :        +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
                        :                          :           :           +- Calc(select=[x, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
                        :                          :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :                          :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                        :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,2,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#2] Exchange(distribution=[hash[X1]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[X0]])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[7])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[1,0,2,0,3,2,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[x0 AS X0, y AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y, x0, y00], build=[right])\n:  :  :     :- [#5] Exchange(distribution=[hash[x]])\n:  :  :     +- [#6] Exchange(distribution=[hash[y00]])\n:  :  +- Calc(select=[x AS X0, y0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])\n:  :        :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:  :        +- [#8] Exchange(distribution=[broadcast])\n:  +- Calc(select=[x0 AS X0, y AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], isBroadcast=[true], build=[right])\n:        :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0], isBroadcast=[true], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[5])
         :        :           :              :- Exchange(distribution=[broadcast])(reuse_id=[10])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[1])
         :        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[2])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[x, y])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])
         :        :           :              :        :- Reused(reference_id=[1])
         :        :           :              :        +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :        :           :              :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[4])
         :        :           :              :- Exchange(distribution=[hash[x]])(reuse_id=[6])
         :        :           :              :  +- Reused(reference_id=[2])
         :        :           :              :- Exchange(distribution=[hash[y00]])
         :        :           :              :  +- Calc(select=[x, y0 AS y00])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :              :        :- Reused(reference_id=[2])
         :        :           :              :        +- Exchange(distribution=[broadcast])
         :        :           :              :           +- Calc(select=[x, y0])
         :        :           :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[left])
         :        :           :              :                 :- Reused(reference_id=[3])
         :        :           :              :                 +- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :                    +- Reused(reference_id=[4])
         :        :           :              :- Reused(reference_id=[2])
         :        :           :              +- Exchange(distribution=[broadcast])
         :        :           :                 +- Calc(select=[x0, y])
         :        :           :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])
         :        :           :                       :- Reused(reference_id=[5])
         :        :           :                       +- Reused(reference_id=[3])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Reused(reference_id=[6])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[13])
         :        :           :                       :  +- Reused(reference_id=[1])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[11])
         :        :           :                             :- Reused(reference_id=[2])
         :        :           :                             +- Reused(reference_id=[3])
         :        :           :- Exchange(distribution=[hash[y]])(reuse_id=[9])
         :        :           :  +- Reused(reference_id=[2])
         :        :           +- Exchange(distribution=[hash[X0]])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[7])
         :        :                    +- Exchange(distribution=[broadcast])(reuse_id=[8])
         :        :                       +- Reused(reference_id=[5])
         :        +- Reused(reference_id=[8])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[17])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], build=[left])\n:        :- [#5] Exchange(distribution=[hash[X1]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Reused(reference_id=[9])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[2])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Calc(select=[y, x0])(reuse_id=[19])
         :              :                 :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :              :                 :           :  :     :- Reused(reference_id=[2])
         :              :                 :           :  :     +- Reused(reference_id=[3])
         :              :                 :           :  :- Reused(reference_id=[3])
         :              :                 :           :  :- Reused(reference_id=[5])
         :              :                 :           :  +- Reused(reference_id=[3])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[18])
         :              :                 :                 :- Reused(reference_id=[1])
         :              :                 :                 +- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[8])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[14])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :           :- Reused(reference_id=[2])
         :              :           :- Reused(reference_id=[10])
         :              :           :- Reused(reference_id=[9])
         :              :           +- Exchange(distribution=[hash[x]])
         :              :              +- Calc(select=[x, y0])(reuse_id=[12])
         :              :                 +- Reused(reference_id=[11])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[10])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[12])
         :              :                 :     +- Reused(reference_id=[10])
         :              :                 +- Reused(reference_id=[13])
         :              :- Exchange(distribution=[hash[X1]])(reuse_id=[20])
         :              :  +- Reused(reference_id=[14])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, X0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :                       :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                       :  +- Reused(reference_id=[2])
         :                       +- Exchange(distribution=[broadcast])
         :                          +- Reused(reference_id=[15])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[2])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[16])
         :- Reused(reference_id=[17])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[x, x0])
         :     +- Reused(reference_id=[18])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[0,1,0,1,2,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#2] Exchange(distribution=[hash[y]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#4] Exchange(distribution=[hash[X1]])\n:        +- [#5] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[X0, y, x], isBroadcast=[true], build=[right])\n      :- Calc(select=[X0, y])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], build=[left])\n      :     :- [#4] Exchange(distribution=[hash[X1]])\n      :     +- [#7] Exchange(distribution=[hash[x]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
                  :- Reused(reference_id=[8])
                  :- Reused(reference_id=[9])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[2])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Calc(select=[X0, X1])
                  :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                  :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
                  :                 :  +- Exchange(distribution=[hash[X0, X1]])
                  :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :                 :        +- Union(all=[true], union=[X0, X1])
                  :                 :           :- Calc(select=[x0 AS X0, y AS X1])
                  :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :                 :           :     :- Reused(reference_id=[19])
                  :                 :           :     +- Reused(reference_id=[8])
                  :                 :           +- Calc(select=[x AS X0, x AS X1])
                  :                 :              +- Reused(reference_id=[5])
                  :                 +- Reused(reference_id=[8])
                  :- Reused(reference_id=[20])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[2])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Reused(reference_id=[21])
                  :- Reused(reference_id=[20])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[2])
                           +- Reused(reference_id=[10])

Job has been submitted with JobID 9e0353d6e4b66faa5173b355c69ab9a8
