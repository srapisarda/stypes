WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, s_3.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN s AS s_3 ON r_2.y = s_3.x UNION (SELECT p19_0.X0 AS X0, p19_0.X1 AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x) UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: d7eb4091_e558_4b85_9191_52b5c737f48b

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0)
            UNION
            (SELECT p19_0.X0 AS X0, r_2.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)),
     p35 AS (SELECT p19_0.X0 AS X0, s_3.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN s AS s_3 ON r_2.y = s_3.x
             UNION
             (SELECT p19_0.X0 AS X0, p19_0.X1 AS X1
              FROM p19 AS p19_0
                       INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x)
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :  :  +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :  :        :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :        :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :  :  +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :     +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :  :        :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :        :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1947.7567239600548, cumulative cost = {2.6587661574221637E7 rows, 7.327728746199427E8 cpu, 3.75837636E8 io, 8.76535737715393E7 network, 6.615085010128161E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 1947.7567239600548, cumulative cost = {2.6585713817497678E7 rows, 7.327417105123593E8 cpu, 3.75837636E8 io, 8.76535737715393E7 network, 6.602619367094817E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1947.7567239600548, cumulative cost = {2.658376606077372E7 rows, 7.323989053289423E8 cpu, 3.75837636E8 io, 8.760682761016425E7 network, 6.602619367094817E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 10745.102972695515, cumulative cost = {2.658181830404976E7 rows, 7.322269836813792E8 cpu, 3.75837636E8 io, 8.760682761016425E7 network, 6.590153724061473E7 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 9101.52242517456, cumulative cost = {1.7599671975718573E7 rows, 5.166467316854384E8 cpu, 2.46449484E8 io, 6.276033059352741E7 network, 4.3885790397319034E7 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 7531.241324219686, cumulative cost = {1.0748724950702338E7 rows, 2.7574669149232405E8 cpu, 1.54030968E8 io, 3.2505986061718725E7 network, 2.6645056291167032E7 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left]): rowcount = 7531.241324219686, cumulative cost = {1.0741193709378118E7 rows, 2.7574669149232405E8 cpu, 1.54030968E8 io, 3.2505986061718725E7 network, 2.6645056291167032E7 memory}
         :  :     :- Exchange(distribution=[broadcast]): rowcount = 10461.340673032488, cumulative cost = {6849095.6810621815 rows, 2.424880725255285E8 cpu, 9.2417928E7 io, 3.0505219907961465E7 network, 1.7240504506152E7 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 10461.340673032488, cumulative cost = {6838634.340389149 rows, 2.408142580178433E8 cpu, 9.2417928E7 io, 3.0254147731808685E7 network, 1.7240504506152E7 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 10461.340673032488, cumulative cost = {6828172.999716117 rows, 2.4064687656707478E8 cpu, 9.2417928E7 io, 3.0254147731808685E7 network, 1.657097870307792E7 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 10461.340673032488, cumulative cost = {6817711.659043085 rows, 2.3880568060862106E8 cpu, 9.2417928E7 io, 3.0003075555655904E7 network, 1.657097870307792E7 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 57711.613253035386, cumulative cost = {6807250.318370053 rows, 2.378822947965725E8 cpu, 9.2417928E7 io, 3.0003075555655904E7 network, 1.5901452900003841E7 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 13427.300049153302, cumulative cost = {5414541.095107697 rows, 1.8316309285691363E8 cpu, 7.3933572E7 io, 2.2887623686843455E7 network, 1.3597940856623545E7 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 5376.790237737357, cumulative cost = {3238993.1754679587 rows, 1.1892411884055421E8 cpu, 4.312776E7 io, 1.5031278438037977E7 network, 8485228.736202545 memory}
         :  :     :              :  :  :- Calc(select=[X0, y0 AS X1]): rowcount = 3118.5801188686783, cumulative cost = {1793198.2626151107 rows, 6.022757572515824E7 cpu, 2.464428E7 io, 7585044.819018989 network, 4404546.768101272 memory}
         :  :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[right]): rowcount = 3118.5801188686783, cumulative cost = {1790079.682496242 rows, 6.022757572515824E7 cpu, 2.464428E7 io, 7585044.819018989 network, 4404546.768101272 memory}
         :  :     :              :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :     :              :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :     :              :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :     :              :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :     :              :  :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :              :  :  :     :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 5782.8, cumulative cost = {351153.39999999997 rows, 1498043.0 cpu, 6161364.0 io, 139375.2 network, 1720.0 memory}
         :  :     :              :  :  :        +- Calc(select=[x, y0]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :  :              :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :              :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :              :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[X0, X1]): rowcount = 2258.2101188686784, cumulative cost = {1440418.1226151106 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2258.2101188686784, cumulative cost = {1438159.912496242 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :  :     :              :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :     :              :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :     :              :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :     :              :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :     :              :  :        :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :              :  :        :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 8050.509811415945, cumulative cost = {2162120.619590585 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], isBroadcast=[true], build=[left]): rowcount = 8050.509811415945, cumulative cost = {2154070.1097791693 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :  :     :              :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Calc(select=[x, X0]): rowcount = 38662.33128364844, cumulative cost = {695204.1634645888 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :  :     :              :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38662.33128364844, cumulative cost = {656541.8321809403 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :  :     :              :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1049.8752243229449, cumulative cost = {361180.5008972919 rows, 769749.2789616765 cpu, 6162120.0 io, 50490.01076750136 network, 134496.02871333694 memory}
         :  :     :              :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :     :              :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :     :              :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :     :              :                          +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :     :              :                             :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :     :              :                             :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :                             :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :                             :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                             :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                             :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                             :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                             :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                             :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                             :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                             :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                             :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                             :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                             :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                             :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                             +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 44284.313203882084, cumulative cost = {1334997.6100093203 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 44284.313203882084, cumulative cost = {1290713.2968054381 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 38529.75469254726, cumulative cost = {733030.983601556 rows, 9174228.288865468 cpu, 1.232358E7 io, 954675.8688124476 network, 145845.7805976497 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 38529.75469254726, cumulative cost = {694501.2289090088 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.75469254726, cumulative cost = {655971.4742164615 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 166.03128364844173, cumulative cost = {360742.7195239143 rows, 646309.2502483395 cpu, 6162804.0 io, 29961.75619131328 network, 136548.02871333694 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 166.03128364844173, cumulative cost = {360576.6882402658 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.03128364844173, cumulative cost = {360410.6569566174 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     +- Calc(select=[x, X1]): rowcount = 39746.934821765426, cumulative cost = {3884566.786991716 rows, 3.2856952762837164E7 cpu, 6.161304E7 io, 2000766.1537572588 network, 8818716.707325213 memory}
         :  :        +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39746.934821765426, cumulative cost = {3844819.8521699505 rows, 3.2856952762837164E7 cpu, 6.161304E7 io, 2000766.1537572588 network, 8818716.707325213 memory}
         :  :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           +- Exchange(distribution=[broadcast]): rowcount = 8280.565478436212, cumulative cost = {3548373.917348185 rows, 3.0737116239009675E7 cpu, 5.5452264E7 io, 2000766.1537572588 network, 8355005.040532785 memory}
         :  :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3540093.351869749 rows, 2.941222576245988E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 8355005.040532785 memory}
         :  :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8280.565478436212, cumulative cost = {3531812.7863913127 rows, 2.9279736714804903E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 7825048.849912867 memory}
         :  :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3523532.2209128765 rows, 2.782235719060013E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7825048.849912867 memory}
         :  :                       +- Union(all=[true], union=[X0, X1]): rowcount = 45681.027637294166, cumulative cost = {3515251.6554344404 rows, 2.7091460748403423E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7295092.659292949 memory}
         :  :                          :- Calc(select=[X10 AS X0, X1]): rowcount = 7012.904128538202, cumulative cost = {1944748.3374411485 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :  :                          :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left]): rowcount = 7012.904128538202, cumulative cost = {1937735.4333126103 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :  :                          :     :- Exchange(distribution=[broadcast]): rowcount = 7199.600389154035, cumulative cost = {1194607.17355252 rows, 1.0019221486973636E7 cpu, 1.8484332E7 io, 706909.821189428 network, 2771516.9324406516 memory}
         :  :                          :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :  :                          :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :  :                          :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :  :                          :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :  :                          :     :              :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                          :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                          :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :  :                          :     :              :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                          :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                          :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                          :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                          :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                          :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                          :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                          :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                          :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                          :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                          :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :                          :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                          :     +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :                          :        +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :                          :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :           +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
         :  :                          :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
         :  :                          :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
         :  :                          :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
         :  :                          :                       +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
         :  :                          :                          :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                          :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                          :                          +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          +- Calc(select=[x AS X0, X1]): rowcount = 38668.12350875596, cumulative cost = {1524822.2903559976 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :  :                             +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38668.12350875596, cumulative cost = {1486154.1668472416 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :  :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                +- Exchange(distribution=[broadcast]): rowcount = 1088.4900583731053, cumulative cost = {1190787.0433384858 rows, 9108616.637161918 cpu, 1.8485016E7 io, 560927.1732506857 network, 2773568.9324406516 memory}
         :  :                                   +- Calc(select=[X0, X1]): rowcount = 1088.4900583731053, cumulative cost = {1189698.5532801126 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :  :                                      +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1088.4900583731053, cumulative cost = {1188610.0632217394 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :  :                                         :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :  :                                         :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :  :                                         :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :  :                                         :        +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :  :                                         :           :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                                         :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                                         :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :  :                                         :           :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                                         :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                                         :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                                         :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                                         :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                                         :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                                         :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                         :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                         :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                         :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                         :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                                         :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                                         :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                                         :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                                         :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                                         :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                                         :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                         :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                         :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                         :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                         :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                         :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                         :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                         :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :                                         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                                         +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :                                            +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 1570.2811009548732, cumulative cost = {6841845.502591059 rows, 2.4089093867068914E8 cpu, 9.2418516E7 io, 3.0254344531808686E7 network, 1.7240734106152E7 memory}
         :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], build=[right]): rowcount = 1570.2811009548732, cumulative cost = {6840275.221490104 rows, 2.4089093867068914E8 cpu, 9.2418516E7 io, 3.0254344531808686E7 network, 1.7240734106152E7 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 10461.340673032488, cumulative cost = {6838634.340389149 rows, 2.408142580178433E8 cpu, 9.2417928E7 io, 3.0254147731808685E7 network, 1.7240504506152E7 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 10461.340673032488, cumulative cost = {6828172.999716117 rows, 2.4064687656707478E8 cpu, 9.2417928E7 io, 3.0254147731808685E7 network, 1.657097870307792E7 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 10461.340673032488, cumulative cost = {6817711.659043085 rows, 2.3880568060862106E8 cpu, 9.2417928E7 io, 3.0003075555655904E7 network, 1.657097870307792E7 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 57711.613253035386, cumulative cost = {6807250.318370053 rows, 2.378822947965725E8 cpu, 9.2417928E7 io, 3.0003075555655904E7 network, 1.5901452900003841E7 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 13427.300049153302, cumulative cost = {5414541.095107697 rows, 1.8316309285691363E8 cpu, 7.3933572E7 io, 2.2887623686843455E7 network, 1.3597940856623545E7 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 5376.790237737357, cumulative cost = {3238993.1754679587 rows, 1.1892411884055421E8 cpu, 4.312776E7 io, 1.5031278438037977E7 network, 8485228.736202545 memory}
         :        :           :  :  :- Calc(select=[X0, y0 AS X1]): rowcount = 3118.5801188686783, cumulative cost = {1793198.2626151107 rows, 6.022757572515824E7 cpu, 2.464428E7 io, 7585044.819018989 network, 4404546.768101272 memory}
         :        :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[right]): rowcount = 3118.5801188686783, cumulative cost = {1790079.682496242 rows, 6.022757572515824E7 cpu, 2.464428E7 io, 7585044.819018989 network, 4404546.768101272 memory}
         :        :           :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :           :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :           :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :           :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :           :  :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :           :  :  :     :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 5782.8, cumulative cost = {351153.39999999997 rows, 1498043.0 cpu, 6161364.0 io, 139375.2 network, 1720.0 memory}
         :        :           :  :  :        +- Calc(select=[x, y0]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :  :              :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :              :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :              :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[X0, X1]): rowcount = 2258.2101188686784, cumulative cost = {1440418.1226151106 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2258.2101188686784, cumulative cost = {1438159.912496242 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :        :           :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :           :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :           :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :           :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :           :  :        :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :           :  :        :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 8050.509811415945, cumulative cost = {2162120.619590585 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], isBroadcast=[true], build=[left]): rowcount = 8050.509811415945, cumulative cost = {2154070.1097791693 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :        :           :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Calc(select=[x, X0]): rowcount = 38662.33128364844, cumulative cost = {695204.1634645888 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38662.33128364844, cumulative cost = {656541.8321809403 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :              +- Exchange(distribution=[broadcast]): rowcount = 1049.8752243229449, cumulative cost = {361180.5008972919 rows, 769749.2789616765 cpu, 6162120.0 io, 50490.01076750136 network, 134496.02871333694 memory}
         :        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :        :           :                             :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :        :           :                             :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :           :                             :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :           :                             :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :                             :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :                             :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :                             :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                             :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                             :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                             :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                             :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :                             :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :                             :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :           :                             :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                             :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                             +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 44284.313203882084, cumulative cost = {1334997.6100093203 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 44284.313203882084, cumulative cost = {1290713.2968054381 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 38529.75469254726, cumulative cost = {733030.983601556 rows, 9174228.288865468 cpu, 1.232358E7 io, 954675.8688124476 network, 145845.7805976497 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 38529.75469254726, cumulative cost = {694501.2289090088 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.75469254726, cumulative cost = {655971.4742164615 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 166.03128364844173, cumulative cost = {360742.7195239143 rows, 646309.2502483395 cpu, 6162804.0 io, 29961.75619131328 network, 136548.02871333694 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 166.03128364844173, cumulative cost = {360576.6882402658 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.03128364844173, cumulative cost = {360410.6569566174 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 1643.5805475209547, cumulative cost = {8971401.225358495 rows, 2.155695068929681E8 cpu, 1.29388152E8 io, 2.484649701663685E7 network, 2.2015746843295693E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1643.5805475209547, cumulative cost = {8969757.644810975 rows, 2.155695068929681E8 cpu, 1.29388152E8 io, 2.484649701663685E7 network, 2.2015746843295693E7 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9706.568828374266, cumulative cost = {5424154.807928408 rows, 1.8579370140599713E8 cpu, 7.3935204E7 io, 2.3013765198639687E7 network, 1.3588654252744045E7 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9706.568828374266, cumulative cost = {5414448.239100033 rows, 1.8563839630474314E8 cpu, 7.3935204E7 io, 2.3013765198639687E7 network, 1.2967433847728092E7 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9706.568828374266, cumulative cost = {5404741.670271659 rows, 1.8393004019094926E8 cpu, 7.3935204E7 io, 2.2780807546758704E7 network, 1.2967433847728092E7 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 53547.79695504566, cumulative cost = {5395035.101443285 rows, 1.8307327543966854E8 cpu, 7.3935204E7 io, 2.2780807546758704E7 network, 1.234621344271214E7 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 52335.05518721536, cumulative cost = {3538259.6942116767 rows, 1.1949183709647769E8 cpu, 4.9290264E7 io, 1.4973704308720727E7 network, 7423046.363566561 memory}
               :           :  :- Calc(select=[x AS X0, X1]): rowcount = 44284.343487175654, cumulative cost = {1329397.1324974215 rows, 5.493713043960676E7 cpu, 1.8484404E7 io, 7116316.364184562 network, 2306715.2428445946 memory}
               :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 44284.343487175654, cumulative cost = {1285112.7890102458 rows, 5.493713043960676E7 cpu, 1.8484404E7 io, 7116316.364184562 network, 2306715.2428445946 memory}
               :           :  :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :     +- Exchange(distribution=[hash[x]]): rowcount = 38529.95658117102, cumulative cost = {727430.4455230703 rows, 9449866.786957398 cpu, 1.2323628E7 io, 955540.3641845626 network, 149037.67429901776 memory}
               :           :  :        +- Calc(select=[x, X1]): rowcount = 38529.95658117102, cumulative cost = {688900.4889418993 rows, 2976834.081320666 cpu, 1.2323628E7 io, 30821.40623645814 network, 149037.67429901776 memory}
               :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.95658117102, cumulative cost = {650370.5323607282 rows, 2976834.081320666 cpu, 1.2323628E7 io, 30821.40623645814 network, 149037.67429901776 memory}
               :           :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 167.37720780683773, cumulative cost = {355141.5757795572 rows, 921903.063658211 cpu, 6162852.0 io, 30821.40623645814 network, 139664.55066183486 memory}
               :           :  :                 +- Calc(select=[X0, X1]): rowcount = 167.37720780683773, cumulative cost = {354974.19857175037 rows, 895122.710409117 cpu, 6162852.0 io, 26804.353249094034 network, 139664.55066183486 memory}
               :           :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 167.37720780683773, cumulative cost = {354806.8213639435 rows, 895122.710409117 cpu, 6162852.0 io, 26804.353249094034 network, 139664.55066183486 memory}
               :           :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :           :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :           :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :           :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :           :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :                       +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[X0, X10 AS X1]): rowcount = 8050.711700039704, cumulative cost = {2156527.50652704 rows, 6.45023716016837E7 cpu, 3.080586E7 io, 7857387.944536165 network, 5116331.120721966 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left]): rowcount = 8050.711700039704, cumulative cost = {2148476.7948270002 rows, 6.45023716016837E7 cpu, 3.080586E7 io, 7857387.944536165 network, 5116331.120721966 memory}
               :           :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
               :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
               :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
               :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
               :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
               :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :           :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :        +- Calc(select=[x, X1]): rowcount = 38663.67720780684, cumulative cost = {689610.6466237959 rows, 3108554.398736411 cpu, 1.2322944E7 io, 51532.70649818807 network, 196908.0415763876 memory}
               :           :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38663.67720780684, cumulative cost = {650946.969415989 rows, 3108554.398736411 cpu, 1.2322944E7 io, 51532.70649818807 network, 196908.0415763876 memory}
               :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :              +- Exchange(distribution=[broadcast]): rowcount = 1058.8480520455848, cumulative cost = {355584.2922081822 rows, 1046491.614320046 cpu, 6162168.0 io, 51532.70649818807 network, 137612.55066183486 memory}
               :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :           :                             :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :                             :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :                             :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :                             :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :                             :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                             :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :                             :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :                             :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :                             +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, y AS X1]): rowcount = 1212.7417678303016, cumulative cost = {1803227.6102765624 rows, 6.3527890546235785E7 cpu, 2.464494E7 io, 7807103.238037977 network, 4923167.079145579 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[X0, y, x], isBroadcast=[true], build=[right]): rowcount = 1212.7417678303016, cumulative cost = {1802014.8685087322 rows, 6.3527890546235785E7 cpu, 2.464494E7 io, 7807103.238037977 network, 4923167.079145579 memory}
               :                 :- Calc(select=[X0, y]): rowcount = 8027.945118868678, cumulative cost = {1800688.126740902 rows, 6.3454090985284835E7 cpu, 2.4644256E7 io, 7806419.238037977 network, 4921115.079145579 memory}
               :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[left]): rowcount = 8027.945118868678, cumulative cost = {1792660.1816220332 rows, 6.3454090985284835E7 cpu, 2.4644256E7 io, 7806419.238037977 network, 4921115.079145579 memory}
               :                 :     :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
               :                 :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
               :                 :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
               :                 :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
               :                 :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
               :                 :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                 :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                 :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                 :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                 :     :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :     +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :        +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :           +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 1250.6348217654318, cumulative cost = {3543959.2563350457 rows, 2.968814785776984E7 cpu, 5.5452948E7 io, 1832731.8179971601 network, 8357057.040532785 memory}
                  +- Calc(select=[X0, X1]): rowcount = 1250.6348217654318, cumulative cost = {3542708.62151328 rows, 2.948804628628737E7 cpu, 5.5452948E7 io, 1802716.5822747897 network, 8357057.040532785 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1250.6348217654318, cumulative cost = {3541457.9866915145 rows, 2.948804628628737E7 cpu, 5.5452948E7 io, 1802716.5822747897 network, 8357057.040532785 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3540093.351869749 rows, 2.941222576245988E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 8355005.040532785 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8280.565478436212, cumulative cost = {3531812.7863913127 rows, 2.9279736714804903E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 7825048.849912867 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3523532.2209128765 rows, 2.782235719060013E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7825048.849912867 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 45681.027637294166, cumulative cost = {3515251.6554344404 rows, 2.7091460748403423E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7295092.659292949 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 7012.904128538202, cumulative cost = {1944748.3374411485 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left]): rowcount = 7012.904128538202, cumulative cost = {1937735.4333126103 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
                        :           :     :- Exchange(distribution=[broadcast]): rowcount = 7199.600389154035, cumulative cost = {1194607.17355252 rows, 1.0019221486973636E7 cpu, 1.8484332E7 io, 706909.821189428 network, 2771516.9324406516 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
                        :           :        +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
                        :           :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :           +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
                        :           :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
                        :           :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
                        :           :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
                        :           :                       +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
                        :           :                          :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :                          +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 38668.12350875596, cumulative cost = {1524822.2903559976 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38668.12350875596, cumulative cost = {1486154.1668472416 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
                        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 1088.4900583731053, cumulative cost = {1190787.0433384858 rows, 9108616.637161918 cpu, 1.8485016E7 io, 560927.1732506857 network, 2773568.9324406516 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 1088.4900583731053, cumulative cost = {1189698.5532801126 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1088.4900583731053, cumulative cost = {1188610.0632217394 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,1,0,1,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left])\n:  :     :- [#2] Exchange(distribution=[broadcast])\n:  :     +- Calc(select=[x, X1])\n:  :        +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:  :           :- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :           +- [#7] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], build=[right])\n:        :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#5] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left])\n:     :- [#1] Exchange(distribution=[broadcast])\n:     +- Calc(select=[y, X1])\n:        +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:           :- [#4] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:           +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#2] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#3] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[broadcast])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[4])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[8])
         :        :           :              :        :           :     :- Reused(reference_id=[1])
         :        :           :              :        :           :     +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :              :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[18])
         :        :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[5])
         :        :           :              :        +- Reused(reference_id=[2])
         :        :           :              :- Reused(reference_id=[3])
         :        :           :              +- Exchange(distribution=[broadcast])(reuse_id=[9])
         :        :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           :- Exchange(distribution=[broadcast])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :           :        :- Reused(reference_id=[4])
         :        :           :        +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :           :           +- Reused(reference_id=[5])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :                 +- Exchange(distribution=[hash[X0, X1]])
         :        :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :                       +- Union(all=[true], union=[X0, X1])
         :        :                          :- Calc(select=[x AS X0, x AS X1])
         :        :                          :  +- Reused(reference_id=[6])
         :        :                          +- Calc(select=[y0 AS X0, x AS X1])
         :        :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[11])
         :        :                                :- Reused(reference_id=[1])
         :        :                                +- Reused(reference_id=[2])
         :        +- Reused(reference_id=[7])
         :- Exchange(distribution=[broadcast])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,1,0,1,0,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[X0, y0 AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[right])\n:  :  :     :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :     +- [#5] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :        :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :        +- [#7] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], isBroadcast=[true], build=[left])\n:        :- [#3] Exchange(distribution=[broadcast])\n:        +- Calc(select=[x, X0])\n:           +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:              :- [#8] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:              +- [#9] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[10])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[14])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Calc(select=[y, x0])(reuse_id=[17])
         :              :                 :           :  :  +- Reused(reference_id=[8])
         :              :                 :           :  :- Reused(reference_id=[2])
         :              :                 :           :  :- Reused(reference_id=[5])
         :              :                 :           :  +- Reused(reference_id=[2])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[16])
         :              :                 :                 :- Reused(reference_id=[6])
         :              :                 :                 +- Reused(reference_id=[2])
         :              :                 +- Reused(reference_id=[7])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[19])
         :              :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[12])
         :              :     +- Exchange(distribution=[hash[X0, X1]])
         :              :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :              :- Reused(reference_id=[1])
         :              :              :- Reused(reference_id=[9])
         :              :              :- Reused(reference_id=[10])
         :              :              +- Exchange(distribution=[hash[x]])
         :              :                 +- Calc(select=[x, y0])(reuse_id=[13])
         :              :                    +- Reused(reference_id=[11])
         :              :- Reused(reference_id=[12])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[13])
         :              :        +- Reused(reference_id=[9])
         :              :- Reused(reference_id=[12])
         :              :- Reused(reference_id=[9])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Reused(reference_id=[14])
         :- Reused(reference_id=[15])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[x, x0])
         :     +- Reused(reference_id=[16])
         :- Exchange(distribution=[hash[X0, X1]])
         :  +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :     +- MultipleInput(readOrder=[0,1,0,1,1,2,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#2] Exchange(distribution=[hash[y]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left])\n:        :- [#4] Exchange(distribution=[broadcast])\n:        +- Calc(select=[x, X1])\n:           +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:              :- [#7] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:              +- [#8] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[X0, y, x], isBroadcast=[true], build=[right])\n      :- Calc(select=[X0, y])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], isBroadcast=[true], build=[left])\n      :     :- [#4] Exchange(distribution=[broadcast])\n      :     +- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[7])
         :        :- Reused(reference_id=[10])
         :        :- Exchange(distribution=[hash[x]])
         :        :  +- Calc(select=[x, X1])
         :        :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :        :  +- Reused(reference_id=[1])
         :        :        +- Exchange(distribution=[broadcast])
         :        :           +- Calc(select=[X0, X1])
         :        :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[20])
         :        :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :                 :        +- Union(all=[true], union=[X0, X1])
         :        :                 :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :        :                 :           :     :- Reused(reference_id=[17])
         :        :                 :           :     +- Reused(reference_id=[7])
         :        :                 :           +- Reused(reference_id=[18])
         :        :                 +- Reused(reference_id=[7])
         :        :- Reused(reference_id=[19])
         :        :- Reused(reference_id=[19])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Calc(select=[x, y])
         :        :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :        :        :- Reused(reference_id=[1])
         :        :        +- Reused(reference_id=[9])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Reused(reference_id=[20])
         :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         +- Exchange(distribution=[broadcast])
            +- Reused(reference_id=[21])

Job has been submitted with JobID 396c6bd49b5766c9e3dea8e5228865e9
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, s_3.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN s AS s_3 ON r_2.y = s_3.x UNION (SELECT p19_0.X0 AS X0, p19_0.X1 AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x) UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 5f9209c5_7482_4819_b742_1f0b24b2a4b0

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0)
            UNION
            (SELECT p19_0.X0 AS X0, r_2.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)),
     p35 AS (SELECT p19_0.X0 AS X0, s_3.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN s AS s_3 ON r_2.y = s_3.x
             UNION
             (SELECT p19_0.X0 AS X0, p19_0.X1 AS X1
              FROM p19 AS p19_0
                       INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x)
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :  :  +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :  :        :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :        :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :  :  +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :     +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :  :        :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :        :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1947.7567239600548, cumulative cost = {2.6587661574221637E7 rows, 7.327728746199427E8 cpu, 3.75837636E8 io, 8.76535737715393E7 network, 6.615085010128161E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 1947.7567239600548, cumulative cost = {2.6585713817497678E7 rows, 7.327417105123593E8 cpu, 3.75837636E8 io, 8.76535737715393E7 network, 6.602619367094817E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1947.7567239600548, cumulative cost = {2.658376606077372E7 rows, 7.323989053289423E8 cpu, 3.75837636E8 io, 8.760682761016425E7 network, 6.602619367094817E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 10745.102972695515, cumulative cost = {2.658181830404976E7 rows, 7.322269836813792E8 cpu, 3.75837636E8 io, 8.760682761016425E7 network, 6.590153724061473E7 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 9101.52242517456, cumulative cost = {1.7599671975718573E7 rows, 5.166467316854384E8 cpu, 2.46449484E8 io, 6.276033059352741E7 network, 4.3885790397319034E7 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 7531.241324219686, cumulative cost = {1.0748724950702338E7 rows, 2.7574669149232405E8 cpu, 1.54030968E8 io, 3.2505986061718725E7 network, 2.6645056291167032E7 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left]): rowcount = 7531.241324219686, cumulative cost = {1.0741193709378118E7 rows, 2.7574669149232405E8 cpu, 1.54030968E8 io, 3.2505986061718725E7 network, 2.6645056291167032E7 memory}
         :  :     :- Exchange(distribution=[broadcast]): rowcount = 10461.340673032488, cumulative cost = {6849095.6810621815 rows, 2.424880725255285E8 cpu, 9.2417928E7 io, 3.0505219907961465E7 network, 1.7240504506152E7 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 10461.340673032488, cumulative cost = {6838634.340389149 rows, 2.408142580178433E8 cpu, 9.2417928E7 io, 3.0254147731808685E7 network, 1.7240504506152E7 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 10461.340673032488, cumulative cost = {6828172.999716117 rows, 2.4064687656707478E8 cpu, 9.2417928E7 io, 3.0254147731808685E7 network, 1.657097870307792E7 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 10461.340673032488, cumulative cost = {6817711.659043085 rows, 2.3880568060862106E8 cpu, 9.2417928E7 io, 3.0003075555655904E7 network, 1.657097870307792E7 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 57711.613253035386, cumulative cost = {6807250.318370053 rows, 2.378822947965725E8 cpu, 9.2417928E7 io, 3.0003075555655904E7 network, 1.5901452900003841E7 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 13427.300049153302, cumulative cost = {5414541.095107697 rows, 1.8316309285691363E8 cpu, 7.3933572E7 io, 2.2887623686843455E7 network, 1.3597940856623545E7 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 5376.790237737357, cumulative cost = {3238993.1754679587 rows, 1.1892411884055421E8 cpu, 4.312776E7 io, 1.5031278438037977E7 network, 8485228.736202545 memory}
         :  :     :              :  :  :- Calc(select=[X0, y0 AS X1]): rowcount = 3118.5801188686783, cumulative cost = {1793198.2626151107 rows, 6.022757572515824E7 cpu, 2.464428E7 io, 7585044.819018989 network, 4404546.768101272 memory}
         :  :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[right]): rowcount = 3118.5801188686783, cumulative cost = {1790079.682496242 rows, 6.022757572515824E7 cpu, 2.464428E7 io, 7585044.819018989 network, 4404546.768101272 memory}
         :  :     :              :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :     :              :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :     :              :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :     :              :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :     :              :  :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :              :  :  :     :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 5782.8, cumulative cost = {351153.39999999997 rows, 1498043.0 cpu, 6161364.0 io, 139375.2 network, 1720.0 memory}
         :  :     :              :  :  :        +- Calc(select=[x, y0]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :  :              :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :              :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :              :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[X0, X1]): rowcount = 2258.2101188686784, cumulative cost = {1440418.1226151106 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2258.2101188686784, cumulative cost = {1438159.912496242 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :  :     :              :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :     :              :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :     :              :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :     :              :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :     :              :  :        :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :              :  :        :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 8050.509811415945, cumulative cost = {2162120.619590585 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], isBroadcast=[true], build=[left]): rowcount = 8050.509811415945, cumulative cost = {2154070.1097791693 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :  :     :              :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Calc(select=[x, X0]): rowcount = 38662.33128364844, cumulative cost = {695204.1634645888 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :  :     :              :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38662.33128364844, cumulative cost = {656541.8321809403 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :  :     :              :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1049.8752243229449, cumulative cost = {361180.5008972919 rows, 769749.2789616765 cpu, 6162120.0 io, 50490.01076750136 network, 134496.02871333694 memory}
         :  :     :              :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :     :              :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :     :              :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :     :              :                          +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :     :              :                             :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :     :              :                             :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :                             :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :                             :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                             :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                             :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                             :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                             :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                             :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                             :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                             :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                             :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                             :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                             :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                             :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                             +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 44284.313203882084, cumulative cost = {1334997.6100093203 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 44284.313203882084, cumulative cost = {1290713.2968054381 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 38529.75469254726, cumulative cost = {733030.983601556 rows, 9174228.288865468 cpu, 1.232358E7 io, 954675.8688124476 network, 145845.7805976497 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 38529.75469254726, cumulative cost = {694501.2289090088 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.75469254726, cumulative cost = {655971.4742164615 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 166.03128364844173, cumulative cost = {360742.7195239143 rows, 646309.2502483395 cpu, 6162804.0 io, 29961.75619131328 network, 136548.02871333694 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 166.03128364844173, cumulative cost = {360576.6882402658 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.03128364844173, cumulative cost = {360410.6569566174 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     +- Calc(select=[x, X1]): rowcount = 39746.934821765426, cumulative cost = {3884566.786991716 rows, 3.2856952762837164E7 cpu, 6.161304E7 io, 2000766.1537572588 network, 8818716.707325213 memory}
         :  :        +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39746.934821765426, cumulative cost = {3844819.8521699505 rows, 3.2856952762837164E7 cpu, 6.161304E7 io, 2000766.1537572588 network, 8818716.707325213 memory}
         :  :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           +- Exchange(distribution=[broadcast]): rowcount = 8280.565478436212, cumulative cost = {3548373.917348185 rows, 3.0737116239009675E7 cpu, 5.5452264E7 io, 2000766.1537572588 network, 8355005.040532785 memory}
         :  :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3540093.351869749 rows, 2.941222576245988E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 8355005.040532785 memory}
         :  :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8280.565478436212, cumulative cost = {3531812.7863913127 rows, 2.9279736714804903E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 7825048.849912867 memory}
         :  :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3523532.2209128765 rows, 2.782235719060013E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7825048.849912867 memory}
         :  :                       +- Union(all=[true], union=[X0, X1]): rowcount = 45681.027637294166, cumulative cost = {3515251.6554344404 rows, 2.7091460748403423E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7295092.659292949 memory}
         :  :                          :- Calc(select=[X10 AS X0, X1]): rowcount = 7012.904128538202, cumulative cost = {1944748.3374411485 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :  :                          :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left]): rowcount = 7012.904128538202, cumulative cost = {1937735.4333126103 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :  :                          :     :- Exchange(distribution=[broadcast]): rowcount = 7199.600389154035, cumulative cost = {1194607.17355252 rows, 1.0019221486973636E7 cpu, 1.8484332E7 io, 706909.821189428 network, 2771516.9324406516 memory}
         :  :                          :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :  :                          :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :  :                          :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :  :                          :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :  :                          :     :              :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                          :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                          :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :  :                          :     :              :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                          :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                          :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                          :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                          :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                          :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                          :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                          :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                          :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                          :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                          :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :                          :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                          :     +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :                          :        +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :                          :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :           +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
         :  :                          :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
         :  :                          :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
         :  :                          :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
         :  :                          :                       +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
         :  :                          :                          :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                          :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                          :                          +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          +- Calc(select=[x AS X0, X1]): rowcount = 38668.12350875596, cumulative cost = {1524822.2903559976 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :  :                             +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38668.12350875596, cumulative cost = {1486154.1668472416 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :  :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                +- Exchange(distribution=[broadcast]): rowcount = 1088.4900583731053, cumulative cost = {1190787.0433384858 rows, 9108616.637161918 cpu, 1.8485016E7 io, 560927.1732506857 network, 2773568.9324406516 memory}
         :  :                                   +- Calc(select=[X0, X1]): rowcount = 1088.4900583731053, cumulative cost = {1189698.5532801126 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :  :                                      +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1088.4900583731053, cumulative cost = {1188610.0632217394 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :  :                                         :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :  :                                         :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :  :                                         :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :  :                                         :        +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :  :                                         :           :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                                         :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                                         :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :  :                                         :           :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                                         :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                                         :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                                         :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                                         :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                                         :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                                         :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                         :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                         :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                         :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                         :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                                         :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                                         :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                                         :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                                         :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                                         :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                                         :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                         :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                         :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                         :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                         :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                         :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                         :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                         :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :                                         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                                         +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :                                            +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 1570.2811009548732, cumulative cost = {6841845.502591059 rows, 2.4089093867068914E8 cpu, 9.2418516E7 io, 3.0254344531808686E7 network, 1.7240734106152E7 memory}
         :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], build=[right]): rowcount = 1570.2811009548732, cumulative cost = {6840275.221490104 rows, 2.4089093867068914E8 cpu, 9.2418516E7 io, 3.0254344531808686E7 network, 1.7240734106152E7 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 10461.340673032488, cumulative cost = {6838634.340389149 rows, 2.408142580178433E8 cpu, 9.2417928E7 io, 3.0254147731808685E7 network, 1.7240504506152E7 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 10461.340673032488, cumulative cost = {6828172.999716117 rows, 2.4064687656707478E8 cpu, 9.2417928E7 io, 3.0254147731808685E7 network, 1.657097870307792E7 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 10461.340673032488, cumulative cost = {6817711.659043085 rows, 2.3880568060862106E8 cpu, 9.2417928E7 io, 3.0003075555655904E7 network, 1.657097870307792E7 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 57711.613253035386, cumulative cost = {6807250.318370053 rows, 2.378822947965725E8 cpu, 9.2417928E7 io, 3.0003075555655904E7 network, 1.5901452900003841E7 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 13427.300049153302, cumulative cost = {5414541.095107697 rows, 1.8316309285691363E8 cpu, 7.3933572E7 io, 2.2887623686843455E7 network, 1.3597940856623545E7 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 5376.790237737357, cumulative cost = {3238993.1754679587 rows, 1.1892411884055421E8 cpu, 4.312776E7 io, 1.5031278438037977E7 network, 8485228.736202545 memory}
         :        :           :  :  :- Calc(select=[X0, y0 AS X1]): rowcount = 3118.5801188686783, cumulative cost = {1793198.2626151107 rows, 6.022757572515824E7 cpu, 2.464428E7 io, 7585044.819018989 network, 4404546.768101272 memory}
         :        :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[right]): rowcount = 3118.5801188686783, cumulative cost = {1790079.682496242 rows, 6.022757572515824E7 cpu, 2.464428E7 io, 7585044.819018989 network, 4404546.768101272 memory}
         :        :           :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :           :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :           :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :           :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :           :  :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :           :  :  :     :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 5782.8, cumulative cost = {351153.39999999997 rows, 1498043.0 cpu, 6161364.0 io, 139375.2 network, 1720.0 memory}
         :        :           :  :  :        +- Calc(select=[x, y0]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :  :              :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :              :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :              :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[X0, X1]): rowcount = 2258.2101188686784, cumulative cost = {1440418.1226151106 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2258.2101188686784, cumulative cost = {1438159.912496242 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :        :           :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :           :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :           :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :           :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :           :  :        :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :           :  :        :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 8050.509811415945, cumulative cost = {2162120.619590585 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], isBroadcast=[true], build=[left]): rowcount = 8050.509811415945, cumulative cost = {2154070.1097791693 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :        :           :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Calc(select=[x, X0]): rowcount = 38662.33128364844, cumulative cost = {695204.1634645888 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38662.33128364844, cumulative cost = {656541.8321809403 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :              +- Exchange(distribution=[broadcast]): rowcount = 1049.8752243229449, cumulative cost = {361180.5008972919 rows, 769749.2789616765 cpu, 6162120.0 io, 50490.01076750136 network, 134496.02871333694 memory}
         :        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :        :           :                             :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :        :           :                             :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :           :                             :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :           :                             :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :                             :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :                             :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :                             :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                             :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                             :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                             :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                             :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :                             :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :                             :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :           :                             :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                             :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                             +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 44284.313203882084, cumulative cost = {1334997.6100093203 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 44284.313203882084, cumulative cost = {1290713.2968054381 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 38529.75469254726, cumulative cost = {733030.983601556 rows, 9174228.288865468 cpu, 1.232358E7 io, 954675.8688124476 network, 145845.7805976497 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 38529.75469254726, cumulative cost = {694501.2289090088 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.75469254726, cumulative cost = {655971.4742164615 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 166.03128364844173, cumulative cost = {360742.7195239143 rows, 646309.2502483395 cpu, 6162804.0 io, 29961.75619131328 network, 136548.02871333694 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 166.03128364844173, cumulative cost = {360576.6882402658 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.03128364844173, cumulative cost = {360410.6569566174 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 1643.5805475209547, cumulative cost = {8971401.225358495 rows, 2.155695068929681E8 cpu, 1.29388152E8 io, 2.484649701663685E7 network, 2.2015746843295693E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1643.5805475209547, cumulative cost = {8969757.644810975 rows, 2.155695068929681E8 cpu, 1.29388152E8 io, 2.484649701663685E7 network, 2.2015746843295693E7 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9706.568828374266, cumulative cost = {5424154.807928408 rows, 1.8579370140599713E8 cpu, 7.3935204E7 io, 2.3013765198639687E7 network, 1.3588654252744045E7 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9706.568828374266, cumulative cost = {5414448.239100033 rows, 1.8563839630474314E8 cpu, 7.3935204E7 io, 2.3013765198639687E7 network, 1.2967433847728092E7 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9706.568828374266, cumulative cost = {5404741.670271659 rows, 1.8393004019094926E8 cpu, 7.3935204E7 io, 2.2780807546758704E7 network, 1.2967433847728092E7 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 53547.79695504566, cumulative cost = {5395035.101443285 rows, 1.8307327543966854E8 cpu, 7.3935204E7 io, 2.2780807546758704E7 network, 1.234621344271214E7 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 52335.05518721536, cumulative cost = {3538259.6942116767 rows, 1.1949183709647769E8 cpu, 4.9290264E7 io, 1.4973704308720727E7 network, 7423046.363566561 memory}
               :           :  :- Calc(select=[x AS X0, X1]): rowcount = 44284.343487175654, cumulative cost = {1329397.1324974215 rows, 5.493713043960676E7 cpu, 1.8484404E7 io, 7116316.364184562 network, 2306715.2428445946 memory}
               :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 44284.343487175654, cumulative cost = {1285112.7890102458 rows, 5.493713043960676E7 cpu, 1.8484404E7 io, 7116316.364184562 network, 2306715.2428445946 memory}
               :           :  :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :     +- Exchange(distribution=[hash[x]]): rowcount = 38529.95658117102, cumulative cost = {727430.4455230703 rows, 9449866.786957398 cpu, 1.2323628E7 io, 955540.3641845626 network, 149037.67429901776 memory}
               :           :  :        +- Calc(select=[x, X1]): rowcount = 38529.95658117102, cumulative cost = {688900.4889418993 rows, 2976834.081320666 cpu, 1.2323628E7 io, 30821.40623645814 network, 149037.67429901776 memory}
               :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.95658117102, cumulative cost = {650370.5323607282 rows, 2976834.081320666 cpu, 1.2323628E7 io, 30821.40623645814 network, 149037.67429901776 memory}
               :           :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 167.37720780683773, cumulative cost = {355141.5757795572 rows, 921903.063658211 cpu, 6162852.0 io, 30821.40623645814 network, 139664.55066183486 memory}
               :           :  :                 +- Calc(select=[X0, X1]): rowcount = 167.37720780683773, cumulative cost = {354974.19857175037 rows, 895122.710409117 cpu, 6162852.0 io, 26804.353249094034 network, 139664.55066183486 memory}
               :           :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 167.37720780683773, cumulative cost = {354806.8213639435 rows, 895122.710409117 cpu, 6162852.0 io, 26804.353249094034 network, 139664.55066183486 memory}
               :           :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :           :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :           :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :           :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :           :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :                       +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[X0, X10 AS X1]): rowcount = 8050.711700039704, cumulative cost = {2156527.50652704 rows, 6.45023716016837E7 cpu, 3.080586E7 io, 7857387.944536165 network, 5116331.120721966 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left]): rowcount = 8050.711700039704, cumulative cost = {2148476.7948270002 rows, 6.45023716016837E7 cpu, 3.080586E7 io, 7857387.944536165 network, 5116331.120721966 memory}
               :           :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
               :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
               :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
               :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
               :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
               :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :           :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :        +- Calc(select=[x, X1]): rowcount = 38663.67720780684, cumulative cost = {689610.6466237959 rows, 3108554.398736411 cpu, 1.2322944E7 io, 51532.70649818807 network, 196908.0415763876 memory}
               :           :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38663.67720780684, cumulative cost = {650946.969415989 rows, 3108554.398736411 cpu, 1.2322944E7 io, 51532.70649818807 network, 196908.0415763876 memory}
               :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :              +- Exchange(distribution=[broadcast]): rowcount = 1058.8480520455848, cumulative cost = {355584.2922081822 rows, 1046491.614320046 cpu, 6162168.0 io, 51532.70649818807 network, 137612.55066183486 memory}
               :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :           :                             :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :                             :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :                             :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :                             :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :                             :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                             :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :                             :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :                             :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :                             +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, y AS X1]): rowcount = 1212.7417678303016, cumulative cost = {1803227.6102765624 rows, 6.3527890546235785E7 cpu, 2.464494E7 io, 7807103.238037977 network, 4923167.079145579 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[X0, y, x], isBroadcast=[true], build=[right]): rowcount = 1212.7417678303016, cumulative cost = {1802014.8685087322 rows, 6.3527890546235785E7 cpu, 2.464494E7 io, 7807103.238037977 network, 4923167.079145579 memory}
               :                 :- Calc(select=[X0, y]): rowcount = 8027.945118868678, cumulative cost = {1800688.126740902 rows, 6.3454090985284835E7 cpu, 2.4644256E7 io, 7806419.238037977 network, 4921115.079145579 memory}
               :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[left]): rowcount = 8027.945118868678, cumulative cost = {1792660.1816220332 rows, 6.3454090985284835E7 cpu, 2.4644256E7 io, 7806419.238037977 network, 4921115.079145579 memory}
               :                 :     :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
               :                 :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
               :                 :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
               :                 :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
               :                 :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
               :                 :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                 :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                 :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                 :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                 :     :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :     +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :        +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :           +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 1250.6348217654318, cumulative cost = {3543959.2563350457 rows, 2.968814785776984E7 cpu, 5.5452948E7 io, 1832731.8179971601 network, 8357057.040532785 memory}
                  +- Calc(select=[X0, X1]): rowcount = 1250.6348217654318, cumulative cost = {3542708.62151328 rows, 2.948804628628737E7 cpu, 5.5452948E7 io, 1802716.5822747897 network, 8357057.040532785 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1250.6348217654318, cumulative cost = {3541457.9866915145 rows, 2.948804628628737E7 cpu, 5.5452948E7 io, 1802716.5822747897 network, 8357057.040532785 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3540093.351869749 rows, 2.941222576245988E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 8355005.040532785 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8280.565478436212, cumulative cost = {3531812.7863913127 rows, 2.9279736714804903E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 7825048.849912867 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3523532.2209128765 rows, 2.782235719060013E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7825048.849912867 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 45681.027637294166, cumulative cost = {3515251.6554344404 rows, 2.7091460748403423E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7295092.659292949 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 7012.904128538202, cumulative cost = {1944748.3374411485 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left]): rowcount = 7012.904128538202, cumulative cost = {1937735.4333126103 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
                        :           :     :- Exchange(distribution=[broadcast]): rowcount = 7199.600389154035, cumulative cost = {1194607.17355252 rows, 1.0019221486973636E7 cpu, 1.8484332E7 io, 706909.821189428 network, 2771516.9324406516 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
                        :           :        +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
                        :           :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :           +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
                        :           :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
                        :           :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
                        :           :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
                        :           :                       +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
                        :           :                          :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :                          +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 38668.12350875596, cumulative cost = {1524822.2903559976 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38668.12350875596, cumulative cost = {1486154.1668472416 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
                        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 1088.4900583731053, cumulative cost = {1190787.0433384858 rows, 9108616.637161918 cpu, 1.8485016E7 io, 560927.1732506857 network, 2773568.9324406516 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 1088.4900583731053, cumulative cost = {1189698.5532801126 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1088.4900583731053, cumulative cost = {1188610.0632217394 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,1,0,1,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left])\n:  :     :- [#2] Exchange(distribution=[broadcast])\n:  :     +- Calc(select=[x, X1])\n:  :        +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:  :           :- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :           +- [#7] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], build=[right])\n:        :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#5] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left])\n:     :- [#1] Exchange(distribution=[broadcast])\n:     +- Calc(select=[y, X1])\n:        +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:           :- [#4] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:           +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#2] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#3] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[broadcast])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[4])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[8])
         :        :           :              :        :           :     :- Reused(reference_id=[1])
         :        :           :              :        :           :     +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :              :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[18])
         :        :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[5])
         :        :           :              :        +- Reused(reference_id=[2])
         :        :           :              :- Reused(reference_id=[3])
         :        :           :              +- Exchange(distribution=[broadcast])(reuse_id=[9])
         :        :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           :- Exchange(distribution=[broadcast])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :           :        :- Reused(reference_id=[4])
         :        :           :        +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :           :           +- Reused(reference_id=[5])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :                 +- Exchange(distribution=[hash[X0, X1]])
         :        :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :                       +- Union(all=[true], union=[X0, X1])
         :        :                          :- Calc(select=[x AS X0, x AS X1])
         :        :                          :  +- Reused(reference_id=[6])
         :        :                          +- Calc(select=[y0 AS X0, x AS X1])
         :        :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[11])
         :        :                                :- Reused(reference_id=[1])
         :        :                                +- Reused(reference_id=[2])
         :        +- Reused(reference_id=[7])
         :- Exchange(distribution=[broadcast])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,1,0,1,0,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[X0, y0 AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[right])\n:  :  :     :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :     +- [#5] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :        :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :        +- [#7] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], isBroadcast=[true], build=[left])\n:        :- [#3] Exchange(distribution=[broadcast])\n:        +- Calc(select=[x, X0])\n:           +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:              :- [#8] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:              +- [#9] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[10])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[14])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Calc(select=[y, x0])(reuse_id=[17])
         :              :                 :           :  :  +- Reused(reference_id=[8])
         :              :                 :           :  :- Reused(reference_id=[2])
         :              :                 :           :  :- Reused(reference_id=[5])
         :              :                 :           :  +- Reused(reference_id=[2])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[16])
         :              :                 :                 :- Reused(reference_id=[6])
         :              :                 :                 +- Reused(reference_id=[2])
         :              :                 +- Reused(reference_id=[7])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[19])
         :              :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[12])
         :              :     +- Exchange(distribution=[hash[X0, X1]])
         :              :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :              :- Reused(reference_id=[1])
         :              :              :- Reused(reference_id=[9])
         :              :              :- Reused(reference_id=[10])
         :              :              +- Exchange(distribution=[hash[x]])
         :              :                 +- Calc(select=[x, y0])(reuse_id=[13])
         :              :                    +- Reused(reference_id=[11])
         :              :- Reused(reference_id=[12])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[13])
         :              :        +- Reused(reference_id=[9])
         :              :- Reused(reference_id=[12])
         :              :- Reused(reference_id=[9])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Reused(reference_id=[14])
         :- Reused(reference_id=[15])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[x, x0])
         :     +- Reused(reference_id=[16])
         :- Exchange(distribution=[hash[X0, X1]])
         :  +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :     +- MultipleInput(readOrder=[0,1,0,1,1,2,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#2] Exchange(distribution=[hash[y]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left])\n:        :- [#4] Exchange(distribution=[broadcast])\n:        +- Calc(select=[x, X1])\n:           +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:              :- [#7] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:              +- [#8] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[X0, y, x], isBroadcast=[true], build=[right])\n      :- Calc(select=[X0, y])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], isBroadcast=[true], build=[left])\n      :     :- [#4] Exchange(distribution=[broadcast])\n      :     +- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[7])
         :        :- Reused(reference_id=[10])
         :        :- Exchange(distribution=[hash[x]])
         :        :  +- Calc(select=[x, X1])
         :        :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :        :  +- Reused(reference_id=[1])
         :        :        +- Exchange(distribution=[broadcast])
         :        :           +- Calc(select=[X0, X1])
         :        :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[20])
         :        :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :                 :        +- Union(all=[true], union=[X0, X1])
         :        :                 :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :        :                 :           :     :- Reused(reference_id=[17])
         :        :                 :           :     +- Reused(reference_id=[7])
         :        :                 :           +- Reused(reference_id=[18])
         :        :                 +- Reused(reference_id=[7])
         :        :- Reused(reference_id=[19])
         :        :- Reused(reference_id=[19])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Calc(select=[x, y])
         :        :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :        :        :- Reused(reference_id=[1])
         :        :        +- Reused(reference_id=[9])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Reused(reference_id=[20])
         :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         +- Exchange(distribution=[broadcast])
            +- Reused(reference_id=[21])

Job has been submitted with JobID a6309fad026c885690b8ffbc2cb5f4ca
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, s_3.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN s AS s_3 ON r_2.y = s_3.x UNION (SELECT p19_0.X0 AS X0, p19_0.X1 AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x) UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: d19d9ba2_1023_4960_a859_737f62f1ab16

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0)
            UNION
            (SELECT p19_0.X0 AS X0, r_2.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)),
     p35 AS (SELECT p19_0.X0 AS X0, s_3.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN s AS s_3 ON r_2.y = s_3.x
             UNION
             (SELECT p19_0.X0 AS X0, p19_0.X1 AS X1
              FROM p19 AS p19_0
                       INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x)
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :  :  +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :  :        :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :        :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :  :  +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :     +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :  :        :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :        :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1947.7567239600548, cumulative cost = {2.6587661574221637E7 rows, 7.327728746199427E8 cpu, 3.75837636E8 io, 8.76535737715393E7 network, 6.615085010128161E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 1947.7567239600548, cumulative cost = {2.6585713817497678E7 rows, 7.327417105123593E8 cpu, 3.75837636E8 io, 8.76535737715393E7 network, 6.602619367094817E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1947.7567239600548, cumulative cost = {2.658376606077372E7 rows, 7.323989053289423E8 cpu, 3.75837636E8 io, 8.760682761016425E7 network, 6.602619367094817E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 10745.102972695515, cumulative cost = {2.658181830404976E7 rows, 7.322269836813792E8 cpu, 3.75837636E8 io, 8.760682761016425E7 network, 6.590153724061473E7 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 9101.52242517456, cumulative cost = {1.7599671975718573E7 rows, 5.166467316854384E8 cpu, 2.46449484E8 io, 6.276033059352741E7 network, 4.3885790397319034E7 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 7531.241324219686, cumulative cost = {1.0748724950702338E7 rows, 2.7574669149232405E8 cpu, 1.54030968E8 io, 3.2505986061718725E7 network, 2.6645056291167032E7 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left]): rowcount = 7531.241324219686, cumulative cost = {1.0741193709378118E7 rows, 2.7574669149232405E8 cpu, 1.54030968E8 io, 3.2505986061718725E7 network, 2.6645056291167032E7 memory}
         :  :     :- Exchange(distribution=[broadcast]): rowcount = 10461.340673032488, cumulative cost = {6849095.6810621815 rows, 2.424880725255285E8 cpu, 9.2417928E7 io, 3.0505219907961465E7 network, 1.7240504506152E7 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 10461.340673032488, cumulative cost = {6838634.340389149 rows, 2.408142580178433E8 cpu, 9.2417928E7 io, 3.0254147731808685E7 network, 1.7240504506152E7 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 10461.340673032488, cumulative cost = {6828172.999716117 rows, 2.4064687656707478E8 cpu, 9.2417928E7 io, 3.0254147731808685E7 network, 1.657097870307792E7 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 10461.340673032488, cumulative cost = {6817711.659043085 rows, 2.3880568060862106E8 cpu, 9.2417928E7 io, 3.0003075555655904E7 network, 1.657097870307792E7 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 57711.613253035386, cumulative cost = {6807250.318370053 rows, 2.378822947965725E8 cpu, 9.2417928E7 io, 3.0003075555655904E7 network, 1.5901452900003841E7 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 13427.300049153302, cumulative cost = {5414541.095107697 rows, 1.8316309285691363E8 cpu, 7.3933572E7 io, 2.2887623686843455E7 network, 1.3597940856623545E7 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 5376.790237737357, cumulative cost = {3238993.1754679587 rows, 1.1892411884055421E8 cpu, 4.312776E7 io, 1.5031278438037977E7 network, 8485228.736202545 memory}
         :  :     :              :  :  :- Calc(select=[X0, y0 AS X1]): rowcount = 3118.5801188686783, cumulative cost = {1793198.2626151107 rows, 6.022757572515824E7 cpu, 2.464428E7 io, 7585044.819018989 network, 4404546.768101272 memory}
         :  :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[right]): rowcount = 3118.5801188686783, cumulative cost = {1790079.682496242 rows, 6.022757572515824E7 cpu, 2.464428E7 io, 7585044.819018989 network, 4404546.768101272 memory}
         :  :     :              :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :     :              :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :     :              :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :     :              :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :     :              :  :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :              :  :  :     :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 5782.8, cumulative cost = {351153.39999999997 rows, 1498043.0 cpu, 6161364.0 io, 139375.2 network, 1720.0 memory}
         :  :     :              :  :  :        +- Calc(select=[x, y0]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :  :              :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :              :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :              :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[X0, X1]): rowcount = 2258.2101188686784, cumulative cost = {1440418.1226151106 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2258.2101188686784, cumulative cost = {1438159.912496242 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :  :     :              :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :     :              :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :     :              :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :     :              :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :     :              :  :        :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :              :  :        :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 8050.509811415945, cumulative cost = {2162120.619590585 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], isBroadcast=[true], build=[left]): rowcount = 8050.509811415945, cumulative cost = {2154070.1097791693 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :  :     :              :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Calc(select=[x, X0]): rowcount = 38662.33128364844, cumulative cost = {695204.1634645888 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :  :     :              :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38662.33128364844, cumulative cost = {656541.8321809403 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :  :     :              :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1049.8752243229449, cumulative cost = {361180.5008972919 rows, 769749.2789616765 cpu, 6162120.0 io, 50490.01076750136 network, 134496.02871333694 memory}
         :  :     :              :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :     :              :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :     :              :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :     :              :                          +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :     :              :                             :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :     :              :                             :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :                             :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :                             :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                             :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                             :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                             :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                             :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                             :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                             :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                             :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                             :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                             :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                             :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                             :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                             +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 44284.313203882084, cumulative cost = {1334997.6100093203 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 44284.313203882084, cumulative cost = {1290713.2968054381 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 38529.75469254726, cumulative cost = {733030.983601556 rows, 9174228.288865468 cpu, 1.232358E7 io, 954675.8688124476 network, 145845.7805976497 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 38529.75469254726, cumulative cost = {694501.2289090088 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.75469254726, cumulative cost = {655971.4742164615 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 166.03128364844173, cumulative cost = {360742.7195239143 rows, 646309.2502483395 cpu, 6162804.0 io, 29961.75619131328 network, 136548.02871333694 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 166.03128364844173, cumulative cost = {360576.6882402658 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.03128364844173, cumulative cost = {360410.6569566174 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     +- Calc(select=[x, X1]): rowcount = 39746.934821765426, cumulative cost = {3884566.786991716 rows, 3.2856952762837164E7 cpu, 6.161304E7 io, 2000766.1537572588 network, 8818716.707325213 memory}
         :  :        +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39746.934821765426, cumulative cost = {3844819.8521699505 rows, 3.2856952762837164E7 cpu, 6.161304E7 io, 2000766.1537572588 network, 8818716.707325213 memory}
         :  :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           +- Exchange(distribution=[broadcast]): rowcount = 8280.565478436212, cumulative cost = {3548373.917348185 rows, 3.0737116239009675E7 cpu, 5.5452264E7 io, 2000766.1537572588 network, 8355005.040532785 memory}
         :  :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3540093.351869749 rows, 2.941222576245988E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 8355005.040532785 memory}
         :  :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8280.565478436212, cumulative cost = {3531812.7863913127 rows, 2.9279736714804903E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 7825048.849912867 memory}
         :  :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3523532.2209128765 rows, 2.782235719060013E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7825048.849912867 memory}
         :  :                       +- Union(all=[true], union=[X0, X1]): rowcount = 45681.027637294166, cumulative cost = {3515251.6554344404 rows, 2.7091460748403423E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7295092.659292949 memory}
         :  :                          :- Calc(select=[X10 AS X0, X1]): rowcount = 7012.904128538202, cumulative cost = {1944748.3374411485 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :  :                          :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left]): rowcount = 7012.904128538202, cumulative cost = {1937735.4333126103 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :  :                          :     :- Exchange(distribution=[broadcast]): rowcount = 7199.600389154035, cumulative cost = {1194607.17355252 rows, 1.0019221486973636E7 cpu, 1.8484332E7 io, 706909.821189428 network, 2771516.9324406516 memory}
         :  :                          :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :  :                          :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :  :                          :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :  :                          :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :  :                          :     :              :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                          :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                          :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :  :                          :     :              :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                          :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                          :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                          :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                          :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                          :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :              +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                          :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                          :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                          :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                          :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                          :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :                          :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                          :     +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :                          :        +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :                          :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :           +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
         :  :                          :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
         :  :                          :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
         :  :                          :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
         :  :                          :                       +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
         :  :                          :                          :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                          :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                          :                          +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          +- Calc(select=[x AS X0, X1]): rowcount = 38668.12350875596, cumulative cost = {1524822.2903559976 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :  :                             +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38668.12350875596, cumulative cost = {1486154.1668472416 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :  :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                +- Exchange(distribution=[broadcast]): rowcount = 1088.4900583731053, cumulative cost = {1190787.0433384858 rows, 9108616.637161918 cpu, 1.8485016E7 io, 560927.1732506857 network, 2773568.9324406516 memory}
         :  :                                   +- Calc(select=[X0, X1]): rowcount = 1088.4900583731053, cumulative cost = {1189698.5532801126 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :  :                                      +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1088.4900583731053, cumulative cost = {1188610.0632217394 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :  :                                         :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :  :                                         :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :  :                                         :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :  :                                         :        +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :  :                                         :           :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                                         :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                                         :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :  :                                         :           :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                                         :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                                         :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                                         :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                                         :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                                         :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                                         :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                         :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                         :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                         :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                         :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                         :           +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                                         :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                                         :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                                         :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                                         :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                                         :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                                         :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                         :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                         :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                         :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                         :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                         :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                         :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                         :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :                                         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                                         +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :                                            +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 1570.2811009548732, cumulative cost = {6841845.502591059 rows, 2.4089093867068914E8 cpu, 9.2418516E7 io, 3.0254344531808686E7 network, 1.7240734106152E7 memory}
         :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], build=[right]): rowcount = 1570.2811009548732, cumulative cost = {6840275.221490104 rows, 2.4089093867068914E8 cpu, 9.2418516E7 io, 3.0254344531808686E7 network, 1.7240734106152E7 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 10461.340673032488, cumulative cost = {6838634.340389149 rows, 2.408142580178433E8 cpu, 9.2417928E7 io, 3.0254147731808685E7 network, 1.7240504506152E7 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 10461.340673032488, cumulative cost = {6828172.999716117 rows, 2.4064687656707478E8 cpu, 9.2417928E7 io, 3.0254147731808685E7 network, 1.657097870307792E7 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 10461.340673032488, cumulative cost = {6817711.659043085 rows, 2.3880568060862106E8 cpu, 9.2417928E7 io, 3.0003075555655904E7 network, 1.657097870307792E7 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 57711.613253035386, cumulative cost = {6807250.318370053 rows, 2.378822947965725E8 cpu, 9.2417928E7 io, 3.0003075555655904E7 network, 1.5901452900003841E7 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 13427.300049153302, cumulative cost = {5414541.095107697 rows, 1.8316309285691363E8 cpu, 7.3933572E7 io, 2.2887623686843455E7 network, 1.3597940856623545E7 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 5376.790237737357, cumulative cost = {3238993.1754679587 rows, 1.1892411884055421E8 cpu, 4.312776E7 io, 1.5031278438037977E7 network, 8485228.736202545 memory}
         :        :           :  :  :- Calc(select=[X0, y0 AS X1]): rowcount = 3118.5801188686783, cumulative cost = {1793198.2626151107 rows, 6.022757572515824E7 cpu, 2.464428E7 io, 7585044.819018989 network, 4404546.768101272 memory}
         :        :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[right]): rowcount = 3118.5801188686783, cumulative cost = {1790079.682496242 rows, 6.022757572515824E7 cpu, 2.464428E7 io, 7585044.819018989 network, 4404546.768101272 memory}
         :        :           :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :           :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :           :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :           :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :           :  :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :           :  :  :     :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 5782.8, cumulative cost = {351153.39999999997 rows, 1498043.0 cpu, 6161364.0 io, 139375.2 network, 1720.0 memory}
         :        :           :  :  :        +- Calc(select=[x, y0]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :  :              :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :              :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :              :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[X0, X1]): rowcount = 2258.2101188686784, cumulative cost = {1440418.1226151106 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2258.2101188686784, cumulative cost = {1438159.912496242 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :        :           :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :           :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :           :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :           :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :           :  :        :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :           :  :        :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 8050.509811415945, cumulative cost = {2162120.619590585 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], isBroadcast=[true], build=[left]): rowcount = 8050.509811415945, cumulative cost = {2154070.1097791693 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :        :           :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Calc(select=[x, X0]): rowcount = 38662.33128364844, cumulative cost = {695204.1634645888 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38662.33128364844, cumulative cost = {656541.8321809403 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :              +- Exchange(distribution=[broadcast]): rowcount = 1049.8752243229449, cumulative cost = {361180.5008972919 rows, 769749.2789616765 cpu, 6162120.0 io, 50490.01076750136 network, 134496.02871333694 memory}
         :        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :        :           :                             :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :        :           :                             :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :           :                             :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :           :                             :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :                             :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :                             :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :                             :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                             :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                             :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                             :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                             :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :                             :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :                             :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :           :                             :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                             :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                             +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 44284.313203882084, cumulative cost = {1334997.6100093203 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 44284.313203882084, cumulative cost = {1290713.2968054381 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 38529.75469254726, cumulative cost = {733030.983601556 rows, 9174228.288865468 cpu, 1.232358E7 io, 954675.8688124476 network, 145845.7805976497 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 38529.75469254726, cumulative cost = {694501.2289090088 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.75469254726, cumulative cost = {655971.4742164615 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 166.03128364844173, cumulative cost = {360742.7195239143 rows, 646309.2502483395 cpu, 6162804.0 io, 29961.75619131328 network, 136548.02871333694 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 166.03128364844173, cumulative cost = {360576.6882402658 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.03128364844173, cumulative cost = {360410.6569566174 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 1643.5805475209547, cumulative cost = {8971401.225358495 rows, 2.155695068929681E8 cpu, 1.29388152E8 io, 2.484649701663685E7 network, 2.2015746843295693E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1643.5805475209547, cumulative cost = {8969757.644810975 rows, 2.155695068929681E8 cpu, 1.29388152E8 io, 2.484649701663685E7 network, 2.2015746843295693E7 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9706.568828374266, cumulative cost = {5424154.807928408 rows, 1.8579370140599713E8 cpu, 7.3935204E7 io, 2.3013765198639687E7 network, 1.3588654252744045E7 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9706.568828374266, cumulative cost = {5414448.239100033 rows, 1.8563839630474314E8 cpu, 7.3935204E7 io, 2.3013765198639687E7 network, 1.2967433847728092E7 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9706.568828374266, cumulative cost = {5404741.670271659 rows, 1.8393004019094926E8 cpu, 7.3935204E7 io, 2.2780807546758704E7 network, 1.2967433847728092E7 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 53547.79695504566, cumulative cost = {5395035.101443285 rows, 1.8307327543966854E8 cpu, 7.3935204E7 io, 2.2780807546758704E7 network, 1.234621344271214E7 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 52335.05518721536, cumulative cost = {3538259.6942116767 rows, 1.1949183709647769E8 cpu, 4.9290264E7 io, 1.4973704308720727E7 network, 7423046.363566561 memory}
               :           :  :- Calc(select=[x AS X0, X1]): rowcount = 44284.343487175654, cumulative cost = {1329397.1324974215 rows, 5.493713043960676E7 cpu, 1.8484404E7 io, 7116316.364184562 network, 2306715.2428445946 memory}
               :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 44284.343487175654, cumulative cost = {1285112.7890102458 rows, 5.493713043960676E7 cpu, 1.8484404E7 io, 7116316.364184562 network, 2306715.2428445946 memory}
               :           :  :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :     +- Exchange(distribution=[hash[x]]): rowcount = 38529.95658117102, cumulative cost = {727430.4455230703 rows, 9449866.786957398 cpu, 1.2323628E7 io, 955540.3641845626 network, 149037.67429901776 memory}
               :           :  :        +- Calc(select=[x, X1]): rowcount = 38529.95658117102, cumulative cost = {688900.4889418993 rows, 2976834.081320666 cpu, 1.2323628E7 io, 30821.40623645814 network, 149037.67429901776 memory}
               :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.95658117102, cumulative cost = {650370.5323607282 rows, 2976834.081320666 cpu, 1.2323628E7 io, 30821.40623645814 network, 149037.67429901776 memory}
               :           :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 167.37720780683773, cumulative cost = {355141.5757795572 rows, 921903.063658211 cpu, 6162852.0 io, 30821.40623645814 network, 139664.55066183486 memory}
               :           :  :                 +- Calc(select=[X0, X1]): rowcount = 167.37720780683773, cumulative cost = {354974.19857175037 rows, 895122.710409117 cpu, 6162852.0 io, 26804.353249094034 network, 139664.55066183486 memory}
               :           :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 167.37720780683773, cumulative cost = {354806.8213639435 rows, 895122.710409117 cpu, 6162852.0 io, 26804.353249094034 network, 139664.55066183486 memory}
               :           :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :           :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :           :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :           :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :           :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :                       +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[X0, X10 AS X1]): rowcount = 8050.711700039704, cumulative cost = {2156527.50652704 rows, 6.45023716016837E7 cpu, 3.080586E7 io, 7857387.944536165 network, 5116331.120721966 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left]): rowcount = 8050.711700039704, cumulative cost = {2148476.7948270002 rows, 6.45023716016837E7 cpu, 3.080586E7 io, 7857387.944536165 network, 5116331.120721966 memory}
               :           :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
               :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
               :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
               :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
               :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
               :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :           :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :        +- Calc(select=[x, X1]): rowcount = 38663.67720780684, cumulative cost = {689610.6466237959 rows, 3108554.398736411 cpu, 1.2322944E7 io, 51532.70649818807 network, 196908.0415763876 memory}
               :           :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38663.67720780684, cumulative cost = {650946.969415989 rows, 3108554.398736411 cpu, 1.2322944E7 io, 51532.70649818807 network, 196908.0415763876 memory}
               :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :              +- Exchange(distribution=[broadcast]): rowcount = 1058.8480520455848, cumulative cost = {355584.2922081822 rows, 1046491.614320046 cpu, 6162168.0 io, 51532.70649818807 network, 137612.55066183486 memory}
               :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :           :                             :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :                             :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :                             :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :                             :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :                             :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                             :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :                             :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :                             :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :                             +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, y AS X1]): rowcount = 1212.7417678303016, cumulative cost = {1803227.6102765624 rows, 6.3527890546235785E7 cpu, 2.464494E7 io, 7807103.238037977 network, 4923167.079145579 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[X0, y, x], isBroadcast=[true], build=[right]): rowcount = 1212.7417678303016, cumulative cost = {1802014.8685087322 rows, 6.3527890546235785E7 cpu, 2.464494E7 io, 7807103.238037977 network, 4923167.079145579 memory}
               :                 :- Calc(select=[X0, y]): rowcount = 8027.945118868678, cumulative cost = {1800688.126740902 rows, 6.3454090985284835E7 cpu, 2.4644256E7 io, 7806419.238037977 network, 4921115.079145579 memory}
               :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[left]): rowcount = 8027.945118868678, cumulative cost = {1792660.1816220332 rows, 6.3454090985284835E7 cpu, 2.4644256E7 io, 7806419.238037977 network, 4921115.079145579 memory}
               :                 :     :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
               :                 :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
               :                 :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
               :                 :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
               :                 :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
               :                 :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                 :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                 :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                 :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                 :     :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :     +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :        +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :                 :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :           +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 1250.6348217654318, cumulative cost = {3543959.2563350457 rows, 2.968814785776984E7 cpu, 5.5452948E7 io, 1832731.8179971601 network, 8357057.040532785 memory}
                  +- Calc(select=[X0, X1]): rowcount = 1250.6348217654318, cumulative cost = {3542708.62151328 rows, 2.948804628628737E7 cpu, 5.5452948E7 io, 1802716.5822747897 network, 8357057.040532785 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1250.6348217654318, cumulative cost = {3541457.9866915145 rows, 2.948804628628737E7 cpu, 5.5452948E7 io, 1802716.5822747897 network, 8357057.040532785 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3540093.351869749 rows, 2.941222576245988E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 8355005.040532785 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8280.565478436212, cumulative cost = {3531812.7863913127 rows, 2.9279736714804903E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 7825048.849912867 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3523532.2209128765 rows, 2.782235719060013E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7825048.849912867 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 45681.027637294166, cumulative cost = {3515251.6554344404 rows, 2.7091460748403423E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7295092.659292949 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 7012.904128538202, cumulative cost = {1944748.3374411485 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left]): rowcount = 7012.904128538202, cumulative cost = {1937735.4333126103 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
                        :           :     :- Exchange(distribution=[broadcast]): rowcount = 7199.600389154035, cumulative cost = {1194607.17355252 rows, 1.0019221486973636E7 cpu, 1.8484332E7 io, 706909.821189428 network, 2771516.9324406516 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
                        :           :        +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
                        :           :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :           +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
                        :           :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
                        :           :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
                        :           :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
                        :           :                       +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
                        :           :                          :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :                          +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 38668.12350875596, cumulative cost = {1524822.2903559976 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38668.12350875596, cumulative cost = {1486154.1668472416 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
                        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 1088.4900583731053, cumulative cost = {1190787.0433384858 rows, 9108616.637161918 cpu, 1.8485016E7 io, 560927.1732506857 network, 2773568.9324406516 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 1088.4900583731053, cumulative cost = {1189698.5532801126 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1088.4900583731053, cumulative cost = {1188610.0632217394 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,1,0,1,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left])\n:  :     :- [#2] Exchange(distribution=[broadcast])\n:  :     +- Calc(select=[x, X1])\n:  :        +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:  :           :- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :           +- [#7] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], build=[right])\n:        :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#5] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left])\n:     :- [#1] Exchange(distribution=[broadcast])\n:     +- Calc(select=[y, X1])\n:        +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:           :- [#4] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:           +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#2] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#3] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[broadcast])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[4])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[8])
         :        :           :              :        :           :     :- Reused(reference_id=[1])
         :        :           :              :        :           :     +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :              :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[18])
         :        :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[5])
         :        :           :              :        +- Reused(reference_id=[2])
         :        :           :              :- Reused(reference_id=[3])
         :        :           :              +- Exchange(distribution=[broadcast])(reuse_id=[9])
         :        :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           :- Exchange(distribution=[broadcast])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :           :        :- Reused(reference_id=[4])
         :        :           :        +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :           :           +- Reused(reference_id=[5])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :                 +- Exchange(distribution=[hash[X0, X1]])
         :        :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :                       +- Union(all=[true], union=[X0, X1])
         :        :                          :- Calc(select=[x AS X0, x AS X1])
         :        :                          :  +- Reused(reference_id=[6])
         :        :                          +- Calc(select=[y0 AS X0, x AS X1])
         :        :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[11])
         :        :                                :- Reused(reference_id=[1])
         :        :                                +- Reused(reference_id=[2])
         :        +- Reused(reference_id=[7])
         :- Exchange(distribution=[broadcast])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,1,0,1,0,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[X0, y0 AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[right])\n:  :  :     :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :     +- [#5] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :        :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :        +- [#7] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], isBroadcast=[true], build=[left])\n:        :- [#3] Exchange(distribution=[broadcast])\n:        +- Calc(select=[x, X0])\n:           +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:              :- [#8] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:              +- [#9] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[10])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[14])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Calc(select=[y, x0])(reuse_id=[17])
         :              :                 :           :  :  +- Reused(reference_id=[8])
         :              :                 :           :  :- Reused(reference_id=[2])
         :              :                 :           :  :- Reused(reference_id=[5])
         :              :                 :           :  +- Reused(reference_id=[2])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[16])
         :              :                 :                 :- Reused(reference_id=[6])
         :              :                 :                 +- Reused(reference_id=[2])
         :              :                 +- Reused(reference_id=[7])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[19])
         :              :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[12])
         :              :     +- Exchange(distribution=[hash[X0, X1]])
         :              :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :              :- Reused(reference_id=[1])
         :              :              :- Reused(reference_id=[9])
         :              :              :- Reused(reference_id=[10])
         :              :              +- Exchange(distribution=[hash[x]])
         :              :                 +- Calc(select=[x, y0])(reuse_id=[13])
         :              :                    +- Reused(reference_id=[11])
         :              :- Reused(reference_id=[12])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[13])
         :              :        +- Reused(reference_id=[9])
         :              :- Reused(reference_id=[12])
         :              :- Reused(reference_id=[9])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Reused(reference_id=[14])
         :- Reused(reference_id=[15])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[x, x0])
         :     +- Reused(reference_id=[16])
         :- Exchange(distribution=[hash[X0, X1]])
         :  +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :     +- MultipleInput(readOrder=[0,1,0,1,1,2,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#2] Exchange(distribution=[hash[y]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left])\n:        :- [#4] Exchange(distribution=[broadcast])\n:        +- Calc(select=[x, X1])\n:           +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:              :- [#7] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:              +- [#8] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[X0, y, x], isBroadcast=[true], build=[right])\n      :- Calc(select=[X0, y])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], isBroadcast=[true], build=[left])\n      :     :- [#4] Exchange(distribution=[broadcast])\n      :     +- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[7])
         :        :- Reused(reference_id=[10])
         :        :- Exchange(distribution=[hash[x]])
         :        :  +- Calc(select=[x, X1])
         :        :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :        :  +- Reused(reference_id=[1])
         :        :        +- Exchange(distribution=[broadcast])
         :        :           +- Calc(select=[X0, X1])
         :        :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[20])
         :        :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :                 :        +- Union(all=[true], union=[X0, X1])
         :        :                 :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :        :                 :           :     :- Reused(reference_id=[17])
         :        :                 :           :     +- Reused(reference_id=[7])
         :        :                 :           +- Reused(reference_id=[18])
         :        :                 +- Reused(reference_id=[7])
         :        :- Reused(reference_id=[19])
         :        :- Reused(reference_id=[19])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Calc(select=[x, y])
         :        :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :        :        :- Reused(reference_id=[1])
         :        :        +- Reused(reference_id=[9])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Reused(reference_id=[20])
         :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         +- Exchange(distribution=[broadcast])
            +- Reused(reference_id=[21])

Job has been submitted with JobID c212c4bbc819766aa0b3bfa9e94b00a2
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, s_3.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN s AS s_3 ON r_2.y = s_3.x UNION (SELECT p19_0.X0 AS X0, p19_0.X1 AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x) UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 78c365bb_c559_4a41_af31_8f75ee02b72c

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0)
            UNION
            (SELECT p19_0.X0 AS X0, r_2.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)),
     p35 AS (SELECT p19_0.X0 AS X0, s_3.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN s AS s_3 ON r_2.y = s_3.x
             UNION
             (SELECT p19_0.X0 AS X0, p19_0.X1 AS X1
              FROM p19 AS p19_0
                       INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x)
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :  :  +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :  :        :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :        :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :  :  +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :     +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :  :        :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :        :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 17588.507142293565, cumulative cost = {2.483128117561535E8 rows, 8.165799697218231E9 cpu, 3.37772364E9 io, 1.012278398482703E9 network, 5.901115406856863E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 17588.507142293565, cumulative cost = {2.482952232490112E8 rows, 8.165518281103954E9 cpu, 3.37772364E9 io, 1.012278398482703E9 network, 5.889858762285795E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 17588.507142293565, cumulative cost = {2.4827763474186888E8 rows, 8.16242270384691E9 cpu, 3.37772364E9 io, 1.0118562743112879E9 network, 5.889858762285795E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 97029.73582639817, cumulative cost = {2.4826004623472658E8 rows, 8.1608702280736885E9 cpu, 3.37772364E9 io, 1.0118562743112879E9 network, 5.878602117714727E8 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 81796.55815990081, cumulative cost = {1.6445804990713376E8 rows, 5.705363383999193E9 cpu, 2.214894072E9 io, 7.150170148985522E8 network, 3.943316260344254E8 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 67685.83199024966, cumulative cost = {1.0240604140140045E8 rows, 3.457814718539178E9 cpu, 1.384307952E9 io, 4.315436371200227E8 network, 2.3940815182186753E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 67685.83199024966, cumulative cost = {1.0233835556941019E8 rows, 3.457814718539178E9 cpu, 1.384307952E9 io, 4.315436371200227E8 network, 2.3940815182186753E8 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 94017.80779767438, cumulative cost = {6.203548820303177E7 rows, 2.262500179549483E9 cpu, 8.30581812E8 io, 2.8572849236567366E8 network, 1.5492043901255783E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 94017.80779767438, cumulative cost = {6.194147039523409E7 rows, 2.2467051878394737E9 cpu, 8.30581812E8 io, 2.8347206497852945E8 network, 1.5492043901255783E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 94017.80779767438, cumulative cost = {6.1847452587436415E7 rows, 2.245200902914711E9 cpu, 8.30581812E8 io, 2.8347206497852945E8 network, 1.4890329931350666E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 94017.80779767438, cumulative cost = {6.175343477963874E7 rows, 2.2286537687423205E9 cpu, 8.30581812E8 io, 2.8121563759138525E8 network, 1.4890329931350666E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 518663.8627020982, cumulative cost = {6.165941697184106E7 rows, 2.220355146939087E9 cpu, 8.30581812E8 io, 2.8121563759138525E8 network, 1.428861596144555E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 120664.09291195488, cumulative cost = {4.914353670494267E7 rows, 1.7286148396116114E9 cpu, 6.6446148E8 io, 2.1727011347445723E8 network, 1.2219354115190014E8 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 48311.45724899978, cumulative cost = {2.9244255988806996E7 rows, 1.0918417453736887E9 cpu, 3.8760228E8 io, 1.3832494628975996E8 network, 7.624881215247983E7 memory}
         :  :     :              :  :  :- Calc(select=[X0, y0 AS X1]): rowcount = 28026.125186999892, cumulative cost = {1.6250682013693998E7 rows, 5.643370362129397E8 cpu, 2.214858E8 io, 7.140457515983997E7 network, 3.957936412623991E7 memory}
         :  :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 28026.125186999892, cumulative cost = {1.6222655888506997E7 rows, 5.643370362129397E8 cpu, 2.214858E8 io, 7.140457515983997E7 network, 3.957936412623991E7 memory}
         :  :     :              :  :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :  :     :              :  :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :     :              :  :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :     :              :  :  :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :  :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :  :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :  :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :  :  :     :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 51962.2875, cumulative cost = {3155773.3625000003 rows, 1.3865320299999999E7 cpu, 5.5373604E7 io, 1251402.9 network, 12880.0 memory}
         :  :     :              :  :  :        +- Calc(select=[x, y0]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :  :              :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :              :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :              :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[X0, X1]): rowcount = 20285.332061999892, cumulative cost = {1.2945262517863998E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 20285.332061999892, cumulative cost = {1.2924977185801998E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :  :     :              :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :     :              :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :     :              :  :        :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :  :        :                    +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 72352.6356629551, cumulative cost = {1.977861662322372E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 72352.6356629551, cumulative cost = {1.9706263987560764E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :  :     :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 347472.35733970144, cumulative cost = {6595054.951077811 rows, 8.381663367335334E7 cpu, 1.10747004E8 io, 8791994.924857302 network, 1734934.3367004544 memory}
         :  :     :              :           +- Calc(select=[x, X0]): rowcount = 347472.35733970144, cumulative cost = {6247582.59373811 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347472.35733970144, cumulative cost = {5900110.236398408 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 9428.382264676382, cumulative cost = {3245583.8790587066 rows, 6909418.582166087 cpu, 5.5377708E7 io, 452658.34870446636 network, 1206944.929878577 memory}
         :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 397999.7697901433, cumulative cost = {1.1997216404196285E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 397999.7697901433, cumulative cost = {1.1599216634406142E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 346277.7986009552, cumulative cost = {6587108.864615999 rows, 8.24099170759656E7 cpu, 1.10751036E8 io, 8576228.116927994 network, 1301061.7409018585 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 346277.7986009552, cumulative cost = {6240831.066015044 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346277.7986009552, cumulative cost = {5894553.267414089 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1464.6573397014572, cumulative cost = {3241221.4688131344 rows, 5767097.65228751 cpu, 5.538174E7 io, 265560.9505050682 network, 1219040.929878577 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 1464.6573397014572, cumulative cost = {3239756.811473433 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1464.6573397014572, cumulative cost = {3238292.1541337315 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 357221.0721373233, cumulative cost = {4.023518153438817E7 rows, 1.1917046279502146E9 cpu, 5.5372614E8 io, 1.4581514475434905E8 network, 7.92227155726399E7 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 357221.0721373233, cumulative cost = {3.987796046225084E7 rows, 1.1316914878311443E9 cpu, 5.5372614E8 io, 1.372418390230533E8 network, 7.92227155726399E7 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 357221.0721373233, cumulative cost = {3.952073939011352E7 rows, 1.1316914878311443E9 cpu, 5.5372614E8 io, 1.372418390230533E8 network, 7.92227155726399E7 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 74419.81424882227, cumulative cost = {3.454941031797619E7 rows, 7.250546253171537E8 cpu, 4.98356844E8 io, 8.18725430230533E7 network, 7.505520597470585E7 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.447499050372737E7 rows, 7.125520965233516E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.505520597470585E7 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 74419.81424882227, cumulative cost = {3.440057068947855E7 rows, 7.113613794953704E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.029233786278123E7 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.4326150875229724E7 rows, 6.982634921875777E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 7.029233786278123E7 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 410548.4825059023, cumulative cost = {3.42517310609809E7 rows, 6.916947164674833E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 6.552946975085661E7 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 63027.00953233071, cumulative cost = {2.0138961130538054E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 63027.00953233071, cumulative cost = {2.007593412100572E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 64702.79882540108, cumulative cost = {1.0734887841343772E7 rows, 9.052850452322999E7 cpu, 1.66120308E8 io, 6350090.185137104 network, 2.4896743856188547E7 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                             :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 347521.47297357157, cumulative cost = {1.3702221447936947E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347521.47297357157, cumulative cost = {1.3354699974963374E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 9755.819823810161, cumulative cost = {1.0700124501989802E7 rows, 8.179343588297544E7 cpu, 1.6612434E8 io, 5035394.689098923 network, 2.4908839856188547E7 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 9755.819823810161, cumulative cost = {1.0690368682165992E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9755.819823810161, cumulative cost = {1.068061286234218E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                                            :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 14110.726169651156, cumulative cost = {6.19702119475734E7 rows, 2.247466868901855E9 cpu, 8.3058612E8 io, 2.8347337777852947E8 network, 1.5492347421255782E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 14110.726169651156, cumulative cost = {6.195610122140375E7 rows, 2.247466868901855E9 cpu, 8.3058612E8 io, 2.8347337777852947E8 network, 1.5492347421255782E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 94017.80779767438, cumulative cost = {6.194147039523409E7 rows, 2.2467051878394737E9 cpu, 8.30581812E8 io, 2.8347206497852945E8 network, 1.5492043901255783E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 94017.80779767438, cumulative cost = {6.1847452587436415E7 rows, 2.245200902914711E9 cpu, 8.30581812E8 io, 2.8347206497852945E8 network, 1.4890329931350666E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 94017.80779767438, cumulative cost = {6.175343477963874E7 rows, 2.2286537687423205E9 cpu, 8.30581812E8 io, 2.8121563759138525E8 network, 1.4890329931350666E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 518663.8627020982, cumulative cost = {6.165941697184106E7 rows, 2.220355146939087E9 cpu, 8.30581812E8 io, 2.8121563759138525E8 network, 1.428861596144555E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 120664.09291195488, cumulative cost = {4.914353670494267E7 rows, 1.7286148396116114E9 cpu, 6.6446148E8 io, 2.1727011347445723E8 network, 1.2219354115190014E8 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 48311.45724899978, cumulative cost = {2.9244255988806996E7 rows, 1.0918417453736887E9 cpu, 3.8760228E8 io, 1.3832494628975996E8 network, 7.624881215247983E7 memory}
         :        :           :  :  :- Calc(select=[X0, y0 AS X1]): rowcount = 28026.125186999892, cumulative cost = {1.6250682013693998E7 rows, 5.643370362129397E8 cpu, 2.214858E8 io, 7.140457515983997E7 network, 3.957936412623991E7 memory}
         :        :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 28026.125186999892, cumulative cost = {1.6222655888506997E7 rows, 5.643370362129397E8 cpu, 2.214858E8 io, 7.140457515983997E7 network, 3.957936412623991E7 memory}
         :        :           :  :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :        :           :  :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :           :  :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :           :  :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :           :  :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :           :  :  :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :  :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :  :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :  :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :  :  :     :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 51962.2875, cumulative cost = {3155773.3625000003 rows, 1.3865320299999999E7 cpu, 5.5373604E7 io, 1251402.9 network, 12880.0 memory}
         :        :           :  :  :        +- Calc(select=[x, y0]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :  :              :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :              :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :              :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[X0, X1]): rowcount = 20285.332061999892, cumulative cost = {1.2945262517863998E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 20285.332061999892, cumulative cost = {1.2924977185801998E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :        :           :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :           :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :           :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :           :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :           :  :        :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :  :        :                    +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 72352.6356629551, cumulative cost = {1.977861662322372E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 72352.6356629551, cumulative cost = {1.9706263987560764E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :        :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 347472.35733970144, cumulative cost = {6595054.951077811 rows, 8.381663367335334E7 cpu, 1.10747004E8 io, 8791994.924857302 network, 1734934.3367004544 memory}
         :        :           :           +- Calc(select=[x, X0]): rowcount = 347472.35733970144, cumulative cost = {6247582.59373811 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347472.35733970144, cumulative cost = {5900110.236398408 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 9428.382264676382, cumulative cost = {3245583.8790587066 rows, 6909418.582166087 cpu, 5.5377708E7 io, 452658.34870446636 network, 1206944.929878577 memory}
         :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 397999.7697901433, cumulative cost = {1.1997216404196285E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 397999.7697901433, cumulative cost = {1.1599216634406142E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 346277.7986009552, cumulative cost = {6587108.864615999 rows, 8.24099170759656E7 cpu, 1.10751036E8 io, 8576228.116927994 network, 1301061.7409018585 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 346277.7986009552, cumulative cost = {6240831.066015044 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346277.7986009552, cumulative cost = {5894553.267414089 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1464.6573397014572, cumulative cost = {3241221.4688131344 rows, 5767097.65228751 cpu, 5.538174E7 io, 265560.9505050682 network, 1219040.929878577 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 1464.6573397014572, cumulative cost = {3239756.811473433 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1464.6573397014572, cumulative cost = {3238292.1541337315 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 15233.177666497362, cumulative cost = {8.370496659176642E7 rows, 2.455409814338669E9 cpu, 1.162829568E9 io, 2.9683925941273576E8 network, 1.935285857370473E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 15233.177666497362, cumulative cost = {8.368973341409992E7 rows, 2.455409814338669E9 cpu, 1.162829568E9 io, 2.9683925941273576E8 network, 1.935285857370473E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 90341.14563932574, cumulative cost = {4.916519761629408E7 rows, 1.7395993356171422E9 cpu, 6.64468692E8 io, 2.164796390003584E8 network, 1.1783333492265138E8 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 90341.14563932574, cumulative cost = {4.9074856470654756E7 rows, 1.738153877286913E9 cpu, 6.64468692E8 io, 2.164796390003584E8 network, 1.1205150160173453E8 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 90341.14563932574, cumulative cost = {4.898451532501543E7 rows, 1.7222538356543915E9 cpu, 6.64468692E8 io, 2.143114515050146E8 network, 1.1205150160173453E8 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 498380.98394147574, cumulative cost = {4.889417417937611E7 rows, 1.7142797399113278E9 cpu, 6.64468692E8 io, 2.143114515050146E8 network, 1.0626966828081769E8 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 470353.72812947584, cumulative cost = {3.214431580799064E7 rows, 1.1332369281144466E9 cpu, 4.42978884E8 io, 1.4290268744517463E8 network, 6.667781405457778E7 memory}
               :           :  :- Calc(select=[x AS X0, X1]): rowcount = 397999.94231314905, cumulative cost = {1.1946256119052742E7 rows, 4.9366387496156937E8 cpu, 1.66120008E8 io, 6.395092257541156E7 network, 2.0711667356473174E7 memory}
               :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 397999.94231314905, cumulative cost = {1.1548256176739592E7 rows, 4.9366387496156937E8 cpu, 1.66120008E8 io, 6.395092257541156E7 network, 2.0711667356473174E7 memory}
               :           :  :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :     +- Exchange(distribution=[hash[x]]): rowcount = 346278.9487543269, cumulative cost = {6536148.234426444 rows, 8.485213937153476E7 cpu, 1.10750712E8 io, 8581626.575411558 network, 1320046.2262308649 memory}
               :           :  :        +- Calc(select=[x, X1]): rowcount = 346278.9487543269, cumulative cost = {6189869.285672117 rows, 2.667727598080785E7 cpu, 1.10750712E8 io, 270931.80530771165 network, 1320046.2262308649 memory}
               :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346278.9487543269, cumulative cost = {5843590.336917791 rows, 2.667727598080785E7 cpu, 1.10750712E8 io, 270931.80530771165 network, 1320046.2262308649 memory}
               :           :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 1472.3250288462589, cumulative cost = {3190257.3881634637 rows, 8209065.380577081 cpu, 5.5381416E7 io, 270931.80530771165 network, 1237596.0246154743 memory}
               :           :  :                 +- Calc(select=[X0, X1]): rowcount = 1472.3250288462589, cumulative cost = {3188785.0631346176 rows, 7973493.375961679 cpu, 5.5381416E7 io, 235596.00461540144 network, 1237596.0246154743 memory}
               :           :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1472.3250288462589, cumulative cost = {3187312.7381057716 rows, 7973493.375961679 cpu, 5.5381416E7 io, 235596.00461540144 network, 1237596.0246154743 memory}
               :           :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :           :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :           :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :           :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :                       +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[X0, X10 AS X1]): rowcount = 72353.78581632682, cumulative cost = {1.9727705960808422E7 rows, 6.391026994247477E8 cpu, 2.76858876E8 io, 7.895176486976308E7 network, 4.596614669810461E7 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 72353.78581632682, cumulative cost = {1.9655352174992096E7 rows, 6.391026994247477E8 cpu, 2.76858876E8 io, 7.895176486976308E7 network, 4.596614669810461E7 memory}
               :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
               :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
               :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
               :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
               :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
               :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :           :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :        +- Exchange(distribution=[hash[x]]): rowcount = 347480.0250288462, cumulative cost = {6544141.988355773 rows, 8.626684161157718E7 cpu, 1.1074668E8 io, 8798592.609923113 network, 1756352.0353847444 memory}
               :           :           +- Calc(select=[x, X1]): rowcount = 347480.0250288462, cumulative cost = {6196661.963326926 rows, 2.789019740673102E7 cpu, 1.1074668E8 io, 459072.0092308029 network, 1756352.0353847444 memory}
               :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347480.0250288462, cumulative cost = {5849181.93829808 rows, 2.789019740673102E7 cpu, 1.1074668E8 io, 459072.0092308029 network, 1756352.0353847444 memory}
               :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :                 +- Exchange(distribution=[broadcast]): rowcount = 9479.500192308393, cumulative cost = {3194647.913269234 rows, 9357929.405192554 cpu, 5.5377384E7 io, 459072.0092308029 network, 1225500.0246154743 memory}
               :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :           :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :                                :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :                                :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, y AS X1]): rowcount = 28027.255811999894, cumulative cost = {1.6251477387443997E7 rows, 5.805444308129398E8 cpu, 2.21489808E8 io, 7.140876405983996E7 network, 3.959185422623991E7 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x1)], select=[X0, X1, y, x1], build=[right]): rowcount = 28027.255811999894, cumulative cost = {1.6223450131631996E7 rows, 5.805444308129398E8 cpu, 2.21489808E8 io, 7.140876405983996E7 network, 3.959185422623991E7 memory}
               :                 :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
               :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
               :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
               :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
               :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
               :                 :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :                 :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                 :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[hash[x1]]): rowcount = 51969.825, cumulative cost = {3156566.4750000006 rows, 3.00726546E7 cpu, 5.5377612E7 io, 1255591.7999999998 network, 24948.0 memory}
               :                    +- Calc(select=[y, x0 AS x1]): rowcount = 51969.825, cumulative cost = {3104596.6500000004 rows, 2.1341724E7 cpu, 5.5377612E7 io, 8316.0 network, 24948.0 memory}
               :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 51969.825, cumulative cost = {3052626.825 rows, 2.1341724E7 cpu, 5.5377612E7 io, 8316.0 network, 24948.0 memory}
               :                          :- Calc(select=[x, y]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :                          :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :                          :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                          :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :                          :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 11213.37213732334, cumulative cost = {3.450930262013934E7 rows, 7.149980425793138E8 cpu, 4.98360876E8 io, 8.035962041237734E7 network, 7.506730197470585E7 memory}
                  +- Calc(select=[X0, X1]): rowcount = 11213.37213732334, cumulative cost = {3.4498089248002015E7 rows, 7.132039030373421E8 cpu, 4.98360876E8 io, 8.009049948108158E7 network, 7.506730197470585E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 11213.37213732334, cumulative cost = {3.448687587586469E7 rows, 7.132039030373421E8 cpu, 4.98360876E8 io, 8.009049948108158E7 network, 7.506730197470585E7 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.447499050372737E7 rows, 7.125520965233516E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.505520597470585E7 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 74419.81424882227, cumulative cost = {3.440057068947855E7 rows, 7.113613794953704E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.029233786278123E7 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.4326150875229724E7 rows, 6.982634921875777E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 7.029233786278123E7 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 410548.4825059023, cumulative cost = {3.42517310609809E7 rows, 6.916947164674833E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 6.552946975085661E7 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 63027.00953233071, cumulative cost = {2.0138961130538054E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 63027.00953233071, cumulative cost = {2.007593412100572E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 64702.79882540108, cumulative cost = {1.0734887841343772E7 rows, 9.052850452322999E7 cpu, 1.66120308E8 io, 6350090.185137104 network, 2.4896743856188547E7 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 347521.47297357157, cumulative cost = {1.3702221447936947E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347521.47297357157, cumulative cost = {1.3354699974963374E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
                        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 9755.819823810161, cumulative cost = {1.0700124501989802E7 rows, 8.179343588297544E7 cpu, 1.6612434E8 io, 5035394.689098923 network, 2.4908839856188547E7 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 9755.819823810161, cumulative cost = {1.0690368682165992E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9755.819823810161, cumulative cost = {1.068061286234218E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,2,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#2] Exchange(distribution=[hash[X1]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[5])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[8])
         :        :           :              :        :           :     :- Reused(reference_id=[1])
         :        :           :              :        :           :     +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :              :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[20])
         :        :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :              :        +- Reused(reference_id=[2])
         :        :           :              :- Reused(reference_id=[3])
         :        :           :              +- Exchange(distribution=[broadcast])(reuse_id=[9])
         :        :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[4])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Exchange(distribution=[hash[x]])
         :        :           :        :  +- Reused(reference_id=[1])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])
         :        :           :                       :  +- Reused(reference_id=[4])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[11])
         :        :           :                             :- Reused(reference_id=[1])
         :        :           :                             +- Reused(reference_id=[2])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[5])
         :        :                    +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :                       +- Reused(reference_id=[6])
         :        +- Reused(reference_id=[7])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[17])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,2,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[X0, y0 AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[right])\n:  :  :     :- [#3] Exchange(distribution=[hash[X1]])\n:  :  :     +- [#6] Exchange(distribution=[hash[x]])\n:  :  +- Calc(select=[X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :        :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :        +- [#8] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], build=[left])\n:        :- [#3] Exchange(distribution=[hash[X1]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[10])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[12])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Calc(select=[y, x0])(reuse_id=[19])
         :              :                 :           :  :  +- Reused(reference_id=[8])
         :              :                 :           :  :- Reused(reference_id=[2])
         :              :                 :           :  :- Reused(reference_id=[6])
         :              :                 :           :  +- Reused(reference_id=[2])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[18])
         :              :                 :                 :- Reused(reference_id=[4])
         :              :                 :                 +- Reused(reference_id=[2])
         :              :                 +- Reused(reference_id=[7])
         :              :- Exchange(distribution=[hash[X1]])(reuse_id=[13])
         :              :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :              :     +- Exchange(distribution=[hash[X0, X1]])
         :              :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :              :- Reused(reference_id=[1])
         :              :              :- Reused(reference_id=[9])
         :              :              :- Reused(reference_id=[10])
         :              :              +- Exchange(distribution=[hash[x]])
         :              :                 +- Calc(select=[x, y0])(reuse_id=[14])
         :              :                    +- Reused(reference_id=[11])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Reused(reference_id=[12])
         :              :- Reused(reference_id=[13])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[14])
         :              :        +- Reused(reference_id=[9])
         :              :- Reused(reference_id=[15])
         :              +- Reused(reference_id=[9])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Reused(reference_id=[10])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[16])
         :- Reused(reference_id=[17])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[x, x0])
         :     +- Reused(reference_id=[18])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[1,0,1,0,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#3] Exchange(distribution=[hash[y]])\n:  :     +- [#4] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#1] Exchange(distribution=[hash[X1]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x1)], select=[X0, X1, y, x1], build=[right])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#2] Exchange(distribution=[hash[x1]])\n])
                  :- Reused(reference_id=[13])
                  :- Exchange(distribution=[hash[x1]])
                  :  +- Calc(select=[y, x0 AS x1])
                  :     +- MultipleInput(readOrder=[0,1,0], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:- Calc(select=[x, y])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#2] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#3] Exchange(distribution=[broadcast])\n+- [#1] Exchange(distribution=[broadcast])\n])
                  :        :- Reused(reference_id=[9])
                  :        :- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[7])
                  :- Reused(reference_id=[10])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Calc(select=[X0, X1])
                  :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                  :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
                  :                 :  +- Exchange(distribution=[hash[X0, X1]])
                  :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :                 :        +- Union(all=[true], union=[X0, X1])
                  :                 :           :- Calc(select=[x0 AS X0, y AS X1])
                  :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :                 :           :     :- Reused(reference_id=[19])
                  :                 :           :     +- Reused(reference_id=[7])
                  :                 :           +- Reused(reference_id=[20])
                  :                 +- Reused(reference_id=[7])
                  :- Reused(reference_id=[13])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, X1])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                           :  +- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- Reused(reference_id=[21])

Job has been submitted with JobID efd2ef77881dfd50bf47c876998773c4
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, s_3.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN s AS s_3 ON r_2.y = s_3.x UNION (SELECT p19_0.X0 AS X0, p19_0.X1 AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x) UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...

------------> using sink uuid: 2c86a371_d291_426f_b4fe_dde8fc46a7c8

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0)
            UNION
            (SELECT p19_0.X0 AS X0, r_2.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)),
     p35 AS (SELECT p19_0.X0 AS X0, s_3.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN s AS s_3 ON r_2.y = s_3.x
             UNION
             (SELECT p19_0.X0 AS X0, p19_0.X1 AS X1
              FROM p19 AS p19_0
                       INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x)
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :  :  +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :  :        :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :        :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :  :  +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :     +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :  :        :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :        :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 17588.507142293565, cumulative cost = {2.483128117561535E8 rows, 8.165799697218231E9 cpu, 3.37772364E9 io, 1.012278398482703E9 network, 5.901115406856863E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 17588.507142293565, cumulative cost = {2.482952232490112E8 rows, 8.165518281103954E9 cpu, 3.37772364E9 io, 1.012278398482703E9 network, 5.889858762285795E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 17588.507142293565, cumulative cost = {2.4827763474186888E8 rows, 8.16242270384691E9 cpu, 3.37772364E9 io, 1.0118562743112879E9 network, 5.889858762285795E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 97029.73582639817, cumulative cost = {2.4826004623472658E8 rows, 8.1608702280736885E9 cpu, 3.37772364E9 io, 1.0118562743112879E9 network, 5.878602117714727E8 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 81796.55815990081, cumulative cost = {1.6445804990713376E8 rows, 5.705363383999193E9 cpu, 2.214894072E9 io, 7.150170148985522E8 network, 3.943316260344254E8 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 67685.83199024966, cumulative cost = {1.0240604140140045E8 rows, 3.457814718539178E9 cpu, 1.384307952E9 io, 4.315436371200227E8 network, 2.3940815182186753E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 67685.83199024966, cumulative cost = {1.0233835556941019E8 rows, 3.457814718539178E9 cpu, 1.384307952E9 io, 4.315436371200227E8 network, 2.3940815182186753E8 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 94017.80779767438, cumulative cost = {6.203548820303177E7 rows, 2.262500179549483E9 cpu, 8.30581812E8 io, 2.8572849236567366E8 network, 1.5492043901255783E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 94017.80779767438, cumulative cost = {6.194147039523409E7 rows, 2.2467051878394737E9 cpu, 8.30581812E8 io, 2.8347206497852945E8 network, 1.5492043901255783E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 94017.80779767438, cumulative cost = {6.1847452587436415E7 rows, 2.245200902914711E9 cpu, 8.30581812E8 io, 2.8347206497852945E8 network, 1.4890329931350666E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 94017.80779767438, cumulative cost = {6.175343477963874E7 rows, 2.2286537687423205E9 cpu, 8.30581812E8 io, 2.8121563759138525E8 network, 1.4890329931350666E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 518663.8627020982, cumulative cost = {6.165941697184106E7 rows, 2.220355146939087E9 cpu, 8.30581812E8 io, 2.8121563759138525E8 network, 1.428861596144555E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 120664.09291195488, cumulative cost = {4.914353670494267E7 rows, 1.7286148396116114E9 cpu, 6.6446148E8 io, 2.1727011347445723E8 network, 1.2219354115190014E8 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 48311.45724899978, cumulative cost = {2.9244255988806996E7 rows, 1.0918417453736887E9 cpu, 3.8760228E8 io, 1.3832494628975996E8 network, 7.624881215247983E7 memory}
         :  :     :              :  :  :- Calc(select=[X0, y0 AS X1]): rowcount = 28026.125186999892, cumulative cost = {1.6250682013693998E7 rows, 5.643370362129397E8 cpu, 2.214858E8 io, 7.140457515983997E7 network, 3.957936412623991E7 memory}
         :  :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 28026.125186999892, cumulative cost = {1.6222655888506997E7 rows, 5.643370362129397E8 cpu, 2.214858E8 io, 7.140457515983997E7 network, 3.957936412623991E7 memory}
         :  :     :              :  :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :  :     :              :  :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :     :              :  :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :     :              :  :  :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :  :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :  :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :  :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :  :  :     :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 51962.2875, cumulative cost = {3155773.3625000003 rows, 1.3865320299999999E7 cpu, 5.5373604E7 io, 1251402.9 network, 12880.0 memory}
         :  :     :              :  :  :        +- Calc(select=[x, y0]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :  :              :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :              :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :              :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[X0, X1]): rowcount = 20285.332061999892, cumulative cost = {1.2945262517863998E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 20285.332061999892, cumulative cost = {1.2924977185801998E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :  :     :              :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :     :              :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :     :              :  :        :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :  :        :                    +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 72352.6356629551, cumulative cost = {1.977861662322372E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 72352.6356629551, cumulative cost = {1.9706263987560764E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :  :     :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 347472.35733970144, cumulative cost = {6595054.951077811 rows, 8.381663367335334E7 cpu, 1.10747004E8 io, 8791994.924857302 network, 1734934.3367004544 memory}
         :  :     :              :           +- Calc(select=[x, X0]): rowcount = 347472.35733970144, cumulative cost = {6247582.59373811 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347472.35733970144, cumulative cost = {5900110.236398408 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 9428.382264676382, cumulative cost = {3245583.8790587066 rows, 6909418.582166087 cpu, 5.5377708E7 io, 452658.34870446636 network, 1206944.929878577 memory}
         :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 397999.7697901433, cumulative cost = {1.1997216404196285E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 397999.7697901433, cumulative cost = {1.1599216634406142E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 346277.7986009552, cumulative cost = {6587108.864615999 rows, 8.24099170759656E7 cpu, 1.10751036E8 io, 8576228.116927994 network, 1301061.7409018585 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 346277.7986009552, cumulative cost = {6240831.066015044 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346277.7986009552, cumulative cost = {5894553.267414089 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1464.6573397014572, cumulative cost = {3241221.4688131344 rows, 5767097.65228751 cpu, 5.538174E7 io, 265560.9505050682 network, 1219040.929878577 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 1464.6573397014572, cumulative cost = {3239756.811473433 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1464.6573397014572, cumulative cost = {3238292.1541337315 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 357221.0721373233, cumulative cost = {4.023518153438817E7 rows, 1.1917046279502146E9 cpu, 5.5372614E8 io, 1.4581514475434905E8 network, 7.92227155726399E7 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 357221.0721373233, cumulative cost = {3.987796046225084E7 rows, 1.1316914878311443E9 cpu, 5.5372614E8 io, 1.372418390230533E8 network, 7.92227155726399E7 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 357221.0721373233, cumulative cost = {3.952073939011352E7 rows, 1.1316914878311443E9 cpu, 5.5372614E8 io, 1.372418390230533E8 network, 7.92227155726399E7 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 74419.81424882227, cumulative cost = {3.454941031797619E7 rows, 7.250546253171537E8 cpu, 4.98356844E8 io, 8.18725430230533E7 network, 7.505520597470585E7 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.447499050372737E7 rows, 7.125520965233516E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.505520597470585E7 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 74419.81424882227, cumulative cost = {3.440057068947855E7 rows, 7.113613794953704E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.029233786278123E7 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.4326150875229724E7 rows, 6.982634921875777E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 7.029233786278123E7 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 410548.4825059023, cumulative cost = {3.42517310609809E7 rows, 6.916947164674833E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 6.552946975085661E7 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 63027.00953233071, cumulative cost = {2.0138961130538054E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 63027.00953233071, cumulative cost = {2.007593412100572E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 64702.79882540108, cumulative cost = {1.0734887841343772E7 rows, 9.052850452322999E7 cpu, 1.66120308E8 io, 6350090.185137104 network, 2.4896743856188547E7 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                             :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 347521.47297357157, cumulative cost = {1.3702221447936947E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347521.47297357157, cumulative cost = {1.3354699974963374E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 9755.819823810161, cumulative cost = {1.0700124501989802E7 rows, 8.179343588297544E7 cpu, 1.6612434E8 io, 5035394.689098923 network, 2.4908839856188547E7 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 9755.819823810161, cumulative cost = {1.0690368682165992E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9755.819823810161, cumulative cost = {1.068061286234218E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                                            :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 14110.726169651156, cumulative cost = {6.19702119475734E7 rows, 2.247466868901855E9 cpu, 8.3058612E8 io, 2.8347337777852947E8 network, 1.5492347421255782E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 14110.726169651156, cumulative cost = {6.195610122140375E7 rows, 2.247466868901855E9 cpu, 8.3058612E8 io, 2.8347337777852947E8 network, 1.5492347421255782E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 94017.80779767438, cumulative cost = {6.194147039523409E7 rows, 2.2467051878394737E9 cpu, 8.30581812E8 io, 2.8347206497852945E8 network, 1.5492043901255783E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 94017.80779767438, cumulative cost = {6.1847452587436415E7 rows, 2.245200902914711E9 cpu, 8.30581812E8 io, 2.8347206497852945E8 network, 1.4890329931350666E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 94017.80779767438, cumulative cost = {6.175343477963874E7 rows, 2.2286537687423205E9 cpu, 8.30581812E8 io, 2.8121563759138525E8 network, 1.4890329931350666E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 518663.8627020982, cumulative cost = {6.165941697184106E7 rows, 2.220355146939087E9 cpu, 8.30581812E8 io, 2.8121563759138525E8 network, 1.428861596144555E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 120664.09291195488, cumulative cost = {4.914353670494267E7 rows, 1.7286148396116114E9 cpu, 6.6446148E8 io, 2.1727011347445723E8 network, 1.2219354115190014E8 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 48311.45724899978, cumulative cost = {2.9244255988806996E7 rows, 1.0918417453736887E9 cpu, 3.8760228E8 io, 1.3832494628975996E8 network, 7.624881215247983E7 memory}
         :        :           :  :  :- Calc(select=[X0, y0 AS X1]): rowcount = 28026.125186999892, cumulative cost = {1.6250682013693998E7 rows, 5.643370362129397E8 cpu, 2.214858E8 io, 7.140457515983997E7 network, 3.957936412623991E7 memory}
         :        :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 28026.125186999892, cumulative cost = {1.6222655888506997E7 rows, 5.643370362129397E8 cpu, 2.214858E8 io, 7.140457515983997E7 network, 3.957936412623991E7 memory}
         :        :           :  :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :        :           :  :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :           :  :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :           :  :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :           :  :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :           :  :  :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :  :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :  :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :  :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :  :  :     :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 51962.2875, cumulative cost = {3155773.3625000003 rows, 1.3865320299999999E7 cpu, 5.5373604E7 io, 1251402.9 network, 12880.0 memory}
         :        :           :  :  :        +- Calc(select=[x, y0]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :  :              :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :              :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :              :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[X0, X1]): rowcount = 20285.332061999892, cumulative cost = {1.2945262517863998E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 20285.332061999892, cumulative cost = {1.2924977185801998E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :        :           :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :           :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :           :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :           :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :           :  :        :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :  :        :                    +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 72352.6356629551, cumulative cost = {1.977861662322372E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 72352.6356629551, cumulative cost = {1.9706263987560764E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :        :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 347472.35733970144, cumulative cost = {6595054.951077811 rows, 8.381663367335334E7 cpu, 1.10747004E8 io, 8791994.924857302 network, 1734934.3367004544 memory}
         :        :           :           +- Calc(select=[x, X0]): rowcount = 347472.35733970144, cumulative cost = {6247582.59373811 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347472.35733970144, cumulative cost = {5900110.236398408 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 9428.382264676382, cumulative cost = {3245583.8790587066 rows, 6909418.582166087 cpu, 5.5377708E7 io, 452658.34870446636 network, 1206944.929878577 memory}
         :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 397999.7697901433, cumulative cost = {1.1997216404196285E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 397999.7697901433, cumulative cost = {1.1599216634406142E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 346277.7986009552, cumulative cost = {6587108.864615999 rows, 8.24099170759656E7 cpu, 1.10751036E8 io, 8576228.116927994 network, 1301061.7409018585 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 346277.7986009552, cumulative cost = {6240831.066015044 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346277.7986009552, cumulative cost = {5894553.267414089 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1464.6573397014572, cumulative cost = {3241221.4688131344 rows, 5767097.65228751 cpu, 5.538174E7 io, 265560.9505050682 network, 1219040.929878577 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 1464.6573397014572, cumulative cost = {3239756.811473433 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1464.6573397014572, cumulative cost = {3238292.1541337315 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 15233.177666497362, cumulative cost = {8.370496659176642E7 rows, 2.455409814338669E9 cpu, 1.162829568E9 io, 2.9683925941273576E8 network, 1.935285857370473E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 15233.177666497362, cumulative cost = {8.368973341409992E7 rows, 2.455409814338669E9 cpu, 1.162829568E9 io, 2.9683925941273576E8 network, 1.935285857370473E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 90341.14563932574, cumulative cost = {4.916519761629408E7 rows, 1.7395993356171422E9 cpu, 6.64468692E8 io, 2.164796390003584E8 network, 1.1783333492265138E8 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 90341.14563932574, cumulative cost = {4.9074856470654756E7 rows, 1.738153877286913E9 cpu, 6.64468692E8 io, 2.164796390003584E8 network, 1.1205150160173453E8 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 90341.14563932574, cumulative cost = {4.898451532501543E7 rows, 1.7222538356543915E9 cpu, 6.64468692E8 io, 2.143114515050146E8 network, 1.1205150160173453E8 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 498380.98394147574, cumulative cost = {4.889417417937611E7 rows, 1.7142797399113278E9 cpu, 6.64468692E8 io, 2.143114515050146E8 network, 1.0626966828081769E8 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 470353.72812947584, cumulative cost = {3.214431580799064E7 rows, 1.1332369281144466E9 cpu, 4.42978884E8 io, 1.4290268744517463E8 network, 6.667781405457778E7 memory}
               :           :  :- Calc(select=[x AS X0, X1]): rowcount = 397999.94231314905, cumulative cost = {1.1946256119052742E7 rows, 4.9366387496156937E8 cpu, 1.66120008E8 io, 6.395092257541156E7 network, 2.0711667356473174E7 memory}
               :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 397999.94231314905, cumulative cost = {1.1548256176739592E7 rows, 4.9366387496156937E8 cpu, 1.66120008E8 io, 6.395092257541156E7 network, 2.0711667356473174E7 memory}
               :           :  :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :     +- Exchange(distribution=[hash[x]]): rowcount = 346278.9487543269, cumulative cost = {6536148.234426444 rows, 8.485213937153476E7 cpu, 1.10750712E8 io, 8581626.575411558 network, 1320046.2262308649 memory}
               :           :  :        +- Calc(select=[x, X1]): rowcount = 346278.9487543269, cumulative cost = {6189869.285672117 rows, 2.667727598080785E7 cpu, 1.10750712E8 io, 270931.80530771165 network, 1320046.2262308649 memory}
               :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346278.9487543269, cumulative cost = {5843590.336917791 rows, 2.667727598080785E7 cpu, 1.10750712E8 io, 270931.80530771165 network, 1320046.2262308649 memory}
               :           :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 1472.3250288462589, cumulative cost = {3190257.3881634637 rows, 8209065.380577081 cpu, 5.5381416E7 io, 270931.80530771165 network, 1237596.0246154743 memory}
               :           :  :                 +- Calc(select=[X0, X1]): rowcount = 1472.3250288462589, cumulative cost = {3188785.0631346176 rows, 7973493.375961679 cpu, 5.5381416E7 io, 235596.00461540144 network, 1237596.0246154743 memory}
               :           :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1472.3250288462589, cumulative cost = {3187312.7381057716 rows, 7973493.375961679 cpu, 5.5381416E7 io, 235596.00461540144 network, 1237596.0246154743 memory}
               :           :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :           :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :           :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :           :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :                       +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[X0, X10 AS X1]): rowcount = 72353.78581632682, cumulative cost = {1.9727705960808422E7 rows, 6.391026994247477E8 cpu, 2.76858876E8 io, 7.895176486976308E7 network, 4.596614669810461E7 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 72353.78581632682, cumulative cost = {1.9655352174992096E7 rows, 6.391026994247477E8 cpu, 2.76858876E8 io, 7.895176486976308E7 network, 4.596614669810461E7 memory}
               :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
               :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
               :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
               :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
               :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
               :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :           :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :        +- Exchange(distribution=[hash[x]]): rowcount = 347480.0250288462, cumulative cost = {6544141.988355773 rows, 8.626684161157718E7 cpu, 1.1074668E8 io, 8798592.609923113 network, 1756352.0353847444 memory}
               :           :           +- Calc(select=[x, X1]): rowcount = 347480.0250288462, cumulative cost = {6196661.963326926 rows, 2.789019740673102E7 cpu, 1.1074668E8 io, 459072.0092308029 network, 1756352.0353847444 memory}
               :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347480.0250288462, cumulative cost = {5849181.93829808 rows, 2.789019740673102E7 cpu, 1.1074668E8 io, 459072.0092308029 network, 1756352.0353847444 memory}
               :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :                 +- Exchange(distribution=[broadcast]): rowcount = 9479.500192308393, cumulative cost = {3194647.913269234 rows, 9357929.405192554 cpu, 5.5377384E7 io, 459072.0092308029 network, 1225500.0246154743 memory}
               :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :           :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :                                :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :                                :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, y AS X1]): rowcount = 28027.255811999894, cumulative cost = {1.6251477387443997E7 rows, 5.805444308129398E8 cpu, 2.21489808E8 io, 7.140876405983996E7 network, 3.959185422623991E7 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x1)], select=[X0, X1, y, x1], build=[right]): rowcount = 28027.255811999894, cumulative cost = {1.6223450131631996E7 rows, 5.805444308129398E8 cpu, 2.21489808E8 io, 7.140876405983996E7 network, 3.959185422623991E7 memory}
               :                 :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
               :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
               :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
               :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
               :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
               :                 :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :                 :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                 :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[hash[x1]]): rowcount = 51969.825, cumulative cost = {3156566.4750000006 rows, 3.00726546E7 cpu, 5.5377612E7 io, 1255591.7999999998 network, 24948.0 memory}
               :                    +- Calc(select=[y, x0 AS x1]): rowcount = 51969.825, cumulative cost = {3104596.6500000004 rows, 2.1341724E7 cpu, 5.5377612E7 io, 8316.0 network, 24948.0 memory}
               :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 51969.825, cumulative cost = {3052626.825 rows, 2.1341724E7 cpu, 5.5377612E7 io, 8316.0 network, 24948.0 memory}
               :                          :- Calc(select=[x, y]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :                          :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :                          :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                          :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :                          :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 11213.37213732334, cumulative cost = {3.450930262013934E7 rows, 7.149980425793138E8 cpu, 4.98360876E8 io, 8.035962041237734E7 network, 7.506730197470585E7 memory}
                  +- Calc(select=[X0, X1]): rowcount = 11213.37213732334, cumulative cost = {3.4498089248002015E7 rows, 7.132039030373421E8 cpu, 4.98360876E8 io, 8.009049948108158E7 network, 7.506730197470585E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 11213.37213732334, cumulative cost = {3.448687587586469E7 rows, 7.132039030373421E8 cpu, 4.98360876E8 io, 8.009049948108158E7 network, 7.506730197470585E7 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.447499050372737E7 rows, 7.125520965233516E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.505520597470585E7 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 74419.81424882227, cumulative cost = {3.440057068947855E7 rows, 7.113613794953704E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.029233786278123E7 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.4326150875229724E7 rows, 6.982634921875777E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 7.029233786278123E7 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 410548.4825059023, cumulative cost = {3.42517310609809E7 rows, 6.916947164674833E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 6.552946975085661E7 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 63027.00953233071, cumulative cost = {2.0138961130538054E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 63027.00953233071, cumulative cost = {2.007593412100572E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 64702.79882540108, cumulative cost = {1.0734887841343772E7 rows, 9.052850452322999E7 cpu, 1.66120308E8 io, 6350090.185137104 network, 2.4896743856188547E7 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 347521.47297357157, cumulative cost = {1.3702221447936947E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347521.47297357157, cumulative cost = {1.3354699974963374E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
                        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 9755.819823810161, cumulative cost = {1.0700124501989802E7 rows, 8.179343588297544E7 cpu, 1.6612434E8 io, 5035394.689098923 network, 2.4908839856188547E7 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 9755.819823810161, cumulative cost = {1.0690368682165992E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9755.819823810161, cumulative cost = {1.068061286234218E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,2,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#2] Exchange(distribution=[hash[X1]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[5])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[8])
         :        :           :              :        :           :     :- Reused(reference_id=[1])
         :        :           :              :        :           :     +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :              :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[20])
         :        :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :              :        +- Reused(reference_id=[2])
         :        :           :              :- Reused(reference_id=[3])
         :        :           :              +- Exchange(distribution=[broadcast])(reuse_id=[9])
         :        :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[4])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Exchange(distribution=[hash[x]])
         :        :           :        :  +- Reused(reference_id=[1])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])
         :        :           :                       :  +- Reused(reference_id=[4])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[11])
         :        :           :                             :- Reused(reference_id=[1])
         :        :           :                             +- Reused(reference_id=[2])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[5])
         :        :                    +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :                       +- Reused(reference_id=[6])
         :        +- Reused(reference_id=[7])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[17])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,2,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[X0, y0 AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[right])\n:  :  :     :- [#3] Exchange(distribution=[hash[X1]])\n:  :  :     +- [#6] Exchange(distribution=[hash[x]])\n:  :  +- Calc(select=[X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :        :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :        +- [#8] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], build=[left])\n:        :- [#3] Exchange(distribution=[hash[X1]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[10])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[12])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Calc(select=[y, x0])(reuse_id=[19])
         :              :                 :           :  :  +- Reused(reference_id=[8])
         :              :                 :           :  :- Reused(reference_id=[2])
         :              :                 :           :  :- Reused(reference_id=[6])
         :              :                 :           :  +- Reused(reference_id=[2])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[18])
         :              :                 :                 :- Reused(reference_id=[4])
         :              :                 :                 +- Reused(reference_id=[2])
         :              :                 +- Reused(reference_id=[7])
         :              :- Exchange(distribution=[hash[X1]])(reuse_id=[13])
         :              :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :              :     +- Exchange(distribution=[hash[X0, X1]])
         :              :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :              :- Reused(reference_id=[1])
         :              :              :- Reused(reference_id=[9])
         :              :              :- Reused(reference_id=[10])
         :              :              +- Exchange(distribution=[hash[x]])
         :              :                 +- Calc(select=[x, y0])(reuse_id=[14])
         :              :                    +- Reused(reference_id=[11])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Reused(reference_id=[12])
         :              :- Reused(reference_id=[13])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[14])
         :              :        +- Reused(reference_id=[9])
         :              :- Reused(reference_id=[15])
         :              +- Reused(reference_id=[9])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Reused(reference_id=[10])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[16])
         :- Reused(reference_id=[17])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[x, x0])
         :     +- Reused(reference_id=[18])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[1,0,1,0,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#3] Exchange(distribution=[hash[y]])\n:  :     +- [#4] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#1] Exchange(distribution=[hash[X1]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x1)], select=[X0, X1, y, x1], build=[right])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#2] Exchange(distribution=[hash[x1]])\n])
                  :- Reused(reference_id=[13])
                  :- Exchange(distribution=[hash[x1]])
                  :  +- Calc(select=[y, x0 AS x1])
                  :     +- MultipleInput(readOrder=[0,1,0], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:- Calc(select=[x, y])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#2] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#3] Exchange(distribution=[broadcast])\n+- [#1] Exchange(distribution=[broadcast])\n])
                  :        :- Reused(reference_id=[9])
                  :        :- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[7])
                  :- Reused(reference_id=[10])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Calc(select=[X0, X1])
                  :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                  :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
                  :                 :  +- Exchange(distribution=[hash[X0, X1]])
                  :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :                 :        +- Union(all=[true], union=[X0, X1])
                  :                 :           :- Calc(select=[x0 AS X0, y AS X1])
                  :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :                 :           :     :- Reused(reference_id=[19])
                  :                 :           :     +- Reused(reference_id=[7])
                  :                 :           +- Reused(reference_id=[20])
                  :                 +- Reused(reference_id=[7])
                  :- Reused(reference_id=[13])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, X1])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                           :  +- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- Reused(reference_id=[21])

Job has been submitted with JobID 4d46001c2d20e09450c46669e51122dc
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, s_3.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN s AS s_3 ON r_2.y = s_3.x UNION (SELECT p19_0.X0 AS X0, p19_0.X1 AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x) UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...

------------> using sink uuid: 5cdf8dd6_3dca_4163_b5ce_c7ce1933ec41

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0)
            UNION
            (SELECT p19_0.X0 AS X0, r_2.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)),
     p35 AS (SELECT p19_0.X0 AS X0, s_3.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN s AS s_3 ON r_2.y = s_3.x
             UNION
             (SELECT p19_0.X0 AS X0, p19_0.X1 AS X1
              FROM p19 AS p19_0
                       INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x)
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :  :  +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :  :        :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :        :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :  :  +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :     +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :  :        :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :        :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 17588.507142293565, cumulative cost = {2.483128117561535E8 rows, 8.165799697218231E9 cpu, 3.37772364E9 io, 1.012278398482703E9 network, 5.901115406856863E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 17588.507142293565, cumulative cost = {2.482952232490112E8 rows, 8.165518281103954E9 cpu, 3.37772364E9 io, 1.012278398482703E9 network, 5.889858762285795E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 17588.507142293565, cumulative cost = {2.4827763474186888E8 rows, 8.16242270384691E9 cpu, 3.37772364E9 io, 1.0118562743112879E9 network, 5.889858762285795E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 97029.73582639817, cumulative cost = {2.4826004623472658E8 rows, 8.1608702280736885E9 cpu, 3.37772364E9 io, 1.0118562743112879E9 network, 5.878602117714727E8 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 81796.55815990081, cumulative cost = {1.6445804990713376E8 rows, 5.705363383999193E9 cpu, 2.214894072E9 io, 7.150170148985522E8 network, 3.943316260344254E8 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 67685.83199024966, cumulative cost = {1.0240604140140045E8 rows, 3.457814718539178E9 cpu, 1.384307952E9 io, 4.315436371200227E8 network, 2.3940815182186753E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 67685.83199024966, cumulative cost = {1.0233835556941019E8 rows, 3.457814718539178E9 cpu, 1.384307952E9 io, 4.315436371200227E8 network, 2.3940815182186753E8 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 94017.80779767438, cumulative cost = {6.203548820303177E7 rows, 2.262500179549483E9 cpu, 8.30581812E8 io, 2.8572849236567366E8 network, 1.5492043901255783E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 94017.80779767438, cumulative cost = {6.194147039523409E7 rows, 2.2467051878394737E9 cpu, 8.30581812E8 io, 2.8347206497852945E8 network, 1.5492043901255783E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 94017.80779767438, cumulative cost = {6.1847452587436415E7 rows, 2.245200902914711E9 cpu, 8.30581812E8 io, 2.8347206497852945E8 network, 1.4890329931350666E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 94017.80779767438, cumulative cost = {6.175343477963874E7 rows, 2.2286537687423205E9 cpu, 8.30581812E8 io, 2.8121563759138525E8 network, 1.4890329931350666E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 518663.8627020982, cumulative cost = {6.165941697184106E7 rows, 2.220355146939087E9 cpu, 8.30581812E8 io, 2.8121563759138525E8 network, 1.428861596144555E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 120664.09291195488, cumulative cost = {4.914353670494267E7 rows, 1.7286148396116114E9 cpu, 6.6446148E8 io, 2.1727011347445723E8 network, 1.2219354115190014E8 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 48311.45724899978, cumulative cost = {2.9244255988806996E7 rows, 1.0918417453736887E9 cpu, 3.8760228E8 io, 1.3832494628975996E8 network, 7.624881215247983E7 memory}
         :  :     :              :  :  :- Calc(select=[X0, y0 AS X1]): rowcount = 28026.125186999892, cumulative cost = {1.6250682013693998E7 rows, 5.643370362129397E8 cpu, 2.214858E8 io, 7.140457515983997E7 network, 3.957936412623991E7 memory}
         :  :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 28026.125186999892, cumulative cost = {1.6222655888506997E7 rows, 5.643370362129397E8 cpu, 2.214858E8 io, 7.140457515983997E7 network, 3.957936412623991E7 memory}
         :  :     :              :  :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :  :     :              :  :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :     :              :  :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :     :              :  :  :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :  :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :  :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :  :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :  :  :     :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 51962.2875, cumulative cost = {3155773.3625000003 rows, 1.3865320299999999E7 cpu, 5.5373604E7 io, 1251402.9 network, 12880.0 memory}
         :  :     :              :  :  :        +- Calc(select=[x, y0]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :  :              :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :              :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :              :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[X0, X1]): rowcount = 20285.332061999892, cumulative cost = {1.2945262517863998E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 20285.332061999892, cumulative cost = {1.2924977185801998E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :  :     :              :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :     :              :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :     :              :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :     :              :  :        :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :  :        :                    +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 72352.6356629551, cumulative cost = {1.977861662322372E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 72352.6356629551, cumulative cost = {1.9706263987560764E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :  :     :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 347472.35733970144, cumulative cost = {6595054.951077811 rows, 8.381663367335334E7 cpu, 1.10747004E8 io, 8791994.924857302 network, 1734934.3367004544 memory}
         :  :     :              :           +- Calc(select=[x, X0]): rowcount = 347472.35733970144, cumulative cost = {6247582.59373811 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347472.35733970144, cumulative cost = {5900110.236398408 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 9428.382264676382, cumulative cost = {3245583.8790587066 rows, 6909418.582166087 cpu, 5.5377708E7 io, 452658.34870446636 network, 1206944.929878577 memory}
         :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 397999.7697901433, cumulative cost = {1.1997216404196285E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 397999.7697901433, cumulative cost = {1.1599216634406142E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 346277.7986009552, cumulative cost = {6587108.864615999 rows, 8.24099170759656E7 cpu, 1.10751036E8 io, 8576228.116927994 network, 1301061.7409018585 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 346277.7986009552, cumulative cost = {6240831.066015044 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346277.7986009552, cumulative cost = {5894553.267414089 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1464.6573397014572, cumulative cost = {3241221.4688131344 rows, 5767097.65228751 cpu, 5.538174E7 io, 265560.9505050682 network, 1219040.929878577 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 1464.6573397014572, cumulative cost = {3239756.811473433 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1464.6573397014572, cumulative cost = {3238292.1541337315 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 357221.0721373233, cumulative cost = {4.023518153438817E7 rows, 1.1917046279502146E9 cpu, 5.5372614E8 io, 1.4581514475434905E8 network, 7.92227155726399E7 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 357221.0721373233, cumulative cost = {3.987796046225084E7 rows, 1.1316914878311443E9 cpu, 5.5372614E8 io, 1.372418390230533E8 network, 7.92227155726399E7 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 357221.0721373233, cumulative cost = {3.952073939011352E7 rows, 1.1316914878311443E9 cpu, 5.5372614E8 io, 1.372418390230533E8 network, 7.92227155726399E7 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 74419.81424882227, cumulative cost = {3.454941031797619E7 rows, 7.250546253171537E8 cpu, 4.98356844E8 io, 8.18725430230533E7 network, 7.505520597470585E7 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.447499050372737E7 rows, 7.125520965233516E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.505520597470585E7 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 74419.81424882227, cumulative cost = {3.440057068947855E7 rows, 7.113613794953704E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.029233786278123E7 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.4326150875229724E7 rows, 6.982634921875777E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 7.029233786278123E7 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 410548.4825059023, cumulative cost = {3.42517310609809E7 rows, 6.916947164674833E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 6.552946975085661E7 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 63027.00953233071, cumulative cost = {2.0138961130538054E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 63027.00953233071, cumulative cost = {2.007593412100572E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 64702.79882540108, cumulative cost = {1.0734887841343772E7 rows, 9.052850452322999E7 cpu, 1.66120308E8 io, 6350090.185137104 network, 2.4896743856188547E7 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                             :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 347521.47297357157, cumulative cost = {1.3702221447936947E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347521.47297357157, cumulative cost = {1.3354699974963374E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 9755.819823810161, cumulative cost = {1.0700124501989802E7 rows, 8.179343588297544E7 cpu, 1.6612434E8 io, 5035394.689098923 network, 2.4908839856188547E7 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 9755.819823810161, cumulative cost = {1.0690368682165992E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9755.819823810161, cumulative cost = {1.068061286234218E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                                            :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 14110.726169651156, cumulative cost = {6.19702119475734E7 rows, 2.247466868901855E9 cpu, 8.3058612E8 io, 2.8347337777852947E8 network, 1.5492347421255782E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 14110.726169651156, cumulative cost = {6.195610122140375E7 rows, 2.247466868901855E9 cpu, 8.3058612E8 io, 2.8347337777852947E8 network, 1.5492347421255782E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 94017.80779767438, cumulative cost = {6.194147039523409E7 rows, 2.2467051878394737E9 cpu, 8.30581812E8 io, 2.8347206497852945E8 network, 1.5492043901255783E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 94017.80779767438, cumulative cost = {6.1847452587436415E7 rows, 2.245200902914711E9 cpu, 8.30581812E8 io, 2.8347206497852945E8 network, 1.4890329931350666E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 94017.80779767438, cumulative cost = {6.175343477963874E7 rows, 2.2286537687423205E9 cpu, 8.30581812E8 io, 2.8121563759138525E8 network, 1.4890329931350666E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 518663.8627020982, cumulative cost = {6.165941697184106E7 rows, 2.220355146939087E9 cpu, 8.30581812E8 io, 2.8121563759138525E8 network, 1.428861596144555E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 120664.09291195488, cumulative cost = {4.914353670494267E7 rows, 1.7286148396116114E9 cpu, 6.6446148E8 io, 2.1727011347445723E8 network, 1.2219354115190014E8 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 48311.45724899978, cumulative cost = {2.9244255988806996E7 rows, 1.0918417453736887E9 cpu, 3.8760228E8 io, 1.3832494628975996E8 network, 7.624881215247983E7 memory}
         :        :           :  :  :- Calc(select=[X0, y0 AS X1]): rowcount = 28026.125186999892, cumulative cost = {1.6250682013693998E7 rows, 5.643370362129397E8 cpu, 2.214858E8 io, 7.140457515983997E7 network, 3.957936412623991E7 memory}
         :        :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 28026.125186999892, cumulative cost = {1.6222655888506997E7 rows, 5.643370362129397E8 cpu, 2.214858E8 io, 7.140457515983997E7 network, 3.957936412623991E7 memory}
         :        :           :  :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :        :           :  :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :           :  :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :           :  :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :           :  :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :           :  :  :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :  :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :  :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :  :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :  :  :     :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 51962.2875, cumulative cost = {3155773.3625000003 rows, 1.3865320299999999E7 cpu, 5.5373604E7 io, 1251402.9 network, 12880.0 memory}
         :        :           :  :  :        +- Calc(select=[x, y0]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :  :              :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :              :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :              :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[X0, X1]): rowcount = 20285.332061999892, cumulative cost = {1.2945262517863998E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 20285.332061999892, cumulative cost = {1.2924977185801998E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :        :           :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :           :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :           :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :           :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :           :  :        :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :  :        :                    +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 72352.6356629551, cumulative cost = {1.977861662322372E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 72352.6356629551, cumulative cost = {1.9706263987560764E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :        :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 347472.35733970144, cumulative cost = {6595054.951077811 rows, 8.381663367335334E7 cpu, 1.10747004E8 io, 8791994.924857302 network, 1734934.3367004544 memory}
         :        :           :           +- Calc(select=[x, X0]): rowcount = 347472.35733970144, cumulative cost = {6247582.59373811 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347472.35733970144, cumulative cost = {5900110.236398408 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 9428.382264676382, cumulative cost = {3245583.8790587066 rows, 6909418.582166087 cpu, 5.5377708E7 io, 452658.34870446636 network, 1206944.929878577 memory}
         :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 397999.7697901433, cumulative cost = {1.1997216404196285E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 397999.7697901433, cumulative cost = {1.1599216634406142E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 346277.7986009552, cumulative cost = {6587108.864615999 rows, 8.24099170759656E7 cpu, 1.10751036E8 io, 8576228.116927994 network, 1301061.7409018585 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 346277.7986009552, cumulative cost = {6240831.066015044 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346277.7986009552, cumulative cost = {5894553.267414089 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1464.6573397014572, cumulative cost = {3241221.4688131344 rows, 5767097.65228751 cpu, 5.538174E7 io, 265560.9505050682 network, 1219040.929878577 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 1464.6573397014572, cumulative cost = {3239756.811473433 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1464.6573397014572, cumulative cost = {3238292.1541337315 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 15233.177666497362, cumulative cost = {8.370496659176642E7 rows, 2.455409814338669E9 cpu, 1.162829568E9 io, 2.9683925941273576E8 network, 1.935285857370473E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 15233.177666497362, cumulative cost = {8.368973341409992E7 rows, 2.455409814338669E9 cpu, 1.162829568E9 io, 2.9683925941273576E8 network, 1.935285857370473E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 90341.14563932574, cumulative cost = {4.916519761629408E7 rows, 1.7395993356171422E9 cpu, 6.64468692E8 io, 2.164796390003584E8 network, 1.1783333492265138E8 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 90341.14563932574, cumulative cost = {4.9074856470654756E7 rows, 1.738153877286913E9 cpu, 6.64468692E8 io, 2.164796390003584E8 network, 1.1205150160173453E8 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 90341.14563932574, cumulative cost = {4.898451532501543E7 rows, 1.7222538356543915E9 cpu, 6.64468692E8 io, 2.143114515050146E8 network, 1.1205150160173453E8 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 498380.98394147574, cumulative cost = {4.889417417937611E7 rows, 1.7142797399113278E9 cpu, 6.64468692E8 io, 2.143114515050146E8 network, 1.0626966828081769E8 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 470353.72812947584, cumulative cost = {3.214431580799064E7 rows, 1.1332369281144466E9 cpu, 4.42978884E8 io, 1.4290268744517463E8 network, 6.667781405457778E7 memory}
               :           :  :- Calc(select=[x AS X0, X1]): rowcount = 397999.94231314905, cumulative cost = {1.1946256119052742E7 rows, 4.9366387496156937E8 cpu, 1.66120008E8 io, 6.395092257541156E7 network, 2.0711667356473174E7 memory}
               :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 397999.94231314905, cumulative cost = {1.1548256176739592E7 rows, 4.9366387496156937E8 cpu, 1.66120008E8 io, 6.395092257541156E7 network, 2.0711667356473174E7 memory}
               :           :  :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :     +- Exchange(distribution=[hash[x]]): rowcount = 346278.9487543269, cumulative cost = {6536148.234426444 rows, 8.485213937153476E7 cpu, 1.10750712E8 io, 8581626.575411558 network, 1320046.2262308649 memory}
               :           :  :        +- Calc(select=[x, X1]): rowcount = 346278.9487543269, cumulative cost = {6189869.285672117 rows, 2.667727598080785E7 cpu, 1.10750712E8 io, 270931.80530771165 network, 1320046.2262308649 memory}
               :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346278.9487543269, cumulative cost = {5843590.336917791 rows, 2.667727598080785E7 cpu, 1.10750712E8 io, 270931.80530771165 network, 1320046.2262308649 memory}
               :           :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 1472.3250288462589, cumulative cost = {3190257.3881634637 rows, 8209065.380577081 cpu, 5.5381416E7 io, 270931.80530771165 network, 1237596.0246154743 memory}
               :           :  :                 +- Calc(select=[X0, X1]): rowcount = 1472.3250288462589, cumulative cost = {3188785.0631346176 rows, 7973493.375961679 cpu, 5.5381416E7 io, 235596.00461540144 network, 1237596.0246154743 memory}
               :           :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1472.3250288462589, cumulative cost = {3187312.7381057716 rows, 7973493.375961679 cpu, 5.5381416E7 io, 235596.00461540144 network, 1237596.0246154743 memory}
               :           :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :           :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :           :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :           :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :                       +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[X0, X10 AS X1]): rowcount = 72353.78581632682, cumulative cost = {1.9727705960808422E7 rows, 6.391026994247477E8 cpu, 2.76858876E8 io, 7.895176486976308E7 network, 4.596614669810461E7 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 72353.78581632682, cumulative cost = {1.9655352174992096E7 rows, 6.391026994247477E8 cpu, 2.76858876E8 io, 7.895176486976308E7 network, 4.596614669810461E7 memory}
               :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
               :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
               :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
               :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
               :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
               :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :           :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :        +- Exchange(distribution=[hash[x]]): rowcount = 347480.0250288462, cumulative cost = {6544141.988355773 rows, 8.626684161157718E7 cpu, 1.1074668E8 io, 8798592.609923113 network, 1756352.0353847444 memory}
               :           :           +- Calc(select=[x, X1]): rowcount = 347480.0250288462, cumulative cost = {6196661.963326926 rows, 2.789019740673102E7 cpu, 1.1074668E8 io, 459072.0092308029 network, 1756352.0353847444 memory}
               :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347480.0250288462, cumulative cost = {5849181.93829808 rows, 2.789019740673102E7 cpu, 1.1074668E8 io, 459072.0092308029 network, 1756352.0353847444 memory}
               :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :                 +- Exchange(distribution=[broadcast]): rowcount = 9479.500192308393, cumulative cost = {3194647.913269234 rows, 9357929.405192554 cpu, 5.5377384E7 io, 459072.0092308029 network, 1225500.0246154743 memory}
               :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :           :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :                                :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :                                :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, y AS X1]): rowcount = 28027.255811999894, cumulative cost = {1.6251477387443997E7 rows, 5.805444308129398E8 cpu, 2.21489808E8 io, 7.140876405983996E7 network, 3.959185422623991E7 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x1)], select=[X0, X1, y, x1], build=[right]): rowcount = 28027.255811999894, cumulative cost = {1.6223450131631996E7 rows, 5.805444308129398E8 cpu, 2.21489808E8 io, 7.140876405983996E7 network, 3.959185422623991E7 memory}
               :                 :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
               :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
               :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
               :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
               :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
               :                 :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :                 :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                 :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[hash[x1]]): rowcount = 51969.825, cumulative cost = {3156566.4750000006 rows, 3.00726546E7 cpu, 5.5377612E7 io, 1255591.7999999998 network, 24948.0 memory}
               :                    +- Calc(select=[y, x0 AS x1]): rowcount = 51969.825, cumulative cost = {3104596.6500000004 rows, 2.1341724E7 cpu, 5.5377612E7 io, 8316.0 network, 24948.0 memory}
               :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 51969.825, cumulative cost = {3052626.825 rows, 2.1341724E7 cpu, 5.5377612E7 io, 8316.0 network, 24948.0 memory}
               :                          :- Calc(select=[x, y]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :                          :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :                          :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                          :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :                          :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 11213.37213732334, cumulative cost = {3.450930262013934E7 rows, 7.149980425793138E8 cpu, 4.98360876E8 io, 8.035962041237734E7 network, 7.506730197470585E7 memory}
                  +- Calc(select=[X0, X1]): rowcount = 11213.37213732334, cumulative cost = {3.4498089248002015E7 rows, 7.132039030373421E8 cpu, 4.98360876E8 io, 8.009049948108158E7 network, 7.506730197470585E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 11213.37213732334, cumulative cost = {3.448687587586469E7 rows, 7.132039030373421E8 cpu, 4.98360876E8 io, 8.009049948108158E7 network, 7.506730197470585E7 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.447499050372737E7 rows, 7.125520965233516E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.505520597470585E7 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 74419.81424882227, cumulative cost = {3.440057068947855E7 rows, 7.113613794953704E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.029233786278123E7 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.4326150875229724E7 rows, 6.982634921875777E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 7.029233786278123E7 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 410548.4825059023, cumulative cost = {3.42517310609809E7 rows, 6.916947164674833E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 6.552946975085661E7 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 63027.00953233071, cumulative cost = {2.0138961130538054E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 63027.00953233071, cumulative cost = {2.007593412100572E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 64702.79882540108, cumulative cost = {1.0734887841343772E7 rows, 9.052850452322999E7 cpu, 1.66120308E8 io, 6350090.185137104 network, 2.4896743856188547E7 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 347521.47297357157, cumulative cost = {1.3702221447936947E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347521.47297357157, cumulative cost = {1.3354699974963374E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
                        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 9755.819823810161, cumulative cost = {1.0700124501989802E7 rows, 8.179343588297544E7 cpu, 1.6612434E8 io, 5035394.689098923 network, 2.4908839856188547E7 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 9755.819823810161, cumulative cost = {1.0690368682165992E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9755.819823810161, cumulative cost = {1.068061286234218E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,2,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#2] Exchange(distribution=[hash[X1]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[5])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[8])
         :        :           :              :        :           :     :- Reused(reference_id=[1])
         :        :           :              :        :           :     +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :              :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[20])
         :        :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :              :        +- Reused(reference_id=[2])
         :        :           :              :- Reused(reference_id=[3])
         :        :           :              +- Exchange(distribution=[broadcast])(reuse_id=[9])
         :        :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[4])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Exchange(distribution=[hash[x]])
         :        :           :        :  +- Reused(reference_id=[1])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])
         :        :           :                       :  +- Reused(reference_id=[4])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[11])
         :        :           :                             :- Reused(reference_id=[1])
         :        :           :                             +- Reused(reference_id=[2])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[5])
         :        :                    +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :                       +- Reused(reference_id=[6])
         :        +- Reused(reference_id=[7])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[17])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,2,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[X0, y0 AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[right])\n:  :  :     :- [#3] Exchange(distribution=[hash[X1]])\n:  :  :     +- [#6] Exchange(distribution=[hash[x]])\n:  :  +- Calc(select=[X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :        :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :        +- [#8] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], build=[left])\n:        :- [#3] Exchange(distribution=[hash[X1]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[10])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[12])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Calc(select=[y, x0])(reuse_id=[19])
         :              :                 :           :  :  +- Reused(reference_id=[8])
         :              :                 :           :  :- Reused(reference_id=[2])
         :              :                 :           :  :- Reused(reference_id=[6])
         :              :                 :           :  +- Reused(reference_id=[2])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[18])
         :              :                 :                 :- Reused(reference_id=[4])
         :              :                 :                 +- Reused(reference_id=[2])
         :              :                 +- Reused(reference_id=[7])
         :              :- Exchange(distribution=[hash[X1]])(reuse_id=[13])
         :              :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :              :     +- Exchange(distribution=[hash[X0, X1]])
         :              :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :              :- Reused(reference_id=[1])
         :              :              :- Reused(reference_id=[9])
         :              :              :- Reused(reference_id=[10])
         :              :              +- Exchange(distribution=[hash[x]])
         :              :                 +- Calc(select=[x, y0])(reuse_id=[14])
         :              :                    +- Reused(reference_id=[11])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Reused(reference_id=[12])
         :              :- Reused(reference_id=[13])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[14])
         :              :        +- Reused(reference_id=[9])
         :              :- Reused(reference_id=[15])
         :              +- Reused(reference_id=[9])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Reused(reference_id=[10])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[16])
         :- Reused(reference_id=[17])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[x, x0])
         :     +- Reused(reference_id=[18])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[1,0,1,0,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#3] Exchange(distribution=[hash[y]])\n:  :     +- [#4] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#1] Exchange(distribution=[hash[X1]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x1)], select=[X0, X1, y, x1], build=[right])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#2] Exchange(distribution=[hash[x1]])\n])
                  :- Reused(reference_id=[13])
                  :- Exchange(distribution=[hash[x1]])
                  :  +- Calc(select=[y, x0 AS x1])
                  :     +- MultipleInput(readOrder=[0,1,0], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:- Calc(select=[x, y])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#2] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#3] Exchange(distribution=[broadcast])\n+- [#1] Exchange(distribution=[broadcast])\n])
                  :        :- Reused(reference_id=[9])
                  :        :- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[7])
                  :- Reused(reference_id=[10])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Calc(select=[X0, X1])
                  :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                  :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
                  :                 :  +- Exchange(distribution=[hash[X0, X1]])
                  :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :                 :        +- Union(all=[true], union=[X0, X1])
                  :                 :           :- Calc(select=[x0 AS X0, y AS X1])
                  :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :                 :           :     :- Reused(reference_id=[19])
                  :                 :           :     +- Reused(reference_id=[7])
                  :                 :           +- Reused(reference_id=[20])
                  :                 +- Reused(reference_id=[7])
                  :- Reused(reference_id=[13])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, X1])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                           :  +- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- Reused(reference_id=[21])

Job has been submitted with JobID 4812022e420671af5cd84a2b5ac41bed
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, s_3.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN s AS s_3 ON r_2.y = s_3.x UNION (SELECT p19_0.X0 AS X0, p19_0.X1 AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x) UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...

------------> using sink uuid: 481e0519_5633_452f_8ca7_aeff8999a0b7

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0)
            UNION
            (SELECT p19_0.X0 AS X0, r_2.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)),
     p35 AS (SELECT p19_0.X0 AS X0, s_3.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN s AS s_3 ON r_2.y = s_3.x
             UNION
             (SELECT p19_0.X0 AS X0, p19_0.X1 AS X1
              FROM p19 AS p19_0
                       INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x)
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :  :  +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :  :        :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :        :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :  :  +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :     +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :  :        :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :        :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 48630.129936497506, cumulative cost = {7.485726281378016E8 rows, 3.2556325221941986E10 cpu, 9.384708432E9 io, 4.222214376202721E9 network, 1.6508161285231347E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 48630.129936497506, cumulative cost = {7.485239980078652E8 rows, 3.2555547139863003E10 cpu, 9.384708432E9 io, 4.222214376202721E9 network, 1.6477038002071989E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 48630.129936497506, cumulative cost = {7.484753678779287E8 rows, 3.254698823699418E10 cpu, 9.384708432E9 io, 4.221047253084245E9 network, 1.6477038002071989E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 268275.6769956579, cumulative cost = {7.484267377479923E8 rows, 3.2542695826162247E10 cpu, 9.384708432E9 io, 4.221047253084245E9 network, 1.644591471891263E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 227255.73045722442, cumulative cost = {4.889650990166297E8 rows, 2.1236451962126232E10 cpu, 6.153893208E9 io, 2.7557672585795875E9 network, 1.0953197717935216E9 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 188061.246932862, cumulative cost = {3.101545982558362E8 rows, 1.3915073438887978E10 cpu, 3.846182856E9 io, 1.814338958985187E9 network, 6.649821979584379E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 188061.246932862, cumulative cost = {3.099665370089033E8 rows, 1.3915073438887978E10 cpu, 3.846182856E9 io, 1.814338958985187E9 network, 6.649821979584379E8 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 261211.65682908279, cumulative cost = {1.7876524602011666E8 rows, 7.362930144400452E9 cpu, 2.307703548E9 io, 9.476953177582984E8 network, 4.303327914350838E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 261211.65682908279, cumulative cost = {1.7850403436328757E8 rows, 7.319046586053165E9 cpu, 2.307703548E9 io, 9.414262379944004E8 network, 4.303327914350838E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 261211.65682908279, cumulative cost = {1.7824282270645848E8 rows, 7.3148671995439005E9 cpu, 2.307703548E9 io, 9.414262379944004E8 network, 4.1361524539802253E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 261211.65682908279, cumulative cost = {1.779816110496294E8 rows, 7.268893947941982E9 cpu, 2.307703548E9 io, 9.351571582305024E8 network, 4.1361524539802253E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1441014.7405834137, cumulative cost = {1.777203993928003E8 rows, 7.245837712092648E9 cpu, 2.307703548E9 io, 9.351571582305024E8 network, 3.9689769936096126E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 335182.98507211695, cumulative cost = {1.4294748850164253E8 rows, 5.879623416344265E9 cpu, 1.846155432E9 io, 7.574921718340883E8 network, 3.394220455283258E8 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 134155.10827564687, cumulative cost = {8.125015638959204E7 rows, 3.0333485101035004E9 cpu, 1.076923152E9 io, 3.8430958626615524E8 network, 2.11787305008552E8 memory}
         :  :     :              :  :  :- Calc(select=[X0, y0 AS X1]): rowcount = 77858.57238782344, cumulative cost = {4.5149966061784275E7 rows, 1.5678364107747934E9 cpu, 6.15382728E8 io, 1.983834909241035E8 network, 1.09934399984276E8 memory}
         :  :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 77858.57238782344, cumulative cost = {4.507210748939645E7 rows, 1.5678364107747934E9 cpu, 6.15382728E8 io, 1.983834909241035E8 network, 1.09934399984276E8 memory}
         :  :     :              :  :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :  :     :              :  :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :     :              :  :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :     :              :  :  :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :  :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :  :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :  :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :  :  :     :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 144311.90999999997, cumulative cost = {8767191.530000001 rows, 3.844169108E7 cpu, 1.53849084E8 io, 3470289.8399999994 network, 20368.0 memory}
         :  :     :              :  :  :        +- Calc(select=[x, y0]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :  :              :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :              :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :              :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[X0, X1]): rowcount = 56296.53588782344, cumulative cost = {3.596603521953212E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 56296.53588782344, cumulative cost = {3.5909738683644295E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :  :     :              :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :     :              :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :     :              :  :        :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :  :        :                    +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 201027.8767964701, cumulative cost = {6.136214912697835E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 201027.8767964701, cumulative cost = {6.116112125018188E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :  :     :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 965440.6060576444, cumulative cost = {2.4733035986376785E7 rows, 1.309975973992438E9 cpu, 3.07698636E8 io, 1.7826938448382965E8 network, 4816442.097377036 memory}
         :  :     :              :           +- Calc(select=[x, X0]): rowcount = 965440.6060576444, cumulative cost = {2.376759538031914E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 965440.6060576444, cumulative cost = {2.2802154774261497E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :  :     :              :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[hash[X1]]): rowcount = 26175.70705096215, cumulative cost = {9016524.168203853 rows, 1.9395826518346377E7 cpu, 1.53856356E8 io, 1256529.9384461832 network, 3350602.5025231554 memory}
         :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 1105831.755511297, cumulative cost = {3.3331896150574356E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 1105831.755511297, cumulative cost = {3.2226064395063058E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 962116.7034086465, cumulative cost = {1.8300042639551762E7 rows, 2.2889962738052928E8 cpu, 3.07705836E8 io, 2.382270639641407E7 network, 3597118.4417512375 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 962116.7034086465, cumulative cost = {1.7337925936143115E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962116.7034086465, cumulative cost = {1.6375809232734468E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 4016.3560576443224, cumulative cost = {9003597.529325822 rows, 1.5951130359415522E7 cpu, 1.53863556E8 io, 731905.5146065553 network, 3372202.5025231554 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 4016.3560576443224, cumulative cost = {8999581.173268178 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4016.3560576443224, cumulative cost = {8995564.817210535 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 992529.9893899972, cumulative cost = {1.3101322974185382E8 rows, 6.542113361317773E9 cpu, 1.538479308E9 io, 8.666436412268888E8 network, 2.2002155374092555E8 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 992529.9893899972, cumulative cost = {1.3002069975246382E8 rows, 6.375368323100253E9 cpu, 1.538479308E9 io, 8.428229214815289E8 network, 2.2002155374092555E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 992529.9893899972, cumulative cost = {1.2902816976307382E8 rows, 6.375368323100253E9 cpu, 1.538479308E9 io, 8.428229214815289E8 network, 2.2002155374092555E8 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 206771.5959333153, cumulative cost = {1.1521544977368382E8 rows, 5.245537430332787E9 cpu, 1.384637028E9 io, 6.889806414815289E8 network, 2.0844234436865988E8 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.150086781777505E8 rows, 5.210799802215989E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 2.0844234436865988E8 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 206771.5959333153, cumulative cost = {1.1480190658181718E8 rows, 5.207491456681056E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 1.952089622289277E8 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.1459513498588386E8 rows, 5.171099655796793E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.952089622289277E8 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 1140687.6756224853, cumulative cost = {1.1438836338995054E8 rows, 5.152848652986834E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.8197558008919552E8 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 175115.28760917907, cumulative cost = {6.2360548979872726E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 175115.28760917907, cumulative cost = {6.218543369226354E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 179761.68948028254, cumulative cost = {3.623319088764287E7 rows, 1.328521145834818E9 cpu, 4.61548092E8 io, 1.7147682713648033E8 network, 6.914175207815145E7 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                             :     :              :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                             :     :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 965572.3880133063, cumulative cost = {5.088712673445533E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965572.3880133063, cumulative cost = {4.992155434644203E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :  :                                   :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                                   :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[hash[X0]]): rowcount = 27054.25342204238, cumulative cost = {3.613579195842872E7 rows, 1.3044051900928757E9 cpu, 4.61555292E8 io, 1.678190486710826E8 network, 6.916335207815145E7 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 27054.25342204238, cumulative cost = {3.6108737705006674E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 27054.25342204238, cumulative cost = {3.608168345158463E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                                            :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                                            :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :           :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 39194.48352436242, cumulative cost = {1.7858324503033626E8 rows, 7.321151267507798E9 cpu, 2.307710352E9 io, 9.414282995944004E8 network, 4.303375738350838E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 39194.48352436242, cumulative cost = {1.785440505468119E8 rows, 7.321151267507798E9 cpu, 2.307710352E9 io, 9.414282995944004E8 network, 4.303375738350838E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 261211.65682908279, cumulative cost = {1.7850403436328757E8 rows, 7.319046586053165E9 cpu, 2.307703548E9 io, 9.414262379944004E8 network, 4.303327914350838E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 261211.65682908279, cumulative cost = {1.7824282270645848E8 rows, 7.3148671995439005E9 cpu, 2.307703548E9 io, 9.414262379944004E8 network, 4.1361524539802253E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 261211.65682908279, cumulative cost = {1.779816110496294E8 rows, 7.268893947941982E9 cpu, 2.307703548E9 io, 9.351571582305024E8 network, 4.1361524539802253E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1441014.7405834137, cumulative cost = {1.777203993928003E8 rows, 7.245837712092648E9 cpu, 2.307703548E9 io, 9.351571582305024E8 network, 3.9689769936096126E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 335182.98507211695, cumulative cost = {1.4294748850164253E8 rows, 5.879623416344265E9 cpu, 1.846155432E9 io, 7.574921718340883E8 network, 3.394220455283258E8 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 134155.10827564687, cumulative cost = {8.125015638959204E7 rows, 3.0333485101035004E9 cpu, 1.076923152E9 io, 3.8430958626615524E8 network, 2.11787305008552E8 memory}
         :        :           :  :  :- Calc(select=[X0, y0 AS X1]): rowcount = 77858.57238782344, cumulative cost = {4.5149966061784275E7 rows, 1.5678364107747934E9 cpu, 6.15382728E8 io, 1.983834909241035E8 network, 1.09934399984276E8 memory}
         :        :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 77858.57238782344, cumulative cost = {4.507210748939645E7 rows, 1.5678364107747934E9 cpu, 6.15382728E8 io, 1.983834909241035E8 network, 1.09934399984276E8 memory}
         :        :           :  :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :        :           :  :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :           :  :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :           :  :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :           :  :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :           :  :  :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :  :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :  :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :  :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :  :  :     :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 144311.90999999997, cumulative cost = {8767191.530000001 rows, 3.844169108E7 cpu, 1.53849084E8 io, 3470289.8399999994 network, 20368.0 memory}
         :        :           :  :  :        +- Calc(select=[x, y0]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :  :              :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :              :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :              :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[X0, X1]): rowcount = 56296.53588782344, cumulative cost = {3.596603521953212E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 56296.53588782344, cumulative cost = {3.5909738683644295E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :        :           :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :           :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :           :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :           :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :           :  :        :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :  :        :                    +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 201027.8767964701, cumulative cost = {6.136214912697835E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 201027.8767964701, cumulative cost = {6.116112125018188E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :        :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 965440.6060576444, cumulative cost = {2.4733035986376785E7 rows, 1.309975973992438E9 cpu, 3.07698636E8 io, 1.7826938448382965E8 network, 4816442.097377036 memory}
         :        :           :           +- Calc(select=[x, X0]): rowcount = 965440.6060576444, cumulative cost = {2.376759538031914E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 965440.6060576444, cumulative cost = {2.2802154774261497E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :        :           :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[hash[X1]]): rowcount = 26175.70705096215, cumulative cost = {9016524.168203853 rows, 1.9395826518346377E7 cpu, 1.53856356E8 io, 1256529.9384461832 network, 3350602.5025231554 memory}
         :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 1105831.755511297, cumulative cost = {3.3331896150574356E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 1105831.755511297, cumulative cost = {3.2226064395063058E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 962116.7034086465, cumulative cost = {1.8300042639551762E7 rows, 2.2889962738052928E8 cpu, 3.07705836E8 io, 2.382270639641407E7 network, 3597118.4417512375 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 962116.7034086465, cumulative cost = {1.7337925936143115E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962116.7034086465, cumulative cost = {1.6375809232734468E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 4016.3560576443224, cumulative cost = {9003597.529325822 rows, 1.5951130359415522E7 cpu, 1.53863556E8 io, 731905.5146065553 network, 3372202.5025231554 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 4016.3560576443224, cumulative cost = {8999581.173268178 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4016.3560576443224, cumulative cost = {8995564.817210535 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 41019.94653843347, cumulative cost = {2.591933630543669E8 rows, 1.130597558835902E10 cpu, 3.230815224E9 io, 1.4652799945046577E9 network, 5.492717000977415E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], build=[right]): rowcount = 41019.94653843347, cumulative cost = {2.5915234310782844E8 rows, 1.130597558835902E10 cpu, 3.230815224E9 io, 1.4652799945046577E9 network, 5.492717000977415E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 242360.57086622587, cumulative cost = {1.4400812776536947E8 rows, 6.086007318675995E9 cpu, 1.846170996E9 io, 7.805081335801686E8 network, 3.390658343232417E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 242360.57086622587, cumulative cost = {1.4376576719450325E8 rows, 6.045290742770469E9 cpu, 1.846170996E9 io, 7.746914798793792E8 network, 3.390658343232417E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 242360.57086622587, cumulative cost = {1.4352340662363702E8 rows, 6.041412973636609E9 cpu, 1.846170996E9 io, 7.746914798793792E8 network, 3.2355475778780323E8 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 242360.57086622587, cumulative cost = {1.432810460527708E8 rows, 5.998757513164153E9 cpu, 1.846170996E9 io, 7.688748261785897E8 network, 3.2355475778780323E8 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1337019.7922788807, cumulative cost = {1.4303868548190457E8 rows, 5.977365196487691E9 cpu, 1.846170996E9 io, 7.688748261785897E8 network, 3.0804368125236475E8 memory}
               :              :- Union(all=[true], union=[X0, X1]): rowcount = 1306862.0468957073, cumulative cost = {9.571616754007506E7 rows, 4.2254664351935163E9 cpu, 1.230781092E9 io, 5.508692690944862E8 network, 1.8518344282996798E8 memory}
               :              :  :- Calc(select=[x AS X0, X1]): rowcount = 1105832.07045755, cumulative cost = {3.3189480964450616E7 rows, 1.371488855565088E9 cpu, 4.61548464E8 io, 1.7767474034828407E8 network, 5.7510015907064155E7 memory}
               :              :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 1105832.07045755, cumulative cost = {3.2083648893993065E7 rows, 1.371488855565088E9 cpu, 4.61548464E8 io, 1.7767474034828407E8 network, 5.7510015907064155E7 memory}
               :              :  :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :     +- Exchange(distribution=[hash[x]]): rowcount = 962118.8030503338, cumulative cost = {1.8157626823535513E7 rows, 2.3561518514068538E8 cpu, 3.07706184E8 io, 2.3832460348284073E7 network, 3631362.936245466 memory}
               :              :  :        +- Calc(select=[x, X1]): rowcount = 962118.8030503338, cumulative cost = {1.7195508020485178E7 rows, 7.397922622822931E7 cpu, 3.07706184E8 io, 741609.075076062 network, 3631362.936245466 memory}
               :              :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962118.8030503338, cumulative cost = {1.6233389217434842E7 rows, 7.397922622822931E7 cpu, 3.07706184E8 io, 741609.075076062 network, 3631362.936245466 memory}
               :              :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :              +- Exchange(distribution=[broadcast]): rowcount = 4030.3536688916415, cumulative cost = {8861175.414384509 rows, 2.2666223398878183E7 cpu, 1.53863904E8 io, 741609.075076062 network, 3405663.130787534 memory}
               :              :  :                 +- Calc(select=[X0, X1]): rowcount = 4030.3536688916415, cumulative cost = {8857145.060715618 rows, 2.202136681185552E7 cpu, 1.53863904E8 io, 644880.5870226626 network, 3405663.130787534 memory}
               :              :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4030.3536688916415, cumulative cost = {8853114.707046727 rows, 2.202136681185552E7 cpu, 1.53863904E8 io, 644880.5870226626 network, 3405663.130787534 memory}
               :              :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :              :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :              :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :              :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :                       +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  +- Calc(select=[X0, X10 AS X1]): rowcount = 201029.97643815717, cumulative cost = {6.121982452872873E7 rows, 2.8526707175815325E9 cpu, 7.69232628E8 io, 3.7319452874620223E8 network, 1.2767342692290384E8 memory}
               :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 201029.97643815717, cumulative cost = {6.101879455229057E7 rows, 2.8526707175815325E9 cpu, 7.69232628E8 io, 3.7319452874620223E8 network, 1.2767342692290384E8 memory}
               :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
               :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
               :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
               :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
               :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
               :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :              :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :        +- Exchange(distribution=[hash[x]]): rowcount = 965454.6036688916, cumulative cost = {2.4590707188843787E7 rows, 1.3167068563373878E9 cpu, 3.07698984E8 io, 1.782813276620987E8 network, 4855128.500507081 memory}
               :              :           +- Calc(select=[x, X1]): rowcount = 965454.6036688916, cumulative cost = {2.3625252585174896E7 rows, 1.154510482921014E9 cpu, 3.07698984E8 io, 1.5511041717404532E8 network, 4855128.500507081 memory}
               :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965454.6036688916, cumulative cost = {2.2659797981506005E7 rows, 1.154510482921014E9 cpu, 3.07698984E8 io, 1.5511041717404532E8 network, 4855128.500507081 memory}
               :              :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :                 +- Exchange(distribution=[hash[X0]]): rowcount = 26269.02445927761, cumulative cost = {8874153.377837114 rows, 2.6123610725339938E7 cpu, 1.53856704E8 io, 1268137.1740453253 network, 3384063.130787534 memory}
               :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :              :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :                                :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :                                :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[X0, y AS X1]): rowcount = 30157.745383173515, cumulative cost = {4.5985498149550624E7 rows, 1.7505617415018961E9 cpu, 6.15389904E8 io, 2.180055570841035E8 network, 1.2286023842239675E8 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[X0, y, x], isBroadcast=[true], build=[right]): rowcount = 30157.745383173515, cumulative cost = {4.595534040416745E7 rows, 1.7505617415018961E9 cpu, 6.15389904E8 io, 2.180055570841035E8 network, 1.2286023842239675E8 memory}
               :                    :- Calc(select=[X0, y]): rowcount = 200451.63588782345, cumulative cost = {4.592398265878428E7 rows, 1.7488573284147935E9 cpu, 6.15382704E8 io, 2.179983570841035E8 network, 1.2283863842239675E8 memory}
               :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], build=[left]): rowcount = 200451.63588782345, cumulative cost = {4.5723531022896454E7 rows, 1.7488573284147935E9 cpu, 6.15382704E8 io, 2.179983570841035E8 network, 1.2283863842239675E8 memory}
               :                    :     :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
               :                    :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
               :                    :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
               :                    :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
               :                    :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
               :                    :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                    :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                    :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                    :     :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                    :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                    :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                    :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                    :     +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
               :                    :        +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                    :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[X0]]): rowcount = 31105.739389997292, cumulative cost = {1.151031953959205E8 rows, 5.217780539200975E9 cpu, 1.384644228E9 io, 6.847718609244893E8 network, 2.0846394436865988E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 31105.739389997292, cumulative cost = {1.150720896565305E8 rows, 5.212554774983456E9 cpu, 1.384644228E9 io, 6.840253231791294E8 network, 2.0846394436865988E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 31105.739389997292, cumulative cost = {1.150409839171405E8 rows, 5.212554774983456E9 cpu, 1.384644228E9 io, 6.840253231791294E8 network, 2.0846394436865988E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.150086781777505E8 rows, 5.210799802215989E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 2.0844234436865988E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 206771.5959333153, cumulative cost = {1.1480190658181718E8 rows, 5.207491456681056E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 1.952089622289277E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.1459513498588386E8 rows, 5.171099655796793E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.952089622289277E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1140687.6756224853, cumulative cost = {1.1438836338995054E8 rows, 5.152848652986834E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.8197558008919552E8 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 175115.28760917907, cumulative cost = {6.2360548979872726E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 175115.28760917907, cumulative cost = {6.218543369226354E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 179761.68948028254, cumulative cost = {3.623319088764287E7 rows, 1.328521145834818E9 cpu, 4.61548092E8 io, 1.7147682713648033E8 network, 6.914175207815145E7 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :           :     :              :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :     :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 965572.3880133063, cumulative cost = {5.088712673445533E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965572.3880133063, cumulative cost = {4.992155434644203E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
                        :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[hash[X0]]): rowcount = 27054.25342204238, cumulative cost = {3.613579195842872E7 rows, 1.3044051900928757E9 cpu, 4.61555292E8 io, 1.678190486710826E8 network, 6.916335207815145E7 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 27054.25342204238, cumulative cost = {3.6108737705006674E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 27054.25342204238, cumulative cost = {3.608168345158463E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[1,0,1,2,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#3] Exchange(distribution=[hash[X1]])\n:  :     +- [#4] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#5] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#6] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], build=[right])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#2] Exchange(distribution=[hash[X0]])\n])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[0,1,0,1,2,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#2] Exchange(distribution=[hash[y]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#4] Exchange(distribution=[hash[X1]])\n:        +- [#5] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[X0, y, x], isBroadcast=[true], build=[right])\n      :- Calc(select=[X0, y])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], build=[left])\n      :     :- [#4] Exchange(distribution=[hash[X1]])\n      :     +- [#7] Exchange(distribution=[hash[x]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[3])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[6])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- Calc(select=[x0 AS X0, y AS X1])
         :              :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :                 :           :     :- Calc(select=[y, x0])(reuse_id=[15])
         :              :                 :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[9])
         :              :                 :           :     :     :- Reused(reference_id=[1])
         :              :                 :           :     :     +- Exchange(distribution=[broadcast])(reuse_id=[5])
         :              :                 :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :              :                 :           :     +- Reused(reference_id=[2])
         :              :                 :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[10])
         :              :                 :              +- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[2])
         :              :- Exchange(distribution=[hash[X1]])(reuse_id=[7])
         :              :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :              :     +- Exchange(distribution=[hash[X0, X1]])
         :              :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :              :- Reused(reference_id=[1])
         :              :              :- Exchange(distribution=[broadcast])(reuse_id=[8])
         :              :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[12])
         :              :              :- Reused(reference_id=[4])
         :              :              +- Exchange(distribution=[hash[x]])
         :              :                 +- Calc(select=[x, y0])(reuse_id=[17])
         :              :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[13])
         :              :                       :- Reused(reference_id=[1])
         :              :                       +- Reused(reference_id=[5])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :              :        :- Reused(reference_id=[4])
         :              :        +- Exchange(distribution=[hash[X0]])
         :              :           +- Reused(reference_id=[6])
         :              :- Reused(reference_id=[7])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, y])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Reused(reference_id=[8])
         :- Exchange(distribution=[hash[X0]])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[hash[X0]])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[14])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Reused(reference_id=[4])
         :        :           :              :- Exchange(distribution=[hash[x]])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[11])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- Reused(reference_id=[9])
         :        :           :              :        :           +- Reused(reference_id=[10])
         :        :           :              :        +- Reused(reference_id=[5])
         :        :           :              :- Reused(reference_id=[11])
         :        :           :              +- Reused(reference_id=[8])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Exchange(distribution=[hash[x]])
         :        :           :        :  +- Reused(reference_id=[1])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])
         :        :           :                       :  +- Reused(reference_id=[12])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- Reused(reference_id=[13])
         :        :           :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[hash[X0]])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[14])
         :        :                    +- Reused(reference_id=[2])
         :        +- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[20])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,2,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[X0, y0 AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[right])\n:  :  :     :- [#3] Exchange(distribution=[hash[X1]])\n:  :  :     +- [#6] Exchange(distribution=[hash[x]])\n:  :  +- Calc(select=[X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :        :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :        +- [#8] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], build=[left])\n:        :- [#3] Exchange(distribution=[hash[X1]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Reused(reference_id=[4])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Reused(reference_id=[15])
         :              :                 :           :  :- Reused(reference_id=[5])
         :              :                 :           :  :- Reused(reference_id=[3])
         :              :                 :           :  +- Reused(reference_id=[5])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[21])
         :              :                 :                 :- Reused(reference_id=[12])
         :              :                 :                 +- Reused(reference_id=[5])
         :              :                 +- Reused(reference_id=[2])
         :              :- Reused(reference_id=[7])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], build=[right])
         :              :        :- Reused(reference_id=[4])
         :              :        +- Exchange(distribution=[hash[X1]])
         :              :           +- Reused(reference_id=[16])
         :              :- Reused(reference_id=[7])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[17])
         :              :        +- Reused(reference_id=[8])
         :              :- Reused(reference_id=[18])
         :              +- Reused(reference_id=[8])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[19])
         :- Reused(reference_id=[20])
         +- Exchange(distribution=[broadcast])
            +- Calc(select=[x, x0])
               +- Reused(reference_id=[21])

Job has been submitted with JobID 2bc4d7090c51718459d778c9ccb5124b
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, s_3.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN s AS s_3 ON r_2.y = s_3.x UNION (SELECT p19_0.X0 AS X0, p19_0.X1 AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x) UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 4adfd26a_4c84_4b43_80ee_4889625a7bc1

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0)
            UNION
            (SELECT p19_0.X0 AS X0, r_2.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)),
     p35 AS (SELECT p19_0.X0 AS X0, s_3.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN s AS s_3 ON r_2.y = s_3.x
             UNION
             (SELECT p19_0.X0 AS X0, p19_0.X1 AS X1
              FROM p19 AS p19_0
                       INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x)
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :  :  +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :  :        :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :        :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :  :  +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :     +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :  :        :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :        :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 48630.129936497506, cumulative cost = {7.485726281378016E8 rows, 3.2556325221941986E10 cpu, 9.384708432E9 io, 4.222214376202721E9 network, 1.6508161285231347E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 48630.129936497506, cumulative cost = {7.485239980078652E8 rows, 3.2555547139863003E10 cpu, 9.384708432E9 io, 4.222214376202721E9 network, 1.6477038002071989E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 48630.129936497506, cumulative cost = {7.484753678779287E8 rows, 3.254698823699418E10 cpu, 9.384708432E9 io, 4.221047253084245E9 network, 1.6477038002071989E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 268275.6769956579, cumulative cost = {7.484267377479923E8 rows, 3.2542695826162247E10 cpu, 9.384708432E9 io, 4.221047253084245E9 network, 1.644591471891263E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 227255.73045722442, cumulative cost = {4.889650990166297E8 rows, 2.1236451962126232E10 cpu, 6.153893208E9 io, 2.7557672585795875E9 network, 1.0953197717935216E9 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 188061.246932862, cumulative cost = {3.101545982558362E8 rows, 1.3915073438887978E10 cpu, 3.846182856E9 io, 1.814338958985187E9 network, 6.649821979584379E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 188061.246932862, cumulative cost = {3.099665370089033E8 rows, 1.3915073438887978E10 cpu, 3.846182856E9 io, 1.814338958985187E9 network, 6.649821979584379E8 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 261211.65682908279, cumulative cost = {1.7876524602011666E8 rows, 7.362930144400452E9 cpu, 2.307703548E9 io, 9.476953177582984E8 network, 4.303327914350838E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 261211.65682908279, cumulative cost = {1.7850403436328757E8 rows, 7.319046586053165E9 cpu, 2.307703548E9 io, 9.414262379944004E8 network, 4.303327914350838E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 261211.65682908279, cumulative cost = {1.7824282270645848E8 rows, 7.3148671995439005E9 cpu, 2.307703548E9 io, 9.414262379944004E8 network, 4.1361524539802253E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 261211.65682908279, cumulative cost = {1.779816110496294E8 rows, 7.268893947941982E9 cpu, 2.307703548E9 io, 9.351571582305024E8 network, 4.1361524539802253E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1441014.7405834137, cumulative cost = {1.777203993928003E8 rows, 7.245837712092648E9 cpu, 2.307703548E9 io, 9.351571582305024E8 network, 3.9689769936096126E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 335182.98507211695, cumulative cost = {1.4294748850164253E8 rows, 5.879623416344265E9 cpu, 1.846155432E9 io, 7.574921718340883E8 network, 3.394220455283258E8 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 134155.10827564687, cumulative cost = {8.125015638959204E7 rows, 3.0333485101035004E9 cpu, 1.076923152E9 io, 3.8430958626615524E8 network, 2.11787305008552E8 memory}
         :  :     :              :  :  :- Calc(select=[X0, y0 AS X1]): rowcount = 77858.57238782344, cumulative cost = {4.5149966061784275E7 rows, 1.5678364107747934E9 cpu, 6.15382728E8 io, 1.983834909241035E8 network, 1.09934399984276E8 memory}
         :  :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 77858.57238782344, cumulative cost = {4.507210748939645E7 rows, 1.5678364107747934E9 cpu, 6.15382728E8 io, 1.983834909241035E8 network, 1.09934399984276E8 memory}
         :  :     :              :  :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :  :     :              :  :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :     :              :  :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :     :              :  :  :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :  :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :  :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :  :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :  :  :     :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 144311.90999999997, cumulative cost = {8767191.530000001 rows, 3.844169108E7 cpu, 1.53849084E8 io, 3470289.8399999994 network, 20368.0 memory}
         :  :     :              :  :  :        +- Calc(select=[x, y0]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :  :              :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :              :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :              :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[X0, X1]): rowcount = 56296.53588782344, cumulative cost = {3.596603521953212E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 56296.53588782344, cumulative cost = {3.5909738683644295E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :  :     :              :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :     :              :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :     :              :  :        :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :  :        :                    +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 201027.8767964701, cumulative cost = {6.136214912697835E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 201027.8767964701, cumulative cost = {6.116112125018188E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :  :     :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 965440.6060576444, cumulative cost = {2.4733035986376785E7 rows, 1.309975973992438E9 cpu, 3.07698636E8 io, 1.7826938448382965E8 network, 4816442.097377036 memory}
         :  :     :              :           +- Calc(select=[x, X0]): rowcount = 965440.6060576444, cumulative cost = {2.376759538031914E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 965440.6060576444, cumulative cost = {2.2802154774261497E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :  :     :              :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[hash[X1]]): rowcount = 26175.70705096215, cumulative cost = {9016524.168203853 rows, 1.9395826518346377E7 cpu, 1.53856356E8 io, 1256529.9384461832 network, 3350602.5025231554 memory}
         :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 1105831.755511297, cumulative cost = {3.3331896150574356E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 1105831.755511297, cumulative cost = {3.2226064395063058E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 962116.7034086465, cumulative cost = {1.8300042639551762E7 rows, 2.2889962738052928E8 cpu, 3.07705836E8 io, 2.382270639641407E7 network, 3597118.4417512375 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 962116.7034086465, cumulative cost = {1.7337925936143115E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962116.7034086465, cumulative cost = {1.6375809232734468E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 4016.3560576443224, cumulative cost = {9003597.529325822 rows, 1.5951130359415522E7 cpu, 1.53863556E8 io, 731905.5146065553 network, 3372202.5025231554 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 4016.3560576443224, cumulative cost = {8999581.173268178 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4016.3560576443224, cumulative cost = {8995564.817210535 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 992529.9893899972, cumulative cost = {1.3101322974185382E8 rows, 6.542113361317773E9 cpu, 1.538479308E9 io, 8.666436412268888E8 network, 2.2002155374092555E8 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 992529.9893899972, cumulative cost = {1.3002069975246382E8 rows, 6.375368323100253E9 cpu, 1.538479308E9 io, 8.428229214815289E8 network, 2.2002155374092555E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 992529.9893899972, cumulative cost = {1.2902816976307382E8 rows, 6.375368323100253E9 cpu, 1.538479308E9 io, 8.428229214815289E8 network, 2.2002155374092555E8 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 206771.5959333153, cumulative cost = {1.1521544977368382E8 rows, 5.245537430332787E9 cpu, 1.384637028E9 io, 6.889806414815289E8 network, 2.0844234436865988E8 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.150086781777505E8 rows, 5.210799802215989E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 2.0844234436865988E8 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 206771.5959333153, cumulative cost = {1.1480190658181718E8 rows, 5.207491456681056E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 1.952089622289277E8 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.1459513498588386E8 rows, 5.171099655796793E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.952089622289277E8 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 1140687.6756224853, cumulative cost = {1.1438836338995054E8 rows, 5.152848652986834E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.8197558008919552E8 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 175115.28760917907, cumulative cost = {6.2360548979872726E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 175115.28760917907, cumulative cost = {6.218543369226354E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 179761.68948028254, cumulative cost = {3.623319088764287E7 rows, 1.328521145834818E9 cpu, 4.61548092E8 io, 1.7147682713648033E8 network, 6.914175207815145E7 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                             :     :              :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                             :     :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 965572.3880133063, cumulative cost = {5.088712673445533E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965572.3880133063, cumulative cost = {4.992155434644203E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :  :                                   :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                                   :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[hash[X0]]): rowcount = 27054.25342204238, cumulative cost = {3.613579195842872E7 rows, 1.3044051900928757E9 cpu, 4.61555292E8 io, 1.678190486710826E8 network, 6.916335207815145E7 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 27054.25342204238, cumulative cost = {3.6108737705006674E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 27054.25342204238, cumulative cost = {3.608168345158463E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                                            :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                                            :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :           :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 39194.48352436242, cumulative cost = {1.7858324503033626E8 rows, 7.321151267507798E9 cpu, 2.307710352E9 io, 9.414282995944004E8 network, 4.303375738350838E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 39194.48352436242, cumulative cost = {1.785440505468119E8 rows, 7.321151267507798E9 cpu, 2.307710352E9 io, 9.414282995944004E8 network, 4.303375738350838E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 261211.65682908279, cumulative cost = {1.7850403436328757E8 rows, 7.319046586053165E9 cpu, 2.307703548E9 io, 9.414262379944004E8 network, 4.303327914350838E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 261211.65682908279, cumulative cost = {1.7824282270645848E8 rows, 7.3148671995439005E9 cpu, 2.307703548E9 io, 9.414262379944004E8 network, 4.1361524539802253E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 261211.65682908279, cumulative cost = {1.779816110496294E8 rows, 7.268893947941982E9 cpu, 2.307703548E9 io, 9.351571582305024E8 network, 4.1361524539802253E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1441014.7405834137, cumulative cost = {1.777203993928003E8 rows, 7.245837712092648E9 cpu, 2.307703548E9 io, 9.351571582305024E8 network, 3.9689769936096126E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 335182.98507211695, cumulative cost = {1.4294748850164253E8 rows, 5.879623416344265E9 cpu, 1.846155432E9 io, 7.574921718340883E8 network, 3.394220455283258E8 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 134155.10827564687, cumulative cost = {8.125015638959204E7 rows, 3.0333485101035004E9 cpu, 1.076923152E9 io, 3.8430958626615524E8 network, 2.11787305008552E8 memory}
         :        :           :  :  :- Calc(select=[X0, y0 AS X1]): rowcount = 77858.57238782344, cumulative cost = {4.5149966061784275E7 rows, 1.5678364107747934E9 cpu, 6.15382728E8 io, 1.983834909241035E8 network, 1.09934399984276E8 memory}
         :        :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 77858.57238782344, cumulative cost = {4.507210748939645E7 rows, 1.5678364107747934E9 cpu, 6.15382728E8 io, 1.983834909241035E8 network, 1.09934399984276E8 memory}
         :        :           :  :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :        :           :  :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :           :  :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :           :  :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :           :  :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :           :  :  :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :  :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :  :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :  :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :  :  :     :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 144311.90999999997, cumulative cost = {8767191.530000001 rows, 3.844169108E7 cpu, 1.53849084E8 io, 3470289.8399999994 network, 20368.0 memory}
         :        :           :  :  :        +- Calc(select=[x, y0]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :  :              :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :              :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :              :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[X0, X1]): rowcount = 56296.53588782344, cumulative cost = {3.596603521953212E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 56296.53588782344, cumulative cost = {3.5909738683644295E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :        :           :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :           :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :           :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :           :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :           :  :        :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :  :        :                    +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 201027.8767964701, cumulative cost = {6.136214912697835E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 201027.8767964701, cumulative cost = {6.116112125018188E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :        :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 965440.6060576444, cumulative cost = {2.4733035986376785E7 rows, 1.309975973992438E9 cpu, 3.07698636E8 io, 1.7826938448382965E8 network, 4816442.097377036 memory}
         :        :           :           +- Calc(select=[x, X0]): rowcount = 965440.6060576444, cumulative cost = {2.376759538031914E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 965440.6060576444, cumulative cost = {2.2802154774261497E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :        :           :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[hash[X1]]): rowcount = 26175.70705096215, cumulative cost = {9016524.168203853 rows, 1.9395826518346377E7 cpu, 1.53856356E8 io, 1256529.9384461832 network, 3350602.5025231554 memory}
         :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 1105831.755511297, cumulative cost = {3.3331896150574356E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 1105831.755511297, cumulative cost = {3.2226064395063058E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 962116.7034086465, cumulative cost = {1.8300042639551762E7 rows, 2.2889962738052928E8 cpu, 3.07705836E8 io, 2.382270639641407E7 network, 3597118.4417512375 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 962116.7034086465, cumulative cost = {1.7337925936143115E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962116.7034086465, cumulative cost = {1.6375809232734468E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 4016.3560576443224, cumulative cost = {9003597.529325822 rows, 1.5951130359415522E7 cpu, 1.53863556E8 io, 731905.5146065553 network, 3372202.5025231554 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 4016.3560576443224, cumulative cost = {8999581.173268178 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4016.3560576443224, cumulative cost = {8995564.817210535 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 41019.94653843347, cumulative cost = {2.591933630543669E8 rows, 1.130597558835902E10 cpu, 3.230815224E9 io, 1.4652799945046577E9 network, 5.492717000977415E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], build=[right]): rowcount = 41019.94653843347, cumulative cost = {2.5915234310782844E8 rows, 1.130597558835902E10 cpu, 3.230815224E9 io, 1.4652799945046577E9 network, 5.492717000977415E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 242360.57086622587, cumulative cost = {1.4400812776536947E8 rows, 6.086007318675995E9 cpu, 1.846170996E9 io, 7.805081335801686E8 network, 3.390658343232417E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 242360.57086622587, cumulative cost = {1.4376576719450325E8 rows, 6.045290742770469E9 cpu, 1.846170996E9 io, 7.746914798793792E8 network, 3.390658343232417E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 242360.57086622587, cumulative cost = {1.4352340662363702E8 rows, 6.041412973636609E9 cpu, 1.846170996E9 io, 7.746914798793792E8 network, 3.2355475778780323E8 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 242360.57086622587, cumulative cost = {1.432810460527708E8 rows, 5.998757513164153E9 cpu, 1.846170996E9 io, 7.688748261785897E8 network, 3.2355475778780323E8 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1337019.7922788807, cumulative cost = {1.4303868548190457E8 rows, 5.977365196487691E9 cpu, 1.846170996E9 io, 7.688748261785897E8 network, 3.0804368125236475E8 memory}
               :              :- Union(all=[true], union=[X0, X1]): rowcount = 1306862.0468957073, cumulative cost = {9.571616754007506E7 rows, 4.2254664351935163E9 cpu, 1.230781092E9 io, 5.508692690944862E8 network, 1.8518344282996798E8 memory}
               :              :  :- Calc(select=[x AS X0, X1]): rowcount = 1105832.07045755, cumulative cost = {3.3189480964450616E7 rows, 1.371488855565088E9 cpu, 4.61548464E8 io, 1.7767474034828407E8 network, 5.7510015907064155E7 memory}
               :              :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 1105832.07045755, cumulative cost = {3.2083648893993065E7 rows, 1.371488855565088E9 cpu, 4.61548464E8 io, 1.7767474034828407E8 network, 5.7510015907064155E7 memory}
               :              :  :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :     +- Exchange(distribution=[hash[x]]): rowcount = 962118.8030503338, cumulative cost = {1.8157626823535513E7 rows, 2.3561518514068538E8 cpu, 3.07706184E8 io, 2.3832460348284073E7 network, 3631362.936245466 memory}
               :              :  :        +- Calc(select=[x, X1]): rowcount = 962118.8030503338, cumulative cost = {1.7195508020485178E7 rows, 7.397922622822931E7 cpu, 3.07706184E8 io, 741609.075076062 network, 3631362.936245466 memory}
               :              :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962118.8030503338, cumulative cost = {1.6233389217434842E7 rows, 7.397922622822931E7 cpu, 3.07706184E8 io, 741609.075076062 network, 3631362.936245466 memory}
               :              :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :              +- Exchange(distribution=[broadcast]): rowcount = 4030.3536688916415, cumulative cost = {8861175.414384509 rows, 2.2666223398878183E7 cpu, 1.53863904E8 io, 741609.075076062 network, 3405663.130787534 memory}
               :              :  :                 +- Calc(select=[X0, X1]): rowcount = 4030.3536688916415, cumulative cost = {8857145.060715618 rows, 2.202136681185552E7 cpu, 1.53863904E8 io, 644880.5870226626 network, 3405663.130787534 memory}
               :              :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4030.3536688916415, cumulative cost = {8853114.707046727 rows, 2.202136681185552E7 cpu, 1.53863904E8 io, 644880.5870226626 network, 3405663.130787534 memory}
               :              :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :              :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :              :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :              :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :                       +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  +- Calc(select=[X0, X10 AS X1]): rowcount = 201029.97643815717, cumulative cost = {6.121982452872873E7 rows, 2.8526707175815325E9 cpu, 7.69232628E8 io, 3.7319452874620223E8 network, 1.2767342692290384E8 memory}
               :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 201029.97643815717, cumulative cost = {6.101879455229057E7 rows, 2.8526707175815325E9 cpu, 7.69232628E8 io, 3.7319452874620223E8 network, 1.2767342692290384E8 memory}
               :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
               :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
               :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
               :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
               :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
               :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :              :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :        +- Exchange(distribution=[hash[x]]): rowcount = 965454.6036688916, cumulative cost = {2.4590707188843787E7 rows, 1.3167068563373878E9 cpu, 3.07698984E8 io, 1.782813276620987E8 network, 4855128.500507081 memory}
               :              :           +- Calc(select=[x, X1]): rowcount = 965454.6036688916, cumulative cost = {2.3625252585174896E7 rows, 1.154510482921014E9 cpu, 3.07698984E8 io, 1.5511041717404532E8 network, 4855128.500507081 memory}
               :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965454.6036688916, cumulative cost = {2.2659797981506005E7 rows, 1.154510482921014E9 cpu, 3.07698984E8 io, 1.5511041717404532E8 network, 4855128.500507081 memory}
               :              :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :                 +- Exchange(distribution=[hash[X0]]): rowcount = 26269.02445927761, cumulative cost = {8874153.377837114 rows, 2.6123610725339938E7 cpu, 1.53856704E8 io, 1268137.1740453253 network, 3384063.130787534 memory}
               :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :              :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :                                :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :                                :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[X0, y AS X1]): rowcount = 30157.745383173515, cumulative cost = {4.5985498149550624E7 rows, 1.7505617415018961E9 cpu, 6.15389904E8 io, 2.180055570841035E8 network, 1.2286023842239675E8 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[X0, y, x], isBroadcast=[true], build=[right]): rowcount = 30157.745383173515, cumulative cost = {4.595534040416745E7 rows, 1.7505617415018961E9 cpu, 6.15389904E8 io, 2.180055570841035E8 network, 1.2286023842239675E8 memory}
               :                    :- Calc(select=[X0, y]): rowcount = 200451.63588782345, cumulative cost = {4.592398265878428E7 rows, 1.7488573284147935E9 cpu, 6.15382704E8 io, 2.179983570841035E8 network, 1.2283863842239675E8 memory}
               :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], build=[left]): rowcount = 200451.63588782345, cumulative cost = {4.5723531022896454E7 rows, 1.7488573284147935E9 cpu, 6.15382704E8 io, 2.179983570841035E8 network, 1.2283863842239675E8 memory}
               :                    :     :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
               :                    :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
               :                    :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
               :                    :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
               :                    :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
               :                    :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                    :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                    :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                    :     :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                    :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                    :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                    :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                    :     +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
               :                    :        +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                    :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[X0]]): rowcount = 31105.739389997292, cumulative cost = {1.151031953959205E8 rows, 5.217780539200975E9 cpu, 1.384644228E9 io, 6.847718609244893E8 network, 2.0846394436865988E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 31105.739389997292, cumulative cost = {1.150720896565305E8 rows, 5.212554774983456E9 cpu, 1.384644228E9 io, 6.840253231791294E8 network, 2.0846394436865988E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 31105.739389997292, cumulative cost = {1.150409839171405E8 rows, 5.212554774983456E9 cpu, 1.384644228E9 io, 6.840253231791294E8 network, 2.0846394436865988E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.150086781777505E8 rows, 5.210799802215989E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 2.0844234436865988E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 206771.5959333153, cumulative cost = {1.1480190658181718E8 rows, 5.207491456681056E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 1.952089622289277E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.1459513498588386E8 rows, 5.171099655796793E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.952089622289277E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1140687.6756224853, cumulative cost = {1.1438836338995054E8 rows, 5.152848652986834E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.8197558008919552E8 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 175115.28760917907, cumulative cost = {6.2360548979872726E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 175115.28760917907, cumulative cost = {6.218543369226354E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 179761.68948028254, cumulative cost = {3.623319088764287E7 rows, 1.328521145834818E9 cpu, 4.61548092E8 io, 1.7147682713648033E8 network, 6.914175207815145E7 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :           :     :              :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :     :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 965572.3880133063, cumulative cost = {5.088712673445533E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965572.3880133063, cumulative cost = {4.992155434644203E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
                        :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[hash[X0]]): rowcount = 27054.25342204238, cumulative cost = {3.613579195842872E7 rows, 1.3044051900928757E9 cpu, 4.61555292E8 io, 1.678190486710826E8 network, 6.916335207815145E7 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 27054.25342204238, cumulative cost = {3.6108737705006674E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 27054.25342204238, cumulative cost = {3.608168345158463E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[1,0,1,2,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#3] Exchange(distribution=[hash[X1]])\n:  :     +- [#4] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#5] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#6] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], build=[right])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#2] Exchange(distribution=[hash[X0]])\n])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[0,1,0,1,2,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#2] Exchange(distribution=[hash[y]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#4] Exchange(distribution=[hash[X1]])\n:        +- [#5] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[X0, y, x], isBroadcast=[true], build=[right])\n      :- Calc(select=[X0, y])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], build=[left])\n      :     :- [#4] Exchange(distribution=[hash[X1]])\n      :     +- [#7] Exchange(distribution=[hash[x]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[3])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[6])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- Calc(select=[x0 AS X0, y AS X1])
         :              :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :                 :           :     :- Calc(select=[y, x0])(reuse_id=[15])
         :              :                 :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[9])
         :              :                 :           :     :     :- Reused(reference_id=[1])
         :              :                 :           :     :     +- Exchange(distribution=[broadcast])(reuse_id=[5])
         :              :                 :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :              :                 :           :     +- Reused(reference_id=[2])
         :              :                 :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[10])
         :              :                 :              +- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[2])
         :              :- Exchange(distribution=[hash[X1]])(reuse_id=[7])
         :              :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :              :     +- Exchange(distribution=[hash[X0, X1]])
         :              :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :              :- Reused(reference_id=[1])
         :              :              :- Exchange(distribution=[broadcast])(reuse_id=[8])
         :              :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[12])
         :              :              :- Reused(reference_id=[4])
         :              :              +- Exchange(distribution=[hash[x]])
         :              :                 +- Calc(select=[x, y0])(reuse_id=[17])
         :              :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[13])
         :              :                       :- Reused(reference_id=[1])
         :              :                       +- Reused(reference_id=[5])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :              :        :- Reused(reference_id=[4])
         :              :        +- Exchange(distribution=[hash[X0]])
         :              :           +- Reused(reference_id=[6])
         :              :- Reused(reference_id=[7])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, y])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Reused(reference_id=[8])
         :- Exchange(distribution=[hash[X0]])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[hash[X0]])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[14])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Reused(reference_id=[4])
         :        :           :              :- Exchange(distribution=[hash[x]])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[11])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- Reused(reference_id=[9])
         :        :           :              :        :           +- Reused(reference_id=[10])
         :        :           :              :        +- Reused(reference_id=[5])
         :        :           :              :- Reused(reference_id=[11])
         :        :           :              +- Reused(reference_id=[8])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Exchange(distribution=[hash[x]])
         :        :           :        :  +- Reused(reference_id=[1])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])
         :        :           :                       :  +- Reused(reference_id=[12])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- Reused(reference_id=[13])
         :        :           :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[hash[X0]])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[14])
         :        :                    +- Reused(reference_id=[2])
         :        +- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[20])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,2,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[X0, y0 AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[right])\n:  :  :     :- [#3] Exchange(distribution=[hash[X1]])\n:  :  :     +- [#6] Exchange(distribution=[hash[x]])\n:  :  +- Calc(select=[X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :        :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :        +- [#8] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], build=[left])\n:        :- [#3] Exchange(distribution=[hash[X1]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Reused(reference_id=[4])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Reused(reference_id=[15])
         :              :                 :           :  :- Reused(reference_id=[5])
         :              :                 :           :  :- Reused(reference_id=[3])
         :              :                 :           :  +- Reused(reference_id=[5])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[21])
         :              :                 :                 :- Reused(reference_id=[12])
         :              :                 :                 +- Reused(reference_id=[5])
         :              :                 +- Reused(reference_id=[2])
         :              :- Reused(reference_id=[7])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], build=[right])
         :              :        :- Reused(reference_id=[4])
         :              :        +- Exchange(distribution=[hash[X1]])
         :              :           +- Reused(reference_id=[16])
         :              :- Reused(reference_id=[7])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[17])
         :              :        +- Reused(reference_id=[8])
         :              :- Reused(reference_id=[18])
         :              +- Reused(reference_id=[8])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[19])
         :- Reused(reference_id=[20])
         +- Exchange(distribution=[broadcast])
            +- Calc(select=[x, x0])
               +- Reused(reference_id=[21])

Job has been submitted with JobID a136eb22333f442d300e4648ffb2d269
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, s_3.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN s AS s_3 ON r_2.y = s_3.x UNION (SELECT p19_0.X0 AS X0, p19_0.X1 AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x) UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 9cc43d2c_4ea5_4bc1_a9f3_9505a1a59047

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0)
            UNION
            (SELECT p19_0.X0 AS X0, r_2.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)),
     p35 AS (SELECT p19_0.X0 AS X0, s_3.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN s AS s_3 ON r_2.y = s_3.x
             UNION
             (SELECT p19_0.X0 AS X0, p19_0.X1 AS X1
              FROM p19 AS p19_0
                       INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x)
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :  :  +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :  :        :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :        :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :  :  +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :     +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :  :        :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :        :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 48630.129936497506, cumulative cost = {7.485726281378016E8 rows, 3.2556325221941986E10 cpu, 9.384708432E9 io, 4.222214376202721E9 network, 1.6508161285231347E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 48630.129936497506, cumulative cost = {7.485239980078652E8 rows, 3.2555547139863003E10 cpu, 9.384708432E9 io, 4.222214376202721E9 network, 1.6477038002071989E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 48630.129936497506, cumulative cost = {7.484753678779287E8 rows, 3.254698823699418E10 cpu, 9.384708432E9 io, 4.221047253084245E9 network, 1.6477038002071989E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 268275.6769956579, cumulative cost = {7.484267377479923E8 rows, 3.2542695826162247E10 cpu, 9.384708432E9 io, 4.221047253084245E9 network, 1.644591471891263E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 227255.73045722442, cumulative cost = {4.889650990166297E8 rows, 2.1236451962126232E10 cpu, 6.153893208E9 io, 2.7557672585795875E9 network, 1.0953197717935216E9 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 188061.246932862, cumulative cost = {3.101545982558362E8 rows, 1.3915073438887978E10 cpu, 3.846182856E9 io, 1.814338958985187E9 network, 6.649821979584379E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 188061.246932862, cumulative cost = {3.099665370089033E8 rows, 1.3915073438887978E10 cpu, 3.846182856E9 io, 1.814338958985187E9 network, 6.649821979584379E8 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 261211.65682908279, cumulative cost = {1.7876524602011666E8 rows, 7.362930144400452E9 cpu, 2.307703548E9 io, 9.476953177582984E8 network, 4.303327914350838E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 261211.65682908279, cumulative cost = {1.7850403436328757E8 rows, 7.319046586053165E9 cpu, 2.307703548E9 io, 9.414262379944004E8 network, 4.303327914350838E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 261211.65682908279, cumulative cost = {1.7824282270645848E8 rows, 7.3148671995439005E9 cpu, 2.307703548E9 io, 9.414262379944004E8 network, 4.1361524539802253E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 261211.65682908279, cumulative cost = {1.779816110496294E8 rows, 7.268893947941982E9 cpu, 2.307703548E9 io, 9.351571582305024E8 network, 4.1361524539802253E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1441014.7405834137, cumulative cost = {1.777203993928003E8 rows, 7.245837712092648E9 cpu, 2.307703548E9 io, 9.351571582305024E8 network, 3.9689769936096126E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 335182.98507211695, cumulative cost = {1.4294748850164253E8 rows, 5.879623416344265E9 cpu, 1.846155432E9 io, 7.574921718340883E8 network, 3.394220455283258E8 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 134155.10827564687, cumulative cost = {8.125015638959204E7 rows, 3.0333485101035004E9 cpu, 1.076923152E9 io, 3.8430958626615524E8 network, 2.11787305008552E8 memory}
         :  :     :              :  :  :- Calc(select=[X0, y0 AS X1]): rowcount = 77858.57238782344, cumulative cost = {4.5149966061784275E7 rows, 1.5678364107747934E9 cpu, 6.15382728E8 io, 1.983834909241035E8 network, 1.09934399984276E8 memory}
         :  :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 77858.57238782344, cumulative cost = {4.507210748939645E7 rows, 1.5678364107747934E9 cpu, 6.15382728E8 io, 1.983834909241035E8 network, 1.09934399984276E8 memory}
         :  :     :              :  :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :  :     :              :  :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :     :              :  :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :     :              :  :  :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :  :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :  :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :  :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :  :  :     :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 144311.90999999997, cumulative cost = {8767191.530000001 rows, 3.844169108E7 cpu, 1.53849084E8 io, 3470289.8399999994 network, 20368.0 memory}
         :  :     :              :  :  :        +- Calc(select=[x, y0]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :  :              :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :              :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :              :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[X0, X1]): rowcount = 56296.53588782344, cumulative cost = {3.596603521953212E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 56296.53588782344, cumulative cost = {3.5909738683644295E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :  :     :              :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :     :              :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :     :              :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :     :              :  :        :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :  :        :                    +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 201027.8767964701, cumulative cost = {6.136214912697835E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 201027.8767964701, cumulative cost = {6.116112125018188E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :  :     :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 965440.6060576444, cumulative cost = {2.4733035986376785E7 rows, 1.309975973992438E9 cpu, 3.07698636E8 io, 1.7826938448382965E8 network, 4816442.097377036 memory}
         :  :     :              :           +- Calc(select=[x, X0]): rowcount = 965440.6060576444, cumulative cost = {2.376759538031914E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 965440.6060576444, cumulative cost = {2.2802154774261497E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :  :     :              :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[hash[X1]]): rowcount = 26175.70705096215, cumulative cost = {9016524.168203853 rows, 1.9395826518346377E7 cpu, 1.53856356E8 io, 1256529.9384461832 network, 3350602.5025231554 memory}
         :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 1105831.755511297, cumulative cost = {3.3331896150574356E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 1105831.755511297, cumulative cost = {3.2226064395063058E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 962116.7034086465, cumulative cost = {1.8300042639551762E7 rows, 2.2889962738052928E8 cpu, 3.07705836E8 io, 2.382270639641407E7 network, 3597118.4417512375 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 962116.7034086465, cumulative cost = {1.7337925936143115E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962116.7034086465, cumulative cost = {1.6375809232734468E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 4016.3560576443224, cumulative cost = {9003597.529325822 rows, 1.5951130359415522E7 cpu, 1.53863556E8 io, 731905.5146065553 network, 3372202.5025231554 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 4016.3560576443224, cumulative cost = {8999581.173268178 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4016.3560576443224, cumulative cost = {8995564.817210535 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 992529.9893899972, cumulative cost = {1.3101322974185382E8 rows, 6.542113361317773E9 cpu, 1.538479308E9 io, 8.666436412268888E8 network, 2.2002155374092555E8 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 992529.9893899972, cumulative cost = {1.3002069975246382E8 rows, 6.375368323100253E9 cpu, 1.538479308E9 io, 8.428229214815289E8 network, 2.2002155374092555E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 992529.9893899972, cumulative cost = {1.2902816976307382E8 rows, 6.375368323100253E9 cpu, 1.538479308E9 io, 8.428229214815289E8 network, 2.2002155374092555E8 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 206771.5959333153, cumulative cost = {1.1521544977368382E8 rows, 5.245537430332787E9 cpu, 1.384637028E9 io, 6.889806414815289E8 network, 2.0844234436865988E8 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.150086781777505E8 rows, 5.210799802215989E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 2.0844234436865988E8 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 206771.5959333153, cumulative cost = {1.1480190658181718E8 rows, 5.207491456681056E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 1.952089622289277E8 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.1459513498588386E8 rows, 5.171099655796793E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.952089622289277E8 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 1140687.6756224853, cumulative cost = {1.1438836338995054E8 rows, 5.152848652986834E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.8197558008919552E8 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 175115.28760917907, cumulative cost = {6.2360548979872726E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 175115.28760917907, cumulative cost = {6.218543369226354E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 179761.68948028254, cumulative cost = {3.623319088764287E7 rows, 1.328521145834818E9 cpu, 4.61548092E8 io, 1.7147682713648033E8 network, 6.914175207815145E7 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                             :     :              :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                             :     :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 965572.3880133063, cumulative cost = {5.088712673445533E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965572.3880133063, cumulative cost = {4.992155434644203E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :  :                                   :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                                   :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[hash[X0]]): rowcount = 27054.25342204238, cumulative cost = {3.613579195842872E7 rows, 1.3044051900928757E9 cpu, 4.61555292E8 io, 1.678190486710826E8 network, 6.916335207815145E7 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 27054.25342204238, cumulative cost = {3.6108737705006674E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 27054.25342204238, cumulative cost = {3.608168345158463E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                                            :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                                            :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :           :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 39194.48352436242, cumulative cost = {1.7858324503033626E8 rows, 7.321151267507798E9 cpu, 2.307710352E9 io, 9.414282995944004E8 network, 4.303375738350838E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 39194.48352436242, cumulative cost = {1.785440505468119E8 rows, 7.321151267507798E9 cpu, 2.307710352E9 io, 9.414282995944004E8 network, 4.303375738350838E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 261211.65682908279, cumulative cost = {1.7850403436328757E8 rows, 7.319046586053165E9 cpu, 2.307703548E9 io, 9.414262379944004E8 network, 4.303327914350838E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 261211.65682908279, cumulative cost = {1.7824282270645848E8 rows, 7.3148671995439005E9 cpu, 2.307703548E9 io, 9.414262379944004E8 network, 4.1361524539802253E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 261211.65682908279, cumulative cost = {1.779816110496294E8 rows, 7.268893947941982E9 cpu, 2.307703548E9 io, 9.351571582305024E8 network, 4.1361524539802253E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1441014.7405834137, cumulative cost = {1.777203993928003E8 rows, 7.245837712092648E9 cpu, 2.307703548E9 io, 9.351571582305024E8 network, 3.9689769936096126E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 335182.98507211695, cumulative cost = {1.4294748850164253E8 rows, 5.879623416344265E9 cpu, 1.846155432E9 io, 7.574921718340883E8 network, 3.394220455283258E8 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 134155.10827564687, cumulative cost = {8.125015638959204E7 rows, 3.0333485101035004E9 cpu, 1.076923152E9 io, 3.8430958626615524E8 network, 2.11787305008552E8 memory}
         :        :           :  :  :- Calc(select=[X0, y0 AS X1]): rowcount = 77858.57238782344, cumulative cost = {4.5149966061784275E7 rows, 1.5678364107747934E9 cpu, 6.15382728E8 io, 1.983834909241035E8 network, 1.09934399984276E8 memory}
         :        :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 77858.57238782344, cumulative cost = {4.507210748939645E7 rows, 1.5678364107747934E9 cpu, 6.15382728E8 io, 1.983834909241035E8 network, 1.09934399984276E8 memory}
         :        :           :  :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :        :           :  :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :           :  :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :           :  :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :           :  :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :           :  :  :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :  :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :  :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :  :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :  :  :     :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 144311.90999999997, cumulative cost = {8767191.530000001 rows, 3.844169108E7 cpu, 1.53849084E8 io, 3470289.8399999994 network, 20368.0 memory}
         :        :           :  :  :        +- Calc(select=[x, y0]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :  :              :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :              :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :              :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[X0, X1]): rowcount = 56296.53588782344, cumulative cost = {3.596603521953212E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 56296.53588782344, cumulative cost = {3.5909738683644295E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :        :           :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :           :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :           :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :           :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :           :  :        :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :  :        :                    +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 201027.8767964701, cumulative cost = {6.136214912697835E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 201027.8767964701, cumulative cost = {6.116112125018188E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :        :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 965440.6060576444, cumulative cost = {2.4733035986376785E7 rows, 1.309975973992438E9 cpu, 3.07698636E8 io, 1.7826938448382965E8 network, 4816442.097377036 memory}
         :        :           :           +- Calc(select=[x, X0]): rowcount = 965440.6060576444, cumulative cost = {2.376759538031914E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 965440.6060576444, cumulative cost = {2.2802154774261497E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :        :           :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[hash[X1]]): rowcount = 26175.70705096215, cumulative cost = {9016524.168203853 rows, 1.9395826518346377E7 cpu, 1.53856356E8 io, 1256529.9384461832 network, 3350602.5025231554 memory}
         :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 1105831.755511297, cumulative cost = {3.3331896150574356E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 1105831.755511297, cumulative cost = {3.2226064395063058E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 962116.7034086465, cumulative cost = {1.8300042639551762E7 rows, 2.2889962738052928E8 cpu, 3.07705836E8 io, 2.382270639641407E7 network, 3597118.4417512375 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 962116.7034086465, cumulative cost = {1.7337925936143115E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962116.7034086465, cumulative cost = {1.6375809232734468E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 4016.3560576443224, cumulative cost = {9003597.529325822 rows, 1.5951130359415522E7 cpu, 1.53863556E8 io, 731905.5146065553 network, 3372202.5025231554 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 4016.3560576443224, cumulative cost = {8999581.173268178 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4016.3560576443224, cumulative cost = {8995564.817210535 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 41019.94653843347, cumulative cost = {2.591933630543669E8 rows, 1.130597558835902E10 cpu, 3.230815224E9 io, 1.4652799945046577E9 network, 5.492717000977415E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], build=[right]): rowcount = 41019.94653843347, cumulative cost = {2.5915234310782844E8 rows, 1.130597558835902E10 cpu, 3.230815224E9 io, 1.4652799945046577E9 network, 5.492717000977415E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 242360.57086622587, cumulative cost = {1.4400812776536947E8 rows, 6.086007318675995E9 cpu, 1.846170996E9 io, 7.805081335801686E8 network, 3.390658343232417E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 242360.57086622587, cumulative cost = {1.4376576719450325E8 rows, 6.045290742770469E9 cpu, 1.846170996E9 io, 7.746914798793792E8 network, 3.390658343232417E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 242360.57086622587, cumulative cost = {1.4352340662363702E8 rows, 6.041412973636609E9 cpu, 1.846170996E9 io, 7.746914798793792E8 network, 3.2355475778780323E8 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 242360.57086622587, cumulative cost = {1.432810460527708E8 rows, 5.998757513164153E9 cpu, 1.846170996E9 io, 7.688748261785897E8 network, 3.2355475778780323E8 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1337019.7922788807, cumulative cost = {1.4303868548190457E8 rows, 5.977365196487691E9 cpu, 1.846170996E9 io, 7.688748261785897E8 network, 3.0804368125236475E8 memory}
               :              :- Union(all=[true], union=[X0, X1]): rowcount = 1306862.0468957073, cumulative cost = {9.571616754007506E7 rows, 4.2254664351935163E9 cpu, 1.230781092E9 io, 5.508692690944862E8 network, 1.8518344282996798E8 memory}
               :              :  :- Calc(select=[x AS X0, X1]): rowcount = 1105832.07045755, cumulative cost = {3.3189480964450616E7 rows, 1.371488855565088E9 cpu, 4.61548464E8 io, 1.7767474034828407E8 network, 5.7510015907064155E7 memory}
               :              :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 1105832.07045755, cumulative cost = {3.2083648893993065E7 rows, 1.371488855565088E9 cpu, 4.61548464E8 io, 1.7767474034828407E8 network, 5.7510015907064155E7 memory}
               :              :  :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :     +- Exchange(distribution=[hash[x]]): rowcount = 962118.8030503338, cumulative cost = {1.8157626823535513E7 rows, 2.3561518514068538E8 cpu, 3.07706184E8 io, 2.3832460348284073E7 network, 3631362.936245466 memory}
               :              :  :        +- Calc(select=[x, X1]): rowcount = 962118.8030503338, cumulative cost = {1.7195508020485178E7 rows, 7.397922622822931E7 cpu, 3.07706184E8 io, 741609.075076062 network, 3631362.936245466 memory}
               :              :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962118.8030503338, cumulative cost = {1.6233389217434842E7 rows, 7.397922622822931E7 cpu, 3.07706184E8 io, 741609.075076062 network, 3631362.936245466 memory}
               :              :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :              +- Exchange(distribution=[broadcast]): rowcount = 4030.3536688916415, cumulative cost = {8861175.414384509 rows, 2.2666223398878183E7 cpu, 1.53863904E8 io, 741609.075076062 network, 3405663.130787534 memory}
               :              :  :                 +- Calc(select=[X0, X1]): rowcount = 4030.3536688916415, cumulative cost = {8857145.060715618 rows, 2.202136681185552E7 cpu, 1.53863904E8 io, 644880.5870226626 network, 3405663.130787534 memory}
               :              :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4030.3536688916415, cumulative cost = {8853114.707046727 rows, 2.202136681185552E7 cpu, 1.53863904E8 io, 644880.5870226626 network, 3405663.130787534 memory}
               :              :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :              :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :              :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :              :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :                       +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  +- Calc(select=[X0, X10 AS X1]): rowcount = 201029.97643815717, cumulative cost = {6.121982452872873E7 rows, 2.8526707175815325E9 cpu, 7.69232628E8 io, 3.7319452874620223E8 network, 1.2767342692290384E8 memory}
               :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 201029.97643815717, cumulative cost = {6.101879455229057E7 rows, 2.8526707175815325E9 cpu, 7.69232628E8 io, 3.7319452874620223E8 network, 1.2767342692290384E8 memory}
               :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
               :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
               :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
               :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
               :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
               :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :              :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :        +- Exchange(distribution=[hash[x]]): rowcount = 965454.6036688916, cumulative cost = {2.4590707188843787E7 rows, 1.3167068563373878E9 cpu, 3.07698984E8 io, 1.782813276620987E8 network, 4855128.500507081 memory}
               :              :           +- Calc(select=[x, X1]): rowcount = 965454.6036688916, cumulative cost = {2.3625252585174896E7 rows, 1.154510482921014E9 cpu, 3.07698984E8 io, 1.5511041717404532E8 network, 4855128.500507081 memory}
               :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965454.6036688916, cumulative cost = {2.2659797981506005E7 rows, 1.154510482921014E9 cpu, 3.07698984E8 io, 1.5511041717404532E8 network, 4855128.500507081 memory}
               :              :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :                 +- Exchange(distribution=[hash[X0]]): rowcount = 26269.02445927761, cumulative cost = {8874153.377837114 rows, 2.6123610725339938E7 cpu, 1.53856704E8 io, 1268137.1740453253 network, 3384063.130787534 memory}
               :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :              :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :                                :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :                                :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[X0, y AS X1]): rowcount = 30157.745383173515, cumulative cost = {4.5985498149550624E7 rows, 1.7505617415018961E9 cpu, 6.15389904E8 io, 2.180055570841035E8 network, 1.2286023842239675E8 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[X0, y, x], isBroadcast=[true], build=[right]): rowcount = 30157.745383173515, cumulative cost = {4.595534040416745E7 rows, 1.7505617415018961E9 cpu, 6.15389904E8 io, 2.180055570841035E8 network, 1.2286023842239675E8 memory}
               :                    :- Calc(select=[X0, y]): rowcount = 200451.63588782345, cumulative cost = {4.592398265878428E7 rows, 1.7488573284147935E9 cpu, 6.15382704E8 io, 2.179983570841035E8 network, 1.2283863842239675E8 memory}
               :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], build=[left]): rowcount = 200451.63588782345, cumulative cost = {4.5723531022896454E7 rows, 1.7488573284147935E9 cpu, 6.15382704E8 io, 2.179983570841035E8 network, 1.2283863842239675E8 memory}
               :                    :     :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
               :                    :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
               :                    :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
               :                    :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
               :                    :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
               :                    :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                    :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                    :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                    :     :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                    :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                    :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                    :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                    :     +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
               :                    :        +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :                    :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                    :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[X0]]): rowcount = 31105.739389997292, cumulative cost = {1.151031953959205E8 rows, 5.217780539200975E9 cpu, 1.384644228E9 io, 6.847718609244893E8 network, 2.0846394436865988E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 31105.739389997292, cumulative cost = {1.150720896565305E8 rows, 5.212554774983456E9 cpu, 1.384644228E9 io, 6.840253231791294E8 network, 2.0846394436865988E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 31105.739389997292, cumulative cost = {1.150409839171405E8 rows, 5.212554774983456E9 cpu, 1.384644228E9 io, 6.840253231791294E8 network, 2.0846394436865988E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.150086781777505E8 rows, 5.210799802215989E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 2.0844234436865988E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 206771.5959333153, cumulative cost = {1.1480190658181718E8 rows, 5.207491456681056E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 1.952089622289277E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.1459513498588386E8 rows, 5.171099655796793E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.952089622289277E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1140687.6756224853, cumulative cost = {1.1438836338995054E8 rows, 5.152848652986834E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.8197558008919552E8 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 175115.28760917907, cumulative cost = {6.2360548979872726E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 175115.28760917907, cumulative cost = {6.218543369226354E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 179761.68948028254, cumulative cost = {3.623319088764287E7 rows, 1.328521145834818E9 cpu, 4.61548092E8 io, 1.7147682713648033E8 network, 6.914175207815145E7 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :           :     :              :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :     :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 965572.3880133063, cumulative cost = {5.088712673445533E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965572.3880133063, cumulative cost = {4.992155434644203E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
                        :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[hash[X0]]): rowcount = 27054.25342204238, cumulative cost = {3.613579195842872E7 rows, 1.3044051900928757E9 cpu, 4.61555292E8 io, 1.678190486710826E8 network, 6.916335207815145E7 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 27054.25342204238, cumulative cost = {3.6108737705006674E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 27054.25342204238, cumulative cost = {3.608168345158463E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[1,0,1,2,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#3] Exchange(distribution=[hash[X1]])\n:  :     +- [#4] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#5] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#6] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], build=[right])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#2] Exchange(distribution=[hash[X0]])\n])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[0,1,0,1,2,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#2] Exchange(distribution=[hash[y]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#4] Exchange(distribution=[hash[X1]])\n:        +- [#5] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[X0, y, x], isBroadcast=[true], build=[right])\n      :- Calc(select=[X0, y])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], build=[left])\n      :     :- [#4] Exchange(distribution=[hash[X1]])\n      :     +- [#7] Exchange(distribution=[hash[x]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[3])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[6])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- Calc(select=[x0 AS X0, y AS X1])
         :              :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :                 :           :     :- Calc(select=[y, x0])(reuse_id=[15])
         :              :                 :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[9])
         :              :                 :           :     :     :- Reused(reference_id=[1])
         :              :                 :           :     :     +- Exchange(distribution=[broadcast])(reuse_id=[5])
         :              :                 :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :              :                 :           :     +- Reused(reference_id=[2])
         :              :                 :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[10])
         :              :                 :              +- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[2])
         :              :- Exchange(distribution=[hash[X1]])(reuse_id=[7])
         :              :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :              :     +- Exchange(distribution=[hash[X0, X1]])
         :              :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :              :- Reused(reference_id=[1])
         :              :              :- Exchange(distribution=[broadcast])(reuse_id=[8])
         :              :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[12])
         :              :              :- Reused(reference_id=[4])
         :              :              +- Exchange(distribution=[hash[x]])
         :              :                 +- Calc(select=[x, y0])(reuse_id=[17])
         :              :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[13])
         :              :                       :- Reused(reference_id=[1])
         :              :                       +- Reused(reference_id=[5])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :              :        :- Reused(reference_id=[4])
         :              :        +- Exchange(distribution=[hash[X0]])
         :              :           +- Reused(reference_id=[6])
         :              :- Reused(reference_id=[7])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, y])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Reused(reference_id=[8])
         :- Exchange(distribution=[hash[X0]])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[hash[X0]])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[14])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Reused(reference_id=[4])
         :        :           :              :- Exchange(distribution=[hash[x]])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[11])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- Reused(reference_id=[9])
         :        :           :              :        :           +- Reused(reference_id=[10])
         :        :           :              :        +- Reused(reference_id=[5])
         :        :           :              :- Reused(reference_id=[11])
         :        :           :              +- Reused(reference_id=[8])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Exchange(distribution=[hash[x]])
         :        :           :        :  +- Reused(reference_id=[1])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])
         :        :           :                       :  +- Reused(reference_id=[12])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- Reused(reference_id=[13])
         :        :           :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[hash[X0]])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[14])
         :        :                    +- Reused(reference_id=[2])
         :        +- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[20])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,2,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[X0, y0 AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[right])\n:  :  :     :- [#3] Exchange(distribution=[hash[X1]])\n:  :  :     +- [#6] Exchange(distribution=[hash[x]])\n:  :  +- Calc(select=[X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :        :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :        +- [#8] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], build=[left])\n:        :- [#3] Exchange(distribution=[hash[X1]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Reused(reference_id=[4])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Reused(reference_id=[15])
         :              :                 :           :  :- Reused(reference_id=[5])
         :              :                 :           :  :- Reused(reference_id=[3])
         :              :                 :           :  +- Reused(reference_id=[5])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[21])
         :              :                 :                 :- Reused(reference_id=[12])
         :              :                 :                 +- Reused(reference_id=[5])
         :              :                 +- Reused(reference_id=[2])
         :              :- Reused(reference_id=[7])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], build=[right])
         :              :        :- Reused(reference_id=[4])
         :              :        +- Exchange(distribution=[hash[X1]])
         :              :           +- Reused(reference_id=[16])
         :              :- Reused(reference_id=[7])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[17])
         :              :        +- Reused(reference_id=[8])
         :              :- Reused(reference_id=[18])
         :              +- Reused(reference_id=[8])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[19])
         :- Reused(reference_id=[20])
         +- Exchange(distribution=[broadcast])
            +- Calc(select=[x, x0])
               +- Reused(reference_id=[21])

Job has been submitted with JobID 20b6f178e40c1d4269d84c8815446563
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, s_3.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN s AS s_3 ON r_2.y = s_3.x UNION (SELECT p19_0.X0 AS X0, p19_0.X1 AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x) UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 69daf693_9ea8_4925_8801_a6fa3b2d2330

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0)
            UNION
            (SELECT p19_0.X0 AS X0, r_2.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)),
     p35 AS (SELECT p19_0.X0 AS X0, s_3.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN s AS s_3 ON r_2.y = s_3.x
             UNION
             (SELECT p19_0.X0 AS X0, p19_0.X1 AS X1
              FROM p19 AS p19_0
                       INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x)
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :  :  +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :  :        :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :        :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :  :  +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :     +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :  :        :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :        :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 31118.211004101668, cumulative cost = {4.419342627430571E8 rows, 1.4603375955739305E10 cpu, 6.005074056E9 io, 1.8120485156044626E9 network, 1.0564633510475602E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 31118.211004101668, cumulative cost = {4.41903144532053E8 rows, 1.460287806436324E10 cpu, 6.005074056E9 io, 1.8120485156044626E9 network, 1.0544717855432978E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 31118.211004101668, cumulative cost = {4.418720263210489E8 rows, 1.4597401259226517E10 cpu, 6.005074056E9 io, 1.8113016785403643E9 network, 1.0544717855432978E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 171668.45194369173, cumulative cost = {4.4184090811004484E8 rows, 1.4594654563995419E10 cpu, 6.005074056E9 io, 1.8113016785403643E9 network, 1.0524802200390353E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 145417.9913527861, cumulative cost = {2.9237452294975585E8 rows, 1.0142896234645247E10 cpu, 3.93774204E9 io, 1.271168253005945E9 network, 7.009483043841693E8 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 120335.71352016955, cumulative cost = {1.8205782615861526E8 rows, 6.147236881993412E9 cpu, 2.461088448E9 io, 7.67204250688005E8 network, 4.255586744213114E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 120335.71352016955, cumulative cost = {1.819374904450951E8 rows, 6.147236881993412E9 cpu, 2.461088448E9 io, 7.67204250688005E8 network, 4.255586744213114E8 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 167145.5855507771, cumulative cost = {1.1028758602967334E8 rows, 4.0222449125486054E9 cpu, 1.476648012E9 io, 5.079738019711586E8 network, 2.75385704362858E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 167145.5855507771, cumulative cost = {1.1012044044412257E8 rows, 3.994164454176075E9 cpu, 1.476648012E9 io, 5.0396230791793996E8 network, 2.75385704362858E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 167145.5855507771, cumulative cost = {1.099532948585718E8 rows, 3.9914901248072624E9 cpu, 1.476648012E9 io, 5.0396230791793996E8 network, 2.6468838688760826E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 167145.5855507771, cumulative cost = {1.0978614927302103E8 rows, 3.9620725017503257E9 cpu, 1.476648012E9 io, 4.999508138647213E8 network, 2.6468838688760826E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 922084.62488225, cumulative cost = {1.0961900368747026E8 rows, 3.9473191477522097E9 cpu, 1.476648012E9 io, 4.999508138647213E8 network, 2.5399106941235852E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 214493.17180572054, cumulative cost = {8.736814653556308E7 rows, 3.073092879183068E9 cpu, 1.181312328E9 io, 3.862659766577464E8 network, 2.1720822896345422E8 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 85860.46618312699, cumulative cost = {5.199074727240567E7 rows, 1.941028744611237E9 cpu, 6.89098152E8 io, 2.4591450847395048E8 network, 1.355330301496017E8 memory}
         :  :     :              :  :  :- Calc(select=[X0, y0 AS X1]): rowcount = 49822.2394040635, cumulative cost = {2.889072641458315E7 rows, 1.0032532086088026E9 cpu, 3.93768792E8 io, 1.2694304538930032E8 network, 7.035250876480085E7 memory}
         :  :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 49822.2394040635, cumulative cost = {2.8840904175179087E7 rows, 1.0032532086088026E9 cpu, 3.93768792E8 io, 1.2694304538930032E8 network, 7.035250876480085E7 memory}
         :  :     :              :  :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :  :     :              :  :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :     :              :  :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :     :              :  :  :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :  :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :  :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :  :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :  :  :     :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 92356.4175, cumulative cost = {5610132.152500002 rows, 2.461743574E7 cpu, 9.8444988E7 io, 2222134.02 network, 16696.0 memory}
         :  :     :              :  :  :        +- Calc(select=[x, y0]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :  :              :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :              :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :              :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[X0, X1]): rowcount = 36038.226779063494, cumulative cost = {2.301416039163939E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 36038.226779063494, cumulative cost = {2.2978122164860327E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :  :     :              :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :     :              :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :     :              :  :        :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :  :        :                    +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 128632.70562259354, cumulative cost = {3.51629060913517E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 128632.70562259354, cumulative cost = {3.503427338572911E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :  :     :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 617759.5256235336, cumulative cost = {1.17246908968315E7 rows, 1.4901064366623443E8 cpu, 1.96890372E8 io, 1.5630556814495582E7 network, 3083002.098201301 memory}
         :  :     :              :           +- Calc(select=[x, X0]): rowcount = 617759.5256235336, cumulative cost = {1.1106931371207966E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617759.5256235336, cumulative cost = {1.0489171845584432E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 16754.83749022446, cumulative cost = {5769770.319960898 rows, 1.2279868661559012E7 cpu, 9.8450964E7 io, 804328.1995307741 network, 2144731.198748731 memory}
         :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 707591.4530765294, cumulative cost = {2.132877252702493E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 707591.4530765294, cumulative cost = {2.06211810739484E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 615634.35384353, cumulative cost = {1.1710305620871866E7 rows, 1.464901171135116E8 cpu, 1.96896276E8 io, 1.5245429206974916E7 network, 2307316.6336666164 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 615634.35384353, cumulative cost = {1.1094671267028335E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615634.35384353, cumulative cost = {1.0479036913184805E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 2587.025623533669, cumulative cost = {5761760.559341275 rows, 1.022971346281028E7 cpu, 9.8456868E7 io, 470204.7147301951 network, 2162443.198748731 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 2587.025623533669, cumulative cost = {5759173.533717741 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2587.025623533669, cumulative cost = {5756586.508094207 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 635092.5045836867, cumulative cost = {7.152956870190158E7 rows, 2.1185740647237313E9 cpu, 9.84440436E8 io, 2.5923044871684632E8 network, 1.4081281726760986E8 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 635092.5045836867, cumulative cost = {7.08944761973179E7 rows, 2.011878523953672E9 cpu, 9.84440436E8 io, 2.4398822860683784E8 network, 1.4081281726760986E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 635092.5045836867, cumulative cost = {7.025938369273421E7 rows, 2.011878523953672E9 cpu, 9.84440436E8 io, 2.4398822860683784E8 network, 1.4081281726760986E8 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 132308.0305579119, cumulative cost = {6.1421007188150525E7 rows, 1.2889310677092087E9 cpu, 8.86001028E8 io, 1.4554882060683784E8 network, 1.334035675563668E8 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.128869915759261E7 rows, 1.2667033185754795E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.334035675563668E8 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 132308.0305579119, cumulative cost = {6.1156391127034694E7 rows, 1.2645863900865529E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.2493585360066044E8 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.102408309647678E7 rows, 1.2413001767083604E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.2493585360066044E8 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 729897.833220605, cumulative cost = {6.089177506591886E7 rows, 1.2296218113768308E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.1646813964495409E8 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 112052.33563582558, cumulative cost = {3.580258249390231E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 112052.33563582558, cumulative cost = {3.5690530158266485E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 115027.89265686346, cumulative cost = {1.908402168458766E7 rows, 1.609046963037042E8 cpu, 2.9533566E8 io, 1.1286275816362873E7 network, 4.425118995309321E7 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                             :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 617845.4975847794, cumulative cost = {2.435929473879594E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617845.4975847794, cumulative cost = {2.374144924121116E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 17327.983898529517, cumulative cost = {1.9021961743626382E7 rows, 1.4535536690237078E8 cpu, 2.95341564E8 io, 8947382.006162858 network, 4.426890195309321E7 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 17327.983898529517, cumulative cost = {1.9004633759727854E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 17327.983898529517, cumulative cost = {1.8987305775829326E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                                            :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 25082.277832616564, cumulative cost = {1.1017127879978779E8 rows, 3.995513934660481E9 cpu, 1.476653592E9 io, 5.0396400231793994E8 network, 2.75389629962858E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 25082.277832616564, cumulative cost = {1.1014619652195518E8 rows, 3.995513934660481E9 cpu, 1.476653592E9 io, 5.0396400231793994E8 network, 2.75389629962858E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 167145.5855507771, cumulative cost = {1.1012044044412257E8 rows, 3.994164454176075E9 cpu, 1.476648012E9 io, 5.0396230791793996E8 network, 2.75385704362858E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 167145.5855507771, cumulative cost = {1.099532948585718E8 rows, 3.9914901248072624E9 cpu, 1.476648012E9 io, 5.0396230791793996E8 network, 2.6468838688760826E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 167145.5855507771, cumulative cost = {1.0978614927302103E8 rows, 3.9620725017503257E9 cpu, 1.476648012E9 io, 4.999508138647213E8 network, 2.6468838688760826E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 922084.62488225, cumulative cost = {1.0961900368747026E8 rows, 3.9473191477522097E9 cpu, 1.476648012E9 io, 4.999508138647213E8 network, 2.5399106941235852E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 214493.17180572054, cumulative cost = {8.736814653556308E7 rows, 3.073092879183068E9 cpu, 1.181312328E9 io, 3.862659766577464E8 network, 2.1720822896345422E8 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 85860.46618312699, cumulative cost = {5.199074727240567E7 rows, 1.941028744611237E9 cpu, 6.89098152E8 io, 2.4591450847395048E8 network, 1.355330301496017E8 memory}
         :        :           :  :  :- Calc(select=[X0, y0 AS X1]): rowcount = 49822.2394040635, cumulative cost = {2.889072641458315E7 rows, 1.0032532086088026E9 cpu, 3.93768792E8 io, 1.2694304538930032E8 network, 7.035250876480085E7 memory}
         :        :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 49822.2394040635, cumulative cost = {2.8840904175179087E7 rows, 1.0032532086088026E9 cpu, 3.93768792E8 io, 1.2694304538930032E8 network, 7.035250876480085E7 memory}
         :        :           :  :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :        :           :  :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :           :  :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :           :  :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :           :  :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :           :  :  :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :  :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :  :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :  :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :  :  :     :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 92356.4175, cumulative cost = {5610132.152500002 rows, 2.461743574E7 cpu, 9.8444988E7 io, 2222134.02 network, 16696.0 memory}
         :        :           :  :  :        +- Calc(select=[x, y0]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :  :              :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :              :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :              :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[X0, X1]): rowcount = 36038.226779063494, cumulative cost = {2.301416039163939E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 36038.226779063494, cumulative cost = {2.2978122164860327E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :        :           :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :           :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :           :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :           :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :           :  :        :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :  :        :                    +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 128632.70562259354, cumulative cost = {3.51629060913517E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 128632.70562259354, cumulative cost = {3.503427338572911E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :        :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 617759.5256235336, cumulative cost = {1.17246908968315E7 rows, 1.4901064366623443E8 cpu, 1.96890372E8 io, 1.5630556814495582E7 network, 3083002.098201301 memory}
         :        :           :           +- Calc(select=[x, X0]): rowcount = 617759.5256235336, cumulative cost = {1.1106931371207966E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617759.5256235336, cumulative cost = {1.0489171845584432E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 16754.83749022446, cumulative cost = {5769770.319960898 rows, 1.2279868661559012E7 cpu, 9.8450964E7 io, 804328.1995307741 network, 2144731.198748731 memory}
         :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 707591.4530765294, cumulative cost = {2.132877252702493E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 707591.4530765294, cumulative cost = {2.06211810739484E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 615634.35384353, cumulative cost = {1.1710305620871866E7 rows, 1.464901171135116E8 cpu, 1.96896276E8 io, 1.5245429206974916E7 network, 2307316.6336666164 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 615634.35384353, cumulative cost = {1.1094671267028335E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615634.35384353, cumulative cost = {1.0479036913184805E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 2587.025623533669, cumulative cost = {5761760.559341275 rows, 1.022971346281028E7 cpu, 9.8456868E7 io, 470204.7147301951 network, 2162443.198748731 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 2587.025623533669, cumulative cost = {5759173.533717741 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2587.025623533669, cumulative cost = {5756586.508094207 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 26250.46059090563, cumulative cost = {1.4929471670834532E8 rows, 4.451586660898228E9 cpu, 2.067332016E9 io, 5.401334255344193E8 network, 3.51531915654866E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 26250.46059090563, cumulative cost = {1.4926846624775442E8 rows, 4.451586660898228E9 cpu, 2.067332016E9 io, 5.401334255344193E8 network, 3.51531915654866E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 155083.06602235074, cumulative cost = {8.789277261581986E7 rows, 3.179154996780047E9 cpu, 1.181325084E9 io, 3.9727601355096287E8 network, 2.1699511584181273E8 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 155083.06602235074, cumulative cost = {8.77376895497975E7 rows, 3.1766736677236896E9 cpu, 1.181325084E9 io, 3.9727601355096287E8 network, 2.0706979961638227E8 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 155083.06602235074, cumulative cost = {8.758260648377515E7 rows, 3.149379048103756E9 cpu, 1.181325084E9 io, 3.9355401996642643E8 network, 2.0706979961638227E8 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 855539.8593842413, cumulative cost = {8.74275234177528E7 rows, 3.135690410353608E9 cpu, 1.181325084E9 io, 3.9355401996642643E8 network, 1.971444833909518E8 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 836226.1384923818, cumulative cost = {5.7146374804751694E7 rows, 2.0146426718511891E9 cpu, 7.87550412E8 io, 2.5405407059712613E8 network, 1.1851790667530061E8 memory}
               :           :  :- Calc(select=[x AS X0, X1]): rowcount = 707591.7113104329, cumulative cost = {2.123797041310528E7 rows, 8.776244786175095E8 cpu, 2.9533596E8 io, 1.1369282230387531E8 network, 3.681100133160895E7 memory}
               :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 707591.7113104329, cumulative cost = {2.0530378701794848E7 rows, 8.776244786175095E8 cpu, 2.9533596E8 io, 1.1369282230387531E8 network, 3.681100133160895E7 memory}
               :           :  :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :     +- Exchange(distribution=[hash[x]]): rowcount = 615636.0754028853, cumulative cost = {1.1619502990484416E7 rows, 1.508103980142864E8 cpu, 1.96896552E8 io, 1.5253414303875316E7 network, 2335381.109047373 memory}
               :           :  :        +- Calc(select=[x, X1]): rowcount = 615636.0754028853, cumulative cost = {1.100386691508153E7 rows, 4.738353734660167E7 cpu, 1.96896552E8 io, 478148.49420606665 network, 2335381.109047373 memory}
               :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615636.0754028853, cumulative cost = {1.0388230839678645E7 rows, 4.738353734660167E7 cpu, 1.96896552E8 io, 478148.49420606665 network, 2335381.109047373 memory}
               :           :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 2598.502685902536, cumulative cost = {5670952.76427576 rows, 1.4549613325114453E7 cpu, 9.8457144E7 io, 478148.49420606665 network, 2189864.958636831 memory}
               :           :  :                 +- Calc(select=[X0, X1]): rowcount = 2598.502685902536, cumulative cost = {5668354.261589858 rows, 1.4133852895370048E7 cpu, 9.8457144E7 io, 415784.4297444058 network, 2189864.958636831 memory}
               :           :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2598.502685902536, cumulative cost = {5665755.758903955 rows, 1.4133852895370048E7 cpu, 9.8457144E7 io, 415784.4297444058 network, 2189864.958636831 memory}
               :           :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :           :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :           :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :           :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :                       +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[X0, X10 AS X1]): rowcount = 128634.42718194886, cumulative cost = {3.507217825315403E7 rows, 1.1361819670951874E9 cpu, 4.92214452E8 io, 1.403612482932508E8 network, 8.170690534369166E7 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 128634.42718194886, cumulative cost = {3.494354382597208E7 rows, 1.1361819670951874E9 cpu, 4.92214452E8 io, 1.403612482932508E8 network, 8.170690534369166E7 memory}
               :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
               :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
               :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
               :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
               :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
               :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :           :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :        +- Exchange(distribution=[hash[x]]): rowcount = 617771.0026859025, cumulative cost = {1.1633959615515111E7 rows, 1.533428775448977E8 cpu, 1.96890648E8 io, 1.5640336923950471E7 network, 3114708.6280404446 memory}
               :           :           +- Calc(select=[x, X1]): rowcount = 617771.0026859025, cumulative cost = {1.1016188612829208E7 rows, 4.9557349093666084E7 cpu, 1.96890648E8 io, 813832.8594888116 network, 3114708.6280404446 memory}
               :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617771.0026859025, cumulative cost = {1.0398417610143306E7 rows, 4.9557349093666084E7 cpu, 1.96890648E8 io, 813832.8594888116 network, 3114708.6280404446 memory}
               :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :                 +- Exchange(distribution=[broadcast]): rowcount = 16831.351239350242, cumulative cost = {5679004.607457403 rows, 1.6609562283751285E7 cpu, 9.845124E7 io, 813832.8594888116 network, 2172152.958636831 memory}
               :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :           :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :                                :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :                                :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, y AS X1]): rowcount = 19313.72089185952, cumulative cost = {2.9425608753616866E7 rows, 1.120192198643035E9 cpu, 3.93774672E8 io, 1.394999493693003E8 network, 7.862657671565121E7 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[X0, y, x], isBroadcast=[true], build=[right]): rowcount = 19313.72089185952, cumulative cost = {2.9406295032725006E7 rows, 1.120192198643035E9 cpu, 3.93774672E8 io, 1.394999493693003E8 network, 7.862657671565121E7 memory}
               :                 :- Calc(select=[X0, y]): rowcount = 128266.13927906349, cumulative cost = {2.9385997311833147E7 rows, 1.1190834135288024E9 cpu, 3.93768768E8 io, 1.394940453693003E8 network, 7.860886471565121E7 memory}
               :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], build=[left]): rowcount = 128266.13927906349, cumulative cost = {2.9257731172554083E7 rows, 1.1190834135288024E9 cpu, 3.93768768E8 io, 1.394940453693003E8 network, 7.860886471565121E7 memory}
               :                 :     :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
               :                 :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
               :                 :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
               :                 :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
               :                 :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
               :                 :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                 :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                 :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                 :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                 :     :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :     +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
               :                 :        +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                 :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 19920.004583686783, cumulative cost = {6.134944317134367E7 rows, 1.2710316395533326E9 cpu, 8.86006932E8 io, 1.4285741198345643E8 network, 1.334212795563668E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 19920.004583686783, cumulative cost = {6.132952316675998E7 rows, 1.2678444388199427E9 cpu, 8.86006932E8 io, 1.4237933187344795E8 network, 1.334212795563668E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 19920.004583686783, cumulative cost = {6.1309603162176296E7 rows, 1.2678444388199427E9 cpu, 8.86006932E8 io, 1.4237933187344795E8 network, 1.334212795563668E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.128869915759261E7 rows, 1.2667033185754795E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.334035675563668E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 132308.0305579119, cumulative cost = {6.1156391127034694E7 rows, 1.2645863900865529E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.2493585360066044E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.102408309647678E7 rows, 1.2413001767083604E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.2493585360066044E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 729897.833220605, cumulative cost = {6.089177506591886E7 rows, 1.2296218113768308E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.1646813964495409E8 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 112052.33563582558, cumulative cost = {3.580258249390231E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 112052.33563582558, cumulative cost = {3.5690530158266485E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 115027.89265686346, cumulative cost = {1.908402168458766E7 rows, 1.609046963037042E8 cpu, 2.9533566E8 io, 1.1286275816362873E7 network, 4.425118995309321E7 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 617845.4975847794, cumulative cost = {2.435929473879594E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617845.4975847794, cumulative cost = {2.374144924121116E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
                        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 17327.983898529517, cumulative cost = {1.9021961743626382E7 rows, 1.4535536690237078E8 cpu, 2.95341564E8 io, 8947382.006162858 network, 4.426890195309321E7 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 17327.983898529517, cumulative cost = {1.9004633759727854E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 17327.983898529517, cumulative cost = {1.8987305775829326E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,2,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#2] Exchange(distribution=[hash[X1]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[5])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[8])
         :        :           :              :        :           :     :- Reused(reference_id=[1])
         :        :           :              :        :           :     +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :              :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[20])
         :        :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :              :        +- Reused(reference_id=[2])
         :        :           :              :- Reused(reference_id=[3])
         :        :           :              +- Exchange(distribution=[broadcast])(reuse_id=[9])
         :        :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[4])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Exchange(distribution=[hash[x]])
         :        :           :        :  +- Reused(reference_id=[1])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])
         :        :           :                       :  +- Reused(reference_id=[4])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[11])
         :        :           :                             :- Reused(reference_id=[1])
         :        :           :                             +- Reused(reference_id=[2])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[5])
         :        :                    +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :                       +- Reused(reference_id=[6])
         :        +- Reused(reference_id=[7])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[17])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,2,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[X0, y0 AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[right])\n:  :  :     :- [#3] Exchange(distribution=[hash[X1]])\n:  :  :     +- [#6] Exchange(distribution=[hash[x]])\n:  :  +- Calc(select=[X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :        :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :        +- [#8] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], build=[left])\n:        :- [#3] Exchange(distribution=[hash[X1]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[10])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[12])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Calc(select=[y, x0])(reuse_id=[19])
         :              :                 :           :  :  +- Reused(reference_id=[8])
         :              :                 :           :  :- Reused(reference_id=[2])
         :              :                 :           :  :- Reused(reference_id=[6])
         :              :                 :           :  +- Reused(reference_id=[2])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[18])
         :              :                 :                 :- Reused(reference_id=[4])
         :              :                 :                 +- Reused(reference_id=[2])
         :              :                 +- Reused(reference_id=[7])
         :              :- Exchange(distribution=[hash[X1]])(reuse_id=[13])
         :              :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :              :     +- Exchange(distribution=[hash[X0, X1]])
         :              :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :              :- Reused(reference_id=[1])
         :              :              :- Reused(reference_id=[9])
         :              :              :- Reused(reference_id=[10])
         :              :              +- Exchange(distribution=[hash[x]])
         :              :                 +- Calc(select=[x, y0])(reuse_id=[14])
         :              :                    +- Reused(reference_id=[11])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Reused(reference_id=[12])
         :              :- Reused(reference_id=[13])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[14])
         :              :        +- Reused(reference_id=[9])
         :              :- Reused(reference_id=[15])
         :              +- Reused(reference_id=[9])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Reused(reference_id=[10])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[16])
         :- Reused(reference_id=[17])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[x, x0])
         :     +- Reused(reference_id=[18])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[0,1,0,1,2,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#2] Exchange(distribution=[hash[y]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#4] Exchange(distribution=[hash[X1]])\n:        +- [#5] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[X0, y, x], isBroadcast=[true], build=[right])\n      :- Calc(select=[X0, y])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], build=[left])\n      :     :- [#4] Exchange(distribution=[hash[X1]])\n      :     +- [#7] Exchange(distribution=[hash[x]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
                  :- Reused(reference_id=[7])
                  :- Reused(reference_id=[10])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Calc(select=[X0, X1])
                  :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                  :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
                  :                 :  +- Exchange(distribution=[hash[X0, X1]])
                  :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :                 :        +- Union(all=[true], union=[X0, X1])
                  :                 :           :- Calc(select=[x0 AS X0, y AS X1])
                  :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :                 :           :     :- Reused(reference_id=[19])
                  :                 :           :     +- Reused(reference_id=[7])
                  :                 :           +- Reused(reference_id=[20])
                  :                 +- Reused(reference_id=[7])
                  :- Reused(reference_id=[13])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Reused(reference_id=[21])
                  :- Reused(reference_id=[13])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Reused(reference_id=[9])

Job has been submitted with JobID a78835582f975d977ea1d90758a1ac95
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, s_3.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN s AS s_3 ON r_2.y = s_3.x UNION (SELECT p19_0.X0 AS X0, p19_0.X1 AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x) UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: f5822015_3fb9_4091_940c_c137d2adbe40

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0)
            UNION
            (SELECT p19_0.X0 AS X0, r_2.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)),
     p35 AS (SELECT p19_0.X0 AS X0, s_3.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN s AS s_3 ON r_2.y = s_3.x
             UNION
             (SELECT p19_0.X0 AS X0, p19_0.X1 AS X1
              FROM p19 AS p19_0
                       INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x)
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :  :  +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :  :        :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :        :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :  :  +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :     +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :  :        :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :        :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 31118.211004101668, cumulative cost = {4.419342627430571E8 rows, 1.4603375955739305E10 cpu, 6.005074056E9 io, 1.8120485156044626E9 network, 1.0564633510475602E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 31118.211004101668, cumulative cost = {4.41903144532053E8 rows, 1.460287806436324E10 cpu, 6.005074056E9 io, 1.8120485156044626E9 network, 1.0544717855432978E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 31118.211004101668, cumulative cost = {4.418720263210489E8 rows, 1.4597401259226517E10 cpu, 6.005074056E9 io, 1.8113016785403643E9 network, 1.0544717855432978E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 171668.45194369173, cumulative cost = {4.4184090811004484E8 rows, 1.4594654563995419E10 cpu, 6.005074056E9 io, 1.8113016785403643E9 network, 1.0524802200390353E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 145417.9913527861, cumulative cost = {2.9237452294975585E8 rows, 1.0142896234645247E10 cpu, 3.93774204E9 io, 1.271168253005945E9 network, 7.009483043841693E8 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 120335.71352016955, cumulative cost = {1.8205782615861526E8 rows, 6.147236881993412E9 cpu, 2.461088448E9 io, 7.67204250688005E8 network, 4.255586744213114E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 120335.71352016955, cumulative cost = {1.819374904450951E8 rows, 6.147236881993412E9 cpu, 2.461088448E9 io, 7.67204250688005E8 network, 4.255586744213114E8 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 167145.5855507771, cumulative cost = {1.1028758602967334E8 rows, 4.0222449125486054E9 cpu, 1.476648012E9 io, 5.079738019711586E8 network, 2.75385704362858E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 167145.5855507771, cumulative cost = {1.1012044044412257E8 rows, 3.994164454176075E9 cpu, 1.476648012E9 io, 5.0396230791793996E8 network, 2.75385704362858E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 167145.5855507771, cumulative cost = {1.099532948585718E8 rows, 3.9914901248072624E9 cpu, 1.476648012E9 io, 5.0396230791793996E8 network, 2.6468838688760826E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 167145.5855507771, cumulative cost = {1.0978614927302103E8 rows, 3.9620725017503257E9 cpu, 1.476648012E9 io, 4.999508138647213E8 network, 2.6468838688760826E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 922084.62488225, cumulative cost = {1.0961900368747026E8 rows, 3.9473191477522097E9 cpu, 1.476648012E9 io, 4.999508138647213E8 network, 2.5399106941235852E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 214493.17180572054, cumulative cost = {8.736814653556308E7 rows, 3.073092879183068E9 cpu, 1.181312328E9 io, 3.862659766577464E8 network, 2.1720822896345422E8 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 85860.46618312699, cumulative cost = {5.199074727240567E7 rows, 1.941028744611237E9 cpu, 6.89098152E8 io, 2.4591450847395048E8 network, 1.355330301496017E8 memory}
         :  :     :              :  :  :- Calc(select=[X0, y0 AS X1]): rowcount = 49822.2394040635, cumulative cost = {2.889072641458315E7 rows, 1.0032532086088026E9 cpu, 3.93768792E8 io, 1.2694304538930032E8 network, 7.035250876480085E7 memory}
         :  :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 49822.2394040635, cumulative cost = {2.8840904175179087E7 rows, 1.0032532086088026E9 cpu, 3.93768792E8 io, 1.2694304538930032E8 network, 7.035250876480085E7 memory}
         :  :     :              :  :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :  :     :              :  :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :     :              :  :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :     :              :  :  :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :  :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :  :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :  :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :  :  :     :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 92356.4175, cumulative cost = {5610132.152500002 rows, 2.461743574E7 cpu, 9.8444988E7 io, 2222134.02 network, 16696.0 memory}
         :  :     :              :  :  :        +- Calc(select=[x, y0]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :  :              :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :              :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :              :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[X0, X1]): rowcount = 36038.226779063494, cumulative cost = {2.301416039163939E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 36038.226779063494, cumulative cost = {2.2978122164860327E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :  :     :              :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :     :              :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :     :              :  :        :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :  :        :                    +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 128632.70562259354, cumulative cost = {3.51629060913517E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 128632.70562259354, cumulative cost = {3.503427338572911E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :  :     :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 617759.5256235336, cumulative cost = {1.17246908968315E7 rows, 1.4901064366623443E8 cpu, 1.96890372E8 io, 1.5630556814495582E7 network, 3083002.098201301 memory}
         :  :     :              :           +- Calc(select=[x, X0]): rowcount = 617759.5256235336, cumulative cost = {1.1106931371207966E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617759.5256235336, cumulative cost = {1.0489171845584432E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 16754.83749022446, cumulative cost = {5769770.319960898 rows, 1.2279868661559012E7 cpu, 9.8450964E7 io, 804328.1995307741 network, 2144731.198748731 memory}
         :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 707591.4530765294, cumulative cost = {2.132877252702493E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 707591.4530765294, cumulative cost = {2.06211810739484E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 615634.35384353, cumulative cost = {1.1710305620871866E7 rows, 1.464901171135116E8 cpu, 1.96896276E8 io, 1.5245429206974916E7 network, 2307316.6336666164 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 615634.35384353, cumulative cost = {1.1094671267028335E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615634.35384353, cumulative cost = {1.0479036913184805E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 2587.025623533669, cumulative cost = {5761760.559341275 rows, 1.022971346281028E7 cpu, 9.8456868E7 io, 470204.7147301951 network, 2162443.198748731 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 2587.025623533669, cumulative cost = {5759173.533717741 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2587.025623533669, cumulative cost = {5756586.508094207 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 635092.5045836867, cumulative cost = {7.152956870190158E7 rows, 2.1185740647237313E9 cpu, 9.84440436E8 io, 2.5923044871684632E8 network, 1.4081281726760986E8 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 635092.5045836867, cumulative cost = {7.08944761973179E7 rows, 2.011878523953672E9 cpu, 9.84440436E8 io, 2.4398822860683784E8 network, 1.4081281726760986E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 635092.5045836867, cumulative cost = {7.025938369273421E7 rows, 2.011878523953672E9 cpu, 9.84440436E8 io, 2.4398822860683784E8 network, 1.4081281726760986E8 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 132308.0305579119, cumulative cost = {6.1421007188150525E7 rows, 1.2889310677092087E9 cpu, 8.86001028E8 io, 1.4554882060683784E8 network, 1.334035675563668E8 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.128869915759261E7 rows, 1.2667033185754795E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.334035675563668E8 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 132308.0305579119, cumulative cost = {6.1156391127034694E7 rows, 1.2645863900865529E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.2493585360066044E8 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.102408309647678E7 rows, 1.2413001767083604E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.2493585360066044E8 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 729897.833220605, cumulative cost = {6.089177506591886E7 rows, 1.2296218113768308E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.1646813964495409E8 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 112052.33563582558, cumulative cost = {3.580258249390231E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 112052.33563582558, cumulative cost = {3.5690530158266485E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 115027.89265686346, cumulative cost = {1.908402168458766E7 rows, 1.609046963037042E8 cpu, 2.9533566E8 io, 1.1286275816362873E7 network, 4.425118995309321E7 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                             :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 617845.4975847794, cumulative cost = {2.435929473879594E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617845.4975847794, cumulative cost = {2.374144924121116E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 17327.983898529517, cumulative cost = {1.9021961743626382E7 rows, 1.4535536690237078E8 cpu, 2.95341564E8 io, 8947382.006162858 network, 4.426890195309321E7 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 17327.983898529517, cumulative cost = {1.9004633759727854E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 17327.983898529517, cumulative cost = {1.8987305775829326E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                                            :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 25082.277832616564, cumulative cost = {1.1017127879978779E8 rows, 3.995513934660481E9 cpu, 1.476653592E9 io, 5.0396400231793994E8 network, 2.75389629962858E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 25082.277832616564, cumulative cost = {1.1014619652195518E8 rows, 3.995513934660481E9 cpu, 1.476653592E9 io, 5.0396400231793994E8 network, 2.75389629962858E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 167145.5855507771, cumulative cost = {1.1012044044412257E8 rows, 3.994164454176075E9 cpu, 1.476648012E9 io, 5.0396230791793996E8 network, 2.75385704362858E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 167145.5855507771, cumulative cost = {1.099532948585718E8 rows, 3.9914901248072624E9 cpu, 1.476648012E9 io, 5.0396230791793996E8 network, 2.6468838688760826E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 167145.5855507771, cumulative cost = {1.0978614927302103E8 rows, 3.9620725017503257E9 cpu, 1.476648012E9 io, 4.999508138647213E8 network, 2.6468838688760826E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 922084.62488225, cumulative cost = {1.0961900368747026E8 rows, 3.9473191477522097E9 cpu, 1.476648012E9 io, 4.999508138647213E8 network, 2.5399106941235852E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 214493.17180572054, cumulative cost = {8.736814653556308E7 rows, 3.073092879183068E9 cpu, 1.181312328E9 io, 3.862659766577464E8 network, 2.1720822896345422E8 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 85860.46618312699, cumulative cost = {5.199074727240567E7 rows, 1.941028744611237E9 cpu, 6.89098152E8 io, 2.4591450847395048E8 network, 1.355330301496017E8 memory}
         :        :           :  :  :- Calc(select=[X0, y0 AS X1]): rowcount = 49822.2394040635, cumulative cost = {2.889072641458315E7 rows, 1.0032532086088026E9 cpu, 3.93768792E8 io, 1.2694304538930032E8 network, 7.035250876480085E7 memory}
         :        :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 49822.2394040635, cumulative cost = {2.8840904175179087E7 rows, 1.0032532086088026E9 cpu, 3.93768792E8 io, 1.2694304538930032E8 network, 7.035250876480085E7 memory}
         :        :           :  :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :        :           :  :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :           :  :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :           :  :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :           :  :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :           :  :  :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :  :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :  :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :  :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :  :  :     :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 92356.4175, cumulative cost = {5610132.152500002 rows, 2.461743574E7 cpu, 9.8444988E7 io, 2222134.02 network, 16696.0 memory}
         :        :           :  :  :        +- Calc(select=[x, y0]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :  :              :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :              :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :              :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[X0, X1]): rowcount = 36038.226779063494, cumulative cost = {2.301416039163939E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 36038.226779063494, cumulative cost = {2.2978122164860327E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :        :           :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :           :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :           :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :           :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :           :  :        :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :  :        :                    +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 128632.70562259354, cumulative cost = {3.51629060913517E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 128632.70562259354, cumulative cost = {3.503427338572911E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :        :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 617759.5256235336, cumulative cost = {1.17246908968315E7 rows, 1.4901064366623443E8 cpu, 1.96890372E8 io, 1.5630556814495582E7 network, 3083002.098201301 memory}
         :        :           :           +- Calc(select=[x, X0]): rowcount = 617759.5256235336, cumulative cost = {1.1106931371207966E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617759.5256235336, cumulative cost = {1.0489171845584432E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 16754.83749022446, cumulative cost = {5769770.319960898 rows, 1.2279868661559012E7 cpu, 9.8450964E7 io, 804328.1995307741 network, 2144731.198748731 memory}
         :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 707591.4530765294, cumulative cost = {2.132877252702493E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 707591.4530765294, cumulative cost = {2.06211810739484E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 615634.35384353, cumulative cost = {1.1710305620871866E7 rows, 1.464901171135116E8 cpu, 1.96896276E8 io, 1.5245429206974916E7 network, 2307316.6336666164 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 615634.35384353, cumulative cost = {1.1094671267028335E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615634.35384353, cumulative cost = {1.0479036913184805E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 2587.025623533669, cumulative cost = {5761760.559341275 rows, 1.022971346281028E7 cpu, 9.8456868E7 io, 470204.7147301951 network, 2162443.198748731 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 2587.025623533669, cumulative cost = {5759173.533717741 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2587.025623533669, cumulative cost = {5756586.508094207 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 26250.46059090563, cumulative cost = {1.4929471670834532E8 rows, 4.451586660898228E9 cpu, 2.067332016E9 io, 5.401334255344193E8 network, 3.51531915654866E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 26250.46059090563, cumulative cost = {1.4926846624775442E8 rows, 4.451586660898228E9 cpu, 2.067332016E9 io, 5.401334255344193E8 network, 3.51531915654866E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 155083.06602235074, cumulative cost = {8.789277261581986E7 rows, 3.179154996780047E9 cpu, 1.181325084E9 io, 3.9727601355096287E8 network, 2.1699511584181273E8 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 155083.06602235074, cumulative cost = {8.77376895497975E7 rows, 3.1766736677236896E9 cpu, 1.181325084E9 io, 3.9727601355096287E8 network, 2.0706979961638227E8 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 155083.06602235074, cumulative cost = {8.758260648377515E7 rows, 3.149379048103756E9 cpu, 1.181325084E9 io, 3.9355401996642643E8 network, 2.0706979961638227E8 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 855539.8593842413, cumulative cost = {8.74275234177528E7 rows, 3.135690410353608E9 cpu, 1.181325084E9 io, 3.9355401996642643E8 network, 1.971444833909518E8 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 836226.1384923818, cumulative cost = {5.7146374804751694E7 rows, 2.0146426718511891E9 cpu, 7.87550412E8 io, 2.5405407059712613E8 network, 1.1851790667530061E8 memory}
               :           :  :- Calc(select=[x AS X0, X1]): rowcount = 707591.7113104329, cumulative cost = {2.123797041310528E7 rows, 8.776244786175095E8 cpu, 2.9533596E8 io, 1.1369282230387531E8 network, 3.681100133160895E7 memory}
               :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 707591.7113104329, cumulative cost = {2.0530378701794848E7 rows, 8.776244786175095E8 cpu, 2.9533596E8 io, 1.1369282230387531E8 network, 3.681100133160895E7 memory}
               :           :  :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :     +- Exchange(distribution=[hash[x]]): rowcount = 615636.0754028853, cumulative cost = {1.1619502990484416E7 rows, 1.508103980142864E8 cpu, 1.96896552E8 io, 1.5253414303875316E7 network, 2335381.109047373 memory}
               :           :  :        +- Calc(select=[x, X1]): rowcount = 615636.0754028853, cumulative cost = {1.100386691508153E7 rows, 4.738353734660167E7 cpu, 1.96896552E8 io, 478148.49420606665 network, 2335381.109047373 memory}
               :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615636.0754028853, cumulative cost = {1.0388230839678645E7 rows, 4.738353734660167E7 cpu, 1.96896552E8 io, 478148.49420606665 network, 2335381.109047373 memory}
               :           :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 2598.502685902536, cumulative cost = {5670952.76427576 rows, 1.4549613325114453E7 cpu, 9.8457144E7 io, 478148.49420606665 network, 2189864.958636831 memory}
               :           :  :                 +- Calc(select=[X0, X1]): rowcount = 2598.502685902536, cumulative cost = {5668354.261589858 rows, 1.4133852895370048E7 cpu, 9.8457144E7 io, 415784.4297444058 network, 2189864.958636831 memory}
               :           :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2598.502685902536, cumulative cost = {5665755.758903955 rows, 1.4133852895370048E7 cpu, 9.8457144E7 io, 415784.4297444058 network, 2189864.958636831 memory}
               :           :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :           :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :           :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :           :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :                       +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[X0, X10 AS X1]): rowcount = 128634.42718194886, cumulative cost = {3.507217825315403E7 rows, 1.1361819670951874E9 cpu, 4.92214452E8 io, 1.403612482932508E8 network, 8.170690534369166E7 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 128634.42718194886, cumulative cost = {3.494354382597208E7 rows, 1.1361819670951874E9 cpu, 4.92214452E8 io, 1.403612482932508E8 network, 8.170690534369166E7 memory}
               :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
               :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
               :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
               :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
               :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
               :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :           :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :        +- Exchange(distribution=[hash[x]]): rowcount = 617771.0026859025, cumulative cost = {1.1633959615515111E7 rows, 1.533428775448977E8 cpu, 1.96890648E8 io, 1.5640336923950471E7 network, 3114708.6280404446 memory}
               :           :           +- Calc(select=[x, X1]): rowcount = 617771.0026859025, cumulative cost = {1.1016188612829208E7 rows, 4.9557349093666084E7 cpu, 1.96890648E8 io, 813832.8594888116 network, 3114708.6280404446 memory}
               :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617771.0026859025, cumulative cost = {1.0398417610143306E7 rows, 4.9557349093666084E7 cpu, 1.96890648E8 io, 813832.8594888116 network, 3114708.6280404446 memory}
               :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :                 +- Exchange(distribution=[broadcast]): rowcount = 16831.351239350242, cumulative cost = {5679004.607457403 rows, 1.6609562283751285E7 cpu, 9.845124E7 io, 813832.8594888116 network, 2172152.958636831 memory}
               :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :           :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :                                :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :                                :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, y AS X1]): rowcount = 19313.72089185952, cumulative cost = {2.9425608753616866E7 rows, 1.120192198643035E9 cpu, 3.93774672E8 io, 1.394999493693003E8 network, 7.862657671565121E7 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[X0, y, x], isBroadcast=[true], build=[right]): rowcount = 19313.72089185952, cumulative cost = {2.9406295032725006E7 rows, 1.120192198643035E9 cpu, 3.93774672E8 io, 1.394999493693003E8 network, 7.862657671565121E7 memory}
               :                 :- Calc(select=[X0, y]): rowcount = 128266.13927906349, cumulative cost = {2.9385997311833147E7 rows, 1.1190834135288024E9 cpu, 3.93768768E8 io, 1.394940453693003E8 network, 7.860886471565121E7 memory}
               :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], build=[left]): rowcount = 128266.13927906349, cumulative cost = {2.9257731172554083E7 rows, 1.1190834135288024E9 cpu, 3.93768768E8 io, 1.394940453693003E8 network, 7.860886471565121E7 memory}
               :                 :     :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
               :                 :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
               :                 :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
               :                 :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
               :                 :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
               :                 :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                 :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                 :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                 :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                 :     :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :     +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
               :                 :        +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                 :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 19920.004583686783, cumulative cost = {6.134944317134367E7 rows, 1.2710316395533326E9 cpu, 8.86006932E8 io, 1.4285741198345643E8 network, 1.334212795563668E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 19920.004583686783, cumulative cost = {6.132952316675998E7 rows, 1.2678444388199427E9 cpu, 8.86006932E8 io, 1.4237933187344795E8 network, 1.334212795563668E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 19920.004583686783, cumulative cost = {6.1309603162176296E7 rows, 1.2678444388199427E9 cpu, 8.86006932E8 io, 1.4237933187344795E8 network, 1.334212795563668E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.128869915759261E7 rows, 1.2667033185754795E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.334035675563668E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 132308.0305579119, cumulative cost = {6.1156391127034694E7 rows, 1.2645863900865529E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.2493585360066044E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.102408309647678E7 rows, 1.2413001767083604E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.2493585360066044E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 729897.833220605, cumulative cost = {6.089177506591886E7 rows, 1.2296218113768308E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.1646813964495409E8 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 112052.33563582558, cumulative cost = {3.580258249390231E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 112052.33563582558, cumulative cost = {3.5690530158266485E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 115027.89265686346, cumulative cost = {1.908402168458766E7 rows, 1.609046963037042E8 cpu, 2.9533566E8 io, 1.1286275816362873E7 network, 4.425118995309321E7 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 617845.4975847794, cumulative cost = {2.435929473879594E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617845.4975847794, cumulative cost = {2.374144924121116E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
                        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 17327.983898529517, cumulative cost = {1.9021961743626382E7 rows, 1.4535536690237078E8 cpu, 2.95341564E8 io, 8947382.006162858 network, 4.426890195309321E7 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 17327.983898529517, cumulative cost = {1.9004633759727854E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 17327.983898529517, cumulative cost = {1.8987305775829326E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,2,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#2] Exchange(distribution=[hash[X1]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[5])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[8])
         :        :           :              :        :           :     :- Reused(reference_id=[1])
         :        :           :              :        :           :     +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :              :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[20])
         :        :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :              :        +- Reused(reference_id=[2])
         :        :           :              :- Reused(reference_id=[3])
         :        :           :              +- Exchange(distribution=[broadcast])(reuse_id=[9])
         :        :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[4])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Exchange(distribution=[hash[x]])
         :        :           :        :  +- Reused(reference_id=[1])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])
         :        :           :                       :  +- Reused(reference_id=[4])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[11])
         :        :           :                             :- Reused(reference_id=[1])
         :        :           :                             +- Reused(reference_id=[2])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[5])
         :        :                    +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :                       +- Reused(reference_id=[6])
         :        +- Reused(reference_id=[7])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[17])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,2,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[X0, y0 AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[right])\n:  :  :     :- [#3] Exchange(distribution=[hash[X1]])\n:  :  :     +- [#6] Exchange(distribution=[hash[x]])\n:  :  +- Calc(select=[X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :        :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :        +- [#8] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], build=[left])\n:        :- [#3] Exchange(distribution=[hash[X1]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[10])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[12])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Calc(select=[y, x0])(reuse_id=[19])
         :              :                 :           :  :  +- Reused(reference_id=[8])
         :              :                 :           :  :- Reused(reference_id=[2])
         :              :                 :           :  :- Reused(reference_id=[6])
         :              :                 :           :  +- Reused(reference_id=[2])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[18])
         :              :                 :                 :- Reused(reference_id=[4])
         :              :                 :                 +- Reused(reference_id=[2])
         :              :                 +- Reused(reference_id=[7])
         :              :- Exchange(distribution=[hash[X1]])(reuse_id=[13])
         :              :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :              :     +- Exchange(distribution=[hash[X0, X1]])
         :              :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :              :- Reused(reference_id=[1])
         :              :              :- Reused(reference_id=[9])
         :              :              :- Reused(reference_id=[10])
         :              :              +- Exchange(distribution=[hash[x]])
         :              :                 +- Calc(select=[x, y0])(reuse_id=[14])
         :              :                    +- Reused(reference_id=[11])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Reused(reference_id=[12])
         :              :- Reused(reference_id=[13])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[14])
         :              :        +- Reused(reference_id=[9])
         :              :- Reused(reference_id=[15])
         :              +- Reused(reference_id=[9])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Reused(reference_id=[10])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[16])
         :- Reused(reference_id=[17])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[x, x0])
         :     +- Reused(reference_id=[18])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[0,1,0,1,2,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#2] Exchange(distribution=[hash[y]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#4] Exchange(distribution=[hash[X1]])\n:        +- [#5] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[X0, y, x], isBroadcast=[true], build=[right])\n      :- Calc(select=[X0, y])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], build=[left])\n      :     :- [#4] Exchange(distribution=[hash[X1]])\n      :     +- [#7] Exchange(distribution=[hash[x]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
                  :- Reused(reference_id=[7])
                  :- Reused(reference_id=[10])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Calc(select=[X0, X1])
                  :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                  :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
                  :                 :  +- Exchange(distribution=[hash[X0, X1]])
                  :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :                 :        +- Union(all=[true], union=[X0, X1])
                  :                 :           :- Calc(select=[x0 AS X0, y AS X1])
                  :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :                 :           :     :- Reused(reference_id=[19])
                  :                 :           :     +- Reused(reference_id=[7])
                  :                 :           +- Reused(reference_id=[20])
                  :                 +- Reused(reference_id=[7])
                  :- Reused(reference_id=[13])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Reused(reference_id=[21])
                  :- Reused(reference_id=[13])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Reused(reference_id=[9])

Job has been submitted with JobID 69b330f52659f415d6d81d05d58b7405
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0) UNION (SELECT p19_0.X0 AS X0, r_2.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x)), p35 AS (SELECT p19_0.X0 AS X0, s_3.y AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN s AS s_3 ON r_2.y = s_3.x UNION (SELECT p19_0.X0 AS X0, p19_0.X1 AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x) UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 99e8c132_89f9_4d9f_9e6b_a7df104723e7

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT p19_0.X0 AS X0, p28_2.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0)
            UNION
            (SELECT p19_0.X0 AS X0, r_2.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)),
     p35 AS (SELECT p19_0.X0 AS X0, s_3.y AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN s AS s_3 ON r_2.y = s_3.x
             UNION
             (SELECT p19_0.X0 AS X0, p19_0.X1 AS X1
              FROM p19 AS p19_0
                       INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x)
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :  :  +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :  :        :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :  :        :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :  :  +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :     +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :  :        :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :        :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalUnion(all=[false])
         :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalUnion(all=[false])
         :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :- LogicalUnion(all=[false])
         :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 31118.211004101668, cumulative cost = {4.419342627430571E8 rows, 1.4603375955739305E10 cpu, 6.005074056E9 io, 1.8120485156044626E9 network, 1.0564633510475602E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 31118.211004101668, cumulative cost = {4.41903144532053E8 rows, 1.460287806436324E10 cpu, 6.005074056E9 io, 1.8120485156044626E9 network, 1.0544717855432978E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 31118.211004101668, cumulative cost = {4.418720263210489E8 rows, 1.4597401259226517E10 cpu, 6.005074056E9 io, 1.8113016785403643E9 network, 1.0544717855432978E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 171668.45194369173, cumulative cost = {4.4184090811004484E8 rows, 1.4594654563995419E10 cpu, 6.005074056E9 io, 1.8113016785403643E9 network, 1.0524802200390353E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 145417.9913527861, cumulative cost = {2.9237452294975585E8 rows, 1.0142896234645247E10 cpu, 3.93774204E9 io, 1.271168253005945E9 network, 7.009483043841693E8 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 120335.71352016955, cumulative cost = {1.8205782615861526E8 rows, 6.147236881993412E9 cpu, 2.461088448E9 io, 7.67204250688005E8 network, 4.255586744213114E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 120335.71352016955, cumulative cost = {1.819374904450951E8 rows, 6.147236881993412E9 cpu, 2.461088448E9 io, 7.67204250688005E8 network, 4.255586744213114E8 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 167145.5855507771, cumulative cost = {1.1028758602967334E8 rows, 4.0222449125486054E9 cpu, 1.476648012E9 io, 5.079738019711586E8 network, 2.75385704362858E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 167145.5855507771, cumulative cost = {1.1012044044412257E8 rows, 3.994164454176075E9 cpu, 1.476648012E9 io, 5.0396230791793996E8 network, 2.75385704362858E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 167145.5855507771, cumulative cost = {1.099532948585718E8 rows, 3.9914901248072624E9 cpu, 1.476648012E9 io, 5.0396230791793996E8 network, 2.6468838688760826E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 167145.5855507771, cumulative cost = {1.0978614927302103E8 rows, 3.9620725017503257E9 cpu, 1.476648012E9 io, 4.999508138647213E8 network, 2.6468838688760826E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 922084.62488225, cumulative cost = {1.0961900368747026E8 rows, 3.9473191477522097E9 cpu, 1.476648012E9 io, 4.999508138647213E8 network, 2.5399106941235852E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 214493.17180572054, cumulative cost = {8.736814653556308E7 rows, 3.073092879183068E9 cpu, 1.181312328E9 io, 3.862659766577464E8 network, 2.1720822896345422E8 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 85860.46618312699, cumulative cost = {5.199074727240567E7 rows, 1.941028744611237E9 cpu, 6.89098152E8 io, 2.4591450847395048E8 network, 1.355330301496017E8 memory}
         :  :     :              :  :  :- Calc(select=[X0, y0 AS X1]): rowcount = 49822.2394040635, cumulative cost = {2.889072641458315E7 rows, 1.0032532086088026E9 cpu, 3.93768792E8 io, 1.2694304538930032E8 network, 7.035250876480085E7 memory}
         :  :     :              :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 49822.2394040635, cumulative cost = {2.8840904175179087E7 rows, 1.0032532086088026E9 cpu, 3.93768792E8 io, 1.2694304538930032E8 network, 7.035250876480085E7 memory}
         :  :     :              :  :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :  :     :              :  :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :     :              :  :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :     :              :  :  :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :  :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :  :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :  :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :  :  :     :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 92356.4175, cumulative cost = {5610132.152500002 rows, 2.461743574E7 cpu, 9.8444988E7 io, 2222134.02 network, 16696.0 memory}
         :  :     :              :  :  :        +- Calc(select=[x, y0]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :  :              :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :              :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :              :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[X0, X1]): rowcount = 36038.226779063494, cumulative cost = {2.301416039163939E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 36038.226779063494, cumulative cost = {2.2978122164860327E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :  :     :              :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :     :              :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :     :              :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :     :              :  :        :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :  :        :                    +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 128632.70562259354, cumulative cost = {3.51629060913517E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 128632.70562259354, cumulative cost = {3.503427338572911E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :  :     :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 617759.5256235336, cumulative cost = {1.17246908968315E7 rows, 1.4901064366623443E8 cpu, 1.96890372E8 io, 1.5630556814495582E7 network, 3083002.098201301 memory}
         :  :     :              :           +- Calc(select=[x, X0]): rowcount = 617759.5256235336, cumulative cost = {1.1106931371207966E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617759.5256235336, cumulative cost = {1.0489171845584432E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 16754.83749022446, cumulative cost = {5769770.319960898 rows, 1.2279868661559012E7 cpu, 9.8450964E7 io, 804328.1995307741 network, 2144731.198748731 memory}
         :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 707591.4530765294, cumulative cost = {2.132877252702493E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 707591.4530765294, cumulative cost = {2.06211810739484E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 615634.35384353, cumulative cost = {1.1710305620871866E7 rows, 1.464901171135116E8 cpu, 1.96896276E8 io, 1.5245429206974916E7 network, 2307316.6336666164 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 615634.35384353, cumulative cost = {1.1094671267028335E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615634.35384353, cumulative cost = {1.0479036913184805E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 2587.025623533669, cumulative cost = {5761760.559341275 rows, 1.022971346281028E7 cpu, 9.8456868E7 io, 470204.7147301951 network, 2162443.198748731 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 2587.025623533669, cumulative cost = {5759173.533717741 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2587.025623533669, cumulative cost = {5756586.508094207 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 635092.5045836867, cumulative cost = {7.152956870190158E7 rows, 2.1185740647237313E9 cpu, 9.84440436E8 io, 2.5923044871684632E8 network, 1.4081281726760986E8 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 635092.5045836867, cumulative cost = {7.08944761973179E7 rows, 2.011878523953672E9 cpu, 9.84440436E8 io, 2.4398822860683784E8 network, 1.4081281726760986E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 635092.5045836867, cumulative cost = {7.025938369273421E7 rows, 2.011878523953672E9 cpu, 9.84440436E8 io, 2.4398822860683784E8 network, 1.4081281726760986E8 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 132308.0305579119, cumulative cost = {6.1421007188150525E7 rows, 1.2889310677092087E9 cpu, 8.86001028E8 io, 1.4554882060683784E8 network, 1.334035675563668E8 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.128869915759261E7 rows, 1.2667033185754795E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.334035675563668E8 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 132308.0305579119, cumulative cost = {6.1156391127034694E7 rows, 1.2645863900865529E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.2493585360066044E8 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.102408309647678E7 rows, 1.2413001767083604E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.2493585360066044E8 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 729897.833220605, cumulative cost = {6.089177506591886E7 rows, 1.2296218113768308E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.1646813964495409E8 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 112052.33563582558, cumulative cost = {3.580258249390231E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 112052.33563582558, cumulative cost = {3.5690530158266485E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 115027.89265686346, cumulative cost = {1.908402168458766E7 rows, 1.609046963037042E8 cpu, 2.9533566E8 io, 1.1286275816362873E7 network, 4.425118995309321E7 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                             :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 617845.4975847794, cumulative cost = {2.435929473879594E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617845.4975847794, cumulative cost = {2.374144924121116E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 17327.983898529517, cumulative cost = {1.9021961743626382E7 rows, 1.4535536690237078E8 cpu, 2.95341564E8 io, 8947382.006162858 network, 4.426890195309321E7 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 17327.983898529517, cumulative cost = {1.9004633759727854E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 17327.983898529517, cumulative cost = {1.8987305775829326E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                                            :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 25082.277832616564, cumulative cost = {1.1017127879978779E8 rows, 3.995513934660481E9 cpu, 1.476653592E9 io, 5.0396400231793994E8 network, 2.75389629962858E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 25082.277832616564, cumulative cost = {1.1014619652195518E8 rows, 3.995513934660481E9 cpu, 1.476653592E9 io, 5.0396400231793994E8 network, 2.75389629962858E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 167145.5855507771, cumulative cost = {1.1012044044412257E8 rows, 3.994164454176075E9 cpu, 1.476648012E9 io, 5.0396230791793996E8 network, 2.75385704362858E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 167145.5855507771, cumulative cost = {1.099532948585718E8 rows, 3.9914901248072624E9 cpu, 1.476648012E9 io, 5.0396230791793996E8 network, 2.6468838688760826E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 167145.5855507771, cumulative cost = {1.0978614927302103E8 rows, 3.9620725017503257E9 cpu, 1.476648012E9 io, 4.999508138647213E8 network, 2.6468838688760826E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 922084.62488225, cumulative cost = {1.0961900368747026E8 rows, 3.9473191477522097E9 cpu, 1.476648012E9 io, 4.999508138647213E8 network, 2.5399106941235852E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 214493.17180572054, cumulative cost = {8.736814653556308E7 rows, 3.073092879183068E9 cpu, 1.181312328E9 io, 3.862659766577464E8 network, 2.1720822896345422E8 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 85860.46618312699, cumulative cost = {5.199074727240567E7 rows, 1.941028744611237E9 cpu, 6.89098152E8 io, 2.4591450847395048E8 network, 1.355330301496017E8 memory}
         :        :           :  :  :- Calc(select=[X0, y0 AS X1]): rowcount = 49822.2394040635, cumulative cost = {2.889072641458315E7 rows, 1.0032532086088026E9 cpu, 3.93768792E8 io, 1.2694304538930032E8 network, 7.035250876480085E7 memory}
         :        :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 49822.2394040635, cumulative cost = {2.8840904175179087E7 rows, 1.0032532086088026E9 cpu, 3.93768792E8 io, 1.2694304538930032E8 network, 7.035250876480085E7 memory}
         :        :           :  :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :        :           :  :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :           :  :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :           :  :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :           :  :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :           :  :  :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :  :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :  :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :  :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :  :  :     :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 92356.4175, cumulative cost = {5610132.152500002 rows, 2.461743574E7 cpu, 9.8444988E7 io, 2222134.02 network, 16696.0 memory}
         :        :           :  :  :        +- Calc(select=[x, y0]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :  :              :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :              :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :              :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[X0, X1]): rowcount = 36038.226779063494, cumulative cost = {2.301416039163939E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 36038.226779063494, cumulative cost = {2.2978122164860327E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :        :           :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :           :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :           :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :           :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :           :  :        :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :  :        :                    +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 128632.70562259354, cumulative cost = {3.51629060913517E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 128632.70562259354, cumulative cost = {3.503427338572911E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :        :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 617759.5256235336, cumulative cost = {1.17246908968315E7 rows, 1.4901064366623443E8 cpu, 1.96890372E8 io, 1.5630556814495582E7 network, 3083002.098201301 memory}
         :        :           :           +- Calc(select=[x, X0]): rowcount = 617759.5256235336, cumulative cost = {1.1106931371207966E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617759.5256235336, cumulative cost = {1.0489171845584432E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 16754.83749022446, cumulative cost = {5769770.319960898 rows, 1.2279868661559012E7 cpu, 9.8450964E7 io, 804328.1995307741 network, 2144731.198748731 memory}
         :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 707591.4530765294, cumulative cost = {2.132877252702493E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 707591.4530765294, cumulative cost = {2.06211810739484E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 615634.35384353, cumulative cost = {1.1710305620871866E7 rows, 1.464901171135116E8 cpu, 1.96896276E8 io, 1.5245429206974916E7 network, 2307316.6336666164 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 615634.35384353, cumulative cost = {1.1094671267028335E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615634.35384353, cumulative cost = {1.0479036913184805E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 2587.025623533669, cumulative cost = {5761760.559341275 rows, 1.022971346281028E7 cpu, 9.8456868E7 io, 470204.7147301951 network, 2162443.198748731 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 2587.025623533669, cumulative cost = {5759173.533717741 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2587.025623533669, cumulative cost = {5756586.508094207 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 26250.46059090563, cumulative cost = {1.4929471670834532E8 rows, 4.451586660898228E9 cpu, 2.067332016E9 io, 5.401334255344193E8 network, 3.51531915654866E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 26250.46059090563, cumulative cost = {1.4926846624775442E8 rows, 4.451586660898228E9 cpu, 2.067332016E9 io, 5.401334255344193E8 network, 3.51531915654866E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 155083.06602235074, cumulative cost = {8.789277261581986E7 rows, 3.179154996780047E9 cpu, 1.181325084E9 io, 3.9727601355096287E8 network, 2.1699511584181273E8 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 155083.06602235074, cumulative cost = {8.77376895497975E7 rows, 3.1766736677236896E9 cpu, 1.181325084E9 io, 3.9727601355096287E8 network, 2.0706979961638227E8 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 155083.06602235074, cumulative cost = {8.758260648377515E7 rows, 3.149379048103756E9 cpu, 1.181325084E9 io, 3.9355401996642643E8 network, 2.0706979961638227E8 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 855539.8593842413, cumulative cost = {8.74275234177528E7 rows, 3.135690410353608E9 cpu, 1.181325084E9 io, 3.9355401996642643E8 network, 1.971444833909518E8 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 836226.1384923818, cumulative cost = {5.7146374804751694E7 rows, 2.0146426718511891E9 cpu, 7.87550412E8 io, 2.5405407059712613E8 network, 1.1851790667530061E8 memory}
               :           :  :- Calc(select=[x AS X0, X1]): rowcount = 707591.7113104329, cumulative cost = {2.123797041310528E7 rows, 8.776244786175095E8 cpu, 2.9533596E8 io, 1.1369282230387531E8 network, 3.681100133160895E7 memory}
               :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 707591.7113104329, cumulative cost = {2.0530378701794848E7 rows, 8.776244786175095E8 cpu, 2.9533596E8 io, 1.1369282230387531E8 network, 3.681100133160895E7 memory}
               :           :  :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :     +- Exchange(distribution=[hash[x]]): rowcount = 615636.0754028853, cumulative cost = {1.1619502990484416E7 rows, 1.508103980142864E8 cpu, 1.96896552E8 io, 1.5253414303875316E7 network, 2335381.109047373 memory}
               :           :  :        +- Calc(select=[x, X1]): rowcount = 615636.0754028853, cumulative cost = {1.100386691508153E7 rows, 4.738353734660167E7 cpu, 1.96896552E8 io, 478148.49420606665 network, 2335381.109047373 memory}
               :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615636.0754028853, cumulative cost = {1.0388230839678645E7 rows, 4.738353734660167E7 cpu, 1.96896552E8 io, 478148.49420606665 network, 2335381.109047373 memory}
               :           :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 2598.502685902536, cumulative cost = {5670952.76427576 rows, 1.4549613325114453E7 cpu, 9.8457144E7 io, 478148.49420606665 network, 2189864.958636831 memory}
               :           :  :                 +- Calc(select=[X0, X1]): rowcount = 2598.502685902536, cumulative cost = {5668354.261589858 rows, 1.4133852895370048E7 cpu, 9.8457144E7 io, 415784.4297444058 network, 2189864.958636831 memory}
               :           :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2598.502685902536, cumulative cost = {5665755.758903955 rows, 1.4133852895370048E7 cpu, 9.8457144E7 io, 415784.4297444058 network, 2189864.958636831 memory}
               :           :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :           :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :           :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :           :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :                       +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[X0, X10 AS X1]): rowcount = 128634.42718194886, cumulative cost = {3.507217825315403E7 rows, 1.1361819670951874E9 cpu, 4.92214452E8 io, 1.403612482932508E8 network, 8.170690534369166E7 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 128634.42718194886, cumulative cost = {3.494354382597208E7 rows, 1.1361819670951874E9 cpu, 4.92214452E8 io, 1.403612482932508E8 network, 8.170690534369166E7 memory}
               :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
               :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
               :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
               :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
               :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
               :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :           :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :        +- Exchange(distribution=[hash[x]]): rowcount = 617771.0026859025, cumulative cost = {1.1633959615515111E7 rows, 1.533428775448977E8 cpu, 1.96890648E8 io, 1.5640336923950471E7 network, 3114708.6280404446 memory}
               :           :           +- Calc(select=[x, X1]): rowcount = 617771.0026859025, cumulative cost = {1.1016188612829208E7 rows, 4.9557349093666084E7 cpu, 1.96890648E8 io, 813832.8594888116 network, 3114708.6280404446 memory}
               :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617771.0026859025, cumulative cost = {1.0398417610143306E7 rows, 4.9557349093666084E7 cpu, 1.96890648E8 io, 813832.8594888116 network, 3114708.6280404446 memory}
               :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :                 +- Exchange(distribution=[broadcast]): rowcount = 16831.351239350242, cumulative cost = {5679004.607457403 rows, 1.6609562283751285E7 cpu, 9.845124E7 io, 813832.8594888116 network, 2172152.958636831 memory}
               :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :           :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :                                :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :                                :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, y AS X1]): rowcount = 19313.72089185952, cumulative cost = {2.9425608753616866E7 rows, 1.120192198643035E9 cpu, 3.93774672E8 io, 1.394999493693003E8 network, 7.862657671565121E7 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[X0, y, x], isBroadcast=[true], build=[right]): rowcount = 19313.72089185952, cumulative cost = {2.9406295032725006E7 rows, 1.120192198643035E9 cpu, 3.93774672E8 io, 1.394999493693003E8 network, 7.862657671565121E7 memory}
               :                 :- Calc(select=[X0, y]): rowcount = 128266.13927906349, cumulative cost = {2.9385997311833147E7 rows, 1.1190834135288024E9 cpu, 3.93768768E8 io, 1.394940453693003E8 network, 7.860886471565121E7 memory}
               :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], build=[left]): rowcount = 128266.13927906349, cumulative cost = {2.9257731172554083E7 rows, 1.1190834135288024E9 cpu, 3.93768768E8 io, 1.394940453693003E8 network, 7.860886471565121E7 memory}
               :                 :     :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
               :                 :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
               :                 :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
               :                 :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
               :                 :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
               :                 :     :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                 :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                 :     :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                 :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                 :     :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :     +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
               :                 :        +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :                 :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                 :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 19920.004583686783, cumulative cost = {6.134944317134367E7 rows, 1.2710316395533326E9 cpu, 8.86006932E8 io, 1.4285741198345643E8 network, 1.334212795563668E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 19920.004583686783, cumulative cost = {6.132952316675998E7 rows, 1.2678444388199427E9 cpu, 8.86006932E8 io, 1.4237933187344795E8 network, 1.334212795563668E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 19920.004583686783, cumulative cost = {6.1309603162176296E7 rows, 1.2678444388199427E9 cpu, 8.86006932E8 io, 1.4237933187344795E8 network, 1.334212795563668E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.128869915759261E7 rows, 1.2667033185754795E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.334035675563668E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 132308.0305579119, cumulative cost = {6.1156391127034694E7 rows, 1.2645863900865529E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.2493585360066044E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.102408309647678E7 rows, 1.2413001767083604E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.2493585360066044E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 729897.833220605, cumulative cost = {6.089177506591886E7 rows, 1.2296218113768308E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.1646813964495409E8 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 112052.33563582558, cumulative cost = {3.580258249390231E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 112052.33563582558, cumulative cost = {3.5690530158266485E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 115027.89265686346, cumulative cost = {1.908402168458766E7 rows, 1.609046963037042E8 cpu, 2.9533566E8 io, 1.1286275816362873E7 network, 4.425118995309321E7 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 617845.4975847794, cumulative cost = {2.435929473879594E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617845.4975847794, cumulative cost = {2.374144924121116E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
                        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 17327.983898529517, cumulative cost = {1.9021961743626382E7 rows, 1.4535536690237078E8 cpu, 2.95341564E8 io, 8947382.006162858 network, 4.426890195309321E7 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 17327.983898529517, cumulative cost = {1.9004633759727854E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 17327.983898529517, cumulative cost = {1.8987305775829326E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,2,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#2] Exchange(distribution=[hash[X1]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[5])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[8])
         :        :           :              :        :           :     :- Reused(reference_id=[1])
         :        :           :              :        :           :     +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :              :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[20])
         :        :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :              :        +- Reused(reference_id=[2])
         :        :           :              :- Reused(reference_id=[3])
         :        :           :              +- Exchange(distribution=[broadcast])(reuse_id=[9])
         :        :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[4])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Exchange(distribution=[hash[x]])
         :        :           :        :  +- Reused(reference_id=[1])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])
         :        :           :                       :  +- Reused(reference_id=[4])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[11])
         :        :           :                             :- Reused(reference_id=[1])
         :        :           :                             +- Reused(reference_id=[2])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[5])
         :        :                    +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :                       +- Reused(reference_id=[6])
         :        +- Reused(reference_id=[7])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[17])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,2,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[X0, y0 AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[right])\n:  :  :     :- [#3] Exchange(distribution=[hash[X1]])\n:  :  :     +- [#6] Exchange(distribution=[hash[x]])\n:  :  +- Calc(select=[X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :        :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :        +- [#8] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], build=[left])\n:        :- [#3] Exchange(distribution=[hash[X1]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[10])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[12])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Calc(select=[y, x0])(reuse_id=[19])
         :              :                 :           :  :  +- Reused(reference_id=[8])
         :              :                 :           :  :- Reused(reference_id=[2])
         :              :                 :           :  :- Reused(reference_id=[6])
         :              :                 :           :  +- Reused(reference_id=[2])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[18])
         :              :                 :                 :- Reused(reference_id=[4])
         :              :                 :                 +- Reused(reference_id=[2])
         :              :                 +- Reused(reference_id=[7])
         :              :- Exchange(distribution=[hash[X1]])(reuse_id=[13])
         :              :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :              :     +- Exchange(distribution=[hash[X0, X1]])
         :              :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :              :- Reused(reference_id=[1])
         :              :              :- Reused(reference_id=[9])
         :              :              :- Reused(reference_id=[10])
         :              :              +- Exchange(distribution=[hash[x]])
         :              :                 +- Calc(select=[x, y0])(reuse_id=[14])
         :              :                    +- Reused(reference_id=[11])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Reused(reference_id=[12])
         :              :- Reused(reference_id=[13])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[14])
         :              :        +- Reused(reference_id=[9])
         :              :- Reused(reference_id=[15])
         :              +- Reused(reference_id=[9])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Reused(reference_id=[10])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[16])
         :- Reused(reference_id=[17])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[x, x0])
         :     +- Reused(reference_id=[18])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[0,1,0,1,2,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[x AS X0, X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :     :- [#2] Exchange(distribution=[hash[y]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#4] Exchange(distribution=[hash[X1]])\n:        +- [#5] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[X0, y, x], isBroadcast=[true], build=[right])\n      :- Calc(select=[X0, y])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], build=[left])\n      :     :- [#4] Exchange(distribution=[hash[X1]])\n      :     +- [#7] Exchange(distribution=[hash[x]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
                  :- Reused(reference_id=[7])
                  :- Reused(reference_id=[10])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Calc(select=[X0, X1])
                  :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                  :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
                  :                 :  +- Exchange(distribution=[hash[X0, X1]])
                  :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :                 :        +- Union(all=[true], union=[X0, X1])
                  :                 :           :- Calc(select=[x0 AS X0, y AS X1])
                  :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :                 :           :     :- Reused(reference_id=[19])
                  :                 :           :     +- Reused(reference_id=[7])
                  :                 :           +- Reused(reference_id=[20])
                  :                 +- Reused(reference_id=[7])
                  :- Reused(reference_id=[13])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Reused(reference_id=[21])
                  :- Reused(reference_id=[13])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Reused(reference_id=[9])

Job has been submitted with JobID b27880e7afaf4d5409004fd5357b5deb
